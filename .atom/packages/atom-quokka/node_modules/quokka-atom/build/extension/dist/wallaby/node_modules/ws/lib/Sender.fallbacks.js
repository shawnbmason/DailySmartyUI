/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var events = require('events')
  , util = require('util')
  , EventEmitter = events.EventEmitter
  , ErrorCodes = require('./ErrorCodes')
  , bufferUtil = require('./BufferUtil').BufferUtil
  , PerMessageDeflate = require('./PerMessageDeflate');

/**
 * HyBi Sender implementation
 */

function Sender(socket, extensions) {
  if (this instanceof Sender === false) {
    throw new TypeError("Classes can't be function-called");
  }

  events.EventEmitter.call(this);

  this._socket = socket;
  this.extensions = extensions || {};
  this.firstFragment = true;
  this.compress = false;
  this.messageHandlers = [];
  this.processing = false;
}

/**
 * Inherits from EventEmitter.
 */

util.inherits(Sender, events.EventEmitter);

/**
 * Sends a close instruction to the remote party.
 *
 * @api public
 */

Sender.prototype.close = function(code, data, mask, cb) {
  if (typeof code !== 'undefined') {
    if (typeof code !== 'number' ||
      !ErrorCodes.isValidErrorCode(code)) throw new Error('first argument must be a valid error code number');
  }
  code = code || 1000;
  var dataBuffer = new Buffer(2 + (data ? Buffer.byteLength(data) : 0));
  writeUInt16BE.call(dataBuffer, code, 0);
  if (dataBuffer.length > 2) dataBuffer.write(data, 2);

  var self = this;
  this.messageHandlers.push(function(callback) {
    self.frameAndSend(0x8, dataBuffer, true, mask);
    callback();
    if (typeof cb == 'function') cb();
  });
  this.flush();
};

/**
 * Sends a ping message to the remote party.
 *
 * @api public
 */

Sender.prototype.ping = function(data, options) {
  var mask = options && options.mask;
  var self = this;
  this.messageHandlers.push(function(callback) {
    self.frameAndSend(0x9, data || '', true, mask);
    callback();
  });
  this.flush();
};

/**
 * Sends a pong message to the remote party.
 *
 * @api public
 */

Sender.prototype.pong = function(data, options) {
  var mask = options && options.mask;
  var self = this;
  this.messageHandlers.push(function(callback) {
    self.frameAndSend(0xa, data || '', true, mask);
    callback();
  });
  this.flush();
};

/**
 * Sends text or binary data to the remote party.
 *
 * @api public
 */

Sender.prototype.send = function(data, options, cb) {
  var finalFragment = options && options.fin === false ? false : true;
  var mask = options && options.mask;
  var compress = options && options.compress;
  var opcode = options && options.binary ? 2 : 1;
  if (this.firstFragment === false) {
    opcode = 0;
    compress = false;
  } else {
    this.firstFragment = false;
    this.compress = compress;
  }
  if (finalFragment) this.firstFragment = true

  var compressFragment = this.compress;

  var self = this;
  this.messageHandlers.push(function(callback) {
    self.applyExtensions(data, finalFragment, compressFragment, function(err, data) {
      if (err) {
        if (typeof cb == 'function') cb(err);
        else self.emit('error', err);
        return;
      }
      self.frameAndSend(opcode, data, finalFragment, mask, compress, cb);
      callback();
    });
  });
  this.flush();
};

/**
 * Frames and sends a piece of data according to the HyBi WebSocket protocol.
 *
 * @api private
 */

Sender.prototype.frameAndSend = function(opcode, data, finalFragment, maskData, compressed, cb) {
  var canModifyData = false;

  if (!data) {
    try {
      this._socket.write(new Buffer([opcode | (finalFragment ? 0x80 : 0), 0 | (maskData ? 0x80 : 0)].concat(maskData ? [0, 0, 0, 0] : [])), 'binary', cb);
    }
    catch (e) {
      if (typeof cb == 'function') cb(e);
      else this.emit('error', e);
    }
    return;
  }

  if (!Buffer.isBuffer(data)) {
    canModifyData = true;
    if (data && (typeof data.byteLength !== 'undefined' || typeof data.buffer !== 'undefined')) {
      data = getArrayBuffer(data);
    } else {
      //
      // If people want to send a number, this would allocate the number in
      // bytes as memory size instead of storing the number as buffer value. So
      // we need to transform it to string in order to prevent possible
      // vulnerabilities / memory attacks.
      //
      if (typeof data === 'number') data = data.toString();

      data = new Buffer(data);
    }
  }

  var dataLength = data.length
    , dataOffset = maskData ? 6 : 2
    , secondByte = dataLength;

  if (dataLength >= 65536) {
    dataOffset += 8;
    secondByte = 127;
  }
  else if (dataLength > 125) {
    dataOffset += 2;
    secondByte = 126;
  }

  var mergeBuffers = dataLength < 32768 || (maskData && !canModifyData);
  var totalLength = mergeBuffers ? dataLength + dataOffset : dataOffset;
  var outputBuffer = new Buffer(totalLength);
  outputBuffer[0] = finalFragment ? opcode | 0x80 : opcode;
  if (compressed) outputBuffer[0] |= 0x40;

  switch (secondByte) {
    case 126:
      writeUInt16BE.call(outputBuffer, dataLength, 2);
      break;
    case 127:
      writeUInt32BE.call(outputBuffer, 0, 2);
      writeUInt32BE.call(outputBuffer, dataLength, 6);
  }

  if (maskData) {
    outputBuffer[1] = secondByte | 0x80;
    var mask = getRandomMask();
    outputBuffer[dataOffset - 4] = mask[0];
    outputBuffer[dataOffset - 3] = mask[1];
    outputBuffer[dataOffset - 2] = mask[2];
    outputBuffer[dataOffset - 1] = mask[3];
    if (mergeBuffers) {
      bufferUtil.mask(data, mask, outputBuffer, dataOffset, dataLength);
      try {
        this._socket.write(outputBuffer, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
    else {
      bufferUtil.mask(data, mask, data, 0, dataLength);
      try {
        this._socket.write(outputBuffer, 'binary');
        this._socket.write(data, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
  }
  else {
    outputBuffer[1] = secondByte;
    if (mergeBuffers) {
      data.copy(outputBuffer, dataOffset);
      try {
        this._socket.write(outputBuffer, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
    else {
      try {
        this._socket.write(outputBuffer, 'binary');
        this._socket.write(data, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
  }
};

/**
 * Execute message handler buffers
 *
 * @api private
 */

Sender.prototype.flush = function() {
  if (this.processing) return;

  var handler = this.messageHandlers.shift();
  if (!handler) return;

  this.processing = true;

  var self = this;

  handler(function() {
    self.processing = false;
    self.flush();
  });
};

/**
 * Apply extensions to message
 *
 * @api private
 */

Sender.prototype.applyExtensions = function(data, fin, compress, callback) {
  if (compress && data) {
    if ((data.buffer || data) instanceof ArrayBuffer) {
      data = getArrayBuffer(data);
    }
    this.extensions[PerMessageDeflate.extensionName].compress(data, fin, callback);
  } else {
    callback(null, data);
  }
};

module.exports = Sender;

function writeUInt16BE(value, offset) {
  this[offset] = (value & 0xff00)>>8;
  this[offset+1] = value & 0xff;
}

function writeUInt32BE(value, offset) {
  this[offset] = (value & 0xff000000)>>24;
  this[offset+1] = (value & 0xff0000)>>16;
  this[offset+2] = (value & 0xff00)>>8;
  this[offset+3] = value & 0xff;
}

function getArrayBuffer(data) {
  // data is either an ArrayBuffer or ArrayBufferView.
  var array = new Uint8Array(data.buffer || data)
    , l = data.byteLength || data.length
    , o = data.byteOffset || 0
    , buffer = new Buffer(l);
  for (var i = 0; i < l; ++i) {
    buffer[i] = array[o+i];
  }
  return buffer;
}

function getRandomMask() {
  return new Buffer([
    ~~(Math.random() * 255),
    ~~(Math.random() * 255),
    ~~(Math.random() * 255),
    ~~(Math.random() * 255)
  ]);
}

//# sourceMappingURL=data:application/json;base64,dmFyIF8weDVlOGE9Wydfbm9kZVBhdGgnLCdfdGVhcmRvd24nLCd0ZWFyZG93bicsJ19zbG93VGVzdFRocmVzaG9sZCcsJ19ub2RlTW9kdWxlcycsJ1dQWE1CJywncmVzb2x2ZU1vZHVsZVBhdGhGcm9tJywncmVnZW5lcmF0b3ItcnVudGltZScsJ3J1bnRpbWUuanMnLCdfdGVzdEZyYW1ld29yaycsJ19jd2QnLCdfb3JpZ2luYWxDYWNoZVJvb3QnLCdfb3JpZ2luYWxSb290JywnX2NyZWF0ZU5vZGVJbnN0YW5jZScsJ19yZWN5Y2xlTm9kZUluc3RhbmNlJywnX2lzTm9kZUluc3RhbmNlSGVhbHRoeScsJ1luTmdXJywndHJpbScsJ2F1dG9EZXRlY3RlZCcsJyxhdXRvRGV0ZWN0ZWQnLCdCQUJFTF9FTlYnLCdfcmVnZW5lcmF0b3JSdW50aW1lJywnY29uZmlnRmlsZScsJ2lzRnVuY3Rpb24nLCdfb25Db25uZWN0ZWQnLCdvbkNvbm5lY3RlZCcsJ3N0ZGVycicsJ0Vycm9yXHgyMGluXHgyMHdvcmtlcjpceDIwJXMnLCdKQUNKWicsJ3piSll5Jywnc3RMQW4nLCdzdGRvdXQnLCdyZW1vdmVBbGxMaXN0ZW5lcnMnLCdjRkhaWicsJ3NZSXp4JywnbWdMYXAnLCdhc3luY0dlbmVyYXRvcnMnLCdjbGFzc1ByaXZhdGVNZXRob2RzJywnbnVtZXJpY1NlcGFyYXRvcicsJ3BpcGVsaW5lT3BlcmF0b3InLCdzcUF0VicsJ2J2aXBOJywndW5pcXVlSWQnLCdVSHFIYScsJ2luOnBpbmcnLCdLa2NqbycsJ0taV21iJywnYWphRHMnLCdFcnJvclx4MjB3aGlsZVx4MjBwcm9jZXNzaW5nXHgyMFNURE9VVFx4MjBtZXNzYWdlOlx4MjAnLCdrV2NTWicsJ0RlYnVnZ2VyXHgyMGxpc3RlbmluZ1x4MjBvblx4MjBwb3J0JywnbUhBbU4nLCdBVm5QbScsJ2F0b3NlJywnRXJyb3JceDIwd2hpbGVceDIwcHJvY2Vzc2luZ1x4MjBTVERFUlJceDIwbWVzc2FnZTpceDIwJywncE5QVGcnLCd2WUtNUycsJ3lRQndVJywnamVzdCcsJ25hSGlBJywnb1pwcVAnLCdfZ2V0RmlsZU1ldGFkYXRhQnlJZCcsJ2dldEZpbGVMaW5lTWFwJywnb3JpZ2luYWxUeXBlJywnbWFudWFsUnVuJywncHJlc2VydmVDb21tZW50cycsJ3JlcG9ydENvbnNvbGVFcnJvckFzRXJyb3InLCdwaGFudG9tUnVubmVyJywncGhhbnRvbScsJ192aWV3cG9ydFNpemUnLCd2aWV3cG9ydFNpemUnLCdfcGhhbnRvbWpzUGF0aCcsJ19jcmVhdGVQaGFudG9tSW5zdGFuY2UnLCdfcmVjeWNsZVBoYW50b21JbnN0YW5jZScsJ19pc1BoYW50b21JbnN0YW5jZUhlYWx0aHknLCdHb09pbicsJ29uRXhpdCcsJ1NJR1NFR1YnLCdMb29rc1x4MjBsaWtlXHgyMHRoZVx4MjBQaGFudG9tSnNceDIwdmVyc2lvblx4MjBiZWluZ1x4MjB1c2VkXHgyMGlzXHgyMG5vdFx4MjBzdXBwb3J0ZWRceDIwb25ceDIweW91clx4MjBPUy5ceDBhVHJ5XHgyMHVzaW5nXHgyMGFceDIwZGlmZmVyZW50XHgyMFBoYW50b21Kc1x4MjB2ZXJzaW9uXHgyMChodHRwczovL3dhbGxhYnlqcy5jb20vZG9jcy9pbnRlZ3JhdGlvbi9waGFudG9tanMyLmh0bWwpXHgwYW9yXHgyMENocm9taXVtL1Y4XHgyMHZpYVx4MjBFbGVjdHJvblx4MjBydW5uZXJceDIwKGh0dHBzOi8vd2FsbGFieWpzLmNvbS9kb2NzL2ludGVncmF0aW9uL2VsZWN0cm9uLmh0bWwpJywnU2lnbmFsXHgyMGtpbGxlZFx4MjBwaGFudG9tanNceDIwIyVzOlx4MjAlcyxceDIwZXhpdFx4MjBjb2RlOlx4MjAlcycsJy0tZGlzay1jYWNoZT15ZXMnLCctLXdlYi1zZWN1cml0eT1mYWxzZScsJ2JJQmVUJywndmVyaWZ5TG9jYWxPcmlnaW4nLCdvcmlnaW4nLCdBZGRpdGlvbmFsXHgyMGF0dGVtcHRceDIwdG9ceDIwY3JlYXRlXHgyMHBoYW50b21ceDIwaW5zdGFuY2VceDIwIyVzJywnb25FcnJvcicsJ1FvTWtWJywnYXVVbVknLCdISXNQVCcsJ3JGelpCJywnd2FsbGFieS5qcycsJ19ub2RlTW9kdWxlUGF0aHMnLCdfcmVzb2x2ZUZpbGVuYW1lJywnaFB2eHcnLCdFVGV2SicsJ19jYXB0dXJlU2NyZWVuU2hvdCcsJ19jbGVhck1lbW9yeUNhY2hlJywnb25SZXNvdXJjZVJlcXVlc3RlZCcsJ0tRR1BiJywnZkJ5QXInLCcmd2FsbGFieUZpbGVJZD0nLCdFR2JFaycsJ2xnblNaJywnSkZLaFMnLCdlV2xXTycsJ1RyTldGJywnU0JFQlEnLCdUaUpBVicsJ1BoYW50b21ceDIwcGFnZVx4MjBpc1x4MjBub3RceDIwY3JlYXRlZFx4MjBpblx4MjB0aW1lLFx4MjByZWN5Y2xpbmdceDIwaXQnLCdkZWNvcmF0b3JzLWxlZ2FjeScsJ251bGxpc2hDb2FsZXNjaW5nT3BlcmF0b3InLCdvcHRpb25hbENoYWluaW5nJywnVkVRR0MnLCdjcmVhdGVQYWdlJywnd29ya2VyJywnb25SZWFkeScsJ0V2ZW50RW1pdHRlcicsJ0VLSHJIJywnX3J1bicsJ0dHbUN0JywndWFnTVYnLCdldmVudHMnLCdTVEFSVElORycsJ1JFQURZJywnQlVTWScsJ2luaGVyaXRzJywnbnJYblYnLCdjZ3V1RScsJ29uTWVzc2FnZScsJ3hXa05IJywnU2FuZGJveFx4MjBsb2FkXHgyMGZhaWxlZCxceDIwc3RhdHVzOlx4MjAnLCdjYWxsYmFjaycsJ1NPZnZoJywnSk9ldHQnLCdKaEZFcycsJ3pnQnBLJywnUHJvY2Vzc29yXHgyMHBvb2xceDIwaXNceDIwbm90XHgyMHN0YXJ0ZWQnLCdSYkhaWCcsJ3FxVHROJywnaHR0cCcsJ1NSZ1ZtJywnY29uc29sZU91dHB1dCcsJ193b3JrZXJQZW5kaW5nQ2xlYW51cCcsJ1NxQm1LJywnZGtYUHQnLCdQUlNVTicsJ1NtR25mJywnX2RlY29kZU1hcHBpbmcnLCdwYWlycycsJ19yZWNlaXZlclBvcnQnLCdXZWJceDIwc2VydmVyXHgyMGlzXHgyMGxpc3RlbmluZ1x4MjBhdFx4MjAnLCdjR1lqZicsJ2R6YWR4JywnaGl6R3gnLCdGYWlsZWRceDIwdG9ceDIwZGVzZXJpYWxpemVceDIwbWVzc2FnZVx4MjBmcm9tXHgyMHdvcmtlcjpceDIwJywnd29ya2VyOicsJ2hobmVTJywnVXlldGwnLCdpbnN0YW5jZScsJ2poV3dIJywncXVva2thU3RhY2tUcmFjZU1hcmtlcicsJ2tBT1FiJywncURhbEUnLCdGYWlsZWRceDIwdG9ceDIwc2VuZFx4MjB0aGVceDIwXHgyMmNvbm5lY3RlZFx4MjJceDIwbWVzc2FnZVx4MjB0b1x4MjB3b3JrZXIuXHgyMCcsJ2RlYnVnTG9nJywnc3BlYycsJ1RWVktGJywnemltUFgnLCdGYWlsZWRceDIwdG9ceDIwcHJvY2Vzc1x4MjBtZXNzYWdlXHgyMCcsJ1x4MjBmcm9tXHgyMHdvcmtlcixceDIwJywndk5rTGwnLCdDa1dPcicsJ2tKYklzJywnX3RyYWNlQ29udGV4dCcsJ21hcHBlZCcsJ0xVYld2JywneUloc3onLCdwcmlvcml0eScsJ1N0YXJ0aW5nXHgyMHRlc3RceDIwcnVuLFx4MjBwcmlvcml0eTpceDIwJywnX3J1bkluUGFyYWxsZWwnLCdwcmVwYXJlJywnX3J1blRlc3RzJywneU1reUwnLCdTYW5kYm94XHgyMHJlcXVlc3RlZFx4MjBlYXJseVx4MjBzY3JlZW5ceDIwc2hvdFx4MjBjYXB0dXJlJywnX3N0YXJ0VGltZScsJ3NlY29uZChzKScsJ21pbnV0ZShzKScsJ1NhbmRib3hceDIwKCVzKVx4MjBbJXNdXHgyMGVycm9yOlx4MjAlcycsJ19yZXBvcnRhYmxlRXJyb3InLCdTeW50YXhFcnJvcjpceDIwUGFyc2VceDIwZXJyb3InLCdSdW50aW1lXHgyMGVycm9yOlx4MjAnLCdIWHRZeCcsJ3NjaGVkdWxlQ29tcGxldGVJZk5vdEFjdGl2ZUZvcicsJ0Nhbm5vdFx4MjBmaW5kXHgyMG1vZHVsZScsJ2tmdExuJywnU2xnQXEnLCdbJXNdXHgyMFJ1bm5pbmdceDIwdGVzdHNceDIwaW5ceDIwc2FuZGJveCcsJ3Nlc3Npb25JZCcsJ3dvcmtlcklkJywncVN5aEEnLCdFUmZOcicsJ3F6eGJIJywnX2hhbmRsZUVycm9yJywnZEtXc2gnLCdbJXNdXHgyMFNhbmRib3hceDIwcnVuXHgyMGlzXHgyMGNhbmNlbGVkXHgyMHdoaWxlXHgyMGl0XHgyMHdhc1x4MjB3YWl0aW5nXHgyMGZvclx4MjB3b3JrZXJceDIwY2xlYW51cCcsJ19jcmVhdGVSdW5SZXN1bHQnLCdua1lWTCcsJ01XelRGJywnRVNqYkEnLCdvYVZqUScsJ2JQRXNkJywnd3BZbWUnLCdDV2hxUicsJ2hhc0Fuc2knLCdyZW1vdmVBbnNpJywnREFrVFYnLCdIenFIVicsJ21Nb2dlJywnWyVzXVx4MjBMb2FkZWRceDIwJXNceDIwdGVzdChzKScsJ3RvdGFsJywnQ2FuY2VsbGluZ1x4MjB0ZXN0XHgyMHJ1bixceDIwY2FuY2VsXHgyMHJlcXVlc3Rlclx4MjBwcmlvcml0eTpceDIwJXMsXHgyMGN1cnJlbnRceDIwcnVuXHgyMHByaW9yaXR5Olx4MjAlcycsJ2Nsb3NpbmcnLCdsUW9oVycsJ190b3RhbCcsJ3V3bnZoJywnX2FyZUxvZ0VudHJ5TWVzc2FnZXNFcXVhbCcsJ2lzRXF1YWwnLCdZT2d0TScsJ0dka0FwJywnbW9jaGEnLCdlZWlrWCcsJ1NvY2tldFx4MjBlcnJvclx4MjBydW5uaW5nUHJvamVjdHNSZXF1ZXN0ZWQnLCd2VUpoRCcsJ19kaXNwb3NlJywnRnJ4c0gnLCd0dnprcycsJ0lZcnJYJywnQWd2T2wnLCd5V3pTYycsJ2x5a1lTJywna3ZFdHMnLCdTb21lXHgyMGxvbmdceDIwcnVubmluZ1x4MjBjb2RlXHgyMGhhc1x4MjBiZWVuXHgyMGRldGVjdGVkOlx4MjAnLCd0ZXN0XHgyMFx4MjInLCdvbmVceDIwb2ZceDIweW91clx4MjAnLCdceDIwaXNceDIwdGFraW5nXHgyMG1vcmVceDIwdGhhblx4MjAnLCdtc1x4MjB0b1x4MjBleGVjdXRlLicsJ1x4MGFFeGVjdXRpb25ceDIwb2ZceDIwdGhlXHgyMGZvbGxvd2luZ1x4MjBmaWxlc1x4MjBoYXNceDIwc3RhcnRlZFx4MjBidXRceDIwaGFzXHgyMG5vdFx4MjBmaW5pc2hlZDonLCdyS0lwWicsJ1pmb3R2JywnXHgwYVRoZVx4MjBsYXN0XHgyMHJlY29yZGVkXHgyMGNvbnNvbGUubG9nOlx4MjAnLCdXVU16YScsJ1x4MGFUcnlceDIwY29tbWVudGluZ1x4MjBvdXRceDIwdGhlXHgyMHRlc3RceDIwb3JceDIwZXhjbHVkaW5nXHgyMHRoZVx4MjB0ZXN0XHgyMGZpbGVceDIwZnJvbVx4MjB0aGVceDIwYHRlc3RzYFx4MjBsaXN0XHgyMGluXHgyMHlvdXJceDIwd2FsbGFieVx4MjBjb25maWcsXHgwYWFuZFx4MjByZXN0YXJ0aW5nXHgyMHdhbGxhYnlceDIwdG9ceDIwbWFrZVx4MjBzdXJlXHgyMHRoYXRceDIwaXRceDIwaXNceDIwdGhpc1x4MjB0ZXN0L2ZpbGVceDIwY2F1c2luZ1x4MjB0aGVceDIwaXNzdWVceDIwYW5kXHgyMG5vdFx4MjBzb21ldGhpbmdceDIwZWxzZS4nLCdqbXBraScsJ1NhbmRib3hceDIwaXNceDIwcmVzcG9uc2l2ZS5ceDIwVGhlXHgyMGlzc3VlXHgyMG1heVx4MjBoYXZlXHgyMHRoZVx4MjBhc3luY2hyb25vdXNceDIwbmF0dXJlLFx4MjBsaWtlXHgyMGFceDIwbWlzc2luZ1x4MjBjYWxsYmFjay4nLCdvWnhKZicsJ1x4MGFUaGVceDIwc2FuZGJveFx4MjBwaW5nXHgyMGZhaWxlZDpceDIwJywnbG5pcWcnLCdXQUxMQUJZX0lOVEVHUkFUSU9OX1RFU1RfUlVOJywnX21lc3NhZ2VzUGVyVGVzdCcsJyksXHgyMGN1cnJlbnRceDIwdGVzdFx4MjBjb25zb2xlXHgyMG1lc3NhZ2VzXHgyMHJlY29yZGluZ1x4MjBzdG9wcGVkLlx4MGFZb3VceDIwbWF5XHgyMGluY3JlYXNlXHgyMHRoZVx4MjBsaW1pdFx4MjBieVx4MjBhZGRpbmdceDIwYG1heENvbnNvbGVNZXNzYWdlc1BlclRlc3RgXHgyMHNldHRpbmdceDIwdG9ceDIweW91clx4MjBjb25maWdceDIwZmlsZS4nLCdyZXBsYWNlRmlyc3RFbnRyeUxpbmUnLCdSV0dTQScsJ3N0YWNrRW50cnlCeUZpbGVJZFdpdGhvdXRMaW5lTWFwcGluZycsJ3VyVVhEJywneXBVbXYnLCdhT3NDcScsJ1Z3UHRtJywnb25Eb25lJywnX3RyeUNsb3NpbmdTYW5kYm94JywncGluZycsJ1slc11ceDIwU2FuZGJveFx4MjBpc1x4MjByZXNwb25zaXZlLFx4MjBjbG9zaW5nXHgyMGl0JywnYURjeWInLCdbJXNdXHgyMFNhbmRib3hceDIwY2FuXHgyMG5vdFx4MjBiZVx4MjBwaW5nZWQ6XHgyMCVzJywnbG1xc2onLCdBWVhTZicsJ3Nwa2JIJywncG1lTVMnLCdtREh1cicsJ1BvU0ZJJywnQVJweEsnLCdfZXh0cmFjdEJyb3dzZXJTdGFja0xpbmVDb250ZXh0JywnTXBDcHonLCdReXFvQicsJ19jbGVhbk1lc3NhZ2UnLCdub2RlJywnZHNFQmonLCdwYXRjaF90b1RleHQnLCdAaHR0cCcsJ3R3RHNZJywnRGlzdHJpYnV0aW5nXHgyMHRlc3RzXHgyMGJldHdlZW5ceDIwJXNceDIwd29ya2VycycsJ3Rlc3RGaWxlcycsJ1J1bm5pbmdceDIwdGVzdHNceDIwaW5ceDIwcGFyYWxsZWwnLCdoeWtQeCcsJ0FkUnNWJywndmtMUWonLCdNZXJnaW5nXHgyMHBhcmFsbGVsXHgyMHRlc3RceDIwcnVuXHgyMHJlc3VsdHMnLCdTUVFIbicsJ1VRb05wJywnaGVhbHRoeScsJ0ZvdW5kXHgyMGluYWN0aXZlXHgyMHJ1blx4MjB3b3JrZXJceDIwaW5zdGFuY2VceDIwIyVzLFx4MjByZWN5Y2xpbmcnLCdTdGFydGluZ1x4MjBydW5ceDIwd29ya2VyXHgyMGluc3RhbmNlXHgyMCMnLCdGYWlsZWRceDIwdG9ceDIwY3JlYXRlXHgyMHdvcmtlclx4MjBpbnN0YW5jZScsJ1B3cmFjJywnWFFzSW4nLCdTdGFydGVkXHgyMHJ1blx4MjB3b3JrZXJceDIwaW5zdGFuY2VceDIwKGRlbGF5ZWQpXHgyMCMnLCdTdGFydGVkXHgyMHJ1blx4MjB3b3JrZXJceDIwaW5zdGFuY2VceDIwKGltbWVkaWF0ZSlceDIwIycsJ0Vycm9yXHgyMHdoaWxlXHgyMHJlY3ljbGluZ1x4MjBydW5ceDIwd29ya2VyXHgyMGluc3RhbmNlXHgyMCMlczpceDIwJXMnLCdnZW5lcmF0ZWRQb3NpdGlvbkZvcicsJ0hFdlhVJywneGhDQ0gnLCdfX2F3YWl0ZXInLCdqS1hNUycsJ2pxTkhkJywnV2VmTlonLCdpV1NJQicsJ1lIY0hrJywneGZ6VGEnLCdBRGJWVCcsJ3RIWGhHJywnVEdNTHknLCdmRnFkbicsJ0x2b0tlJywnS1VCWEsnLCdUSW92VicsJ1VUTkpDJywndHJHTEonLCd4S3pQUCcsJ21pbmltYXRjaCcsJ3NvdXJjZS1tYXAnLCdTb3VyY2VNYXBDb25zdW1lcicsJ1NvdXJjZU1hcEdlbmVyYXRvcicsJykpXHg1Y3MqJywnc2VxJywnbWpzJywndHN4JywndnVlJywnRXlrd04nLCdUeFBRWCcsJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky89Jywnc0VobkgnLCdZa1dhUScsJ01LUmdoJywndUZYR2onLCdDaUdrQicsJ2ZpbGU6Ly8vJywnZmlsZTovLycsJ2VibGNxJywnQVVqSVYnLCd4TGRFZicsJ3BDZExyJywnSkNjeVAnLCdjU1hPUycsJ3ljc0ZUJywnbm1mRlUnLCdpc0ZpcnN0TWFwJywnY3VycmVudExpbmVNYXBwaW5nJywncHJldmlvdXNMaW5lTWFwcGluZycsJ2dlbmVyYXRlZENvbHVtbicsJ29ObUN0JywnaXNPYmplY3QnLCd4WXVaRScsJ3dqcHB0JywnVGhlXHgyMGluc3RhbGxlZFx4MjAnLCdYZVNvbycsJ1Zha1luJywnZWFjaE1hcHBpbmcnLCdkY1FLbCcsJ191cGRhdGVNYXBwaW5nJywnb2JqZWN0JywnemduZFEnLCd1Uk1BbScsJ1JFdGhwJywnVHFDanEnLCdkcVBOTCcsJ3NvdXJjZXMnLCdXanFPcScsJ19zb3VyY2VSb290Jywnc291cmNlUm9vdCcsJ2JpYXMnLCdzYmRZeCcsJ2RlclRmJywnS3diZmsnLCd0QXdQbicsJ1RhUmNuJywnd2FsbGFieS5qc1x4MjByZWZ1c2VkXHgyMHRvXHgyMGFjY2VwdFx4MjBjb25uZWN0aW9uXHgyMGZyb21ceDIwJywneWZmZ3cnLCdFWWNYdScsJ3VRb3F5JywnQXdvcEEnLCdfbG9hZCcsJ2VOaFB2JywnUGxXaUwnLCdXQUxMQUJZX1VOSVRfVEVTVF9SVU4nLCdkZWZhdWx0JywnRWJydlgnLCdPcHFWcycsJ09BSlRCJywnY0pGb0QnLCdHTVFVcCcsJ2xhc3RJbmRleCcsJ09XbHlTJywnaXRlbXMnLCdydW5uZXJSZXNvbHZlcicsJ3Byb2Nlc3NvclBvb2wnLCcuL3Byb2Nlc3NQb29sJywnZmlsZVN0cnVjdHVyZUNhY2hlUHJvbWlzZScsJ2NXWERRJywnVldNR1cnLCdLeEtCTycsJ2ZpbGVTdGF0UHJvbWlzZScsJ3N0YXQnLCd3cml0ZUZpbGVQcm9taXNlJywndW5saW5rRmlsZVByb21pc2UnLCd1bmxpbmtGaWxlU3luYycsJ3VhRmdPJywnWmFia3UnLCdkaXJSZW1vdmVQcm9taXNlJywnZGlyUmVtb3ZlU3luYycsJ2Ridk1YJywncGxaUGonLCdyZW1vdmVTeW5jJywnZGlyRW5zdXJlUHJvbWlzZScsJ2d0dk9zJywnZW5zdXJlRGlyU3luYycsJ25vZGVNb2R1bGVzTG9va3VwJywnbGluZXNBYm92ZScsJ2dNbklyJywnbHB6QUYnLCdceDIwfFx4MjAnLCdzY3JpcHRzJywndHJ5UmVxdWlyZU1vZHVsZVdpdGhQYXRoRnJvbScsJ3JlYWN0LXNjcmlwdHMvc2NyaXB0cy91dGlscy9jcmVhdGVKZXN0Q29uZmlnJywnaXNBYnNvbHV0ZScsJ2plc3QtY2xpJywnSmpOeXUnLCdVSldmUycsJ3gueC54JywnQ2Fubm90XHgyMGRldGVjdC9wYXJzZVx4MjBqZXN0LWNsaVx4MjBtb2R1bGVceDIwdmVyc2lvbjpceDIwJywnT25seVx4MjBKZXN0XHgyMHYyNC54XHgyMG9yXHgyMGhpZ2hlclx4MjBpc1x4MjBzdXBwb3J0ZWQsXHgyMGJ1dFx4MjBmb3VuZFx4MjB2JywnXHgyMGF0XHgyMFx4MjcnLCdqZXN0LWNvbmZpZycsJ3JlYWRDb25maWdzJywnZ2xvYmFsQ29uZmlnJywnY29uZmlncycsJ1FZR1pGJywnaklFeW0nLCdqZXN0LXJ1bm5lcicsJ25vZGVfbW9kdWxlcy9qZXN0LXJ1bm5lci8nLCdGYWlsZWRceDIwdG9ceDIwcmVhZFx4MjBKZXN0XHgyMGNvbmZpZ3VyYXRpb25ceDIwZnJvbVx4MjBceDI3JywnXHgyNzpceDIwJywndW5rbm93bi4nLCdNb2R1bGVceDIwamVzdC1jbGlceDIwaXNceDIwbm90XHgyMGZvdW5kXHgyMGluXHgyMFx4MjcnLCdpc1JlZ0V4cCcsJ011c3RceDIwcGFzc1x4MjBhXHgyMHN0cmluZ1x4MjBvclx4MjBhXHgyMHJlZ3VsYXJceDIwZXhwcmVzc2lvbicsJ19fUkVHRVhQXHgyMCcsJ3pBSXl6JywnbHBOUWknLCdNTkZwWCcsJ2NoYXJDb2RlQXQnLCdDYW5ub3RceDIwZmluZFx4MjBtb2R1bGVceDIwXHgyNycsJ2NvZGUnLCdNT0RVTEVfTk9UX0ZPVU5EJywnY2FsbCcsJ2V4cG9ydHMnLCdmdW5jdGlvbicsJy4vYmFiZWxWaXNpdG9yJywnLi9iYWJlbFRyYXZlcnNlJywnZXh0bmFtZScsJy50c3gnLCcudHMnLCdlc3RyZWUnLCdiaWdJbnQnLCdjbGFzc1Byb3BlcnRpZXMnLCdjbGFzc1ByaXZhdGVQcm9wZXJ0aWVzJywnZG9FeHByZXNzaW9ucycsJ2V4cG9ydERlZmF1bHRGcm9tJywnZXhwb3J0TmFtZXNwYWNlRnJvbScsJ2Z1bmN0aW9uQmluZCcsJ2Z1bmN0aW9uU2VudCcsJ2ltcG9ydE1ldGEnLCdsb2dpY2FsQXNzaWdubWVudCcsJ29iamVjdFJlc3RTcHJlYWQnLCdvcHRpb25hbENhdGNoQmluZGluZycsJ3BhcnRpYWxBcHBsaWNhdGlvbicsJ3NtYXJ0JywndGhyb3dFeHByZXNzaW9ucycsJ2pzeCcsJ3B1c2gnLCd0eXBlc2NyaXB0JywnZmxvdycsJ2Zsb3dDb21tZW50cycsJ3VuYW1iaWd1b3VzJywnaGpZS0MnLCdGYWlsZWRceDIwdG9ceDIwY2FsY3VsYXRlXHgyMG9yaWdpbmFsXHgyMHJhbmdlc1x4MjBmb3JceDIwJywnbWVzc2FnZScsJ2xvYycsJ2VDWFBYJywnU3RhdGVtZW50JywnSWRlbnRpZmllcicsJ0xpdGVyYWwnLCdUaGlzRXhwcmVzc2lvbicsJ0RlYnVnZ2VyU3RhdGVtZW50JywnRW1wdHlTdGF0ZW1lbnQnLCdCcmVha1N0YXRlbWVudCcsJ0NvbnRpbnVlU3RhdGVtZW50JywnZmlsZUJ5SWQnLCdoYXNPd25Qcm9wZXJ0eScsJ3R5cGUnLCdzdGFydCcsJ25hbWUnLCdGZllvRycsJ2V4dGVuZCcsJ19uZXdSYW5nZXMnLCdfYWZmZWN0ZWRSYW5nZXMnLCdfb3V0ZGF0ZWRSYW5nZXMnLCdfYWxsUmFuZ2VzUmVjZWl2ZWQnLCdfaW52YWxpZGF0ZURvY3VtZW50JywnZWFjaCcsJ2NyZWF0ZScsJ19kb2N1bWVudEluRWRpdG9yJywndXBkYXRlJywndmFsdWVzJywnX3JhbmdlcycsJ1doaWxlU3RhdGVtZW50JywnSWZTdGF0ZW1lbnQnLCdGb3JTdGF0ZW1lbnQnLCd0ZXN0JywnRm9yT2ZTdGF0ZW1lbnQnLCdyaWdodCcsJ2JvZHknLCdCbG9ja1N0YXRlbWVudCcsJ2xlZnQnLCdJbXBvcnREZWNsYXJhdGlvbicsJzZ4ZnInLCdidzV1Jywnam9pbicsJ25leHRUaWNrJywncGF0aCcsJ2dyYWNlZnVsLWZzJywnZXhwcmVzcycsJ3JlYWRGaWxlU3luYycsJ2Jyb3dzZXInLCd0b1N0cmluZycsJ19fd2FsbGFieV9fJywnYnJvd3NlclJ1bm5lcicsJ2RlYnVnJywnX3dvcmtlclBvb2wnLCdfYmFzZURpcicsJ19wcm9qZWN0Jywnc2VwJywnX2luaXRpYWxpemVyJywnc2V0dGluZ3MnLCdib290c3RyYXAnLCdyZXBvcnRVbmhhbmRsZWRQcm9taXNlcycsJ190aHJvd09uQmVmb3JldW5sb2FkJywndGhyb3dPbkJlZm9yZVVubG9hZCcsJ19tYXhMb2dFbnRyeVNpemUnLCdtYXhMb2dFbnRyeVNpemUnLCdfc2FuZGJveEh0bWwnLCdyZXBvcnQ0MDRBc0Vycm9yJywnX2xydUNhY2hlJywnX3dhbGxhYnlGaWxlSWRQcmVmaXgnLCdfYXBwJywndXNlJywndXJsJywnX19fX3dhbGxhYnktYnVuZGxlJywnL3dhbGxhYnlfc2FuZGJveDppZC5odG1sJywnYUJBZlEnLCdSYUFWUycsJ3BhcmFtcycsJ3NlcGFyYXRvcicsJ3Rlc3RGcmFtZXdvcmsnLCd2ZXJzaW9uJywnL2ZyYW1ld29yay5qcycsJ19sb2NhbFJvb3QnLCd0cmFjZXIuanMnLCdtaWRkbGV3YXJlJywnaXNOYXRpdmVCdW5kbGVyJywnX2xvY2FsUHJvamVjdERpcicsJ2lacmN6JywnV3FldUsnLCdzaGFkb3dlZCcsJ25vcm1hbGl6ZVBhdGgnLCdpZEJ5UGF0aCcsJ2dldExhdGVzdE9yaWdpbmFsRmlsZUNvbnRlbnRCeVBhdGhBc3luYycsJ3RoZW4nLCdjYXRjaCcsJ19yZXBvcnQ0MDRBc0Vycm9yJywncHJvdG90eXBlJywnYWxsRmlsZXNIYXNoJywnYWxsRmlsZXMnLCdhbGxUZXN0RmlsZXMnLCdub3JtYWxpemVkUmVsYXRpdmVQYXRoJywndG1wJywnb3JpZ2luYWxJZCcsJ2NvbmNhdCcsJ2ZpbGVzVG9Mb2FkJywncmVkdWNlJywndGVzdEZpbGVzVG9Mb2FkJywnZ3ZMcWYnLCdlcnJvcicsJ2xlbmd0aCcsJ3JlY2VpdmVyUG9ydCcsJ19hbnlJbmNsdWRlZEVzbScsJ3JlcGxhY2UnLCc8aW5qZWN0Lz4nLCdVUFFEYicsJ2hwTlhvJywnZmlsZVx4MjA9XHgyMHdpbmRvdy4kXyRjb3ZlcmFnZVsnLCddPVtdO1x4MjBmb3IoaT0wLFx4MjBsZW49JywncmFuZ2VzTGVuZ3RoJywnO1x4MjBpXHgyMDxceDIwbGVuO1x4MjBpKyspXHgyMGZpbGVbaV1ceDIwPVx4MjB7fTsnLCc8c2NyaXB0PihmdW5jdGlvbigpXHgyMHt3aW5kb3cuJF8kcmVjZWl2ZXJQb3J0XHgyMD1ceDIwJywnc3RyaW5naWZ5JywnX3JlcG9ydFVuaGFuZGxlZFByb21pc2VzJywnO3dpbmRvdy4kXyR0aHJvd09uQmVmb3JldW5sb2FkPScsJzt3aW5kb3cuJF8kbWF4TG9nRW50cnlTaXplPScsJ3RyYWNlQ29udGV4dCcsJ3Nsb3dUZXN0VGhyZXNob2xkJywnO3dpbmRvdy4kXyRleHByZXNzaW9uc1RvRXZhbHVhdGU9JywnZXhwcmVzc2lvbnNUb0V2YWx1YXRlJywnO3dpbmRvdy4kXyR0ZXN0cz0nLCd0ZXN0cycsJ251bGwnLCc7d2luZG93LiRfJHRlc3RGaWxlcz0nLCdjaGFpbicsJ21hcCcsJ2luY2x1ZGUnLCd2YWx1ZScsJy90cmFjZXIuanNceDIyPjwvc2NyaXB0PjxzY3JpcHRceDIwc3JjPVx4MjInLCdmcmFtZXdvcmsnLCcvZnJhbWV3b3JrLmpzXHgyMj48L3NjcmlwdD48c2NyaXB0XHgyMHNyYz1ceDIyJywnL2NvbmZpZ3VyYXRvci5qc1x4MjI+PC9zY3JpcHQ+PHNjcmlwdFx4MjBzcmM9XHgyMicsJ2VzbScsJ2VzNicsJzxzY3JpcHRceDIwJywndHlwZT1ceDIybW9kdWxlXHgyMicsJ1x4MjBzcmM9XHgyMicsJ2h0bWwnLCdodG0nLCc8bGlua1x4MjBocmVmPVx4MjInLCdceDIyXHgyMHJlbD1ceDIyaW1wb3J0XHgyMj4nLCdjc3MnLCc8bGlua1x4MjByZWw9XHgyMnN0eWxlc2hlZXRceDIyXHgyMHR5cGU9XHgyMnRleHQvY3NzXHgyMlx4MjDigItocmVmPVx4MjInLCdceDIyPjwvbGluaz4nLCc8c2NyaXB0PignLCcpKHdpbmRvdy53YWxsYWJ5KTs8L3NjcmlwdD4nLCdzdGFydGVyJywnL3N0YXJ0ZXIuanNceDIyPjwvc2NyaXB0PicsJ3NhbmRib3hSb290VXJsJywnd2FsbGFieV9zYW5kYm94JywnU2FuZGJveFx4MjBpc1x4MjBnZW5lcmF0ZWRceDIwWyVzXTpceDIwJXMnLCdzYW5kYm94TmFtZScsJ3doZW4nLCdHa1pvQycsJ3JlcGxhY2VQYXRoU2VwRm9yUmVnZXgnLCdfZXNjYXBlU3RyRm9yUmVnZXgnLCdfc2FuZGJveFJvb3RVcmwnLCdodHRwOi8vbG9jYWxob3N0OicsJ1JJSHpMJywnX3NwYWNlX3Rva2VuXycsJ3dvcmtlclx4MjAjJywnLFx4MjBzZXNzaW9uXHgyMCMnLCdfc3RhY2snLCdfY29udGV4dCcsJ1d6SVlhJywndGhyb3cnLCdyZXR1cm4nLCdVdkZkTycsJ29ubGluZUxpY2Vuc2VEZXRhaWxzJywnZG9uZScsJ2FwcGx5JywnbmV4dCcsJ0V4TlphJywnRXl2RFcnLCdfdGVzdEZpbHRlclN0YXRlJywnYWxsQ292ZXJlZCcsJ2hhc0Vycm9yU291cmNlJywnb25FcnJvclBhdGgnLCdfbGluZVN0YXRlJywnX2NhbGN1bGF0ZUxpbmVTdGF0ZScsJ0dlbmVyYXRvclx4MjBpc1x4MjBhbHJlYWR5XHgyMGV4ZWN1dGluZy4nLCdsYWJlbCcsJ29wcycsJ3BvcCcsJ3RyeXMnLCdBaWpGVycsJ190ZXN0cycsJ2lzRmFpbGluZycsJ19mYWlsaW5nVGVzdHMnLCdfY2hhbmdlZCcsJ2l0ZXJhdG9yJywnY2hyb21lLWxhdW5jaGVyJywnY2hyb21lLXJlbW90ZS1pbnRlcmZhY2UnLCcuL3J1bldvcmtlclBvb2wnLCcuL2Jyb3dzZXJFbnZpcm9ubWVudCcsJ2Nocm9tZVJ1bm5lcicsJ2ZLS1JsJywnX3NjcmVlblNob3RSZWFkeScsJ3Jlc29sdmUnLCdlbnYnLCdfcGF0aCcsJ3J1bm5lcicsJ19mbGFncycsJ3NwbGl0JywnX2tlZXBUYWJzT3BlbmVkJywna2VlcFRhYnNPcGVuZWQnLCdfY2hyb21lUHJvbWlzZScsJ19sYXVuY2hDaHJvbWVJbnN0YW5jZScsJ2JpbmQnLCdfcmVjeWNsZScsJ19icm93c2VyRW52aXJvbm1lbnQnLCdfY2xvc2VCeUVycm9yVGltZW91dCcsJ19sb25nUnVubmluZ1dhcm5pbmdUaW1lb3V0JywnX2xvbmdSdW5uaW5nUGluZ1RpbWVvdXQnLCdfb25GaW5pc2hlZCcsJ19jYW5jZWxsZWQnLCd0aW1lJywnWyVzXVx4MjBSdW5ceDIwJXNceDIwdGVzdChzKSxceDIwc2tpcHBlZFx4MjAlc1x4MjB0ZXN0KHMpJywnX3NraXBwZWQnLCdydW4nLCdjYW5jZWwnLCdTWHhzZScsJ2dDb3h3JywnX3JlY2VpdmVyJywnc2V0TXVsdGljYXN0VFRMJywndHRsJywnYWRkTWVtYmVyc2hpcCcsJ2FkZHJlc3MnLCd5VEpKWScsJ19sb25nQ29uc29sZUxvZ1RleHQnLCdfZXJyb3JTb3VyY2VUZXh0JywnX21lc3NhZ2VGaWx0ZXJTdGF0ZScsJ3dlYkFwcCcsJ3NlbnQnLCdzdG9wJywneU5KblAnLCdfY2hyb21lJywna2lsbCcsJ3BpZCcsJ3NpemUnLCdfY292ZXJhZ2VDYWxjdWxhdGlvbkV4cGVjdGVkJywnX2luc3RydW1lbnRlZEJ5VGVzdGluZ0ZyYW1ld29yaycsJ2J1aWxkRGlzcGxheVJhbmdlc0lmUmVxdWlyZWQnLCdpc051bWJlcicsJ19vcmlnaW5hbFJhbmdlQ291bnQnLCdfY3JlYXRlJywnUHVjVVAnLCdfY2FsbGJhY2tzJywndGltZW91dCcsJ19jbG9zZVRhYicsJ19wcmVwYXJlVGFiJywneEpucFonLCdTdGFydGluZ1x4MjBzYW5kYm94XHgyMFslc10nLCdnZXRXb3JrZXInLCdfY2hlY2tDYW5jZWxsZWQnLCdQcmVwYXJpbmdceDIwc2FuZGJveFx4MjBbJXNdJywncHJlcGFyZVNhbmRib3gnLCdQcmVwYXJlZFx4MjBzYW5kYm94XHgyMFslc10nLCdfZXZhbHVhdGVPblRhYicsJ2NsaWVudCcsJ3lCdGNaJywna2V5JywnaXNDb3ZlcmVkJywnc2NyZWVuJywnVWZrS2gnLCdCcXBQYScsJ1BhZ2UnLCdjYXB0dXJlU2NyZWVuc2hvdCcsJ2RhdGEnLCdiYXNlNjQnLCd3cml0ZUZpbGVTeW5jJywnQ3REVFAnLCdsUGZ4aicsJ19odHRwU2VydmVyJywnY2xvc2UnLCdfb3BlblRhYicsJ0FOaER3Jywnc3RhdHVzJywnbFZUdksnLCdjYW5jZWxsZWQnLCdfdGVzdEZpbHRlcicsJ19tZXNzYWdlRmlsdGVyJywnX2Nvbm5lY3Rpb25PcHRpb25zJywncG9ydCcsJzEyNy4wLjAuMScsJ25vb3AnLCdSdW50aW1lJywnKSgpJywnRmFpbGVkXHgyMHRvXHgyMGV2YWx1YXRlXHgyMGNvZGVceDIwb25ceDIwQ2hyb21lXHgyMFRhYjpceDIwJywnQ29xTFQnLCdDaHJvbWVceDIwaXNceDIwbm90XHgyMHJ1bm5pbmcnLCdOZXcnLCdlbmFibGUnLCdhbGwnLCdRdHNLVScsJ2ZpbmQnLCdzdGFjaycsJ3N0YXJ0UmFuZ2UnLCdmaWxlUGF0aCcsJ3N0YXJ0TGluZScsJ3N0YXJ0Q29sdW1uJywncmFuZ2UnLCdmaWxlJywnaW50ZXJjZXB0aW9uSWQnLCdjb250aW51ZUludGVyY2VwdGVkUmVxdWVzdCcsJ3NldFJlcXVlc3RJbnRlcmNlcHRpb25FbmFibGVkJywnd2FybicsJ1VuYWJsZVx4MjB0b1x4MjBjb25maWd1cmVceDIwbmV0d29ya1x4MjByZXF1ZXN0XHgyMGludGVyY2VwdGlvblx4MjBpblx4MjBDaHJvbWUnLCduYXZpZ2F0ZScsJ2xvYWRFdmVudEZpcmVkJywnc3VjY2VzcycsJ2ZhaWxlZDpceDIwJywndW5rbm93bicsJ2NoYW5nZVRzJywnZ2V0JywnaXNVbmRlZmluZWQnLCdiaW5hcnknLCdfaXNTdG9wcGVkJywnc2V0JywnZGVsJywnZW1pdCcsJ1FKZ2RIJywncVlqc00nLCd0YXJnZXQnLCdqWGVWQycsJ3N0YWNrRW50cnlCeUZpbGVQYXRoJywnbGluZScsJ0ZhaWxlZFx4MjB0b1x4MjBjbG9zZVx4MjBDaHJvbWVceDIwVGFiXHgyMGNsaWVudDpceDIwJywnZGlzcGxheVJhbmdlJywnLS1oZWFkbGVzcycsJy0tZGV0ZXJtaW5pc3RpYy1mZXRjaCcsJ0xpbnV4JywnLS1uby1zYW5kYm94Jywnc2lsZW50JywnX2hhbmRsZUhvc3RFcnJvcicsJ3ZveVpoJywnaW5kZXhPZicsJ3dhbGxhYnlGaWxlSWQnLCdsYXN0SW5kZXhPZicsJ3N1YnN0cmluZycsJ2dldEZpbGVNZXRhZGF0YUJ5UGF0aCcsJ2lIVGFWJywnX2NsZWFuU3RhY2snLCdDaHJvbWVceDIwcnVubmVyXHgyMGVycm9yOlx4MjAnLCdfZW1pdFRlc3RSdW5FcnJvcicsJ2VsZWN0cm9uUnVubmVyJywnY2hpbGRfcHJvY2VzcycsJ19ydW5uZXInLCdfZW52T3B0aW9ucycsJ29wdGlvbnMnLCdjbGVhck1lbW9yeUNhY2hlJywnX2hvc3QnLCdfaG9zdFByb21pc2UnLCdwcm9taXNlJywndEZBek0nLCdpTGNodycsJ19wYXJhbXMnLCdBVE9NX1NIRUxMX0lOVEVSTkFMX1JVTl9BU19OT0RFJywnRUxFQ1RST05fUlVOX0FTX05PREUnLCdFTEVDVFJPTl9ESVNBQkxFX1NFQ1VSSVRZX1dBUk5JTkdTJywnZm9yaycsJ3J1bm5lcnMnLCdlbGVjdHJvbkhvc3QuanMnLCdzWmVPaicsJ2h5RkxDJywnX21heFdvcmtlcnMnLCdtYXgnLCdfb3B0cycsJ3dvcmtlcnMnLCdpbml0aWFsJywnY3B1cycsJ3BoYW50b21qcycsJ2tpbmQnLCdtaW4nLCdyZWd1bGFyJywnZmxvb3InLCdQYXJhbGxlbGlzbVx4MjBmb3JceDIwaW5pdGlhbFx4MjBydW46XHgyMCVzLFx4MjBmb3JceDIwcmVndWxhclx4MjBydW46XHgyMCVzJywnX3Jlc3BvbnNlV2l0aENvcnJlbGF0aW9uSWQnLCdyZWFkeScsJ3NRQXlhJywndmdlbHMnLCdfcHJlcGFyZScsJ2RSU3ZDJywnY29uc3RydWN0b3InLCdEb2lldicsJ0xNd2VMJywncVlzWFgnLCdzZW5kJywnY2xvc2VQYWdlJywncGFnZUlkJywnX3JlcXVlc3RXaXRoQ29ycmVsYXRpb25JZCcsJ29wZW5QYWdlJywnZGVmZXInLCdjYXB0dXJlUGFnZScsJ2dJdmhoJywnanRNdUcnLCdyZWplY3QnLCdGYWlsZWRceDIwdG9ceDIwcmVuZGVyXHgyMHRlc3RceDIwcnVuXHgyMHNjcmVlblx4MjBzaG90JywndFZzbXMnLCdyYW5kb21JZCcsJ3V3TUROJywnX2V2YWx1YXRlT25QYWdlJywnUGdEZGUnLCdmaW5kTGFzdEluZGV4JywnYmV0dGVyJywnc2xpY2UnLCdyZXN1bWUnLCdndndxZScsJ0Z3RXNDJywnX2Nsb3NlUGFnZScsJ19vcGVuUGFnZScsJ1BXUkpZJywnelJaY3MnLCdNb3pCcicsJ2NvbHVtbicsJ190cmFjZScsJ190cmFjZVN0YXRlJywnYWxsb3dSZWNvcmRpbmdQcmV2aW91c1RyYWNlU3RhdGUnLCdfcHJldmlvdXNUcmFjZVN0YXRlJywnX3Jlc2V0UHJldmlvdXNUcmFjZVN0YXRlJywnX2VtaXQnLCd0cmFjZU5hdmlnYXRpb25SZXNldCcsJ19zZXRMaW5lTWVzc2FnZXNGaWx0ZXInLCd0b2dnbGVUZXN0RmlsdGVyJywncnVuVGVzdHMnLCd0ZXh0TGluZXMnLCdsaW5lT2Zmc2V0JywnbGluZURpZmZlcmVuY2UnLCdpbnZhbGlkYXRlRG9jdW1lbnRMaW5lcycsJ3NoaWZ0RG9jdW1lbnRMaW5lcycsJ3ROSW9aJywnZm5kSVcnLCduZmNhbGwnLCdyZWFkRmlsZScsJ3BhcnNlJywnS3JqYkcnLCdkaXNjb25uZWN0JywnenZyUmwnLCdaYlJKcCcsJ2xpY2Vuc2VDaGVjaycsJ2xhc3RNb2RpZmllZCcsJ2FjdGl2YXRpb24nLCdfZW1pdE5vdGlmaWNhdGlvbicsJ1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIweW91clx4MjBsaWNlbnNlXHgyMGFjdGl2YXRpb25ceDIwaXNceDIwbm9ceDIwbG9uZ2VyXHgyMHZhbGlkLicsJ19lbWl0U3RvcHBlZCcsJ19sYXN0Q2hlY2snLCdsaWNlbnNlJywncXVva2thJywnd2FsbGFieScsJ3BlbmRpbmdBY3RpdmF0aW9uJywnZ2V0VGltZScsJ3ZlcmlmeUxpY2Vuc2UnLCdfdmVyaWZpY2F0aW9uUHJvY2Vzc2luZycsJ3ZlcmlmaWNhdGlvblJlc3VsdCcsJ1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIweW91clx4MjBsaWNlbnNlXHgyMGFjdGl2YXRpb25ceDIwY291bGRceDIwbm90XHgyMGJlXHgyMGNvbmZpcm1lZC4nLCdRaXZTYScsJ19pc1dpbicsJ19yZWFkRmlsZVByb21pc2UnLCdfdGltZW91dCcsJ19maWxlU3RhdFByb21pc2UnLCdGaWxlQ29udGVudC5sZW5ndGhceDIwbm90XHgyMGVxdWFsXHgyMHRvXHgyMEZpbGVJbmZvLmxlbmd0aCcsJ2Z1bmN0aW9uXHgyMERhdGUoKVx4MjB7XHgyMFtuYXRpdmVceDIwY29kZV1ceDIwfScsJ2Z1bmN0aW9uXHgyMHRvU3RyaW5nKClceDIwe1x4MjBbbmF0aXZlXHgyMGNvZGVdXHgyMH0nLCdfbW9kZWwnLCdibXBVTicsJ1NMbklkJywnLi9leHRlbnNpb24vc2VydmVyL21vZGVsJywnX3NldEtleScsJ19rZXknLCdfdWlTZXJ2aWNlJywnSGZDUHEnLCduYXZpZ2F0aW9uUmVxdWVzdGVkJywnaGFzUmVwb3J0YWJsZUNvdmVyYWdlT3JUZXN0RmlsZScsJ2FPT29SJywnUVlSTEYnLCd3anJhdScsJ3NldERhdGUnLCdpbnZhbGlkVmVyc2lvbicsJ1dhbGxhYnkuanMnLCdodHRwczovL3F1b2trYWpzLmNvbS9wcm8nLCdodHRwczovL3dhbGxhYnlqcy5jb20vbGljZW5zZS8nLCdceDIwdmVyc2lvblx4MjBpc1x4MjBub3RceDIwY292ZXJlZFx4MjBieVx4MjB5b3VyXHgyMGN1cnJlbnRceDIwbGljZW5zZS5ceDBhUGxlYXNlXHgyMHZpc2l0XHgyMG91clx4MjB3ZWJzaXRlXHgyMHRvXHgyMHVwZ3JhZGVceDIweW91clx4MjBsaWNlbnNlOlx4MjAnLCdyZXZlcnNlJywnLi9leHRlbnNpb24vc2VydmVyL211bHRpY2FzdGVyJywnX3dhbGxhYnlFbWFpbCcsJ211bHRpVXNlcktleScsJ2xpY2Vuc2UudXNlJywnelJUU1cnLCdfZ2V0RmlsZUNvbnRlbnQnLCdpc1plcm9Db25maWdKZXN0JywnX2ZpbHRlcicsJzAuMC4wLjAnLCdsaWNlbnNlQ29sbGlzaW9uJywnZGlybmFtZScsJ25KWHFUJywnbm90RmFpbHMnLCdSenZvVScsJ210aW1lJywnZ2V0RGF0ZScsJ19leGVjdXRlZFRlc3ROdW1iZXInLCdfZW5kVGltZScsJ21pbGxpc2Vjb25kKHMpJywnbG9nJywnXHgyMGFmZmVjdGVkXHgyMHRlc3QocylceDIwaW5ceDIwJywndGV4dCcsJ19yYW5nZVRvTG9jJywnY29udGV4dCcsJ2RldGFjaFZhbHVlQmFnJywndmFsdWVCYWcnLCdleHBlY3RlZCcsJ2FjdHVhbCcsJy4vZXh0ZW5zaW9uL2NvcmUnLCdzdGFydHNXaXRoJywncmVhbFBhdGgnLCdfX2V4dGVuZHMnLCdHbXh0VicsJ3BDaW1VJywnc2V0UHJvdG90eXBlT2YnLCdfX3Byb3RvX18nLCd0T1NNbScsJ2NvcmVWZXJzaW9uJywnbVFiemgnLCdfX2Fzc2lnbicsJ05raFpqJywnbWVzc2FnZXMnLCdfX3ZhbHVlcycsJ0lZcnpSJywnbnVtYmVyJywnX3JlY3ljbGVMaW5lSWZJbkNoYW5nZUZyYW1lJywnX2xpbmVzJywnZGlzcG9zZScsJ19yZWN5Y2xlZExpbmVzJywnaHR0cHMnLCdub2RlLXV1aWQnLCdjcnlwdG8nLCd0aW1lcnMnLCdzZXRUaW1lb3V0JywnY2xlYXJUaW1lb3V0JywnLi9zZXJ2ZXIvZmlsZVN5c3RlbScsJy4vc2VydmVyL2xpbmVEaWZmZXJlbmNlcycsJy4vc2VydmVyL21vZGVsJywnLi9zaGFyZWQvdXRpbHMnLCcuLi91dGlscycsJ2FjdGl2YXRlLWxpbmsnLCdjb250aW51ZS10cmlhbC1saW5rJywndXNlLWNvbW11bml0eS1saW5rJywnZXh0ZW5kZWQtdHJpYWwtbGljZW5zZS1saW5rJywnaHR0cHM6Ly93YWxsYWJ5anMuY29tL2Rvd25sb2FkLyN0cnktaXQtZnJlZScsJ2h0dHBzOi8vcXVva2thanMuY29tL3Byby8jdHJ5LXByby1mcmVlJywnRnJlZWRvbScsJ3ZhbHVlRXhwbG9yZXJFeHBhbnNpb25MaW1pdGF0aW9uSW5Db21tdW5pdHlFZGl0aW9uJywnTmNrQ1onLCdoZWFkZXJzJywnQ29udGVudC1MZW5ndGgnLCdyZXF1ZXN0JywnWE5iRWQnLCdRb1dHVycsJ190ZXN0RmlsZScsJ2VuZCcsJ3dyaXRlJywnLS0tLS1CRUdJTlx4MjBQVUJMSUNceDIwS0VZLS0tLS1ceDBhTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1MUVFRFp6USsrbDZ0ejJpb0NQYVx4MGFIeE9TY2p5MmtSRGRQb1h1UTg4elpHNlZldnhxbUl6YWRIUEZHalY1cDNabThPWTlSK1NmNjFrZHpSWnp2V1JnXHgwYXhvcmxhbm9PbHV0dmZCZkcybGt2Mko0SC9CNzVYcG9BZUd2ZHZJbE9Nb0R4ZndqMnZNSVE0b0hOYUNKMnkrTy9ceDBhaW9oVEZPQzA3blk3dWYyc2EwdXNPQVo3emcrYlh5ejYzL2Z1U2VWb3VGQ0tHZVlLdnExWUM5OTFGMkhqMFRoTVx4MGF4eGVsbGM2eDFBYUZ1eXlHNUhtZFlxYnVLTlMraUF0N3c4cFlUSm9YeGk5akUwMjE0R2Ywc2JzRm5BYkJGajJzXHgwYWtPYWVlNFBTcGx5U1pYRW1ZUmVwUDErdzZhRGt1YlZ0c0hNdkZ0K0FyNHd1NGRMdUFqN1M4eXhWVnJLRUc5UnpceDBhNHdJREFRQUJceDBhLS0tLS1FTkRceDIwUFVCTElDXHgyMEtFWS0tLS0tJywnLS0tLS1CRUdJTlx4MjBQVUJMSUNceDIwS0VZLS0tLS1ceDBhTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0cERvdGVqdHpoaVQvbHBOZmQwSFx4MGEyRHYwOE5UU0o4L2l4dVF6M2lKaVZSeFFrb3Q1U240NXd1NFFpUUVvWTVOUS90RGY4VjltRGVlUE5VL1pkOEtZXHgwYWR5UkZvcTZid09sSGMwSEFhNTB0ZWNSQ0VDRVNCK3QzVFZjcUxNb2dYMzJ2Z1FrU21seTBzRnh0R0ZCak44V3hceDBhVitRN1dROG5lZnQ3SkthWHRtKzJGdDdQNDFvbmQrU2ZCZVRvaDltbjlERmZ0K091STJ2ejdzME9TamQrUDJid1x4MGErR0VJcjNvdGwzQ0E1UnJJSDlXUnNBVmphd3YrejVMdmFrUVh0TzZKTk5tSmdFckhXWm1rQklsdjJWSERzb1NkXHgwYU1MZ2EyalRpRUhya1p5bEtQRm96L2hPZGgvaVZINC9yMUFXeEJoajhJZ1FsUmNMSmd2U0J6Sm80T2xCaGxZaDZceDBheHdJREFRQUJceDBhLS0tLS1FTkRceDIwUFVCTElDXHgyMEtFWS0tLS0tJywnLS0tLS1CRUdJTlx4MjBQVUJMSUNceDIwS0VZLS0tLS1ceDBhTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtcXVrMEl1NVVQMmtBU0R3R2pORFx4MGFDa2t1bmVXUmVReHhTR1dQeDI4cSs1TVdFWG5pZ2o1a0dMSTE0MHphdnNHaE9JUFZET2JCN3A1cnUxN2dkOEw2XHgwYXhaZ0J1YXB5MkIyejVQbkJiQUdPcVpCRHdVQVNDaWJZdEo2TjR3ckx5VWxDRTNKYVJsTUR1KzRWWS95YnR6UENceDBheE1XemRTemtvSHBJbUQ0bm5NK0ZMSk83Z1VDcUF5MEpkRnlUOUw3T3dmbFpaYU12aG9uYks0akVIRG9sSzdsMlx4MGFFQlNQeFpPeGo1dzVWQmJubHFaQThlK3RLbUJJVVR0cm5oa3ptc0tGTHFWU3V6SndpMjgrdmVLL0F6T1cvRjFVXHgwYVFSeHNTdTg4Nmo0SVZ6M1Fkc3gzdGxEMXMreFp1WnBHWnQ0K3BtbmUwT25zMEtoUTBQTDVneDZabW9nV3E5ZHJceDBhbXdJREFRQUJceDBhLS0tLS1FTkRceDIwUFVCTElDXHgyMEtFWS0tLS0tJywnSFVZR0UnLCdhc3NpZ24nLCdxVFBDWScsJ3NadHhhJywnaXNOYU4nLCdfZmlsZXNXaXRoTWVzc2FnZXMnLCdCaVhnTScsJ2hvbWVkaXInLCcud2FsbGFieScsJy5vbCcsJ2Zyb20nLCdudW1iZXJPZkFsbFJhbmdlcycsJ2xvd0NvdmVyYWdlVGhyZXNob2xkJywnbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJywnX2xhdGVzdFJlcG9ydGVkQ292ZXJhZ2VWYWx1ZScsJ25vdENvdmVyZWQnLCdfbGF0ZXN0TnVtYmVyT2ZBbGxSYW5nZXMnLCdfcmVhZEZpbGVTeW5jJywnX3dyaXRlRmlsZVN5bmMnLCd1a290YScsJ2lzU3RyaW5nJywna3BOalEnLCdpc0Vycm9yU291cmNlJywncGFyc2VLZXknLCdydHJpbScsJ2V4cGlyZWQnLCdleHBpcmVkVHJpYWwnLCdsaWNlbnNlZU5hbWUnLCdsaWNlbnNlZUVtYWlsJywnbGljZW5zZVRhZ3MnLCdleHBpcmF0aW9uRGF0ZVN0cmluZycsJ3NvdXJjZScsJ2V4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkJywndURKRWUnLCdYQVJZcicsJ3huWmdxJywnd3FIQ2knLCdoYXNoJywnY3JlYXRlSGFzaCcsJ3NoYTI1NicsJ3VzZXJJbmZvJywndXNlcm5hbWUnLCdoZXgnLCdsaWNlbnNpbmcud2FsbGFieWpzLmNvbScsJy9saWNlbnNlQXVkaXQnLCdQT1NUJywnY3JlYXRlVmVyaWZ5JywnUlNBLVNIQTUxMicsJ1dhbGxhYnkuanNceDIwK1x4MjBRdW9ra2EuanMnLCdRdW9ra2EnLCd2YWxpZCcsJ3ZlcmlmeScsJ1VqU09tJywnYXFEQ0gnLCdzZXRIb3VycycsJ2VkaXRvcicsJ3NoYTUxMicsJ2RpZ2VzdCcsJ2V4cGlyaW5nU29vbicsJ1F5Z3ZmJywndGNmJywnT1lZeHInLCdfZmlsZXNXaXRoTG9hZGFibGVNZXNzYWdlcycsJ2ZpbHRlcicsJ2FjdGl2ZScsJ3RyYWNlSWQnLCdfbWFwTWVzc2FnZXMnLCd0WlhOZicsJ2RpZmZNYXRjaFBhdGNoJywnUHJvamVjdCcsJ19xdW9ra2EnLCdfcXVva2thRWRpdGlvbicsJ2VkaXRpb24nLCdMVmlGbicsJ3Byb2plY3Q6JywnZW5kc1dpdGgnLCdWYXJpYWJsZURlY2xhcmF0aW9uJywnWWNWS0cnLCdmaWxlc09wZW5lZEluRWRpdG9yJywnZmlsZUJ5UGF0aCcsJ2FsbExpbmVzJywnX2ZzJywnbW9kZWw6JywnNXVnJywnSlJyR1EnLCdGYWlsZWRceDIwdG9ceDIwY29weVx4MjB0b1x4MjBjbGlwYm9hcmQuXHgyMCcsJ2NvcHktcGFzdGUnLCdjb3B5JywnZXhpdCcsJ19kaXJFbnN1cmVTeW5jJywnZGlyRW5zdXJlU3luYycsJ2ZpbGVFeGlzdHNTeW5jJywnRGNWeVInLCdfdmFsdWVzSW5jbHVkZWRJbkNvdmVyYWdlQWdncmVnYXRlJywnX251bWJlck9mQWxsUmFuZ2VzJywnX251bWJlck9mQ292ZXJlZFJhbmdlcycsJ3RIanZHJywnbWQ1JywnNzk0NzlmZTk0ZmNkMmJkOWYxNDFhZDE3MTdjMzUyODInLCc2NjU3MTA5ZmI0NDI2MzNmNDEyZjEyODc4ODg3MTk2MCcsJ2NjNDhmZGM5MWQ4ODI1Y2E5N2IzMWM1NWNhMDM0ZDQ2JywnNDdhYmZkZmE3YmNkNDE2ZTBmOWM2OTk5MWVjMWY4OTYnLCcwN2VkMWZjNmEzYTMyZDY2MDk5ZmUxODcwYzgzYTBjZScsJzRlNTNlNGY4YWE1ZGFiYmVhODdhODE2ZDI4YjAzOTNlJywnX3RyaWFsTW9kZScsJ2xrcCcsJ19lZGl0b3InLCdfY29uc29sZU91dHB1dCcsJ2NvbmZpZ3VyZScsJ0FmZnZHJywnc1F4VkQnLCd4aWUnLCd0eTQnLCdfcnVuSWZWZXJpZmllZCcsJ2ZmWE9wJywnZ2ZGdlonLCdfZW1pdERvY3VtZW50TGluZXMnLCdmaWxlQ2hhbmdlZEluRWRpdG9yJywndHJhbnNpZW50Q2hhbmdlJywnY29weVZhbHVlJywnX2NvcHlUcmFuc2llbnRDaGFuZ2VJZCcsJ2NvbnRlbnQnLCdfX19DT1BZX19fJywnI0NPUFk6JywndHJhY2VCZWluZ05hdmlnYXRlZCcsJ2NoYW5nZUZyYW1lJywnZmlsZU9wZW5lZEluRWRpdG9yJywnb3BlbmVkSW5FZGl0b3InLCdmaWxlQ2xvc2VkSW5BbGxFZGl0b3JzJywnZXZhbHVhdGVFeHByZXNzaW9uSW5FZGl0b3InLCdceDBhLy8nLCdhY3Rpb24nLCdleHBhbmRlZCcsJ0FtcWVNJywnY292ZXJlZEZpbGVzJywnUVlUUGQnLCdydW5PblNhdmUnLCd0cmFjZVRlc3RTZWxlY3Rpb25SZXF1ZXN0ZWQnLCdGT0tMQicsJ2ZpbGVzVG9UcmFjaycsJ3NvcnRCeScsJ2ZhaWxpbmcnLCdldmFsdWF0ZUV4cHJlc3Npb24nLCdleHRlcm5hbEZpbGVDaGFuZ2UnLCdpbnN0YWxsUGFja2FnZScsJ2FsbG93VG9JbnN0YWxsSW1wb3J0ZWRNb2R1bGVzJywncGx1Z2luJywnY29tbWFuZCcsJ2JmVGxLJywnT05uRmEnLCdCUUpnaycsJ19hbGxvd2VkVG9TZW5kVGVzdFJlc3VsdHMnLCdmb3JtYXQnLCdwaXBlJywnbG9jYWwnLCdjd2QnLCdnbG9iYWxTZXR0aW5nc0RpcicsJ2RpcicsJ2VkaXRDb25maWcnLCdnbG9iYWxTZXR0aW5nc0ZpbGUnLCdwbHVnaW5zJywncmVsb2FkUXVva2thU2V0dGluZ3MnLCdfZW1pdFN0YXRzVXBkYXRlJywnaW5zdHJ1bWVudGVkRmlsZScsJ2NORXlCJywnWnJ3c2EnLCdlcnJvcnMnLCdtYXRjaCcsJ21pc3NpbmdQYWNrYWdlJywndmFsaWRQYWNrYWdlTmFtZScsJ21pc3NpbmdCcm93c2VyR2xvYmFsJywndW5kZWZpbmVkTmFtZScsJ2dldEluc3RydW1lbnRlZEphdmFTY3JpcHRGaWxlQ29udGVudEJ5UGF0aCcsJ3VuY292ZXJlZFJlZ2lvbnMnLCd1bmNvdmVyZWRSZWdpb25zQnlSZXF1ZXN0JywnaW5mbycsJ0FjdGlvblx4MjBpc1x4MjBub3RceDIwYXZhaWxhYmxlXHgyMGZvclx4MjBmaWxlc1x4MjBvdXRzaWRlXHgyMHdhbGxhYnkuanNceDIwc2NvcGUnLCdhbGxUZXN0cycsJ2JsQ3VIJywnZGlzcGxheVBhdGgnLCdjb3ZlcnMnLCdfYWRkRmFpbGVkT25NZVRlc3RJZkZhaWxpbmcnLCdyWnZFRycsJ3JidycsJ3NUaVJwJywnb3JpZ2luYWxQb3NpdGlvbkZvcicsJ29yaWdpbmFsTGluZScsJ29yaWdpbmFsQ29sdW1uJywnYWRkTWFwcGluZycsJ2dlbmVyYXRlZExpbmUnLCdsaW5lUmVwb3J0Jywn4oCLbGluZVJlcG9ydEJ5UmVxdWVzdCcsJ3JlcG9ydCcsJ2xvY2F0aW9uJywna2dFSUEnLCdsb2NhdGlvbkJ5UmVxdWVzdCcsJ0Nhblx4MjBub3RceDIwbG9jYXRlXHgyMGFceDIwZmFpbGluZ1x4MjB0ZXN0JywnQ2FuXHgyMG5vdFx4MjBmaW5kXHgyMGFueVx4MjBmYWlsaW5nXHgyMHRlc3RzJywncnBsaVUnLCdRamdwSCcsJ2Vycm9yQnlSZXF1ZXN0JywnQ2FuXHgyMG5vdFx4MjBmaW5kXHgyMGFueVx4MjB0ZXN0XHgyMGVycm9ycycsJ2NvcHlUb0NsaXBib2FyZCcsJ1FUSVNnJywnYktkSVMnLCdfbmFtZScsJ19wYXJlbnQnLCdpSWRURScsJ2lzRW1wdHknLCdfbXV0ZVByb0VkaXRpb25Gb3JWYWx1ZUV4cGxvcmVyTm90aWZpY2F0aW9uJywnT25seVx4MjBceDI3UHJvXHgyN1x4MjBlZGl0aW9uXHgyMG9mXHgyMFF1b2trYS5qc1x4MjBzdXBwb3J0c1x4MjBtb3JlXHgyMHRoYW5ceDIwJywnXHgyMGV4cGFuZGVkXHgyMGxldmVsc1x4MjB3aXRoaW5ceDIwVmFsdWVceDIwRXhwbG9yZXIuJywnbXV0ZU5vdGlmaWNhdGlvbicsJ09weWNwJywnX2NvbXBhY3RMaW5lJywnY29udGludWVUcmlhbCcsJ09NRWJWJywnVGtVTHUnLCdoYXNSZXBvcnRhYmxlQ292ZXJhZ2UnLCdyb3VuZCcsJ19jb250aW51ZVRyaWFsU2Vzc2lvbicsJ29uc2F2ZScsJ21vZGUnLCd0b2dnbGUnLCdnZXRGaWxlTWVzc2FnZXMnLCdjb3B5RGlhZ25vc3RpY3NSZXBvcnRUb0NsaXBib2FyZCcsJ2xsVGJqJywnb3NWZXJzaW9uJywncmVsZWFzZScsJ25vZGVWZXJzaW9uJywnY29uZmlnJywnb21pdCcsJ3RlbGVtZXRyeScsJ3Bvc3Rwcm9jZXNzb3InLCdfcGFja2FnZUpzb24nLCdwYWNrYWdlSlNPTicsJ2RlcGVuZGVuY2llcycsJ2RldkRlcGVuZGVuY2llcycsJ3N0YXRzJywnZ2V0RGVidWdMb2cnLCdmb3JtYXRXaXRoT3B0aW9ucycsJ2BgYFx4MGEnLCc8aG9tZURpcj4nLCc8cm9vdERpcj4nLCdfaW5zdHJ1bWVudGVkUm9vdCcsJzx3YWxsYWJ5Q2FjaGVEaXI+JywnR3FodUsnLCd5ekhFRCcsJ3RyYWNlJywndHJhY2VCeVJlcXVlc3QnLCdwcm9qZWN0OmF1dG9Db25maWd1cmF0aW9uQXZhaWxhYmxlJywneHlxU2MnLCdZb3VceDIwbWF5XHgyMGJlXHgyMGFibGVceDIwdG9ceDIwdXNlXHgyMFdhbGxhYnlceDIwd2l0aG91dFx4MjBhXHgyMGNvbmZpZ3VyYXRpb25ceDIwZmlsZS5ceDIwQ2hlY2tceDIwb3V0XHgyMDxhXHgyMGNsYXNzPVx4MjJhdXRvLWNvbmZpZy1pbmZvLWxpbmtceDIyXHgyMGhyZWY9XHgyMmh0dHBzOi8vd2FsbGFieWpzLmNvbS9kb2NzL2ludHJvL2NvbmZpZy5odG1sXHgyMj5vdXJceDIwZG9jdW1lbnRhdGlvbjwvYT5ceDIwZm9yXHgyMG1vcmVceDIwaW5mb3JtYXRpb24uJywncHJvamVjdDpwcm9qZWN0Q29uZmlndXJlZCcsJ3ZpbEZvJywnbWRDb0gnLCdfZW1pdFByb2plY3RDb25maWd1cmVkJywncHJlbG9hZFN0cnVjdHVyZScsJ2toaE9JJywnNnhmJywnMTZ4eCcsJ2llZDEnLCdwWWhDYycsJ19zdGFydCcsJ19maWxlc0ZvclByb2plY3QnLCdGYWlsZWRceDIwdG9ceDIwc2V0XHgyMHVwXHgyMHByb2plY3RceDIwZmlsZVx4MjBzeXN0ZW06XHgyMCcsJ19lcnJvck1lc3NhZ2UnLCdfdGVzdFJ1bkVycm9yTWVzc2FnZScsJzl0eTQnLCdfdXBkYXRlUHJvamVjdEZpbGUnLCdsb2FkZWQnLCdjaGFuZ2VkJywnZGVsZXRlZCcsJ2dTSHZhJywnRmlsZVx4MjBzeXN0ZW1ceDIwZXJyb3I6XHgyMCcsJ25vdENoYW5nZWQnLCdGaWxlXHgyMGNoYW5nZWQsXHgyMHJ1bm5pbmdceDIwcGVuZGluZ1x4MjB0ZXN0cycsJ0ZpbGVceDIwd2FzXHgyMG5vdFx4MjBjaGFuZ2VkLFx4MjBidXRceDIwZmlsZVx4MjBtYXJrZXJzXHgyMG1heVx4MjBuZWVkXHgyMHRvXHgyMGJlXHgyMHN5bmNlZCcsJ21FeElrJywnRmZtZW4nLCdoYXNBbnlQZW5kaW5nSW5FZGl0b3JGaWxlQ2hhbmdlcycsJ3Byb2plY3Q6dGVzdFJ1bkVycm9yJywna3JBbXgnLCdfZGF0YScsJ2NvdmVyYWJsZScsJ1Bvc3Rwcm9jZXNzb3JceDIwcnVuXHgyMGZhaWx1cmU6XHgyMCcsJ3N1YnN0cicsJ3RyaW1MZWZ0JywnYXRceDIwJywndGVzdEVycm9yUmVwb3J0ZWQnLCdyZXJ1blNjaGVkdWxlZCcsJ2Z1bGxUZXN0UmVzdWx0c1JlcG9ydCcsJ19jbGVhckNvbnNvbGVPdXRwdXRTZW5kUXVldWUnLCdidXN5JywncHJvamVjdDpsaXZlJywnZVhEWngnLCdvRkdRQycsJ2tjRmVaJywnZmlsdGVyZWQnLCdwcm9qZWN0OmNvbmZpZ0NoYW5nZWQnLCdRb1RreCcsJ0RoU2xTJywnX2FkanVzdFF1b2trYUZlYXR1cmVzJywnc3RyaW5nJywnaXNOb3RpZmljYXRpb25NdXRlZCcsJ19lbmNvZGVNYXBwaW5nJywncHJvamVjdDpleHByZXNzaW9uc1RvRXZhbHVhdGVSZWNlaXZlZCcsJ29XSEhkJywnX3NldFRpbWVvdXRGb3JMb25nUnVubmluZ09wZXJhdGlvbicsJ3BybycsJ3ZxWVFOJywncW1Hb2onLCd3YXJuaW5nJywncHJvamVjdDptb2R1bGVMb2FkZWQnLCdNdkVZSScsJ3Nlc3Npb24nLCdMYkp1YycsJ0pndXhaJywnZnJhbWUnLCdPbmx5XHgyMFx4MjdQcm9ceDI3XHgyMGVkaXRpb25ceDIwb2ZceDIwUXVva2thLmpzXHgyMHN1cHBvcnRzXHgyMHByb2plY3RceDIwZmlsZXNceDIwaW1wb3J0LicsJ19zdWdnZXN0ZWRQcm9FZGl0aW9uRm9yUHJvamVjdEZpbGVJbXBvcnQnLCdsZWFmJywncHJvamVjdDpuYXZpZ2F0aW9uUmVxdWVzdGVkJywncHJvamVjdDpmaWxlc1JlcXVpcmVkJywnaEV0b2knLCdmaWxlcycsJ3FkYlhNJywnV2pScEYnLCdfY29ubmVjdGlvbnMnLCdfc2VuZCcsJ3Byb2plY3Q6bGljZW5zZUNvbGxpc2lvbicsJ1F1b2trYS5qc1x4MjBceDI3UHJvXHgyNycsJ1x4MjBpc1x4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIweW91clx4MjBsaWNlbnNlXHgyMGlzXHgyMGJlaW5nXHgyMHVzZWRceDIwZWxzZXdoZXJlXHgyMG9uXHgyMHRoZVx4MjBuZXR3b3JrXHgyMGJ5XHgyMDxiPicsJ3Vua25vd25ceDIwYWRkcmVzcycsJ1x4MjI+b3VyXHgyMHdlYnNpdGU8L2E+Llx4MjBJZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCdyZW5kZXInLCdLWlhRbycsJ19hZ2dyZWdhdGVGaWxlQ292ZXJhZ2UnLCd1cGRhdGVEb2N1bWVudCcsJ2RvY3VtZW50c1VwZGF0ZWQnLCdfdXBkYXRlVG90YWxDb3ZlcmFnZScsJ3N0YXRzTWF5YmVDaGFuZ2VkJywnX2VtaXRGaWxlc01lc3NhZ2VzJywnX2FjdGl2ZVRlc3RGaWxlJywnbW9kZWw6c3RhdHNNYXliZUNoYW5nZWQnLCd2UW9DdycsJ3Rlc3RSZXN1bHRzQ2hhbmdlZCcsJ19lbWl0RG9jdW1lbnRVcGRhdGVzJywnWmZCVXEnLCdib1pPcScsJ19lbWl0RmlsZXNUb1RyYWNrJywnTEJOZlInLCdfaGFzR2xvYkNoYXJzJywnbW9kZWw6Y29uc29sZU91dHB1dCcsJ2NoYW5nZUlkJywnX2NvbnNvbGVPdXRwdXRUaW1lb3V0JywnbW9kZWw6dGVzdEZpbHRlclRvZ2dsZWQnLCd0ZXN0RmlsdGVyVG9nZ2xlZCcsJ2VuYWJsZWQnLCdtb2RlbDp0cmFjZU5hdmlnYXRpb25SZXNldCcsJ21vZGVsOnRyYWNlTmF2aWdhdGVkJywndHJhY2VOYXZpZ2F0ZWQnLCdtb2RlbDphY3RpdmVUZXN0RmlsZUNvdmVyYWdlQ2hhbmdlZCcsJ0RwWWRWJywnTVh5bk4nLCdydW5DYW5jZWxsZWQnLCdnbG9iYWxFcnJvcnMnLCdsb2FkaW5nU2VxdWVuY2UnLCdjb3ZlcmFnZScsJ3NwbGljZScsJ19zY2hlZHVsZUNvbnNvbGVPdXRwdXRTZW5kJywnaGludHMnLCdjb21tZW50QXV0b0xvZycsJ3Z5VnJBJywnYWRkJywnaGFzJywnX25leHRJZCcsJ2lzT3BlbmVkSW5FZGl0b3InLCdoYXNWYWxpZERvY3VtZW50JywnaXNQYXRjaCcsJ19saW5lRGlmZmVyZW5jZXMnLCdfZGlmZk1hdGNoUGF0Y2gnLCdOZXdceDIwZG9jdW1lbnRceDIwb3JceDIwY29tcGxleFx4MjBkb2N1bWVudFx4MjBjaGFuZ2UnLCdfZmlsZUZvclByb2plY3QnLCdWeElyVycsJ1hSak5lJywnUlNVYVUnLCdfbGluZVJlcG9ydCcsJ29yZGVyJywnbG9hZCcsJ3RyaWdnZXInLCdpbnN0cnVtZW50JywnSFlKV2wnLCdvbm9wZW4nLCdvbmVycm9yJywncmVhZHlTdGF0ZScsJ0NMT1NFRCcsJ0Vycm9yXHgyMGNsb3NpbmdceDIwcnVubmluZ1Byb2plY3RzUmVxdWVzdGVkXHgyMHNvY2tldCcsJ2V4cGlyeURhdGUnLCdleHBpcmF0aW9uRGF0ZScsJ1pjQmdkJywnX3dvcmtlcnMnLCdfZXh0ZW5zaW9uJywncmVjeWNsZScsJ1dvcmtlclx4MjBpc1x4MjBub3RceDIwY3JlYXRlZFx4MjBpblx4MjB0aW1lLFx4MjByZWN5Y2xpbmdceDIwaXQnLCdodHRwczovL3dhbGxhYnlqcy5jb20vcHVyY2hhc2UnLCdceDIwbGljZW5zZVx4MjA8Yj5mcmVlXHgyMHVwZ3JhZGVzXHgyMHBlcmlvZFx4MjBoYXNceDIwZXhwaXJlZDwvYj4uXHgyMElmXHgyMHlvdVx4MjB3b3VsZFx4MjBsaWtlXHgyMHRvXHgyMHdvcmtceDIwd2l0aFx4MjB0aGVceDIwbGF0ZXN0XHgyMHZlcnNpb25ceDIwb2ZceDIwJywnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT5ceDIwdG9ceDIwdXBncmFkZVx4MjB5b3VyXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbmV3XHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJywnXHgyMj5hY3RpdmF0ZVx4MjBpdDwvYT4uJywnZXhwaXJlZExpY2Vuc2UnLCdleHBpcmluZ0xpY2Vuc2UnLCdZb3VyXHgyMCcsJ1x4MjBmcmVlXHgyMHVwZ3JhZGVzXHgyMHBlcmlvZCcsJ1x4MjA8Yj5ceDIwZXhwaXJlc1x4MjBvblx4MjAnLCc8L2I+Llx4MjBJZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjB3b3JrXHgyMHdpdGhceDIwdGhlXHgyMGxhdGVzdFx4MjB2ZXJzaW9uXHgyMG9mXHgyMCcsJ1x4MjBhbmRceDIwZnV0dXJlXHgyMHZlcnNpb25zXHgyMHJlbGVhc2VkXHgyMHdpdGhpblx4MjB0aGVceDIwbmV4dFx4MjAxMlx4MjBtb250aHMsXHgyMHBsZWFzZVx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInLCdceDIyPmFjdGl2YXRlXHgyMGl0PC9hPi5ceDIwQ2xpY2tceDIwPGFceDIwaHJlZj1ceDIyaHR0cHM6Ly9xdW9ra2Fqcy5jb20vZG9jcy9wcmV2aW91cy5odG1sP2V4cGlyeWRhdGU9JywnZ2V0VVRDRnVsbFllYXInLCdnZXRVVENNb250aCcsJ1x4MjI+aGVyZTwvYT5ceDIwZm9yXHgyMGhlbHAuJywnXHgyMGxpY2Vuc2UnLCdceDIwdHJpYWxceDIwcGVyaW9kXHgyMGlzXHgyMG92ZXIsXHgyMHRoYW5rc1x4MjBmb3JceDIwdHJ5aW5nXHgyMGl0XHgyMG91dC5ceDIwUGxlYXNlXHgyMHZpc2l0XHgyMDxhXHgyMGhyZWY9XHgyMicsJ1x4MjI+b3VyXHgyMHdlYnNpdGU8L2E+XHgyMHRvXHgyMHB1cmNoYXNlXHgyMGFceDIwbGljZW5zZS4nLCdleHBpcmVkVHJpYWxXaXRoTm9XZWJzaXRlUmVuZXdhbE9wdGlvbicsJ1x4MjBZb3VceDIwbWF5XHgyMGFsc29ceDIwPGFceDIwaHJlZj1ceDIyJywnXHgyMlx4MjBjbGFzcz1ceDIyJywnXHgyMj5hcnJhbmdlXHgyMGFceDIwbG9uZ2VyXHgyMHRyaWFsPC9hPlx4MjBmb3JceDIweW91cnNlbGZceDIwb3JceDIweW91clx4MjB0ZWFtLicsJ0dTWkx2JywnaW52YWxpZGF0ZUZhaWxlZEJ5TWVUZXN0cycsJ3N0YXJ0aW5nVHJpYWwnLCdJZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjB0cnlceDIwJywnV2FsbGFieScsJ1x4MjB3aXRob3V0XHgyMHNlZWluZ1x4MjB0aGlzXHgyMG1lc3NhZ2VceDIwYW5kXHgyMHdpdGhvdXRceDIwaGF2aW5nXHgyMHRvXHgyMHBlcmlvZGljYWxseVx4MjByZXN0YXJ0XHgyMHRvXHgyMGNvbnRpbnVlXHgyMHVzZSxceDIwcGxlYXNlXHgyMHJlcXVlc3RceDIwYW5ceDIwPGFceDIwaHJlZj1ceDIyJywnXHgyMj5leHRlbmRlZFx4MjB0cmlhbFx4MjBsaWNlbnNlPC9hPi48YnIvPklmXHgyMHlvdVx4MjBoYXZlXHgyMGFscmVhZHlceDIwcHVyY2hhc2VkXHgyMHRoZVx4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicsJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+Ljxici8+SWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwcHVyY2hhc2VceDIwYVx4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJywnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT4uPGJyLz4nLCdceDIwVVRDJywnWW91XHgyMGFyZVx4MjA8Yj5ub3RceDIwbGljZW5zZWRceDIwdG9ceDIwdXNlXHgyMFBST1x4MjBmZWF0dXJlc1x4MjBmb3JceDIwdGhpc1x4MjB2ZXJzaW9uXHgyMG9mXHgyMCcsJ1x4MjBiZWNhdXNlXHgyMGl0XHgyMHdhc1x4MjByZWxlYXNlZFx4MjBhZnRlclx4MjB5b3VyXHgyMGxpY2Vuc2VceDIwZXhwaXJlZDwvYj4uXHgyMFRvXHgyMGNvbnRpbnVlXHgyMHVzaW5nXHgyMFF1b2trYSxceDIweW91XHgyMGNhbjpceDIwPGFceDIwaHJlZj1ceDIyJywnXHgyMj5bUmVuZXddPC9hPixceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicsJ1x4MjI+W0FjdGl2YXRlXTwvYT4sXHgyMDxhXHgyMGhyZWY9XHgyMmh0dHBzOi8vcXVva2thanMuY29tL2RvY3MvcHJldmlvdXMuaHRtbD9leHBpcnlkYXRlPScsJ2dldFVUQ0RhdGUnLCdceDIyPltEb3duZ3JhZGVdPC9hPixceDIwb3JceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicsJ1x4MjI+W1VzZVx4MjBceDI3Q29tbXVuaXR5XHgyN1x4MjBFZGl0aW9uXTwvYT4uJywnX29ubGluZVZlcmlmaWNhdGlvblByb2Nlc3NpbmcnLCcucXVva2thJywnLnFsYycsJ2tleS5saWMnLCdTVFVHaCcsJ19maWxlRXhpc3RzU3luYycsJ2NvbmZpZy5qc29uJywnbGh3dGsnLCdIeUd6VycsJ2pSSmZ1JywndW5saW5rJywnL2xpY2Vuc2luZycsJ1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIwYW5ceDIwZXJyb3JceDIwb2NjdXJyZWRceDIwYXR0ZW1wdGluZ1x4MjB0b1x4MjBhY3RpdmF0ZVx4MjB5b3VyXHgyMGxpY2Vuc2UuXHgyMFlvdVx4MjBtdXN0XHgyMGJlXHgyMGNvbm5lY3RlZFx4MjB0b1x4MjB0aGVceDIwaW50ZXJuZXRceDIwaW5ceDIwb3JkZXJceDIwdG9ceDIwYWN0aXZhdGVceDIweW91clx4MjBsaWNlbnNlLlx4MjAoJywnUEJhY1gnLCd6ZXZ0QicsJ2xhc3RVcGRhdGUnLCd4SWxneCcsJ2VtYWlsJywnXHgyMGFjdGl2YXRpb25ceDIwY2hlY2tceDIwaXNceDIwYmVpbmdceDIwcGVyZm9ybWVkLlx4MjAnLCdob3N0bmFtZScsJ2Z0RWdaJywnSnJRWEInLCdBblx4MjBlcnJvclx4MjBvY2N1cnJlZFx4MjBhdHRlbXB0aW5nXHgyMHRvXHgyMGFjdGl2YXRlLlx4MjBZb3VceDIwbXVzdFx4MjBiZVx4MjBjb25uZWN0ZWRceDIwdG9ceDIwdGhlXHgyMGludGVybmV0XHgyMGluXHgyMG9yZGVyXHgyMHRvXHgyMGFjdGl2YXRlXHgyMHlvdXJceDIwbGljZW5zZS5ceDIwKCcsJ1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIwYW5ceDIwZXJyb3JceDIwb2NjdXJyZWRceDIwYXR0ZW1wdGluZ1x4MjB0b1x4MjBhY3RpdmF0ZS5ceDIwWW91XHgyMG11c3RceDIwYmVceDIwY29ubmVjdGVkXHgyMHRvXHgyMHRoZVx4MjBpbnRlcm5ldFx4MjBpblx4MjBvcmRlclx4MjB0b1x4MjBhY3RpdmF0ZVx4MjB5b3VyXHgyMGxpY2Vuc2UuXHgyMCgnLCdfbGluZU51bWJlcicsJ2xpbmVTaGlmdCcsJ2xhc3RQcm9jZXNzZWQnLCdceDIwbGljZW5zZXNceDIwd2VyZVx4MjBmb3VuZFx4MjBmb3JceDIweW91clx4MjBlbWFpbFx4MjBhZGRyZXNzXHgyMCgnLCcpLFx4MjBwbGVhc2VceDIwdHJ5XHgyMGVudGVyaW5nXHgyMHlvdXJceDIwZW1haWxceDIwYWRkcmVzc1x4MjBhZ2Fpbi4nLCdceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMG5vXHgyMGxpY2Vuc2VzXHgyMHdlcmVceDIwZm91bmRceDIwZm9yXHgyMHlvdXJceDIwZW1haWxceDIwYWRkcmVzc1x4MjAoJywnTk9fUFJPRFVDVCcsJ05vXHgyMCcsJ1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIwbm9ceDIwbWF0Y2hpbmdceDIwcHJvZHVjdFx4MjB3YXNceDIwZm91bmRceDIwZm9yXHgyMHlvdXJceDIwZW1haWxceDIwYWRkcmVzc1x4MjAoJywnXHgyMGFjdGl2YXRpb25ceDIwcmVxdWlyZXNceDIwY29uZmlybWF0aW9uXHgyMGFuZFx4MjB3aWxsXHgyMGJlXHgyMHN0YXJ0ZWRceDIwYWZ0ZXJceDIwYWN0aXZhdGlvblx4MjBjaGVja1x4MjBoYXNceDIwYmVlblx4MjBjb21wbGV0ZWQuJywnLlx4MjBZb3VceDIwbWF5XHgyMGZvcmNlXHgyMGFceDIwcmVmcmVzaFx4MjBvZlx4MjB5b3VyXHgyMGxpY2Vuc2VceDIwYnlceDIwcmUtZW50ZXJpbmdceDIweW91clx4MjBlbWFpbFx4MjBhZGRyZXNzXHgyMGluXHgyMHRoZVx4MjBtYW5hZ2VceDIwbGljZW5zZVx4MjBkaWFsb2cuJywnXHgyMHJlcXVpcmVzXHgyMGFjdGl2YXRpb24uXHgyMFBsZWFzZVx4MjByZS1lbnRlclx4MjB5b3VyXHgyMGVtYWlsXHgyMGFkZHJlc3NceDIwdG9ceDIweW91clx4MjAnLCdceDIwbWFuYWdlXHgyMGxpY2Vuc2VceDIwZGlhbG9nLicsJ1FQa2tBJywnX2xpc3RlbmVycycsJ2VyWnZTJywnVG9ceDIwa2VlcFx4MjB0cmlhbGluZ1x4MjAnLCcsXHgyMHBsZWFzZVx4MjA8Yj5yZXN0YXJ0XHgyMHlvdXJceDIwZWRpdG9yPC9iPlx4MjBvclx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInLCdceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjBwdXJjaGFzZVx4MjBhXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjB0cnlceDIwJywnXHgyMHdpdGhvdXRceDIwdGhpc1x4MjBsaW1pdGF0aW9uLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyJywnXHgyMj5yZXF1ZXN0XHgyMGFuXHgyMGV4dGVuZGVkXHgyMHRyaWFsXHgyMGxpY2Vuc2U8L2E+Ljxici8+SWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRc4oCLeDIwdGhlXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJywnTEZYSXQnLCdfc3RvcHBlclRpbWVvdXQnLCdVS3dteScsJ19hbGxvd0FwcHJveGltYXRlUmFuZ2VTZWFyY2gnLCdfbGluZVRvUmFuZ2VNYXAnLCdzdGFydGluZ09uVGhlTGluZScsJ1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIweW91XHgyMGRpZFx4MjBub3RceDIwY2hvb3NlXHgyMHRvXHgyMGNvbnRpbnVlXHgyMHlvdXJceDIwdHJpYWxceDIwc2Vzc2lvbi5ceDIwVG9ceDIwa2VlcFx4MjB0cmlhbGluZ1x4MjAnLCcsXHgyMHlvdVx4MjBjYW5ceDIwcmVzdGFydFx4MjBvclx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInLCdceDIwdHJpYWxceDIwc2Vzc2lvbixceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCdceDIyPmNsaWNrXHgyMFx4MjJDb250aW51ZVx4MjI8L2E+Ljxici8+SWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwdHJ5XHgyMCcsJ1x4MjB3aXRob3V0XHgyMHJlY2VpdmluZ1x4MjB0aGVzZVx4MjB3YXJuaW5ncyxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMicsJ1x4MjI+cmVxdWVzdFx4MjBhblx4MjBleHRlbmRlZFx4MjB0cmlhbFx4MjBsaWNlbnNlPC9hPi48YnIvPlZpc2l0XHgyMDxhXHgyMGhyZWY9XHgyMicsJ1x4MjI+b3VyXHgyMHdlYnNpdGU8L2E+XHgyMHRvXHgyMHB1cmNoYXNlXHgyMGFceDIwbGljZW5zZS48YnIvPklmXHgyMHlvdVx4MjBoYXZlXHgyMGFscmVhZHlceDIwcHVyY2hhc2VkXHgyMHRoZVx4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicsJy4uLy4uLy4uJywnZG9jdW1lbnRVcGRhdGVzJywnMndsYScsJ3VleScsJ2FtRE1VJywnbm90aWZpY2F0aW9uJywnc3RvcHBlZCcsJ19lbWl0RXhwaXJlZExpY2Vuc2UnLCdibUlsUycsJ3RBUk1DJywnX3Rlc3REZWNsYXJhdGlvbkxpbmVNYXAnLCdkZWNsYXJhdGlvbkxpbmUnLCd5VXdQRicsJ09yVGNTJywnX2lzRmFpbGluZycsJ19maWxlSWQnLCdfcmFuZ2UnLCdfdGV4dCcsJ192YWx1ZUJhZycsJ190eXBlJywnX2V4cGVjdGVkJywndGVzdElkJywnTXBqam8nLCd2blJEVycsJ190ZXN0SWQnLCdfc2Vzc2lvbnMnLCdfcnVuUHJpb3JpdHknLCdmaWxlSWQnLCdsRUZRRycsJ3NldFJhbmdlJywnUGdmQmQnLCdjYWxsU3RhY2snLCdkZWxheVN0YWNrTWFwcGluZycsJ19ub3RNYXBwZWRTdGFja0VudHJpZXMnLCdwcm9wcycsJ2NhcHBlZCcsJ3dzTGVBJywnc3VtbWFyeScsJ19hY2N1bXVsYXRlVGVzdEZpbHRlclN0YXRlRm9yRmlsZXMnLCdfY3JlYXRlVGVzdEZpbHRlclRvdGFsQ292ZXJhZ2UnLCd1aTpzdW1tYXJ5JywnX3VwZGF0ZUhpZXJhcmNoeVRlc3RzJywndWk6dGVzdEZpbHRlckNoYW5nZWQnLCdoaWVyYXJjaHknLCdzdGF0ZScsJ19maWxlJywnanNGdUYnLCdfcmFuZ2VDb25zb2xlTG9nJywnX3Rlc3RNYXAnLCdzRW5lcCcsJ2ZleFZPJywnTm9ceDIwZmlsZVx4MjB3aXRoXHgyMGlkXHgyMCcsJ1x4MjBmb3VuZCcsJ19sb2FkRmlsZVdpdGhDYWNoZScsJ2lzQXJyYXknLCdfYWN0dWFsJywnek9BVVcnLCdZWEJjRicsJ2ZMRldkJywnX2l0ZW1zJywnX2hpdHMnLCdoaXRzJywnaW5pdCcsJ19zdGFydENvbHVtbicsJ19lbmRMaW5lJywnX2VuZENvbHVtbicsJ19udW1PZkNvdmVyaW5nVGVzdHMnLCdfaXNDb3ZlcmVkJywnX2NvdmVyaW5nVGVzdE1hcCcsJ1FSd2RMJywnX2lzQ292ZXJlZEJ5Tm90VGVzdHMnLCdfc2V0SXNDb3ZlcmVkJywnX3N0YXJ0TGluZScsJ3JhbmdlS2V5JywnZW5kTGluZScsJ0dha0pEJywndVF0c1cnLCdlbmRDb2x1bW4nLCdmYWlscycsJ19nbG9iYWxFcnJvcnMnLCdlbmxJcycsJ1ZMZXZKJywnc2V0Q29uc29sZUxvZycsJ19jb25zb2xlTG9nJywnY29uc29sZUxvZycsJ3hRTnhZJywnaXNEaXNwb3NlZCcsJ19pc0Rpc3Bvc2VkJywnZnlweVQnLCdqTVBMeCcsJ19mYWlsZWRCeU1lVGVzdHMnLCdfZmFpbGVkT25NZVRlc3RzJywnWmFDVk4nLCdUV1hKcScsJ2ZsYXR0ZW4nLCdmYWlsc1Rlc3QnLCdub3RDb3ZlcmVkQnknLCdGS05JVycsJ3lKZVFNJywncmFuZ2VDb3ZlcmFnZUNoYW5nZWQnLCdfZnJlc2gnLCdfcmVtb3ZlQ2F0ZWdvcnlPclRlc3QnLCdjb3ZlcmluZ1Rlc3RzJywnenZLZnonLCdpc01hdGNoJywnYWJzb2x1dGUnLCdwbGF0Zm9ybURlcGVuZGVudFBhdGgnLCdpc0NvdmVyZWRCeVRlc3RzJywncUdRZ2InLCdhdHRhY2hlZFRvU291cmNlRmlsZScsJ3VwZGF0ZUZyb20nLCdfaW52YWxpZEZhaWxlZEJ5TWVUZXN0cycsJ0RRZGlLJywncmZPY3AnLCd6dm5iVicsJ1V6eXNYJywncWVoREcnLCdfdXBkYXRlVGVzdCcsJ191cGRhdGVUZXN0V2l0aFBvc3NpYmxlRmFpbGVkT25UaGVSYW5nZScsJ1NNSWVQJywnSHFyUncnLCdjbG9zZXJUb1RoZUxpbmVUaGFuJywnQmFOQXonLCdCU2d5cicsJ3hzUlp3JywnX19yZWFkJywnWWxmbE4nLCd5bVJxQycsJ0ZXeEdXJywnYWRkUmFuZ2UnLCcuL2RvY3VtZW50TGluZScsJy4uL3NoYXJlZC9lbnVtcycsJ19saW5lU2hpZnRPckludmFsaWRhdGlvblNpbmNlTGFzdFVwZGF0ZScsJ1ZXQ1ZCJywncmVtb3ZlUmFuZ2VzJywnaGFzUmFuZ2VzJywndXBkYXRlTGluZURhdGEnLCdjWmtoWCcsJ1BkdXhvJywnX2FjdGl2ZScsJ190cycsJ191c2VkJywnTkdzYnAnLCd0SVJscScsJ3NldEZpbGUnLCdhZGRlZCcsJ2lzVGVzdEZpbGUnLCdfZ2V0VGVzdERlY2xhcmF0aW9uQnlMaW5lTnVtYmVyJywnZXJyb3JTb3VyY2VUZXh0JywnZXJyb3JTb3VyY2UnLCdmdWxseUNvdmVyZWQnLCd2dmpKRicsJ1ZKa0JRJywnX2tleXMnLCdhQ21ISCcsJ3R2dVJTJywnY29uc29sZUxvZ1RleHQnLCdsb25nQ29uc29sZUxvZ1RleHQnLCdpbnZhbGlkYXRlTGluZXMnLCdzaGlmdExpbmVzJywndXFUcGwnLCdHeWFhUicsJ3lDU0pXJywnbGluZVN0YXRlJywnTkdaRFMnLCdXQVNGVCcsJ3NvdXJjZUNvbnRlbnRGb3InLCdzZXRTb3VyY2VDb250ZW50JywnUGd2UFUnLCdfY29uc29sZUxvZ1RleHQnLCd1c2VkJywnZmpBZmcnLCdraXFFeScsJ2hGcG1aJywnV0VkZmknLCdfYnVpbGRSYW5nZUVycm9yU291cmNlVGV4dCcsJ2lzT25FcnJvclBhdGgnLCdfYWNjdW11bGF0ZVRlc3RGaWx0ZXJTdGF0ZUZvclJhbmdlJywnX2Rpc3BsYXlSYW5nZXNMaW5lTWFwJywnX21hcFJhbmdlVG9EaXNwbGF5UmFuZ2UnLCdfdHJ1bmNhdGVDb25zb2xlTG9nVGV4dCcsJ19yZXNvbHZlVGVzdEZpbHRlclN0YXRlJywncWpHdE8nLCdfcmVzb2x2ZU1lc3NhZ2VGaWx0ZXJTdGF0ZScsJ3NKZ1hkJywnX3dhdGNoZXInLCdfd2l0aE5vcm1hbGl6ZWRQYXRoJywnX2ZpbGVBZGRlZCcsJ2NoYW5nZScsJ19maWxlRGVsZXRlZCcsJ19vcmRlcmVkUmFuZ2VzJywnakxCc1MnLCd1SnBsZCcsJ19hY2N1bXVsYXRlUmFuZ2VDb25zb2xlTG9nVGV4dCcsJ3JLb2JMJywnXHgyMGluXHgyMGZpbGU6Ly8vJywnX2NvcnJ1cHRlZENhY2hlJywnaW52YWxpZGF0ZUNhY2hlJywnX3JlbW92ZUFuc2knLCdfbWFwU3RhY2tFbnRyaWVzJywnX25vcm1hbGl6ZWRMb2NhbFJvb3QnLCdURk51YScsJ3hXTlpnJywnelhzZWQnLCdceDIyTGl2ZVx4MjBDb21tZW50c1x4MjBhbmRceDIwTGl2ZVx4MjBWYWx1ZVx4MjBEaXNwbGF5XHgyMGZlYXR1cmVzXHgyMG9ubHlceDIwc3VwcG9ydGVkXHgyMGluXHgyMFx4MjdQcm9ceDI3XHgyMGVkaXRpb24sXHgyMHNlZVx4MjBodHRwczovL3F1b2trYWpzLmNvbS9wcm8vXHgyMGZvclx4MjBtb3JlXHgyMGRldGFpbHNceDIyJywnRXJlV0onLCd0WmhGYScsJ19pZCcsJ190cnVuY2F0ZU1lc3NhZ2UnLCdvcVVoUicsJ1hCanBrJywnLi4uJywnX2NsZWFuU3RyaW5nJywnc25hcHNob3QnLCdKc1B6VCcsJ252dXJiJywnRFBLRmgnLCdGbEtFWCcsJ3V6clVFJywnbGFzdCcsJ1tlbXB0eVx4MjBzdHJpbmddJywndGhlblx4MjAnLCdceDIwXHgyMC4uLlx4MGEnLCd5WEVSYScsJ2RDWXNWJywnZXJyb3JQYXRoJywncGFydGlhbGx5Q292ZXJlZCcsJ25CWWlBJywnY2xvc2VzdFJhbmdlJywnX2luaXRpYWxpemVUZXN0RmlsdGVyU3RhdGUnLCdFaUdBdicsJ2FkZENvbnNvbGVNZXNzYWdlJywnX2ZpbmFsaXplVGVzdEZpbHRlclN0YXRlJywncUlvbXEnLCd2bG9TSCcsJ2RlY2xhcmF0aW9uQ29sdW1uJywnX21hcEVycm9ycycsJ1RIcmprJywndGVzdEtleScsJ2FsbE5vdENvdmVyZWQnLCdfbWVzc2FnZScsJ19zbmFwc2hvdCcsJ0ZYb3pLJywnT1FCclInLCdibWNFaycsJ1FlU1BYJywnLi4vLi4vdXRpbHMnLCdfbG9nJywnX2RlY2xhcmF0aW9uTGluZScsJ2RlY2xhcmF0aW9uJywnX2RlY2xhcmF0aW9uQ29sdW1uJywnX3RpbWUnLCdfc2xvdycsJ3Nsb3cnLCdfYnVpbGRGdWxsTmFtZUFuZFBhdGgnLCdfY292ZXJlZFJhbmdlcycsJ19jb3ZlcmVkRmlsZXMnLCdfZXJyb3JTdGFja01hcCcsJ3N0YWNrRW50cnknLCdHS2xTZycsJ1FNclp3JywnZ1VpUFknLCd3aElXRycsJ2RlYnVnVGVzdCcsJ19mdWxsTmFtZScsJ3hIeEhLJywndXdTcXMnLCdIZWdtaCcsJ19jb25zb2xlTWVzc2FnZXMnLCdjb25zb2xlTWVzc2FnZXMnLCd0TFJ4TicsJ1ljWVNWJywncmVwZWF0Jywnc2V0VGVzdEZpbGUnLCdvYnNvbGV0ZScsJ19zdGFydFJhbmdlJywnX2Vycm9yUmFuZ2VzTm90Q292ZXJlZEJ5VGVzdCcsJ29DY01UJywnU1ZtdWEnLCdJZVJabCcsJ0x3Z25WJywnVFhOZVInLCdDcmVhdGluZ1x4MjBwYWdlXHgyMGZvclx4MjB3b3JrZXJceDIwIycsJ19jcmVhdGVQYWdlJywnc3hhZHMnLCdPWlVKYicsJ2NvbXBsZXRlSW5pdGlhbGl6YXRpb24nLCdlc01rRScsJ3ZiVElBJywnZnZ4SGEnLCdmTUNZVScsJ1FvcFNmJywnYnZySkcnLCdFcGt4bScsJ2NvbnRhaW5zJywnX25vcm1hbGl6ZWRXYWxsYWJ5U2VydmVyUGF0aCcsJ19leHRyYWN0Tm9kZVN0YWNrTGluZUNvbnRleHQnLCdpc0xldmVsVXBSZWxhdGl2ZVBhdGgnLCdsdHJpbScsJ1VDeWdtJywnSFZWR1UnLCdxdUtFVycsJ19yZXBvcnROb3JtYWxSdW4nLCdQWGNsdScsJ2RlZmluZVByb3BlcnR5JywnS0FQZlonLCdEYkljVycsJ0pUUWFHJywnTERLeUwnLCdTRlRpVicsJ19fZ2VuZXJhdG9yJywnUkR1cFInLCdfbG9hZGluZ1NlcXVlbmNlJywnX2V4ZWN1dGluZ1Rlc3RMb2cnLCdhbGxvd05vdE1hcHBlZFN0YWNrTGluZXMnLCdrdGphaycsJ2xPS0VMJywnX3VybFV0aWwnLCdkYXRhOicsJ3BhdGhuYW1lJywnY2hhckF0Jywnc2VhcmNoJywnRktnRXEnLCduSGR3eicsJ3NOYmRVJywnbWxDU0YnLCdwb25nJywnY2hhbm5lbCcsJ3JlbW92ZUxpc3RlbmVyJywnX2VuY29kZUludGVnZXInLCdCTENXcScsJ0dKTVlOJywnaWlqVmQnLCdXWXlrbycsJ0RJeG1nJywnQ0hPS0lEQVJfUFJJTlRfRlNFVkVOVFNfUkVRVUlSRV9FUlJPUicsJ0ZTV2F0Y2hlcicsJy4uL3NoYXJlZC91dGlscycsJ3RIa2RSJywnd3JpdGVGaWxlJywnX3JlbGVhc2VkSWRzJywnX2luaXRpYWxJZHNCeVBhdGgnLCdnZW5lcmF0ZScsJ2RlbGV0ZScsJ3Bpa2NSJywnSU9sVU0nLCdfaXNSZWFkeScsJ19maWxlc0J5UGF0aCcsJ19maWxlc0J5SWQnLCdlVkJrUScsJzY1aHgnLCdScWRteCcsJ2xydS1jYWNoZScsJ2NNYXBtJywncmVhZEZpbGVQcm9taXNlJywnX3JlYWxwYXRoU3luYycsJ3JlYWxwYXRoU3luYycsJ3NldHVwJywnX3NldHRpbmdzJywnX2ZpbGVJZEdlbmVyYXRvcicsJ1hHVmZYJywnZUtjd2InLCdfbGluZScsJ3BhdHRlcm4nLCdpZ25vcmUnLCdnbG9iJywnZmlsZVNjYW5UaW1lb3V0JywnZGFyd2luJywnbGludXgnLCdwbGF0Zm9ybScsJ25vcm1hbGl6ZScsJ2lzRmlsZScsJ19pc0VudGl0eUV4Y2x1ZGVkJywncmVsYXRpdmUnLCdfaXNHbG9iJywnWW91clx4MjBwcm9qZWN0XHgyMGZpbGVceDIwcGF0aFx4MjBsb29rc1x4MjBsaWtlXHgyMGFceDIwdmFsaWRceDIwZ2xvYlx4MjBwYXR0ZXJuXHgyMGFuZFx4MjBjb250YWluc1x4MjBnbG9iXHgyMGNoYXJhY3RlcnMsXHgyMGxpa2VceDIwYHtgLFx4MjBgfWAsXHgyMGBbYCxceDIwYF1gLFx4MjBgKGAsXHgyMGApYCxceDIwYCpgLFx4MjBgfGA7XHgyMGl0XHgyMG1heVx4MjBjYXVzZVx4MjB0aGVceDIwcHJvamVjdFx4MjBmaWxlXHgyMHNjYW5uaW5nXHgyMHRvXHgyMGZhaWwsXHgyMHBsZWFzZVx4MjByZW1vdmVceDIwZ2xvYlx4MjBjaGFyYWN0ZXJzXHgyMGZyb21ceDIwdGhlXHgyMHByb2plY3RceDIwcGF0aC4nLCdPVUxMcicsJ05MRERkJywnbW9kdWxlJywnZ2V0VmVyc2lvbicsJ3h5TmxJJywndWprbXknLCc8c2VlXHgyMHRoZVx4MjBkaWZmXHgyMGluXHgyMHF1b2trYVx4MjBvdXRwdXQ+JywnPGRpZmZceDIwbm90XHgyMHN1cHBvcnRlZFx4MjBmb3JceDIwcGFyYW1ceDIwdHlwZXM+Jywnc2V0UmFuZ2VDb25zb2xlTG9nJywndHJpbVJpZ2h0Jywna2V5cycsJ0xvb2tzXHgyMGxpa2VceDIwbm9uZVx4MjBvZlx4MjB0aGVceDIwcGF0aHNceDIwc3BlY2lmaWVkXHgyMGluXHgyMHlvdXJceDIwZmlsZXMvdGVzdHNceDIwbGlzdFx4MjBleGlzdFx4MjBpblx4MjAnLCdXdEJaaCcsJ3VXbUxSJywnZDE5JywncHlqTEsnLCdGaWxlXHgyMHN5c3RlbVx4MjBzY2FuXHgyMGhhc1x4MjBmaW5pc2hlZFx4MjBieVx4MjB0aW1lb3V0JywneXVkTlAnLCdxaE1nZCcsJ2RlYm91bmNlJywnc29tZScsJ3JlcGxhY2VtZW50cycsJ2ZvckVhY2gnLCdvcHRpb25hbCcsJ2V4ZWMnLCdvV2F0eCcsJ3ZKZ05hJywnaW5kZXgnLCdyZXBvcnRDb25zb2xlT3V0cHV0JywncmVzb2x2ZUxvZ0VudHJ5UmFuZ2UnLCdfZW1pdEludGVybmFsJywncmVwb3J0SW50ZXJtZWRpYXRlUmVzdWx0JywnX2NhbGN1bGF0ZU51bWJlck9mUGFyYWxsZWxXb3JrZXJzJywnX21pbldvcmtlcnMnLCdtYWluTW9kdWxlJywnX3plcm9Db25maWdKZXN0JywnbG9hZEZpbGVzJywnX2VtaXRGaWxlQ2hhbmdlJywnaGFkVHJhbnNpZW50Q2hhbmdlJywnS2ZTdUonLCdfbG9hZEZpbGUnLCdfZW5zdXJlUmVhZEZpbGVXaXRoQ29ycmVjdENvbnRlbnQnLCdJQmxuSicsJ0Vycm9yXHgyMHdoaWxlXHgyMGNyZWF0aW5nXHgyMHdvcmtlclx4MjAjJXM6XHgyMCVzJywnY2dLaFInLCdkalFFcScsJ3Zqa3pKJywnV2dYeEsnLCdLbFpmRCcsJ0dzVktPJywnbWV0YWRhdGEnLCd0b0xvd2VyQ2FzZScsJ2lzQ292ZXJhYmxlJywnZXh0ZW5zaW9ucycsJ1V3THd5JywnX21hcFRlc3RzJywnbGluZUNvdmVyaW5nVGVzdHNPcmRlcmVkQnlGYWlsaW5nVGhlbkRhdGUnLCdfZmlsZUNoYW5nZWQnLCdGaWxlXHgyMGNoYW5nZWQ6XHgyMCVzJywnT0pyc1onLCd3UFN5QicsJ2lzVGVzdCcsJ19idWlsZEFycmF5VGVzdFN0cnVjdHVyZScsJ3JUR3doJywnZXhpc3RzU3luYycsJ05vXHgyMG1ldGFkYXRhXHgyMGZvclx4MjBkZWxldGVkXHgyMGZpbGVceDIwZm91bmQ6XHgyMCVzJywnbGlua2VkUGF0aCcsJ1hacnN0JywnU0hMRmgnLCdjbG9uZScsJ3dNQlhOJywncHdSWHAnLCdpbjp0cmFjZXIucmVzdW1lJywnX3Jlc2V0VHJhY2VDb250ZXh0JywnY3VycmVudEZyYW1lJywncGF0aE1hdGNoZXNQYXR0ZXJuJywncmVnZXhwJywnX2dldEJhc2VEaXInLCdFVFJXdycsJ2RtcCcsJ3BhdGNoX2Zyb21UZXh0JywncGF0Y2hlcycsJ2RpZmZzJywnQ3FRZ1UnLCdzdGFydDEnLCdsZW5ndGgxJywnbGVuZ3RoMicsJ2JueGhwJywndWpYbW4nLCdrd1ZEYycsJ0Z0Wmd4JywnaFVLVFQnLCd1RVdLZicsJ0JhbFBiJywnakVrYk8nLCcuL2Jyb3dzZXJHbG9iYWxzJywnc2VsZicsJ3RvcCcsJ3BhcmVudCcsJ2NvbmZpcm0nLCdibHVyJywnb3BlbicsJ3Byb21wdCcsJy4vdHJhY2tlZFNvdXJjZUZpbGUnLCcuL2V4ZWN1dGVkVGVzdCcsJy4vY29uc29sZU1lc3NhZ2UnLCcuL2Vycm9yRW50cnknLCcuL21lc3NhZ2VGaWx0ZXInLCcuL2ZpbHRlcicsJ19maWxlSWRCeVBhdGgnLCdmaWxlSWRCeVBhdGgnLCdfY2xpZW50JywnX2Fsd2F5c1NlbmRBbGxMaW5lcycsJ1ZTQ29kZScsJ0ludGVsbGlKJywnX2FjdGl2ZVRlc3RGaWxlQ292ZXJhZ2VTdXBwb3J0ZWQnLCdfZmlsZXMnLCd0ZXN0RmlsdGVySW1wbGljaXRseUNoYW5nZWQnLCd0cmFjZVRlc3RCZWluZ05hdmlnYXRlZCcsJ19jb3ZlcmFnZScsJ190ZXN0UnVuR2xvYmFsTG9ncycsJ3Byb2plY3QnLCdnZXRMYXRlc3RPcmlnaW5hbEZp4oCLbGVDb250ZW50QnlQYXRoJywnMTZ4JywnQmZWRk0nLCdOSnpaVScsJ3Rlc3RSdW5SZVF1ZXVlZCcsJ2V4dGVuZGVkQ29yZScsJ0hPeXRBJywnWkp3d2MnLCdGYWlsZWRceDIwdG9ceDIwaGFuZGxlXHgyMFx4MjcnLCdceDI3XHgyMGV2ZW50Olx4MjAnLCd0ZXN0RmlsdGVyRXhwbGljaXRseUNoYW5nZWQnLCdjb25maWdGaWxlUGF0aCcsJ1ZiaHplJywnZGhHdWwnLCdDemF1ZCcsJ3NvdXJjZUZpbGUnLCduSlZ5dycsJ3Rlc3RCeUtleScsJ0J6Y3NvJywnZmlsZUNvbnRlbnRCeVBhdGgnLCdMaGxFUScsJ3Rlc3RzQnlSZXF1ZXN0JywnTGRxb0onLCd4cFVLQScsJ2xpbmVUZXN0cycsJ1BXUmRRJywnc3RvcE5hdmlnYXRpb24nLCdJZVFrbycsJ29waXllJywnUUlsRkgnLCd5V2RodycsJ193c3MnLCd2dVh5dScsJ0xod056JywnX2J1aWxkTG9jYXRpb24nLCdvQ2VKVycsJ3N1cHByZXNzU2V0dGluZ1RyYWNlQ29udGV4dCcsJ3Jlc3RhcnQnLCdiYWNrJywnZmluZEluZGV4Jywnc2VxdWVuY2UnLCd4aWpTWCcsJ3pEeERaJywnX3RyYWNlU3RlcE5vdEZvdW5kJywnbGluZVJhbmdlcycsJ2RNRldhJywncmFuZ2VzJywnc2V0RmlsZVJvb3QnLCdOSnlIaScsJ3ZpZmZkJywnc1RnSGMnLCdpbjpjb25uZWN0ZWQnLCdfZmluZENsb3Nlc3RWaXNpYmxlU3RlcCcsJ3N0ZXAnLCdfZmluZEJlc3RNYXRjaGluZ1N0ZXAnLCdhYnMnLCdVbmxpVCcsJ0NMdHl4JywndHJpYWxFbmRlZCcsJ1RvXHgyMGNvbnRpbnVlXHgyMCcsJ19wcm9jZXNzQ2FsbFN0YWNrJywnVGpEYlYnLCdMREZDbicsJ3N0YWNrTWFwcGVkJywnSFNOZWInLCdiU0pyTScsJ3VLTk9pJywnclVtbksnLCdvcGVuZWREb2N1bWVudExpbmVSYW5nZXMnLCdFcnJvclx4MjB3aGlsZVx4MjBzdWJzY3JpYmluZ1x4MjB0b1x4MjBwcm9jZXNzXHgyMFNURE9VVDpceDIwJywnTXl4WWonLCdER3NKSycsJ19sYXRlc3RGYWlsaW5nVGVzdEJ5RmlsZUFuZExpbmUnLCdmYWlsaW5nVGVzdCcsJ2JRUXV1JywnNmZhNmI4ODdlZGZmYjJjMTEzZjg0ZjE3OTY0OWNiYjknLCdsYXRlc3RGYWlsaW5nVGVzdCcsJ1pPSkZjJywnT01ZSm8nLCdfZXhlY3V0aW5nVGVzdCcsJ19wcm9jZXNzVGVzdExvZycsJ2hvb2snLCdza2lwcGVkJywnWyVzXVx4MjBUZXN0XHgyMGV4ZWN1dGVkOlx4MjAnLCdhZGRUb1Rlc3RMb2cnLCdFeGVjdXRpb25ceDIwcHJvZ3Jlc3M6XHgyMCcsJ1x4MjB0ZXN0cycsJ1pIQ3JPJywnX3J1bkVycm9yJywncW5NcnknLCdEYlJrVCcsJ09DT25sJywndG90YWxOdW1iZXInLCdmYWlsaW5nTnVtYmVyJywnT2hKdlgnLCdIaXp5QScsJ1VZVEZwJywnUGplbWgnLCdrQXhGUScsJ2lRakdSJywnTnJBblcnLCdsV2VzUScsJ293blRlc3RzJywnVUF3Wk4nLCdfZXhlY3V0aW5nRmlsZXMnLCd0ZXN0RmlsdGVyVGVzdFNlbGVjdGlvblJlcXVlc3RlZCcsJ3BMR1VUJywnX2dldE5ldHdvcmtBZGRyZXNzZXMnLCd5YXVhSCcsJ3RJc3ZKJywnd09mTWInLCdYeU1tZicsJ1RHZkZnJywnY2xlYXInLCdub3RpZnlBYm91dFRlc3RGaWx0ZXJDaGFuZ2VzJywnVkxqaXInLCdrWk9KbycsJ1Z3a1dxJywnYW5IQWEnLCdSSEVrcCcsJ2FsU0ZvJywncmFuZG9tJywnclpEU2MnLCdmaWxlQ2hhbmdlZCcsJ19hZGRGaWxlJywnZmlsZUFkZGVkJywndFdVR2cnLCdfZGVsZXRlRmlsZScsJ19lbWl0QWN0aXZlVGVzdEZpbGVDb3ZlcmFnZScsJ05IdWtkJywnX3JlcG9ydEdsb2JhbEVycm9ycycsJ2ZpbGVEZWxldGVkJywnZ2RCQ2wnLCdzeW5jJywnb3B0cycsJ191cGRhdGVBZmZlY3RlZEZpbGVzJywnbnpITVcnLCdfZ2V0QWN0aXZlVGVzdEZpbGVDb3ZlcmVkRmlsZXMnLCdXb3NVQScsJ1RXWkNtJywncGFyZW50RmlsZVBhdGgnLCdjaGlsZEZpbGVQYXRoJywnbnVtYmVyT2ZGdW5jdGlvbnMnLCdpbk9yaWdpbmFsRmlsZXNDYWNoZScsJ2NoYW5nZVBvc2l0aW9uJywncmVsYXRlZEZpbGVzV2l0aFRlc3RzJywnaGFkR2xvYmFsRXJyb3JzUHJldmlvdXNSdW4nLCdydW5BbGxUZXN0c0luQWZmZWN0ZWRUZXN0RmlsZScsJ2Z1bGxSdW4nLCdhbGxvd2VkVG9SdW5DaGFuZ2VkVGVzdE9ubHknLCdjaGFuZ2VTdGFydCcsJ293Q0dGJywnYmFzZW5hbWUnLCdhY3RpdmVUZXN0RmlsZUNvdmVyYWdlQ2hhbmdlZCcsJ3Byb2plY3Q6ZmlsZU1hcmtlcnNJbnZhbGlkJywnX21hcE1lc3NhZ2UnLCdaUmxGTycsJ19yZXBvcnRGYWlsZWRSdW4nLCd0ZXN0UnVuRXJyb3InLCdwcm9qZWN0OnRlc3RSdW5TdGFydGVkJywncHJvamVjdDpydW5uaW5nVGVzdHMnLCdoYXNBbnlQZW5kaW5nTm9uVHJhbnNpZW50RmlsZUNoYW5nZXMnLCdjaGFuZ2VSdW4nLCdjb2RlQ2hhbmdlZCcsJ191c2VyUmVxdWVzdGVkVHJhY2VSdW4nLCd1c2VyUmVxdWVzdGVkSW5pdGlhbFRyYWNlUnVuJywncHJvamVjdDp0ZXN0UmVzdWx0cycsJ3lWVlhvJywnX2FkZGl0aW9uYWxIZWFkZXJNZXNzYWdlJywnYWRkaXRpb25hbEhlYWRlck1lc3NhZ2UnLCd3aURCZycsJ2JwRWtmJywndGV4akknLCdobUFhRScsJ2RpZmYnLCd5T09rQicsJ3R5aGlRJywnaGdJYVYnLCdzaW5nbGVUZXN0Q2hhbmdlZCcsJ190ZXN0c1JlbW92ZWQnLCdyZW1vdmVBbGxUZXN0cycsJ05DbkRkJywnX2ludGVybmFsJywnTVR3c04nLCcuL2VsZWN0cm9uUnVubmVyLmpzJywnY2hyb21lJywnLi9jaHJvbWVSdW5uZXIuanMnLCcuL3BoYW50b21SdW5uZXIuanMnLCcuL25vZGVSdW5uZXIuanMnLCdfdGVzdEFkZGVkJywnRXZyY00nLCdGb2JqRCcsJ191cGRhdGVGaWxlUmFuZ2VzJywnRWtTTmUnLCdFbUZmUycsJ01xVXBaJywnY3JlYXRlS2V5JywnX3Byb2Nlc3NUcmFjZVRlc3RzJywnZ1B5ZFYnLCd6VFBuSScsJ0JGcUxwJywnX3N0YXRlJywndGVzdHNFeGVjdXRlZCcsJ0ZoQ3h2JywnZG90JywnX25vQ292ZXJhZ2VDYWxjdWxhdGlvbicsJ2ZpbGVzV2l0aENvdmVyYWdlQ2FsY3VsYXRlZCcsJ21pY3JvbWF0Y2gnLCdhZ2dyZWdhdGVGaWxlQ292ZXJhZ2UnLCdsZk9pdScsJ3VwZGF0ZVRvdGFsQ292ZXJhZ2UnLCdieWZBUycsJ3JtQnhpJywncmVzZXQnLCdUblNabicsJ2F1dG9FeHBhbmQnLCdmaWxlTWVzc2FnZXMnLCdMYWpvQycsJ2h2aFZmJywnbldyb0InLCdLQ1VEQicsJ3NldFJhbmdlcycsJ2NsZWFyUmFuZ2VDb25zb2xlTG9nJywnaW5zdHJ1bWVudGVkQnlUZXN0aW5nRnJhbWV3b3JrJywnc2V0SW5zdHJ1bWVudGVkQnlUZXN0aW5nRnJhbWV3b3JrJywnTFdBdnMnLCdiQ2dKVScsJ1BoYW50b21Kc1x4MjBmYWlsdXJlOlx4MjAlcyxceDIwcmVjeWNsaW5nXHgyMHBoYW50b21ceDIwaW5zdGFuY2VceDIwIyVzJywncmVjeWNsZVdvcmtlcicsJ0dFendIJywnZGdyYW0nLCcuLy4uLy4uL3V0aWxzJywnMjMwLjAuMC4zJywnY3JlYXRlU29ja2V0JywnSVh6RFknLCdxcWVSTScsJ19zZW5kZXInLCdzZXRCcm9hZGNhc3QnLCdKd1BhZCcsJ0JLY0JnJywndnBPV0wnLCdPcVRTWCcsJ2FsbFJlc3VsdHNVcGRhdGVkJywnZXhlY3V0ZWQnLCdmaXJzdEZhaWxpbmdPclNpbmdsZUV4ZWN1dGVkVGVzdCcsJ3VpOnRlc3RzOicsJ19jcmVhdGVUZXN0UmVzdWx0cycsJ3Byb2Nlc3MnLCd1ZHA0JywnQm9MaFYnLCd0SXV2dicsJ1dETVdvJywnX3F1ZXVlJywndXRmOCcsJ3NvdXJjZUlkJywnX3NvdXJjZXMnLCdEclR5aScsJ1p2SFNLJywnZXZlbnQnLCdwY2RzVCcsJ2ZpbGVuYW1lJywnX3NvdXJjZScsJ19uZXR3b3JrQWRkcmVzcycsJ3l4bnRrJywnbmV0d29ya0ludGVyZmFjZXMnLCdpbnRlcm5hbCcsJzo6MScsJ0ZwZll3JywnSklMY3knLCd1VEZoRCcsJ1FmaUNsJywnVFlTcG4nLCdNclFSZicsJ1JNZ010JywnS0V5dlQnLCdjaGFuZ2VVcmwnLCdyaUJnbicsJ0JocUNGJywncVRjQmonLCdHUXNOTCcsJ2ZjYWxsJywnZ3F3RGEnLCdjbG9zZXN0JywnTlRRYXonLCdjcEd2VCcsJ0VzSnNmJywnc0pITEEnLCdfY29ubmVjdGluZ1dvcmtlcnMnLCdfY29ubmVjdGVkJywnY09VancnLCdqZUtNaycsJ3JlbW92ZScsJ3V0a1FRJywnUm1rTmonLCdDaFNOSycsJ3BVWE1HJywnY21yWXMnLCdHSXJ4TCcsJ1NNQmhaJywnRmZSSUonLCdJWE1McycsJ3B3alVkJywnX3JlcG9ydEZpbGVDb3ZlcmFnZScsJ3ZhbHVlQ2hhbmdlZCcsJ19pc0ZpbGVXaXRoQ292ZXJhZ2VPclRlc3QnLCdhZmZlY3RlZCcsJ3FJYVZ5JywnWlFZRVonLCd0ZER4ZCcsJ1V0Q1huJywneVJmZmknLCdldmFsdWF0ZScsJ2pMdWx0JywnY1JPd0snLCdRQ3VwRScsJy4vZG9jdW1lbnRJbkVkaXRvcicsJ05zc2RJJywnaW5zdHJ1bWVudGVkJywnbFV5cGwnLCdITGFQWCcsJ2Nsb3NlZEluQWxsRWRpdG9ycycsJ0RNTm1kJywnWUp0T1knLCdfc2hpZnRUZXN0RGVjbGFyYXRpb25MaW5lcycsJ2hHa0xEJywnaXVSTmMnLCdpbnZhbGlkYXRlRG9jdW1lbnQnLCdfdGVzdHNDb3ZlcmluZ1JhbmdlcycsJ19uZWVkVG9SZWJ1aWxkRGlzcGxheWFibGVSYW5nZXMnLCdLQXRYZycsJ3didGxEJywndWxZUlknLCdjb2RlRnJhbWUnLCdGYWlsZWRceDIwdG9ceDIwaW5zdHJ1bWVudFx4MjAnLCdzb3J0JywnX2NvdmVyaW5nVGVzdHMnLCdtcEdhYycsJ0pWVnVmJywnVExoQXUnLCd3bnhYcicsJy0tZGlzay1jYWNoZT0nLCdyYW5nZUNvbnNvbGVMb2cnLCdxVGRDRicsJ1NaUFZuJywnYWRkVGVzdCcsJ2VudHJpZXMnLCd1YkRieicsJ0x3dVNqJywnZkVTbEsnLCdvcGhDVScsJ3dhYWpuJywnTkdSem4nLCdoVWlOaScsJ2JSaWRSJywnbmVlZFRvUmVidWlsZERpc3BsYXlhYmxlUmFuZ2VzJywncWd6YWgnLCd5eVdWcScsJ19yZWJ1aWxkUmFuZ2VNYXAnLCdLZXF0RScsJ3BRZWl0JywnU1dYUVMnLCd0SGx1RicsJ09qWWRwJywnZmtlRUMnLCd2RnlEeicsJ1JVR2FQJywnb2FnRHMnLCdsaW5lTnVtYmVyJywnQlpiTkMnLCdrVGFmWCcsJ25pUVdTJywnSmFudWFyeScsJ0ZlYnJ1YXJ5JywnTWFyY2gnLCdBcHJpbCcsJ01heScsJ0p1bmUnLCdKdWx5JywnQXVndXN0JywnU2VwdGVtYmVyJywnT2N0b2JlcicsJ05vdmVtYmVyJywnRGVjZW1iZXInLCd3aW4zMicsJ3F3Y01lJywnbGljZW5zZVNpZ25hdHVyZScsJ2xFQ3hEJywnRWJKT0YnLCdtYWluJywncm9vdCcsJ1ByZXBhcmluZ1x4MjB0b1x4MjBzZXJ2ZVx4MjAlcycsJ1NlcnZpbmdceDIwJXNceDIwZnJvbVx4MjBjYWNoZScsJ1NlcnZpbmdceDIwJXNceDIwZnJvbVx4MjBkaXNrXHgyMChhbHQuXHgyMGxvY2F0aW9uKScsJ3JlYWQnLCdjYWNoZScsJ0Vycm9yXHgyMHdoZW5ceDIwcmVhZGluZ1x4MjBmaWxlXHgyMCVzLFx4MjAlcycsJ1RyeWluZ1x4MjB0b1x4MjBhY2Nlc3NceDIwbWlzc2luZ1x4MjByZXNvdXJjZVx4MjBvclx4MjBBUEk6XHgyMCcsJ1NlcnZpbmdceDIwJXNceDIwZnJvbVx4MjBkaXNrJywncGF0Y2hfbWFrZScsJ05vXHgyMGNoYW5nZXNceDIwZGV0ZWN0ZWRceDIwZm9yXHgyMCVzJywnUFlBUHMnLCdhUm5GQycsJ21LYkxmJywnV2lmZnonLCdrU1hGWicsJ3ZqUnRnJywnX2ZpbGVSb290JywnRktIWm8nLCd5eUhzVScsJ2ZGZ1RrJywnbmV0JywnU2VydmVyJywnLi90ZXN0RmlsdGVySGllcmFyY2h5JywnLi4vc2VydmVyL2RvY3VtZW50SW5FZGl0b3InLCd1aVNlcnZpY2UnLCc8IURPQ1RZUEVceDIwaHRtbD5ceDBhPGh0bWxceDIwbGFuZz1ceDIyZW5ceDIyPlx4MGE8aGVhZD5ceDBhXHgyMFx4MjBceDIwXHgyMDxtZXRhXHgyMGNoYXJzZXQ9XHgyMlVURi04XHgyMj5ceDBhXHgyMFx4MjBceDIwXHgyMDxsaW5rXHgyMGlkPVx4MjJmYXZpY29uXHgyMlx4MjByZWw9XHgyMmljb25ceDIyXHgyMGhyZWY9XHgyMmh0dHBzOi8vd2FsbGFieWpzLmNvbS9hcHAvZmF2aWNvbi5pY29ceDIyXHgyMHR5cGU9XHgyMmltYWdlL3gtaWNvblx4MjIvPlx4MGFceDIwXHgyMFx4MjBceDIwPGxpbmtceDIwaWQ9XHgyMnNob3J0Y3V0XHgyMlx4MjByZWw9XHgyMnNob3J0Y3V0XHgyMGljb25ceDIyXHgyMGhyZWY9XHgyMmh0dHBzOi8vd2FsbGFieWpzLmNvbS9hcHAvZmF2aWNvbi5pY29ceDIyXHgyMHR5cGU9XHgyMmltYWdlL3gtaWNvblx4MjIvPlx4MGFceDIwXHgyMFx4MjBceDIwPHN0eWxlPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGh0bWwsXHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwYm9keVx4MjB7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMHdpZHRoOlx4MjAxMDAlO1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBoZWlnaHQ6XHgyMDEwMCU7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwfVx4MGFceDIwXHgyMFx4MjBceDIwPC9zdHlsZT5ceDBhPC9oZWFkPlx4MGE8Ym9keVx4MjBzdHlsZT1ceDIybWFyZ2luOjBweDtwYWRkaW5nOjBweDtvdmVyZmxvdzpoaWRkZW47XHgyMj5ceDBhPHNjcmlwdD5ceDBhXHgyMFx4MjB0cnlceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXHgyN21lc3NhZ2VceDI3LFx4MjBmdW5jdGlvblx4MjAobSlceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB0cnlceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGlmXHgyMChtLmRhdGEudGl0bGUpXHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGRvY3VtZW50LnRpdGxlXHgyMD1ceDIwbS5kYXRhLnRpdGxlO1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMH1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBpZlx4MjAobS5kYXRhLnN0YXR1cylceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwaWZceDIwKG0uZGF0YS5zdGF0dXMucGFzc2luZylceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChceDI3ZmF2aWNvblx4MjcpLnNldEF0dHJpYnV0ZShceDI3aHJlZlx4MjcsXHgyMFx4MjdodHRwczovL3dhbGxhYnlqcy5jb20vYXBwL2Zhdmljb24uaWNvXHgyNyk7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFx4MjdzaG9ydGN1dFx4MjcpLnNldEF0dHJpYnV0ZShceDI3aHJlZlx4MjcsXHgyMFx4MjdodHRwczovL3dhbGxhYnlqcy5jb20vYXBwL2Zhdmljb24uaWNvXHgyNyk7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB9XHgyMGVsc2VceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChceDI3ZmF2aWNvblx4MjcpLnNldEF0dHJpYnV0ZShceDI3aHJlZlx4MjcsXHgyMFx4MjdodHRwczovL3dhbGxhYnlqcy5jb20vYXBwL2Zhdmljb24tYWx0Lmljb1x4MjcpO1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChceDI3c2hvcnRjdXRceDI3KS5zZXRBdHRyaWJ1dGUoXHgyN2hyZWZceDI3LFx4MjBceDI3aHR0cHM6Ly93YWxsYWJ5anMuY29tL2FwcC9mYXZpY29uLWFsdC5pY29ceDI3KTtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMH1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMH1ceDIwY2F0Y2hceDIwKGUpXHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwfVx4MGFceDIwXHgyMFx4MjBceDIwfSk7XHgwYVx4MjBceDIwfVx4MjBjYXRjaFx4MjAoZSlceDIwe1x4MGFceDIwXHgyMH1ceDBhPC9zY3JpcHQ+XHgwYTxpZnJhbWVceDIwc3JjPVx4MjJodHRwczovL3dhbGxhYnlqcy5jb20vYXBwXHgyMlx4MjBmcmFtZWJvcmRlcj1ceDIyMFx4MjJceDIwc3R5bGU9XHgyMm92ZXJmbG93OmhpZGRlbjtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlXHgyMlx4MjBoZWlnaHQ9XHgyMjEwMCVceDIyXHgyMHdpZHRoPVx4MjIxMDAlXHgyMj48L2lmcmFtZT5ceDBhPC9ib2R5Plx4MGE8L2h0bWw+XHgwYScsJ1pqbkl1JywnRVJ3ZlUnLCdfZmluZEZyZWVQb3J0JywnRmFpbGVkXHgyMHRvXHgyMHN0YXJ0XHgyMHdhbGxhYnlceDIwYXBwXHgyMHNlcnZpY2U6XHgyMCcsJ19vcGVuZWRGaWxlcycsJ19maWxlc0NoYW5nZWRPckFkZGVkUHJpb3JUb0NvbXBsZXRlZE9yUmVxdWV1ZWRUZXN0UnVuJywndWk6c3RhcnQnLCdfc2VuZEFsbEZpbGVzV2l0aENvdmVyYWdlJywnZnJlc2gnLCd1aTpuYXZpZ2F0ZScsJ2FwUE1LJywnZW5xdWV1ZScsJ0pEV2hpJywndWk6b3BlbmVkSW5FZGl0b3InLCd1aTpjbG9zZWRJbkVkaXRvcicsJ3VpOmNvZGVSZXF1ZXN0ZWQnLCdnaWtxcycsJ2xpbmVzJywndWk6Y29kZScsJ3VpOnRlc3RzOnJlc3VsdHNSZXF1ZXN0ZWQnLCd1aTp0ZXN0czpyZXN1bHRzQWJhbmRvbmVkJywndWk6cnVubmluZ1Byb2plY3RzUmVxdWVzdGVkJywnRFhpQ3QnLCdvbm1lc3NhZ2UnLCdXdlN2ZScsJ2xwanB3JywnWE9Hck0nLCdGdUdrVicsJ2hvc3QnLCdodHRwOi8vd2FsbGFieWpzLmNvbScsJ1BpTVF0JywnT3ZmY1QnLCdWUGtHRycsJ3VpOmhhbmRzaGFrZScsJ1NwWFpUJywnRXJyb3JceDIwcHJvY2Vzc2luZ1x4MjBydW5uaW5nUHJvamVjdHNSZXF1ZXN0ZWRceDIwbWVzc2FnZScsJ1VJXHgyMGNsaWVudFx4MjBkaXNjb25uZWN0ZWQnLCd1aTpydW5uaW5nUHJvamVjdHMnLCd1aTp0b2dnbGVUZXN0RmlsdGVyJywnalBCb3QnLCd3TUtxRScsJ294dVN2JywnY29udGludWUnLCdoYXNGaWxlJywnTlFxQkInLCdNVHVYTScsJ0l5dHVjJywncmVtb3ZlRmlsZScsJ2FkZEZpbGUnLCdHQlBMWicsJ3JlbW92ZVRlc3QnLCdoYXNDYXRlZ29yeScsJ0JjYUVqJywncW9Nd0InLCdDb2t1SCcsJ3B2b3VjJywncmVtb3ZlQ2F0ZWdvcnknLCdhZGRDYXRlZ29yeScsJ2NvcnJlbGF0aW9uSWQnLCd1aTpyZXNldFRlc3RGaWx0ZXInLCdtb2RlbDpidXN5JywnQmNkYlUnLCdtb2Muc2p5YmFsbGF3QG9sbGVoXHgyMHRhXHgyMGxpYW1lXHgyMGFpdlx4MjBzdVx4MjB0Y2F0bm9jXHgyMGVzYWVscFx4MjAsbWFldFx4MjBydW95XHgyMHJvXHgyMGZsZXNydW95XHgyMHJvZlx4MjBkb2lyZXBceDIwbGFpcnRceDIwcmVnbm9sXHgyMGFceDIwZWduYXJyYVx4MjBvdFx4MjBla2lsXHgyMGRsdW93XHgyMHVveVx4MjBmSVx4MGEuZXNuZWNpbFx4MjBhXHgyMGVzYWhjcnVwXHgyMG90XHgyMGVzYWhjcnVwL21vYy5zanliYWxsYXcvLzpzcHR0aFx4MjB0YVx4MjBldGlzYmV3XHgyMHJ1b1x4MjB0aXNpdlx4MjBlc2FlbHBceDIwLHRjZWpvcnBceDIwZWh0XHgyMHRyb3BwdXNceDIwZG5hXHgyMHRpXHgyMGduaXN1XHgyMGV1bml0bm9jXHgyMG90XHgyMGVraWxceDIwZGx1b3dceDIwdW95XHgyMGRuYVx4MjAseXRpdml0Y3Vkb3JwXHgyMHJ1b3lceDIwZGVzYWVyY25pXHgyMHNhaFx4MjBzai55YmFsbGF3XHgyMGZJXHgwYS50dW9ceDIwdGlceDIwZ25peXJ0XHgyMHJvZlx4MjBza25haHRceDIwLHJldm9ceDIwc2lceDIwZG9pcmVwXHgyMGxhaXJ0XHgyMHNqLnliYWxsYXdceDIwcnVvWScsJ3VpOmJ1c3knLCdtb2RlbDp0ZXN0UnVuRXJyb3InLCdScFFPSScsJ21vZGVsOnRlc3RSdW5SZVF1ZXVlZCcsJ3VpOmNvdmVyYWdlQ2hhbmdlZCcsJ2dUSmZjJywndWk6ZmlsZXMnLCdtb2RlbDpmaWxlQ2hhbmdlZCcsJ21vZGVsOmZpbGVEZWxldGVkJywnTkp6Qk8nLCdhbGxBZmZlY3RlZEZpbGVzJywnX3NlbmRBZmZlY3RlZEZpbGVzQW5kQ292ZXJhZ2VDaGFuZ2VzJywnY1pmalonLCdSTXhLRCcsJ3FOZXJPJywnX3NlbmRUZXN0UmVzdWx0cycsJ2lETmVtJywnZVNRWVknLCdFcnJvclx4MjBwYXJzaW5nXHgyMHJ1bm5pbmdQcm9qZWN0c1JlcXVlc3RlZFx4MjBtZXNzYWdlJywnQmlIR2InLCdfaGFuZGxlVGVzdEZpbHRlckNoYW5nZScsJ21vZGVsOnRlc3RGaWx0ZXJJbXBsaWNpdGx5Q2hhbmdlZCcsJ3FJYXVzJywnRXphd08nLCdTeHRBVicsJ29zUEFxJywndlVnelAnLCdETkJFWScsJ05QV1VLJywnZ3VJalAnLCd4bWNQeCcsJ0RWWlNYJywnUVpVSksnLCdraWxsZWQnLCdzaWduYWwnLCdleGl0Q29kZScsJ19hY2N1bXVsYXRlVGVzdEZpbHRlclN0YXRlRm9yRmlsZScsJ3BsdmJpJywna3lVWGgnLCd1ckNRdycsJ1slc11ceDIwU2FuZGJveFx4MjBjbG9zaW5nXHgyMGVycm9yLFx4MjAlcycsJ2NxUUF6JywnRGpBcmsnLCdxdWV1ZScsJ3NoaWZ0JywndGFzaycsJ3VwZGF0ZVRlc3RzJywnV3lteUQnLCdYRUZTQycsJzxici8+SWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRceDIwdGhlXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJywnXHgyMGlzXHgyMDxiPm5vdFx4MjBjb3ZlcmVkXHgyMGJ5XHgyMHlvdXJceDIwbGljZW5zZTwvYj4uXHgyMFBsZWFzZVx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInLCdceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjB1cGdyYWRlXHgyMHlvdXJceDIwbGljZW5zZS48YnIvPklmXHgyMHlvdVx4MjBoYXZlXHgyMHB1cmNoYXNlZFx4MjBhXHgyMHJlbmV3YWxceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCdqQkdkZicsJ21vZHVsZUxvYWRlZCcsJ2JKUmVZJywnanRVemUnLCdfYWxsb3dlZFRvU2VuZEFsbEZpbGVzJywnVmdhRXMnLCdPSWVzWCcsJ29Td0NCJywnc29tZVJlc3VsdHNVcGRhdGVkJywndG93SnonLCd2Z3JOTCcsJ09vWnBxJywnVXRHbG0nLCdiYWJlbCcsJ3BhdGhzJywnaHNpTVInLCd0YWtlJywnZEpnV3QnLCd4TFhkVCcsJ2phdmFzY3JpcHQnLCdOb1x4MjBtZXRhZGF0YVx4MjBmb3JceDIwYWRkZWRceDIwZmlsZVx4MjBmb3VuZDpceDIwJXMnLCdOSGRYdicsJ2dNZ0t4JywnLS1kaXNhYmxlLWdwdScsJ2xhdW5jaCcsJ01vZHVsZScsJ3JlcXVpcmUnLCdkaXNwbGF5VGVzdE5hbWUnLCdzV3h2SScsJ0RTZFBiJywnTm9SVUwnLCdoS2J4RCcsJ3dhbGxhYnlqcy5jb20nLCdsb2NhbGhvc3QnLCdjb25uZWN0aW9uJywnRmFpbGVkXHgyMHRvXHgyMGRlc2VyaWFsaXplXHgyMG1lc3NhZ2VceDIwZnJvbVx4MjB3YWxsYWJ5XHgyMFVJOlx4MjAnLCdJbmNvbWluZ1x4MjBtZXNzYWdlXHgyMCVzJywncHJvamVjdE5hbWUnLCdwcm9qZWN0Q29uZmlnJywnTGlzdGVuaW5nXHgyMHBvcnRceDIwJXMnLCdfY2hlY2tQb3J0JywnaW5kZXguaHRtbCcsJ3N0YXRpYycsJ2NyZWF0ZVNlcnZlcicsJ29uY2UnLCdsaXN0ZW5pbmcnLCdsaXN0ZW4nLCd0VlRoSCcsJ3VpOnRlc3RzOmFsbFJlc3VsdHNVcGRhdGVkJywnX3NvbWVSZXN1bHRzUmVzcG9uc2VTZXFOdW0nLCd1aTp0ZXN0czpzb21lUmVzdWx0c1VwZGF0ZWQnLCdPdXRnb2luZ1x4MjBtZXNzYWdlXHgyMCVzJywnZW1mQVInLCdncEN4TScsJ0Nhblx4MjBub3RceDIwZmluZFx4MjBhXHgyMGZyZWVceDIwcG9ydCcsJ1pGRFJEJywnemNPZUYnLCdFQUREUk5PVEFWQUlMJywnU0xKc0QnLCdJeW5TaCcsJ3JpR1V5JywnQ1BQenEnLCdRSXpKcCcsJ2p5dGdkJywncWV1SkcnLCdGUGJURicsJ0t2Q09HJywnX2Rpc3Bvc2luZycsJ2J0VUFMJywnTGtDY0wnLCd5aFVRTScsJ2FJQWVIJywnVVdZU0wnLCdqT2pUZCcsJ0Z4bFFjJywnZGp4emUnLCdqYURPcScsJ2Z6SUtUJywnamZHS0YnLCdib0RXbCcsJ1BSSmRXJywnRlhWQ1AnLCdub2RlX21vZHVsZXMnLCdreUJsUScsJ0NmUmhSJywnZnRkTnQnLCdxUldIUCcsJ2x4UktUJywnU05IZ2MnLCdUb1F2dScsJ3RRSkVnJywnZ1ZZZ0snLCdiTmJJZScsJ0N1cnJlbnRseVx4MjBpbnN0YWxsZWRceDIwdmVyc2lvblx4MjBvZlx4MjAnLCdkTk5TbycsJ3Zla2ZDJywncHVibGljLFx4MjBtYXgtYWdlPTg2NDAwJywnbm93JywndG9VVENTdHJpbmcnLCdsb29rdXAnLCd0ZXh0L3BsYWluJywndE9GemQnLCdwQXZRdicsJ2FsdCcsJ2JCb1RjJywnZmJiUmInLCdCaVVCUycsJ3NwYXfigItuJywnbm9kZVJ1bm5lcicsJy4vdXRpbHMnLCcjIyN3cG0jIyMnLCdBeWNsSyddOyhmdW5jdGlvbihfMHgzZTBjNzgsXzB4NTc4MDdlKXt2YXIgXzB4NGI3MzhiPWZ1bmN0aW9uKF8weDUzY2NhYSl7d2hpbGUoLS1fMHg1M2NjYWEpe18weDNlMGM3OFsncHVzaCddKF8weDNlMGM3OFsnc2hpZnQnXSgpKTt9fTtfMHg0YjczOGIoKytfMHg1NzgwN2UpO30oXzB4NWU4YSwweDFjYykpO3ZhciBfMHg2ZDY0PWZ1bmN0aW9uKF8weDFkN2Y1ZCxfMHg0NjlhNjMpe18weDFkN2Y1ZD1fMHgxZDdmNWQtMHgwO3ZhciBfMHgyODBhZTM9XzB4NWU4YVtfMHgxZDdmNWRdO3JldHVybiBfMHgyODBhZTM7fTshZnVuY3Rpb24gZShfMHg0NWUwZDMsXzB4NWFiMDhlLF8weDFkNDUxNyl7ZnVuY3Rpb24gXzB4M2YyNmQ5KF8weDUyZmYyZSxfMHg1ZGFiNGYpe2lmKCFfMHg1YWIwOGVbXzB4NTJmZjJlXSl7aWYoIV8weDQ1ZTBkM1tfMHg1MmZmMmVdKXt2YXIgXzB4ZjQ0ZDQxPSdmdW5jdGlvbic9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFfMHg1ZGFiNGYmJl8weGY0NGQ0MSlyZXR1cm4gXzB4ZjQ0ZDQxKF8weDUyZmYyZSwhMHgwKTtpZihfMHgzOThkYjMpcmV0dXJuIF8weDM5OGRiMyhfMHg1MmZmMmUsITB4MCk7dmFyIF8weDk1YmE3Mz1uZXcgRXJyb3IoXzB4NmQ2NCgnMHgwJykrXzB4NTJmZjJlKydceDI3Jyk7dGhyb3cgXzB4OTViYTczW18weDZkNjQoJzB4MScpXT1fMHg2ZDY0KCcweDInKSxfMHg5NWJhNzM7fXZhciBfMHg0MTMzM2M9XzB4NWFiMDhlW18weDUyZmYyZV09eydleHBvcnRzJzp7fX07XzB4NDVlMGQzW18weDUyZmYyZV1bMHgwXVtfMHg2ZDY0KCcweDMnKV0oXzB4NDEzMzNjW18weDZkNjQoJzB4NCcpXSxmdW5jdGlvbihfMHhhYTUwN2Upe3ZhciBfMHg1YWIwOGU9XzB4NDVlMGQzW18weDUyZmYyZV1bMHgxXVtfMHhhYTUwN2VdO3JldHVybiBfMHgzZjI2ZDkoXzB4NWFiMDhlP18weDVhYjA4ZTpfMHhhYTUwN2UpO30sXzB4NDEzMzNjLF8weDQxMzMzY1tfMHg2ZDY0KCcweDQnKV0sZSxfMHg0NWUwZDMsXzB4NWFiMDhlLF8weDFkNDUxNyk7fXJldHVybiBfMHg1YWIwOGVbXzB4NTJmZjJlXVsnZXhwb3J0cyddO312YXIgXzB4Mzk4ZGIzPV8weDZkNjQoJzB4NScpPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTttb2R1bGVbJ2V4cG9ydHMnXT1fMHgzZjI2ZDkoXzB4MWQ0NTE3WzB4MF0pO30oezE6W2Z1bmN0aW9uKF8weDI2NWRmNixfMHgzZmViNjgsXzB4MzkyZGY5KXt2YXIgXzB4NDEzZWNmPV8weDI2NWRmNigncGF0aCcpLF8weDQ2MDU3NT1fMHgyNjVkZjYoJ0BiYWJlbC9wYXJzZXInKSxfMHg0YjU5OTU9XzB4MjY1ZGY2KF8weDZkNjQoJzB4NicpKSxfMHgzMjExYmE9XzB4MjY1ZGY2KF8weDZkNjQoJzB4NycpKTtfMHgzZmViNjhbXzB4NmQ2NCgnMHg0JyldPWZ1bmN0aW9uKF8weDI2NWRmNixfMHgzZmViNjgpe3RyeXt2YXIgXzB4MzkyZGY5PV8weDQxM2VjZltfMHg2ZDY0KCcweDgnKV0oXzB4MjY1ZGY2KSxfMHgzODc1ZjE9XzB4NmQ2NCgnMHg5Jyk9PT1fMHgzOTJkZjksXzB4NDRjY2RjPV8weDZkNjQoJzB4YScpPT09XzB4MzkyZGY5LF8weDM4MWEyNj1bXzB4NmQ2NCgnMHhiJyksJ2FzeW5jR2VuZXJhdG9ycycsXzB4NmQ2NCgnMHhjJyksXzB4NmQ2NCgnMHhkJyksXzB4NmQ2NCgnMHhlJyksJ2NsYXNzUHJpdmF0ZU1ldGhvZHMnLCdkZWNvcmF0b3JzLWxlZ2FjeScsXzB4NmQ2NCgnMHhmJyksJ2R5bmFtaWNJbXBvcnQnLF8weDZkNjQoJzB4MTAnKSxfMHg2ZDY0KCcweDExJyksXzB4NmQ2NCgnMHgxMicpLF8weDZkNjQoJzB4MTMnKSxfMHg2ZDY0KCcweDE0JyksXzB4NmQ2NCgnMHgxNScpLCdudWxsaXNoQ29hbGVzY2luZ09wZXJhdG9yJywnbnVtZXJpY1NlcGFyYXRvcicsXzB4NmQ2NCgnMHgxNicpLF8weDZkNjQoJzB4MTcnKSwnb3B0aW9uYWxDaGFpbmluZycsXzB4NmQ2NCgnMHgxOCcpLFsncGlwZWxpbmVPcGVyYXRvcicseydwcm9wb3NhbCc6XzB4NmQ2NCgnMHgxOScpfV0sXzB4NmQ2NCgnMHgxYScpXTshXzB4Mzg3NWYxJiZfMHg0NGNjZGN8fF8weDM4MWEyNlsncHVzaCddKF8weDZkNjQoJzB4MWInKSksXzB4NDRjY2RjfHxfMHgzODc1ZjE/XzB4MzgxYTI2W18weDZkNjQoJzB4MWMnKV0oXzB4NmQ2NCgnMHgxZCcpKTooXzB4MzgxYTI2W18weDZkNjQoJzB4MWMnKV0oXzB4NmQ2NCgnMHgxZScpKSxfMHgzODFhMjZbXzB4NmQ2NCgnMHgxYycpXShfMHg2ZDY0KCcweDFmJykpKTt2YXIgXzB4NTc3OTJiPV8weDQ2MDU3NVsncGFyc2UnXShfMHgzZmViNjgseydzb3VyY2VUeXBlJzpfMHg2ZDY0KCcweDIwJyksJ3BsdWdpbnMnOl8weDM4MWEyNn0pLF8weGZkYjA2Nz1bXTtyZXR1cm4gXzB4MzIxMWJhKF8weDU3NzkyYixfMHg0YjU5OTUoZnVuY3Rpb24oXzB4MjY1ZGY2KXtyZXR1cm4gXzB4ZmRiMDY3W18weDZkNjQoJzB4MWMnKV0oXzB4MjY1ZGY2KTt9LHsndmlzaXRJbXBvcnRzJzohMHgwfSkpLF8weGZkYjA2Nzt9Y2F0Y2goXzB4MTc0MWFlKXtpZihfMHg2ZDY0KCcweDIxJyk9PT1fMHg2ZDY0KCcweDIxJykpe2NvbnNvbGVbJ3dhcm4nXShfMHg2ZDY0KCcweDIyJykrXzB4MjY1ZGY2Kyc6XHgyMCcrKF8weDE3NDFhZSYmXzB4MTc0MWFlW18weDZkNjQoJzB4MjMnKV0pKTt9ZWxzZXt2YXIgXzB4NTcxM2I3PTB4MSZfMHg0YjU5OTU7XzB4NGI1OTk1Pj4+PTB4MTt2YXIgXzB4MzliZDM5PV8weDU3MTNiNz8weDA9PT1fMHg0YjU5OTU/LTB4ODAwMDAwMDA6LV8weDRiNTk5NTpfMHg0YjU5OTU7XzB4MzkyZGY5Pj0weDA/KF8weDQxM2VjZltfMHgzOTJkZjldPXsnY29sdW1uJzpfMHgzOWJkMzl9LF8weDM5MmRmOT12b2lkIDB4MCk6XzB4MzkyZGY5PV8weDM5YmQzOSxfMHg0YjU5OTU9XzB4NDYwNTc1PTB4MDt9fX07fSx7Jy4vYmFiZWxUcmF2ZXJzZSc6MHgyLCcuL2JhYmVsVmlzaXRvcic6MHgzLCdAYmFiZWwvcGFyc2VyJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDB9XSwyOltmdW5jdGlvbihfMHg4YTJjZGQsXzB4Mzg2OTBlLF8weDIzNTlkYSl7dmFyIF8weDJkOGFkYT1mdW5jdGlvbihfMHg4YTJjZGQsXzB4Mzg2OTBlKXt2YXIgXzB4MjM1OWRhPV8weDhhMmNkZFsndHlwZSddO2lmKF8weDIzNTlkYSYmXzB4OGEyY2RkW18weDZkNjQoJzB4MjQnKV0pe2lmKF8weDZkNjQoJzB4MjUnKT09PV8weDZkNjQoJzB4MjUnKSl7dmFyIF8weDQ5MDUzND1fMHgzODY5MGVbX1snZW5kc1dpdGgnXShfMHgyMzU5ZGEsXzB4NmQ2NOKAiygnMHgyNicpKXx8J1ZhcmlhYmxlRGVjbGFyYXRpb24nPT09XzB4MjM1OWRhPydTdGF0ZW1lbnQnOl8weDIzNTlkYV07aWYoXzB4NDkwNTM0JiZfMHg0OTA1MzQoXzB4OGEyY2RkKSxfMHg2ZDY0KCcweDI3Jyk9PT1fMHgyMzU5ZGF8fF8weDZkNjQoJzB4MjgnKT09PV8weDIzNTlkYXx8XzB4NmQ2NCgnMHgyOScpPT09XzB4MjM1OWRhfHxfMHg2ZDY0KCcweDJhJyk9PT1fMHgyMzU5ZGF8fF8weDZkNjQoJzB4MmInKT09PV8weDIzNTlkYXx8XzB4NmQ2NCgnMHgyYycpPT09XzB4MjM1OWRhfHxfMHg2ZDY0KCcweDJkJyk9PT1fMHgyMzU5ZGEpcmV0dXJuO31lbHNle3JldHVybnsnY292ZXJhZ2UnOl8weDhhMmNkZCwnZmlsZSc6XzB4MmQ4YWRhW18weDZkNjQoJzB4MmUnKV0oXzB4OGEyY2RkWydpZCddKX07fX1mb3IodmFyIF8weDJjODY0YSBpbiBfMHg4YTJjZGQpaWYoXzB4OGEyY2RkW18weDZkNjQoJzB4MmYnKV0oXzB4MmM4NjRhKSYmJ2xvYychPT1fMHgyYzg2NGEmJl8weDZkNjQoJzB4MzAnKSE9PV8weDJjODY0YSYmXzB4NmQ2NCgnMHgzMScpIT09XzB4MmM4NjRhJiYnZW5kJyE9PV8weDJjODY0YSYmXzB4NmQ2NCgnMHgzMicpIT09XzB4MmM4NjRhKXt2YXIgXzB4NDcyMGRmPV8weDhhMmNkZFtfMHgyYzg2NGFdO18weDQ3MjBkZiYmX1snaXNPYmplY3QnXShfMHg0NzIwZGYpJiZfMHgyZDhhZGEoXzB4NDcyMGRmLF8weDM4NjkwZSk7fX07XzB4Mzg2OTBlW18weDZkNjQoJzB4NCcpXT1mdW5jdGlvbihfMHg4YTJjZGQsXzB4Mzg2OTBlKXtfMHgyZDhhZGEoXzB4OGEyY2RkLF8weDM4NjkwZSk7fTt9LHt9XSwzOltmdW5jdGlvbihfMHhlZTQ0YmUsXzB4NGRkMTE0LF8weDIxZjI3NCl7XzB4NGRkMTE0W18weDZkNjQoJzB4NCcpXT1mdW5jdGlvbihfMHhlZTQ0YmUsXzB4NGRkMTE0KXtpZignRmZZb0cnPT09XzB4NmQ2NCgnMHgzMycpKXt2YXIgXzB4MjFmMjc0PXsnU3RhdGVtZW50JzpmdW5jdGlvbihfMHg0ZGQxMTQpe2lmKCdpS1hCdyc9PT0na2taWXEnKXt2YXIgXzB4ZDE4Mzk9X1tfMHg2ZDY0KCcweDM0JyldKHt9LHRoaXNbXzB4NmQ2NCgnMHgzNScpXSx0aGlzW18weDZkNjQoJzB4MzYnKV0sdGhpc1tfMHg2ZDY0KCcweDM3JyldKSxfMHgyNTQxYzY9dGhpc1tfMHg2ZDY0KCcweDM4JyldLF8weDZmNmJlZT10aGlzW18weDZkNjQoJzB4MzknKV07aWYoZGVsZXRlIHRoaXNbJ19hbGxSYW5nZXNSZWNlaXZlZCddLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4MzknKV0sX1tfMHg2ZDY0KCcweDNhJyldKHRoaXNbXzB4NmQ2NCgnMHgzNycpXSxmdW5jdGlvbihfMHg0ZjQ1NGEpe3JldHVybiBfMHg0ZjQ1NGFbJ2Rpc3Bvc2UnXSgpO30pLHRoaXNbXzB4NmQ2NCgnMHgzNScpXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSx0aGlzW18weDZkNjQoJzB4MzYnKV09T2JqZWN0WydjcmVhdGUnXShudWxsKSx0aGlzW18weDZkNjQoJzB4MzcnKV09T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCksdGhpc1tfMHg2ZDY0KCcweDNjJyldKXt2YXIgXzB4MzVlYzc0PV8weDZmNmJlZT90aGlzW18weDZkNjQoJzB4M2MnKV1bXzB4NmQ2NCgnMHgzZCcpXShfW18weDZkNjQoJzB4M2UnKV0odGhpc1tfMHg2ZDY0KCcweDNmJyldKSwhMHgwLCEweDAsXzB4ZWU0NGJlKTp0aGlzW18weDZkNjQoJzB4M2MnKV1bXzB4NmQ2NCgnMHgzZCcpXShfMHhkMTgzOSxfMHgyNTQxYzYsITB4MSxfMHhlZTQ0YmUpO3JldHVybiBfMHgzNWVjNzRbJ2Z1bGxVcGRhdGUnXT1fMHg2ZjZiZWUsXzB4MzVlYzc0O319ZWxzZXtzd2l0Y2goXzB4NGRkMTE0W18weDZkNjQoJzB4MzAnKV0pe2Nhc2UnRG9XaGlsZVN0YXRlbWVudCc6Y2FzZSBfMHg2ZDY0KCcweDQwJyk6Y2FzZSBfMHg2ZDY0KCcweDQxJyk6Y2FzZSBfMHg2ZDY0KCcweDQyJyk6XzB4NGRkMTE0W18weDZkNjQoJzB4NDMnKV0mJl8weGVlNDRiZShfMHg0ZGQxMTRbXzB4NmQ2NCgnMHg0MycpXVtfMHg2ZDY0KCcweDI0JyldKTticmVhaztjYXNlIF8weDZkNjQoJzB4NDQnKTpjYXNlJ0ZvckluU3RhdGVtZW50JzpfMHg0ZGQxMTRbXzB4NmQ2NCgnMHg0NScpXSYmXzB4ZWU0NGJlKF8weDRkZDExNFtfMHg2ZDY0KCcweDQ1JyldW18weDZkNjQoJzB4MjQnKV0pO2JyZWFrO2Nhc2UnU3dpdGNoU3RhdGVtZW50JzpfMHhlZTQ0YmUoXzB4NGRkMTE0WydkaXNjcmltaW5hbnQnXVtfMHg2ZDY0KCcweDI0JyldKTticmVhaztjYXNlJ0JyZWFrU3RhdGVtZW50JzpjYXNlIF8weDZkNjQoJzB4MmQnKTpjYXNlJ1Rocm93U3RhdGVtZW50JzpjYXNlJ1ZhcmlhYmxlRGVjbGFyYXRpb24nOmNhc2UnRXhwcmVzc2lvblN0YXRlbWVudCc6Y2FzZSdSZXR1cm5TdGF0ZW1lbnQnOl8weGVlNDRiZShfMHg0ZGQxMTRbXzB4NmQ2NCgnMHgyNCcpXSk7fX19LCdBcnJvd0Z1bmN0aW9uRXhwcmVzc2lvbic6ZnVuY3Rpb24oXzB4NGRkMTE0KXtfMHg0ZGQxMTRbXzB4NmQ2NCgnMHg0NicpXSYmXzB4NmQ2NCgnMHg0NycpIT09XzB4NGRkMTE0W18weDZkNjQoJzB4NDYnKV1bXzB4NmQ2NCgnMHgzMCcpXSYmXzB4ZWU0NGJlKF8weDRkZDExNFsnYm9keSddW18weDZkNjQoJzB4MjQnKV0pO30sJ0xvZ2ljYWxFeHByZXNzaW9uJzpmdW5jdGlvbihfMHg0ZGQxMTQpe18weGVlNDRiZShfMHg0ZGQxMTRbXzB4NmQ2NCgnMHg0OCcpXVtfMHg2ZDY0KCcweDI0JyldKSxfMHhlZTQ0YmUoXzB4NGRkMTE0W18weDZkNjQoJzB4NDUnKV1bXzB4NmQ2NCgnMHgyNCcpXSk7fSwnQ29uZGl0aW9uYWxFeHByZXNzaW9uJzpmdW5jdGlvbihfMHg0ZGQxMTQpe18weGVlNDRiZShfMHg0ZGQxMTRbJ2NvbnNlcXVlbnQnXVtfMHg2ZDY0KCcweDI0JyldKSxfMHhlZTQ0YmUoXzB4NGRkMTE0WydhbHRlcm5hdGUnXVtfMHg2ZDY0KCcweDI0JyldKTt9fTtyZXR1cm4gXzB4NGRkMTE0JiZfMHg0ZGQxMTRbJ3Zpc2l0SW1wb3J0cyddJiYoXzB4MjFmMjc0W18weDZkNjQoJzB4NDknKV09ZnVuY3Rpb24oXzB4NGRkMTE0KXtfMHhlZTQ0YmUoXzB4NGRkMTE0W18weDZkNjQoJzB4MjQnKV0pO30pLF8weDIxZjI3NDt9ZWxzZXtfWydfJytbJzZ4ZnInLCdidzV1JywnZ2EnXVsnam9pbiddKCcnKV0mJltfMHg2ZDY0KCcweDRhJyksXzB4NmQ2NCgnMHg0YicpLCdnYSddW18weDZkNjQoJzB4NGMnKV0oJycpPT09X1snXycrWyc2eCcsJ2ZyJywnYncnLCc1dScsJ2dhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyldfHxwcm9jZXNzW18weDZkNjQoJzB4NGQnKV0oZnVuY3Rpb24oKXtmb3IodmFyIF8weGZiNjZlNj1bXSxfMHg0NTgxNjE9MHgwO18weDQ1ODE2MTwweDY0O18weDQ1ODE2MSsrKV8weGZiNjZlNltfMHg2ZDY0KCcweDFjJyldKG5ldyBBcnJheSgweDNiOWFjYTAwKVsnam9pbiddKCcxJykpO30pO319O30se31dLDQ6W2Z1bmN0aW9uKF8weDQzNTJmOCxfMHg1ZWVjOWIsXzB4MmQ0M2FmKXt2YXIgXzB4MzEwNzc5PV8weDQzNTJmOChfMHg2ZDY0KCcweDRlJykpLF8weDhlNTljMz1fMHg0MzUyZjgoJ2NvbXByZXNzaW9uJyksXzB4MzkyZjZjPV8weDQzNTJmOChfMHg2ZDY0KCcweDRmJykpLF8weDI3YWVjZj1fMHg0MzUyZjgoXzB4NmQ2NCgnMHg1MCcpKSxfMHg1YjQ4MmE9XzB4NDM1MmY4KCcuL2ZpbGVDYWNoZU1pZGRsZXdhcmUnKSxfMHgxMjU1ZDg9XzB4NDM1MmY4KCcuL3V0aWxzJyksXzB4MWQ0ODg1PV8weDM5MmY2Y1tfMHg2ZDY0KCcweDUxJyldKF8weDMxMDc3OVtfMHg2ZDY0KCcweDRjJyldKF9fZGlybmFtZSwncnVubmVycycsXzB4NmQ2NCgnMHg1MicpLCdzYW5kYm94Lmh0bWwnKSlbXzB4NmQ2NCgnMHg1MycpXSgpLF8weDRjNTdhZT1fMHg2ZDY0KCcweDU0JyksXzB4NWM3MDMwPWxvZ2dlcltfMHg2ZDY0KCcweDNiJyldKF8weDZkNjQoJzB4NTUnKSlbXzB4NmQ2NCgnMHg1NicpXSxfMHgyYzc1NDI9ZnVuY3Rpb24oXzB4NDM1MmY4LF8weDVlZWM5Yil7dmFyIF8weDJkNDNhZj10aGlzO18weDJkNDNhZlsnX3Byb2plY3QnXT1fMHg0MzUyZjgsXzB4MmQ0M2FmW18weDZkNjQoJzB4NTcnKV09XzB4NWVlYzliLF8weDJkNDNhZltfMHg2ZDY0KCcweDU4JyldPV8weDJkNDNhZltfMHg2ZDY0KCcweDU5JyldWydfaW5zdHJ1bWVudGVkUm9vdCddK18weDMxMDc3OVtfMHg2ZDY0KCcweDVhJyldLF8weDJkNDNhZltfMHg2ZDY0KCcweDViJyldPV8weDQzNTJmOFtfMHg2ZDY0KCcweDVjJyldKClbXzB4NmQ2NCgnMHg1ZCcpXSxfMHgyZDQzYWZbJ19yZXBvcnRVbmhhbmRsZWRQcm9taXNlcyddPSEhXzB4NDM1MmY4W18weDZkNjQoJzB4NWMnKV0oKVtfMHg2ZDY0KCcweDVlJyldLF8weDJkNDNhZltfMHg2ZDY0KCcweDVmJyldPSEhXzB4NDM1MmY4W18weDZkNjQoJzB4NWMnKV0oKVtfMHg2ZDY0KCcweDYwJyldLF8weDJkNDNhZltfMHg2ZDY0KCcweDYxJyldPV8weDQzNTJmOFtfMHg2ZDY0KCcweDVjJyldKClbXzB4NmQ2NCgnMHg2MicpXSxfMHgyZDQzYWZbXzB4NmQ2NCgnMHg2MycpXT17fSxfMHgyZDQzYWZbJ19yZXBvcnQ0MDRBc0Vycm9yJ109XzB4NDM1MmY4W18weDZkNjQoJzB4NWMnKV0oKVsnZW52J11bXzB4NmQ2NCgnMHg2NCcpXSxfMHgyZDQzYWZbXzB4NmQ2NCgnMHg2NScpXT1fMHgyZDQzYWZbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDY1JyldLF8weDJkNDNhZltfMHg2ZDY0KCcweDY2JyldPV8weDJkNDNhZltfMHg2ZDY0KCcweDU3JyldWyd3YWxsYWJ5RmlsZUlkUHJlZml4J10oKSxfMHgyZDQzYWZbXzB4NmQ2NCgnMHg2NycpXT1fMHgyN2FlY2YoKSxfMHgyZDQzYWZbXzB4NmQ2NCgnMHg2NycpXVtfMHg2ZDY0KCcweDY4JyldKF8weDhlNTljMyh7J2ZpbHRlcic6ZnVuY3Rpb24oXzB4NDM1MmY4KXtyZXR1cm5+XzB4NDM1MmY4W18weDZkNjQoJzB4NjknKV1bJ2luZGV4T2YnXShfMHg2ZDY0KCcweDZhJykpO319KSksXzB4MmQ0M2FmWydfYXBwJ11bXzB4NmQ2NCgnMHg2OCcpXShfMHg2ZDY0KCcweDZiJyksZnVuY3Rpb24oXzB4NDM1MmY4LF8weDVlZWM5Yil7aWYoXzB4NmQ2NCgnMHg2YycpIT09XzB4NmQ2NCgnMHg2ZCcpKXtfMHg1ZWVjOWJbJ3NlbmQnXShfMHgyZDQzYWZbXzB4NmQ2NCgnMHg2MycpXVtfMHg0MzUyZjhbXzB4NmQ2NCgnMHg2ZScpXVsnaWQnXV0pO31lbHNle3JldHVybiBfMHg4ZTU5YzNbXzB4NmQ2NCgnMHg2ZicpXTt9fSksXzB4NDM1MmY4W18weDZkNjQoJzB4NWMnKV0oKVtfMHg2ZDY0KCcweDcwJyldW18weDZkNjQoJzB4NGUnKV0mJl8weDJkNDNhZltfMHg2ZDY0KCcweDY3JyldW18weDZkNjQoJzB4NjgnKV0oJy8nK18weDRjNTdhZSsnLycrXzB4NDM1MmY4W18weDZkNjQoJzB4NWMnKV0oKVtfMHg2ZDY0KCcweDcwJyldW18weDZkNjQoJzB4NzEnKV0rXzB4NmQ2NCgnMHg3MicpLF8weDViNDgyYVtfMHg2ZDY0KCcweDNiJyldKHsnbWFpbic6eydyb290JzpfMHgzMTA3NzlbXzB4NmQ2NCgnMHg0YycpXShfMHg0MzUyZjhbXzB4NmQ2NCgnMHg3MycpXSxfMHg0MzUyZjhbJ3NldHRpbmdzJ10oKVtfMHg2ZDY0KCcweDcwJyldWydwYXRoJ10pfX0pKSxfMHgyZDQzYWZbXzB4NmQ2NCgnMHg2NycpXVtfMHg2ZDY0KCcweDY4JyldKCcvJytfMHg0YzU3YWUrJy90cmFjZXIuanMnLF8weDViNDgyYVsnY3JlYXRlJ10oeydtYWluJzp7J3Jvb3QnOl8weDMxMDc3OVtfMHg2ZDY0KCcweDRjJyldKF9fZGlybmFtZSxfMHg2ZDY0KCcweDc0JykpfX0pKSxfMHgyZDQzYWZbXzB4NmQ2NCgnMHg2NycpXVtfMHg2ZDY0KCcweDY4JyldKCcvJytfMHg0YzU3YWUsXzB4NWI0ODJhW18weDZkNjQoJzB4M2InKV0oeydtYWluJzp7J3Jvb3QnOl8weDMxMDc3OVtfMHg2ZDY0KCcweDRjJyldKF9fZGlybmFtZSwncnVubmVycycsXzB4NmQ2NCgnMHg1MicpKX19KSksXzB4NDM1MmY4W18weDZkNjQoJzB4NWMnKV0oKVtfMHg2ZDY0KCcweDc1JyldKF8weDJkNDNhZltfMHg2ZDY0KCcweDY3JyldLF8weDI3YWVjZiksXzB4MmQ0M2FmWydfcHJvamVjdCddW18weDZkNjQoJzB4NzYnKV0oKT9fMHgyZDQzYWZbXzB4NmQ2NCgnMHg2NycpXVtfMHg2ZDY0KCcweDY4JyldKF8weDViNDgyYVtfMHg2ZDY0KCcweDNiJyldKHsnbWFpbic6eydyb290JzpfMHgyZDQzYWZbJ19iYXNlRGlyJ10sJ2NhY2hlJzpfMHgyZDQzYWZbXzB4NmQ2NCgnMHg2NScpXX0sJ2FsdCc6eydyb290JzpfMHgyZDQzYWZbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDc3JyldLCdyZWFkJzpmdW5jdGlvbihfMHg0MzUyZjgsXzB4NWVlYzliKXtpZihfMHg2ZDY0KCcweDc4Jyk9PT1fMHg2ZDY0KCcweDc5Jykpe3JldHVybiFfMHg0MzUyZjhbXzB4NmQ2NCgnMHg3YScpXTt9ZWxzZXt2YXIgXzB4OGU1OWMzPV8weDEyNTVkOFtfMHg2ZDY0KCcweDdiJyldKF8weDMxMDc3OVsncmVsYXRpdmUnXShfMHgyZDQzYWZbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDc3JyldLF8weDQzNTJmOCkpO18weDJkNDNhZltfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4N2MnKV0oXzB4OGU1OWMzKT9fMHgyZDQzYWZbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHg3ZCcpXShfMHg4ZTU5YzMpW18weDZkNjQoJzB4N2UnKV0oZnVuY3Rpb24oXzB4NDM1MmY4KXtyZXR1cm4gXzB4NWVlYzliKG51bGwsXzB4NDM1MmY4KTt9KVtfMHg2ZDY0KCcweDdmJyldKGZ1bmN0aW9uKF8weDQzNTJmOCl7cmV0dXJuIF8weDVlZWM5YihfMHg0MzUyZjgpO30pOl8weDVlZWM5YihuZXcgRXJyb3IoJ0ZpbGVceDIwXHgyNycrXzB4OGU1OWMzKydceDI3XHgyMGlzXHgyMG5vdFx4MjByZWdpc3RlcmVkLicpKTt9fX19LF8weDJkNDNhZlsnX3JlcG9ydDQwNEFzRXJyb3InXSkpOl8weDJkNDNhZltfMHg2ZDY0KCcweDY3JyldW18weDZkNjQoJzB4NjgnKV0oXzB4NWI0ODJhWydjcmVhdGUnXSh7J21haW4nOnsncm9vdCc6XzB4MmQ0M2FmW18weDZkNjQoJzB4NTgnKV0sJ2NhY2hlJzpfMHgyZDQzYWZbXzB4NmQ2NCgnMHg2NScpXX19LF8weDJkNDNhZltfMHg2ZDY0KCcweDgwJyldKSk7fTtfMHgyYzc1NDJbXzB4NmQ2NCgnMHg4MScpXT17J3ByZXBhcmVTYW5kYm94JzpmdW5jdGlvbihfMHg0MzUyZjgsXzB4NWVlYzliLF8weDJkNDNhZil7dmFyIF8weDMxMDc3OT10aGlzO18weDQzNTJmOFtfMHg2ZDY0KCcweDgyJyldPV9bJ3JlZHVjZSddKF8weDQzNTJmOFtfMHg2ZDY0KCcweDgzJyldWydjb25jYXQnXShfMHg0MzUyZjhbXzB4NmQ2NCgnMHg4NCcpXSksZnVuY3Rpb24oXzB4NDM1MmY4LF8weDVlZWM5Yil7cmV0dXJuIF8weDQzNTJmOFtfMHg1ZWVjOWJbXzB4NmQ2NCgnMHg4NScpXV09eyd0cyc6XzB4NWVlYzliWyd0cyddLCdpZCc6XzB4NWVlYzliW18weDZkNjQoJzB4ODYnKV0mJl8weDVlZWM5YltfMHg2ZDY0KCcweDg3JyldP18weDVlZWM5Ylsnb3JpZ2luYWxJZCddOl8weDVlZWM5YlsnaWQnXX0sXzB4NDM1MmY4O30se30pO3ZhciBfMHg4ZTU5YzM9XzB4NDM1MmY4W18weDZkNjQoJzB4ODMnKV1bXzB4NmQ2NCgnMHg4OCcpXShfMHg0MzUyZjhbXzB4NmQ2NCgnMHg4NCcpXSksXzB4MzkyZjZjPV8weDQzNTJmOFtfMHg2ZDY0KCcweDg5JyldW18weDZkNjQoJzB4ODgnKV0oXzB4NDM1MmY4Wyd0ZXN0RmlsZXNUb0xvYWQnXSksXzB4MjdhZWNmPV9bXzB4NmQ2NCgnMHg4YScpXShfMHg0MzUyZjhbXzB4NmQ2NCgnMHg4YicpXSxmdW5jdGlvbihfMHg0MzUyZjgsXzB4NWVlYzliKXtpZihfMHg2ZDY0KCcweDhjJykhPT0nR1pQQ28nKXtyZXR1cm4gXzB4NDM1MmY4W18weDVlZWM5YlsnaWQnXV09XzB4NWVlYzliLF8weDQzNTJmODt9ZWxzZXtpZihfMHg1ZWVjOWIpdGhyb3cgXzB4NWVlYzliW18weDZkNjQoJzB4OGQnKV07fX0se30pO18weDVjNzAzMCgnVG90YWxceDIwZmlsZXNceDIwdG9ceDIwbG9hZFx4MjBpblx4MjBzYW5kYm94Olx4MjAnK18weDM5MmY2Y1tfMHg2ZDY0KCcweDhlJyldKTt2YXIgXzB4NWI0ODJhPV8weDMxMDc3OVsnX3dvcmtlclBvb2wnXVtfMHg2ZDY0KCcweDhmJyldKCk7XzB4MzEwNzc5W18weDZkNjQoJzB4OTAnKV09ITB4MTt2YXIgXzB4MTI1NWQ4PV8weDMxMDc3OVsnX3Byb2plY3QnXVsnaXNOYXRpdmVCdW5kbGVyJ10oKTtfMHgzMTA3NzlbXzB4NmQ2NCgnMHg2MycpXVtfMHgyZDQzYWZdPV8weDFkNDg4NVtfMHg2ZDY0KCcweDkxJyldKF8weDZkNjQoJzB4OTInKSxmdW5jdGlvbigpe3JldHVybiBfW18weDZkNjQoJzB4OGEnKV0oXzB4OGU1OWMzLGZ1bmN0aW9uKF8weDQzNTJmOCxfMHg1ZWVjOWIpe2lmKF8weDZkNjQoJzB4OTMnKT09PV8weDZkNjQoJzB4OTQnKSl7XzB4MmQ0M2FmKF8weDMxMDc3OSk7fWVsc2V7cmV0dXJuIF8weDQzNTJmOCsoX1snaXNOdW1iZXInXShfMHg1ZWVjOWJbJ2lkJ10pP18weDZkNjQoJzB4OTUnKStfMHg1ZWVjOWJbJ2lkJ10rXzB4NmQ2NCgnMHg54oCLNicpK18weDVlZWM5YltfMHg2ZDY0KCcweDk3JyldK18weDZkNjQoJzB4OTgnKTonJyk7fX0sXzB4NmQ2NCgnMHg5OScpK18weDViNDgyYSsnO3dpbmRvdy4kXyRzZXNzaW9uPVx4MjInK18weDVlZWM5YisnXHgyMjt3aW5kb3cuJF8kYmFzZURpcj0nK0pTT05bXzB4NmQ2NCgnMHg5YScpXShfMHgxMjU1ZDg/XzB4MzEwNzc5W18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHg3NycpXTpfMHgzMTA3NzlbJ19iYXNlRGlyJ10pKyc7d2luZG93LiRfJGluaXRpYWxTcGVjSWQ9JysweDE4NmEwKihfMHgyZDQzYWYrMHgxKSsnO3dpbmRvdy4kXyRyZXBvcnRVbmhhbmxlZFByb21pc2VzPScrXzB4MzEwNzc5W18weDZkNjQoJzB4OWInKV0rXzB4NmQ2NCgnMHg5YycpK18weDMxMDc3OVtfMHg2ZDY0KCcweDVmJyldK18weDZkNjQoJzB4OWQnKStfMHgzMTA3NzlbJ19tYXhMb2dFbnRyeVNpemUnXSsnO3dpbmRvdy4kXyR0cmFjZUNvbnRleHQ9JytKU09OW18weDZkNjQoJzB4OWEnKV0oXzB4MzEwNzc5W18weDZkNjQoJzB4NTcnKV1bXzB4NmQ2NCgnMHg5ZScpXSgpKSsnO3dpbmRvdy4kXyRjb3ZlcmFnZT1bXTtceDIwdmFyXHgyMGZpbGUsXHgyMGksXHgyMGxlbjsnKSsnd2luZG93LiRfJHNsb3c9JytfMHgzMTA3NzlbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHg1YycpXSgpW18weDZkNjQoJzB4OWYnKV0rXzB4NmQ2NCgnMHhhMCcpK0pTT05bJ3N0cmluZ2lmeSddKF8weDQzNTJmOFtfMHg2ZDY0KCcweGExJyldKSsnO3dpbmRvdy4kXyRmaWxlcz0nK0pTT05bXzB4NmQ2NCgnMHg5YScpXShfMHg0MzUyZjhbXzB4NmQ2NCgnMHg4MicpXSkrXzB4NmQ2NCgnMHhhMicpKyhfMHg0MzUyZjhbXzB4NmQ2NCgnMHhhMycpXT9KU09OW18weDZkNjQoJzB4OWEnKV0oXzB4NDM1MmY4Wyd0ZXN0cyddKTpfMHg2ZDY0KCcweGE0JykpK18weDZkNjQoJzB4YTUnKStKU09OWydzdHJpbmdpZnknXShfW18weDZkNjQoJzB4YTYnKV0oXzB4NDM1MmY4W18weDZkNjQoJzB4ODQnKV0pWydmaWx0ZXInXShmdW5jdGlvbihfMHg0MzUyZjgpe3JldHVybiFfMHg0MzUyZjhbXzB4NmQ2NCgnMHg3YScpXTt9KVtfMHg2ZDY0KCcweGE3JyldKGZ1bmN0aW9uKF8weDVlZWM5Yil7cmV0dXJueydwYXRoJzpfMHgxMjU1ZDg/XzB4NWVlYzliW18weDZkNjQoJzB4ODUnKV06XzB4NWVlYzliWydyZWxhdGl2ZVBhdGgnXSwnbG9hZGVkJzpfMHg1ZWVjOWJbXzB4NmQ2NCgnMHhhOCcpXSYmISFfMHgyN2FlY2ZbXzB4NWVlYzliWydpZCddXSwnaWQnOihfMHg0MzUyZjhbXzB4NmQ2NCgnMHg4MicpXVtfMHg1ZWVjOWJbJ25vcm1hbGl6ZWRSZWxhdGl2ZVBhdGgnXV18fHt9KVsnaWQnXX07fSlbXzB4NmQ2NCgnMHhhOScpXSgpKSsnO30pKCk7PC9zY3JpcHQ+PHNjcmlwdFx4MjBzcmM9XHgyMicrXzB4NGM1N2FlK18weDZkNjQoJzB4YWEnKStfMHg0YzU3YWUrJy8nK18weDQzNTJmOFtfMHg2ZDY0KCcweGFiJyldWyd2ZXJzaW9uJ10rXzB4NmQ2NCgnMHhhYycpK18weDRjNTdhZSsnLycrXzB4NDM1MmY4W18weDZkNjQoJzB4YWInKV1bJ2NvbmZpZ3VyYXRvciddK18weDZkNjQoJzB4YWQnKStfMHg0YzU3YWUrJy8nK18weDQzNTJmOFtfMHg2ZDY0KCcweGFiJyldWydyZXBvcnRlciddKycvcmVwb3J0ZXIuanNceDIyPjwvc2NyaXB0PicrX1tfMHg2ZDY0KCcweDhhJyldKF8weDM5MmY2YyxmdW5jdGlvbihfMHg0MzUyZjgsXzB4NWVlYzliKXtfMHgzMTA3NzlbXzB4NmQ2NCgnMHg5MCcpXT1fMHgzMTA3NzlbXzB4NmQ2NCgnMHg5MCcpXXx8XzB4NWVlYzliW18weDZkNjQoJzB4YWUnKV07dmFyIF8weDJkNDNhZj1fMHg1ZWVjOWJbXzB4NmQ2NCgnMHg4NicpXSxfMHg4ZTU5YzM9XzB4NWVlYzliWyd0cyddKyhfMHgyZDQzYWY/XzB4NWVlYzliW18weDZkNjQoJzB4ODcnKV0/XzB4MzEwNzc5Wydfd2FsbGFieUZpbGVJZFByZWZpeCddK18weDVlZWM5YltfMHg2ZDY0KCcweDg3JyldOicnOl8weDMxMDc3OVtfMHg2ZDY0KCcweDY2JyldK18weDVlZWM5YlsnaWQnXSk7c3dpdGNoKF8weDVlZWM5YltfMHg2ZDY0KCcweDMwJyldKXtjYXNlJ2pzJzpjYXNlJ21qcyc6Y2FzZSBfMHg2ZDY0KCcweDFiJyk6Y2FzZSBfMHg2ZDY0KCcweGFmJyk6Y2FzZSdlczcnOnJldHVybiBfMHg0MzUyZjgrXzB4NmQ2NCgnMHhiMCcpKyhfMHg1ZWVjOWJbXzB4NmQ2NCgnMHhhZScpXT9fMHg2ZDY0KCcweGIxJyk6JycpK18weDZkNjQoJzB4YjInKStfMHg1ZWVjOWJbJ25vcm1hbGl6ZWRSZWxhdGl2ZVBhdGgnXSsnPycrXzB4OGU1OWMzKydceDIyPjwvc2NyaXB0Pic7Y2FzZSBfMHg2ZDY0KCcweGIzJyk6Y2FzZSBfMHg2ZDY0KCcweGI0Jyk6cmV0dXJuIF8weDQzNTJmOCtfMHg2ZDY0KCcweGI1JykrXzB4NWVlYzliW18weDZkNjQoJzB4ODUnKV0rJz8nK18weDVlZWM5YlsndHMnXStfMHg2ZDY0KCcweGI2Jyk7Y2FzZSBfMHg2ZDY0KCcweGI3Jyk6cmV0dXJuIF8weDQzNTJmOCtfMHg2ZDY0KCcweGI4JykrXzB4NWVlYzliW18weDZkNjQoJzB4ODUnKV0rJz8nK1/igIsweDhlNTljMytfMHg2ZDY0KCcweGI5Jyk7ZGVmYXVsdDpyZXR1cm4gXzB4NDM1MmY4O319LCcnKSsoXzB4MzEwNzc5WydfaW5pdGlhbGl6ZXInXT9fMHg2ZDY0KCcweGJhJykrXzB4MzEwNzc5W18weDZkNjQoJzB4NWInKV0rXzB4NmQ2NCgnMHhiYicpOicnKSsnPHNjcmlwdFx4MjAnKyhfMHgzMTA3NzlbXzB4NmQ2NCgnMHg5MCcpXT9fMHg2ZDY0KCcweGIxJyk6JycpK18weDZkNjQoJzB4YjInKStfMHg0YzU3YWUrJy8nK18weDQzNTJmOFsnZnJhbWV3b3JrJ11bXzB4NmQ2NCgnMHhiYycpXStfMHg2ZDY0KCcweGJkJyk7fSk7dmFyIF8weDJjNzU0Mj1fMHgzMTA3NzlbXzB4NmQ2NCgnMHhiZScpXSgpK18weDZkNjQoJzB4YmYnKStfMHgyZDQzYWYrJy5odG1sJztyZXR1cm4gXzB4NWM3MDMwKF8weDZkNjQoJzB4YzAnKSxfMHgzMTA3NzlbXzB4NmQ2NCgnMHhjMScpXShfMHgyZDQzYWYsXzB4NWVlYzliKSxfMHgyYzc1NDIpLFFbXzB4NmQ2NCgnMHhjMicpXShfMHgyYzc1NDIpO30sJ2RvZXNTYW5kYm94Q29udGFpbkVTTW9kdWxlcyc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDkwJyldO30sJ3NhbmRib3hSb290VXJsJzpmdW5jdGlvbigpe2lmKCdHa1pvQychPT1fMHg2ZDY0KCcweGMzJykpe3JldHVybidceDVjJz09PV8weDViNDgyYVsnc2VwJ10mJihfMHg0MzUyZuKAizg9XzB4NDM1MmY4W18weDZkNjQoJzB4OTEnKV0oL1xcL2csJy8nKSksdGhpc1tfMHg2ZDY0KCcweGM0JyldKHRoaXNbXzB4NmQ2NCgnMHhjNScpXShfMHg0MzUyZjgpKTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweGM2JyldP3RoaXNbJ19zYW5kYm94Um9vdFVybCddOih0aGlzWydfc2FuZGJveFJvb3RVcmwnXT1fMHg2ZDY0KCcweGM3JykrdGhpc1tfMHg2ZDY0KCcweDU3JyldW18weDZkNjQoJzB4OGYnKV0oKSsnLycsdGhpc1snX3NhbmRib3hSb290VXJsJ10pO319LCd3ZWJBcHAnOmZ1bmN0aW9uKCl7aWYoJ1JJSHpMJz09PV8weDZkNjQoJzB4YzgnKSl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg2NycpXTt9ZWxzZXtyZXR1cm4gXzB4NDM1MmY4W18weDZkNjQoJzB4OTEnKV0oL1xzL2csXzB4NmQ2NCgnMHhjOScpKTt9fSwnc2FuZGJveE5hbWUnOmZ1bmN0aW9uKF8weDQzNTJmOCxfMHg1ZWVjOWIpe3JldHVybiBfMHg2ZDY0KCcweGNhJykrXzB4NDM1MmY4K18weDZkNjQoJzB4Y2InKStfMHg1ZWVjOWI7fX0sXzB4NWVlYzliWydleHBvcnRzJ109XzB4MmM3NTQyO30seycuL2ZpbGVDYWNoZU1pZGRsZXdhcmUnOjB4MWQsJy4vdXRpbHMnOjB4MjIsJ2NvbXByZXNzaW9uJzp2b2lkIDB4MCwnZXhwcmVzcyc6dm9pZCAweDAsJ2dyYWNlZnVsLWZzJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDB9XSw1OltmdW5jdGlvbihfMHg2ZDc0NTcsXzB4NGQ2NWM4LF8weDVjYTI2NSl7dmFyIF8weDNmMGNlMz10aGlzJiZ0aGlzWydfX2F3YWl0ZXInXXx8ZnVuY3Rpb24oXzB4NmQ3NDU3LF8weDRkNjVjOCxfMHg1Y2EyNjUsXzB4M2YwY2UzKXtyZXR1cm4gbmV3KF8weDVjYTI2NXx8KF8weDVjYTI2NT1Qcm9taXNlKSkoZnVuY3Rpb24oXzB4NTdmYTVjLF8weDM0ZDg0OCl7ZnVuY3Rpb24gXzB4Y2YyMjkyKF8weDZkNzQ1Nyl7aWYoJ0V3V1FmJz09PSdBRUNuZycpe3ZhciBfMHgxYzZkYWI9dGhpcyxfMHhlYThiYj10aGlzW18weDZkNjQoJzB4Y2MnKV07dGhpc1tfMHg2ZDY0KCcweGNjJyldPVtdLF9bXzB4NmQ2NCgnMHgzYScpXShfMHhlYThiYixmdW5jdGlvbihfMHhlYThiYixfMHg1MTRlYTkpe3JldHVybiBfMHgxYzZkYWJbJ19zdGFjayddW18weDZkNjQoJzB4MWMnKV0obmV3IF8weDNmMGNlMyhfMHhlYThiYlsweDBdLF8weGVhOGJiWzB4MV0sXzB4MWM2ZGFiW18weDZkNjQoJzB4Y2QnKV1bXzB4NTE0ZWE5XSkpO30pLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4Y2QnKV07fWVsc2V7dHJ5e18weDQ4YTQ4MihfMHgzZjBjZTNbJ25leHQnXShfMHg2ZDc0NTcpKTt9Y2F0Y2goXzB4MjczYzk2KXtfMHgzNGQ4NDgoXzB4MjczYzk2KTt9fX1mdW5jdGlvbiBfMHgyMzE5MGIoXzB4NmQ3NDU3KXt0cnl7aWYoXzB4NmQ2NCgnMHhjZScpPT09XzB4NmQ2NCgnMHhjZScpKXtfMHg0OGE0ODIoXzB4M2YwY2UzW18weDZkNjQoJzB4Y2YnKV0oXzB4NmQ3NDU3KSk7fWVsc2V7ZyYmIWdbJ2RvbmUnXSYmKF8weDIzMTkwYj1fW18weDZkNjQoJzB4ZDAnKV0pJiZfMHgyMzE5MGJbXzB4NmQ2NCgnMHgzJyldKF8pO319Y2F0Y2goXzB4NjYzOGE0KXtpZignVXZGZE8nPT09XzB4NmQ2NCgnMHhkMScpKXtfMHgzNGQ4NDgoXzB4NjYzOGE0KTt9ZWxzZXtkZWxldGUgXzB4MjMxOTBiW18weDZkNjQoJzB4ZDInKV07fX19ZnVuY3Rpb24gXzB4NDhhNDgyKF8weDZkNzQ1Nyl7XzB4NmQ3NDU3W18weDZkNjQoJzB4ZDMnKV0/XzB4NTdmYTVjKF8weDZkNzQ1N1tfMHg2ZDY0KCcweGE5JyldKTpuZXcgXzB4NWNhMjY1KGZ1bmN0aW9uKF8weDRkNjVjOCl7XzB4NGQ2NWM4KF8weDZkNzQ1N1tfMHg2ZDY0KCcweGE5JyldKTt9KVtfMHg2ZDY0KCcweDdlJyldKF8weGNmMjI5MixfMHgyMzE5MGIpO31fMHg0OGE0ODIoKF8weDNmMGNlMz1fMHgzZjBjZTNbXzB4NmQ2NCgnMHhkNCcpXShfMHg2ZDc0NTcsXzB4NGQ2NWM4fHxbXSkpW18weDZkNjQoJzB4ZDUnKV0oKSk7fSk7fSxfMHg1N2ZhNWM9dGhpcyYmdGhpc1snX19nZW5lcmF0b3InXXx8ZnVuY3Rpb24oXzB4NmQ3NDU3LF8weDRkNjVjOCl7ZnVuY3Rpb24gXzB4NWNhMjY1KF8weDZkNzQ1Nyl7aWYoXzB4NmQ2NCgnMHhkNicpIT09XzB4NmQ2NCgnMHhkNycpKXtyZXR1cm4gZnVuY3Rpb24oXzB4NGQ2NWM4KXtyZXR1cm4gXzB4M2YwY2UzKFtfMHg2ZDc0NTcsXzB4NGQ2NWM4XSk7fTt9ZWxzZXt0aGlzWydfdHJ1bmNhdGVDb25zb2xlTG9nVGV4dCddKHRoaXNbJ190ZXN0RmlsdGVyU3RhdGUnXSk7dmFyIF8weDZjODhmPXRoaXNbXzB4NmQ2NCgnMHhkOCcpXSxfMHgxNzdhYjE9XzB4NmM4OGZbXzB4NmQ2NCgnMHhkOScpXSxfMHgzOTkyNDU9XzB4NmM4OGZbJ2FsbE5vdENvdmVyZWQnXSxfMHhlODA0M2I9XzB4NmM4OGZbXzB4NmQ2NCgnMHhkYScpXSxfMHgxYWExYzM9XzB4NmM4OGZbXzB4NmQ2NCgnMHhkYicpXTt0aGlzW18weDZkNjQoJzB4ZDgnKV1bXzB4NmQ2NCgnMHhkYycpXT10aGlzW18weDZkNjQoJzB4ZGQnKV0oXzB4ZTgwNDNiLF8weDFhYTFjMyxfMHgzOTkyNDUsXzB4MTc3YWIxKTt9fWZ1bmN0aW9uIF8weDNmMGNlMyhfMHg1Y2EyNjUpe2lmKF8weDU3ZmE1Yyl0aHJvdyBuZXcgVHlwZUVycm9yKF8weDZkNjQoJzB4ZGUnKSk7Zm9yKDtfMHg0OGE0ODI7KXRyeXtpZihfMHg1N2ZhNWM9MHgxLF8weDM0ZDg0OCYmKF8weGNmMjI5Mj0weDImXzB4NWNhMjY1WzB4MF0/XzB4MzRkODQ4W18weDZkNjQoJzB4ZDAnKV06XzB4NWNhMjY1WzB4MF0/XzB4MzRkODQ4W18weDZkNjQoJzB4Y2YnKV18fCgoXzB4Y2YyMjkyPV8weDM0ZDg0OFtfMHg2ZDY0KCcweGQwJyldKSYmXzB4Y2YyMjkyW18weDZkNjQoJzB4MycpXShfMHgzNGQ4NDgpLDB4MCk6XzB4MzRkODQ4W18weDZkNjQoJzB4ZDUnKV0pJiYhKF8weGNmMjI5Mj1fMHhjZjIyOTJbJ2NhbGwnXShfMHgzNGQ4NDgsXzB4NWNhMjY1WzB4MV0pKVsnZG9uZSddKXJldHVybiBfMHhjZjIyOTI7c3dpdGNoKF8weDM0ZDg0OD0weDAsXzB4Y2YyMjkyJiYoXzB4NWNhMjY1PVsweDImXzB4NWNhMjY1WzB4MF0sXzB4Y2YyMjkyW18weDZkNjQoJzB4YTknKV1dKSxfMHg1Y2EyNjVbMHgwXSl7Y2FzZSAweDA6Y2FzZSAweDE6XzB4Y2YyMjkyPV8weDVjYTI2NTticmVhaztjYXNlIDB4NDpyZXR1cm4gXzB4NDhhNDgyW18weDZkNjQoJzB4ZGYnKV0rKyx7J3ZhbHVlJzpfMHg1Y2EyNjVbMHgxXSwnZG9uZSc6ITB4MX07Y2FzZSAweDU6XzB4NDhhNDgyWydsYWJlbCddKyssXzB4MzRkODQ4PV8weDVjYTI2NVsweDFdLF8weDVjYTI2NT1bMHgwXTtjb250aW51ZTtjYXNlIDB4NzpfMHg1Y2EyNjU9XzB4NDhhNDgyW18weDZkNjQoJzB4ZTAnKV1bXzB4NmQ2NCgnMHhlMScpXSgpLF8weDQ4YTQ4MltfMHg2ZDY0KCcweGUyJyldW18weDZkNjQoJzB4ZTEnKV0oKTtjb250aW51ZTtkZWZhdWx0OmlmKF8weGNmMjI5Mj1fMHg0OGE0ODJbJ3RyeXMnXSwhKF8weGNmMjI5Mj1fMHhjZjIyOTJbXzB4NmQ2NCgnMHg4ZScpXT4weDAmJl8weGNmMjI5MltfMHhjZjIyOTJbXzB4NmQ2NCgnMHg4ZScpXS0weDFdKSYmKDB4Nj09PV8weDVjYTI2NVsweDBdfHwweDI9PT1fMHg1Y2EyNjVbMHgwXSkpe18weDQ4YTQ4Mj0weDA7Y29udGludWU7fWlmKDB4Mz09PV8weDVjYTI2NVsweDBdJiYoIV8weGNmMjI5Mnx8XzB4NWNhMjY1WzB4MV0+XzB4Y2YyMjkyWzB4MF0mJl8weDVjYTI2NVsweDFdPF8weGNmMjI5MlsweDNdKSl7XzB4NDhhNDgyWydsYWJlbCddPV8weDVjYTI2NVsweDFdO2JyZWFrO31pZigweDY9PT1fMHg1Y2EyNjVbMHgwXSYmXzB4NDhhNDgyW18weDZkNjQoJzB4ZGYnKV08XzB4Y2YyMjkyWzB4MV0pe18weDQ4YTQ4MlsnbGFiZWwnXT1fMHhjZjIyOTJbMHgxXSxfMHhjZjIyOTI9XzB4NWNhMjY1O2JyZWFrO31pZihfMHhjZjIyOTImJl8weDQ4YTQ4MltfMHg2ZDY0KCcweGRmJyldPF8weGNmMjI5MlsweDJdKXtfMHg0OGE0ODJbXzB4NmQ2NCgnMHhkZicpXT1fMHhjZjIyOTJbMHgyXSxfMHg0OGE0ODJbXzB4NmQ2NCgnMHhlMCcpXVsncHVzaCddKF8weDVjYTI2NSk7YnJlYWs7fV8weGNmMjI5MlsweDJdJiZfMHg0OGE0ODJbXzB4NmQ2NCgnMHhlMCcpXVtfMHg2ZDY0KCcweGUxJyldKCksXzB4NDhhNDgyW18weDZkNjQoJzB4ZTInKV1bXzB4NmQ2NCgnMHhlMScpXSgpO2NvbnRpbnVlO31fMHg1Y2EyNjU9XzB4NGQ2NWM4WydjYWxsJ10oXzB4NmQ3NDU3LF8weDQ4YTQ4Mik7fWNhdGNoKF8weDVkZWQxZil7aWYoXzB4NmQ2NCgnMHhlMycpPT09J0FpakZXJyl7XzB4NWNhMjY1PVsweDYsXzB4NWRlZDFmXSxfMHgzNGQ4NDg9MHgwO31lbHNle3ZhciBfMHgxZTZmMTA9XzB4NmQ3NDU3WydrZXknXSgpLF8weDJmM2ViMj10aGlzW18weDZkNjQoJzB4ZTQnKV1bXzB4MWU2ZjEwXTt0aGlzW18weDZkNjQoJzB4ZTQnKV1bXzB4MWU2ZjEwXT1fMHg2ZDc0NTcsZGVsZXRlIHRoaXNbJ19mYWlsaW5nVGVzdHMnXVtfMHgxZTZmMTBdLF8weDZkNzQ1N1tfMHg2ZDY0KCcweGU1JyldKCkmJih0aGlzW18weDZkNjQoJzB4ZTYnKV1bXzB4MWU2ZjEwXT1fMHg2ZDc0NTcpLHRoaXNbXzB4NmQ2NCgnMHhlNycpXT0hXzB4MmYzZWIyfHxfMHgyZjNlYjImJl8weDJmM2ViMltfMHg2ZDY0KCcweGU1JyldKCl8fF8weDZkNzQ1N1snaXNGYWlsaW5nJ10oKXx8dGhpc1tfMHg2ZDY0KCcweGU3JyldO319ZmluYWxseXtfMHg1N2ZhNWM9XzB4Y2YyMjkyPTB4MDt9aWYoMHg1Jl8weDVjYTI2NVsweDBdKXRocm93IF8weDVjYTI2NVsweDFdO3JldHVybnsndmFsdWUnOl8weDVjYTI2NVsweDBdP18weDVjYTI2NVsweDFdOnZvaWQgMHgwLCdkb25lJzohMHgwfTt9dmFyIF8weDU3ZmE1YyxfMHgzNGQ4NDgsXzB4Y2YyMjkyLF8weDIzMTkwYixfMHg0OGE0ODI9eydsYWJlbCc6MHgwLCdzZW50JzpmdW5jdGlvbigpe2lmKDB4MSZfMHhjZjIyOTJbMHgwXSl0aHJvdyBfMHhjZjIyOTJbMHgxXTtyZXR1cm4gXzB4Y2YyMjkyWzB4MV07fSwndHJ5cyc6W10sJ29wcyc6W119O3JldHVybiBfMHgyMzE5MGI9eyduZXh0JzpfMHg1Y2EyNjUoMHgwKSwndGhyb3cnOl8weDVjYTI2NSgweDEpLCdyZXR1cm4nOl8weDVjYTI2NSgweDIpfSwnZnVuY3Rpb24nPT10eXBlb2YgU3ltYm9sJiYoXzB4MjMxOTBiW1N5bWJvbFtfMHg2ZDY0KCcweGU4JyldXT1mdW5jdGlvbigpe3JldHVybiB0aGlzO30pLF8weDIzMTkwYjt9LF8weDM0ZDg0OD1fMHg2ZDc0NTcoXzB4NmQ2NCgnMHhlOScpKSxfMHhjZjIyOTI9XzB4NmQ3NDU3KF8weDZkNjQoJzB4ZWEnKSksXzB4MjMxOTBiPV8weDZkNzQ1NyhfMHg2ZDY0KCcweGViJykpLF8weDQ4YTQ4Mj1fMHg2ZDc0NTcoXzB4NmQ2NCgnMHhlYycpKSxfMHhjNzVlY2Q9bG9nZ2VyW18weDZkNjQoJzB4M2InKV0oXzB4NmQ2NCgnMHhlZCcpKVtfMHg2ZDY0KCcweDU2JyldLF8weDFhNGRmZT1mdW5jdGlvbigpe2Z1bmN0aW9uIF8weDRkNjVjOChfMHg2ZDc0NTcpe2lmKCdXS3p6WCchPT1fMHg2ZDY0KCcweGVlJykpe3RoaXNbXzB4NmQ2NCgnMHhlZicpXT1Qcm9taXNlW18weDZkNjQoJzB4ZjAnKV0oKSx0aGlzW18weDZkNjQoJzB4NTknKV09XzB4NmQ3NDU3O3ZhciBfMHg0ZDY1Yzg9XzB4NmQ3NDU3W18weDZkNjQoJzB4NWMnKV0oKVtfMHg2ZDY0KCcweGYxJyldO3RoaXNbXzB4NmQ2NCgnMHhmMicpXT1fMHg0ZDY1YzhbJ3J1bm5lciddLF8weDRkNjVjOFsncGFyYW1zJ10mJl8weDRkNjVjOFtfMHg2ZDY0KCcweDZlJyldW18weDZkNjQoJzB4ZjMnKV0mJih0aGlzW18weDZkNjQoJzB4ZjQnKV09XzB4NGQ2NWM4W18weDZkNjQoJzB4NmUnKV1bXzB4NmQ2NCgnMHhmMycpXVtfMHg2ZDY0KCcweGY1JyldKCdceDIwJykpLF8weDRkNjVjOFsna2VlcFRhYnNPcGVuZWQnXSYmKHRoaXNbXzB4NmQ2NCgnMHhmNicpXT1fMHg0ZDY1YzhbXzB4NmQ2NCgnMHhmNycpXSksdGhpc1tfMHg2ZDY0KCcweGY4JyldPXRoaXNbXzB4NmQ2NCgnMHhmOScpXSgpLHRoaXNbXzB4NmQ2NCgnMHg1NycpXT1uZXcgXzB4MjMxOTBiKHRoaXNbJ19wcm9qZWN0J10seydjcmVhdGUnOl9bJ2JpbmQnXSh0aGlzWydfY3JlYXRlJ10sdGhpcyksJ3JlY3ljbGUnOl9bXzB4NmQ2NCgnMHhmYScpXSh0aGlzW18weDZkNjQoJzB4ZmInKV0sdGhpcyksJ2hlYWx0aHknOmZ1bmN0aW9uKCl7cmV0dXJuITB4MDt9LCdwcmVwYXJlJzpfW18weDZkNjQoJzB4ZmEnKV0odGhpc1snX3ByZXBhcmVUYWInXSx0aGlzKX0pLHRoaXNbXzB4NmQ2NCgnMHhmYycpXT1uZXcgXzB4NDhhNDgyKF8weDZkNzQ1Nyx0aGlzWydfd29ya2VyUG9vbCddKTt9ZWxzZXt2YXIgXzB4NDYxNGM3PXRoaXM7Y2xlYXJUaW1lb3V0KHRoaXNbXzB4NmQ2NCgnMHhmZCcpXSksY2xlYXJUaW1lb3V0KHRoaXNbXzB4NmQ2NCgnMHhmZScpXSksY2xlYXJUaW1lb3V0KHRoaXNbXzB4NmQ2NCgnMHhmZicpXSksXzB4NDYxNGM3W18weDZkNjQoJzB4MTAwJyldKCksdGhpc1snX2Rpc3Bvc2UnXShmdW5jdGlvbigpe18weDIzMTkwYltfMHg2ZDY0KCcweDEwMScpXT9fMHhjZjIyOTIoeydydW5DYW5jZWxsZWQnOiEweDB9KTpfMHg1N2ZhNWMoeydzZXNzaW9uJzpfMHg0NjE0YzcsJ3RpbWUnOl8weDRkNjVjOCYmXzB4NGQ2NWM4W18weDZkNjQoJzB4MTAyJyldfSk7fSksXzB4NDhhNDgyKF8weDZkNjQoJzB4MTAzJyksXzB4NmQ3NDU3LHRoaXNbXzB4NmQ2NCgnMHhlNCcpXVtfMHg2ZDY0KCcweDhlJyldLXRoaXNbXzB4NmQ2NCgnMHgxMDQnKV0sdGhpc1tfMHg2ZDY0KCcweDEwNCcpXSk7fX1yZXR1cm4gXzB4NGQ2NWM4W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgxMDUnKV09ZnVuY3Rpb24oXzB4NmQ3NDU3KXtyZXR1cm4gdGhpc1snX3dvcmtlclBvb2wnXVtfMHg2ZDY0KCcweDEwNScpXShfMHg2ZDc0NTcpO30sXzB4NGQ2NWM4W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgxMDYnKV09ZnVuY3Rpb24oXzB4NmQ3NDU3KXtpZihfMHg2ZDY0KCcweDEwNycpIT09XzB4NmQ2NCgnMHgxMDgnKSl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDEwNicpXShfMHg2ZDc0NTcpO31lbHNle18weDZkNzQ1N1tfMHg2ZDY0KCcweDEwOScpXVsnc2V0QnJvYWRjYXN0J10oITB4MCksXzB4NmQ3NDU3W18weDZkNjQoJzB4MTA5JyldW18weDZkNjQoJzB4MTBhJyldKF8weGM3NWVjZFtfMHg2ZDY0KCcweDEwYicpXSksXzB4NmQ3NDU3W18weDZkNjQoJzB4MTA5JyldW18weDZkNjQoJzB4MTBjJyldKF8weGM3NWVjZFtfMHg2ZDY0KCcweDEwZCcpXSk7fX0sXzB4NGQ2NWM4W18weDZkNjQoJzB4ODEnKV1bJ3N0YXJ0J109ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDEwZScpPT09J254RkhyJyl7dGhpc1sncmVtb3ZlUmFuZ2VzJ10oKSxkZWxldGUgdGhpc1snX2NvbnNvbGVMb2dUZXh0J10sZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHgxMGYnKV0sZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHgxMTAnKV0sZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHhkYycpXSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweGQ4JyldLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4MTExJyldLHRoaXNbJ19pc0Rpc3Bvc2VkJ109ITB4MDt9ZWxzZXtyZXR1cm4gXzB4M2YwY2UzKHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXt2YXIgXzB4NmQ3NDU3O3JldHVybiBfMHg1N2ZhNWModGhpcyxmdW5jdGlvbihfMHg0ZDY1Yzgpe3N3aXRjaChfMHg0ZDY1YzhbXzB4NmQ2NCgnMHhkZicpXSl7Y2FzZSAweDA6cmV0dXJuWzB4NCx0aGlzW18weDZkNjQoJzB4NTcnKV1bXzB4NmQ2NCgnMHgzMScpXSh0aGlzWydfYnJvd3NlckVudmlyb25tZW50J11bXzB4NmQ2NCgnMHgxMTInKV0oKSldO2Nhc2UgMHgxOnJldHVybiBfMHg2ZDc0NTc9XzB4NGQ2NWM4W18weDZkNjQoJzB4MTEzJyldKCksdGhpc1tfMHg2ZDY0KCcweDU3JyldWydzZXRGaWxlUm9vdCddKHRoaXNbXzB4NmQ2NCgnMHhmYycpXVtfMHg2ZDY0KCcweGJlJyldKCkpLFsweDIsXzB4NmQ3NDU3XTt9fSk7fSk7fX0sXzB4NGQ2NWM4Wydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDExNCcpXT1mdW5jdGlvbigpe2lmKCd3RlJpVCchPT1fMHg2ZDY0KCcweDExNScpKXtpZih0aGlzW18weDZkNjQoJzB4NTcnKV1bXzB4NmQ2NCgnMHgxMTQnKV0oKSx0aGlzW18weDZkNjQoJzB4MTE2JyldKXRyeXtwcm9jZXNzW18weDZkNjQoJzB4MTE3JyldKHRoaXNbXzB4NmQ2NCgnMHgxMTYnKV1bXzB4NmQ2NCgnMHgxMTgnKV0pO31jYXRjaChfMHhiMjEwMjgpe319ZWxzZXt2YXIgXzB4NDExZDYyPV9bXzB4NmQ2NCgnMHgxMTknKV0odGhpc1tfMHg2ZDY0KCcweDNmJyldKTtyZXR1cm4gMHgwPT09XzB4NDExZDYyJiZ0aGlzW18weDZkNjQoJzB4MTFhJyldJiYhdGhpc1tfMHg2ZDY0KCcweDExYicpXT8oIV8weDZkNzQ1NyYmdGhpc1tfMHg2ZDY0KCcweDExYycpXSgpLF9bXzB4NmQ2NCgnMHgxMWQnKV0odGhpc1snX29yaWdpbmFsUmFuZ2VDb3VudCddKT90aGlzW18weDZkNjQoJzB4MTFlJyldOjB4MSk6XzB4NDExZDYyO319LF8weDRkNjVjOFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MTFmJyldPWZ1bmN0aW9uKF8weDZkNzQ1NyxfMHg0ZDY1Yzgpe2lmKCdQdWNVUCc9PT1fMHg2ZDY0KCcweDEyMCcpKXtyZXR1cm4gXzB4M2YwY2UzKHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXtyZXR1cm4gXzB4NTdmYTVjKHRoaXMsZnVuY3Rpb24oXzB4NWNhMjY1KXtzd2l0Y2goXzB4NWNhMjY1W18weDZkNjQoJzB4ZGYnKV0pe2Nhc2UgMHgwOnJldHVyblsweDQsdGhpc1snX2Nocm9tZVByb21pc2UnXV07Y2FzZSAweDE6cmV0dXJuIF8weDVjYTI2NVtfMHg2ZDY0KCcweDExMycpXSgpLF8weDRkNjVjOCh7J3dvcmtlcklkJzpfMHg2ZDc0NTd9KSxbMHgyXTt9fSk7fSk7fWVsc2V7dmFyIF8weDNjN2JhNz10aGlzW18weDZkNjQoJzB4MTIxJyldW18weDZkNzQ1N1snaWQnXV07ZGVsZXRlIHRoaXNbJ19jYWxsYmFja3MnXVtfMHg2ZDc0NTdbJ2lkJ11dLF8weDNjN2JhNyYmKGNsZWFyVGltZW91dChfMHgzYzdiYTdbXzB4NmQ2NCgnMHgxMjInKV0pLF8weDNjN2JhN1tfMHg2ZDY0KCcweGQzJyldKF8weDZkNzQ1NykpO319LF8weDRkNjVjOFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4ZmInKV09ZnVuY3Rpb24oXzB4NmQ3NDU3KXt0aGlzW18weDZkNjQoJzB4MTIzJyldKF8weDZkNzQ1Nyk7fSxfMHg0ZDY1YzhbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDEyNCcpXT1mdW5jdGlvbihfMHg0ZDY1YzgsXzB4NWNhMjY1KXtyZXR1cm4gXzB4M2YwY2UzKHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXt2YXIgXzB4M2YwY2UzLF8weDM0ZDg0OCxfMHhjZjIyOTIsXzB4MjMxOTBiLF8weDQ4YTQ4MjtyZXR1cm4gXzB4NTdmYTVjKHRoaXMsZnVuY3Rpb24oXzB4NTdmYTVjKXtpZihfMHg2ZDY0KCcweDEyNScpPT09J3hKbnBaJyl7c3dpdGNoKF8weDU3ZmE1Y1tfMHg2ZDY0KCcweGRmJyldKXtjYXNlIDB4MDpyZXR1cm4gXzB4M2YwY2UzPXRoaXMsXzB4MzRkODQ4PV9bJ3JhbmRvbUlkJ10oKSxfMHhjZjIyOTI9dGhpc1tfMHg2ZDY0KCcweGZjJyldW18weDZkNjQoJzB4YzEnKV0oXzB4NWNhMjY1LF8weDM0ZDg0OCksXzB4Yzc1ZWNkKF8weDZkNjQoJzB4MTI2JyksXzB4Y2YyMjkyKSxbMHg0LHRoaXNbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDEyNycpXShfMHg1Y2EyNjUpXTtjYXNlIDB4MTpyZXR1cm4gXzB4MjMxOTBiPV8weDU3ZmE1Y1tfMHg2ZDY0KCcweDExMycpXSgpLHRoaXNbXzB4NmQ2NCgnMHgxMjgnKV0oKSxfMHhjNzVlY2QoXzB4NmQ2NCgnMHgxMjknKSxfMHhjZjIyOTIpLFsweDQsdGhpc1tfMHg2ZDY0KCcweGZjJyldW18weDZkNjQoJzB4MTJhJyldKF8weDRkNjVjOCxfMHgzNGQ4NDgsXzB4NWNhMjY1KV07Y2FzZSAweDI6cmV0dXJuIF8weDQ4YTQ4Mj1fMHg1N2ZhNWNbXzB4NmQ2NCgnMHgxMTMnKV0oKSx0aGlzWydfY2hlY2tDYW5jZWxsZWQnXSgpLF8weGM3NWVjZChfMHg2ZDY0KCcweDEyYicpLF8weGNmMjI5MiksWzB4Mix7J25hbWUnOl8weGNmMjI5Miwnc2Vzc2lvbklkJzpfMHgzNGQ4NDgsJ3dvcmtlcklkJzpfMHg1Y2EyNjUsJ2luc3RhbmNlJzp7J3Jlc3VtZSc6ZnVuY3Rpb24oKXtfMHgzZjBjZTNbXzB4NmQ2NCgnMHgxMmMnKV0oXzB4MjMxOTBiW18weDZkNjQoJzB4MTJkJyldLGZ1bmN0aW9uKCl7JF8kdHJhY2VyWydyZXN1bWUnXSgpO30pO30sJ3BpbmcnOmZ1bmN0aW9uKF8weDZkNzQ1Nyl7aWYoXzB4NmQ2NCgnMHgxMmUnKT09PV8weDZkNjQoJzB4MTJlJykpe18weDNmMGNlM1tfMHg2ZDY0KCcweDEyYycpXShfMHgyMzE5MGJbXzB4NmQ2NCgnMHgxMmQnKV0sZnVuY3Rpb24oKXt9LF8weDZkNzQ1Nyk7fWVsc2V7dGhpc1snX2FmZmVjdGVkUmFuZ2VzJ11bXzB4NmQ3NDU3W18weDZkNjQoJzB4MTJmJyldKCldPV8weDZkNzQ1Nzt2YXIgXzB4MjQ2ZTMyPV8weDZkNzQ1N1tfMHg2ZDY0KCcweDEzMCcpXSgpO18weDRkNjVjOCE9PV8weDI0NmUzMiYmKHRoaXNbJ19udW1iZXJPZkNvdmVyZWRSYW5nZXMnXeKAiys9XzB4MjQ2ZTMyPzB4MTotMHgxKTt9fSwnY2xvc2UnOmZ1bmN0aW9uKCl7aWYoXzB4NGQ2NWM4W18weDZkNjQoJzB4MTMxJyldKXt2YXIgXzB4NmQ3NDU3PXsnY2xpZW50JzpfMHgyMzE5MGImJl8weDIzMTkwYltfMHg2ZDY0KCcweDEyZCcpXX07XzB4MjMxOTBiJiZkZWxldGUgXzB4MjMxOTBiWydjbGllbnQnXSxfMHgzZjBjZTNbXzB4NmQ2NCgnMHhlZicpXVsndGhlbiddKGZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHgxMzInKT09PV8weDZkNjQoJzB4MTMzJykpe3RoaXNbXzB4NmQ2NCgnMHgxMjMnKV0oXzB4NmQ3NDU3KTt9ZWxzZXtfMHgzZjBjZTNbXzB4NmQ2NCgnMHgxMjMnKV0oXzB4NmQ3NDU3KTt9fSk7fWVsc2UgXzB4M2YwY2UzW18weDZkNjQoJzB4MTIzJyldKF8weDIzMTkwYik7fSwnY2xvc2luZyc6ZnVuY3Rpb24oKXt0cnl7XzB4NGQ2NWM4W18weDZkNjQoJzB4MTMxJyldJiYoXzB4M2YwY2UzW18weDZkNjQoJzB4ZWYnKV09XzB4MjMxOTBiW18weDZkNjQoJzB4MTJkJyldW18weDZkNjQoJzB4MTM0JyldW18weDZkNjQoJzB4MTM1JyldKClbJ3RoZW4nXShmdW5jdGlvbihfMHg1Y2EyNjUpe3ZhciBfMHgzZjBjZTM9bmV3IEJ1ZmZlcihfMHg1Y2EyNjVbXzB4NmQ2NCgnMHgxMzYnKV0sXzB4NmQ2NCgnMHgxMzcnKSk7XzB4NmQ3NDU3KCdmcycpW18weDZkNjQoJzB4MTM4JyldKF8weDRkNjVjOFtfMHg2ZDY0KCcweDEzMScpXSxfMHgzZjBjZTMsXzB4NmQ2NCgnMHgxMzcnKSk7fSkpO31jYXRjaChfMHg0ODVhZDQpe2lmKF8weDZkNjQoJzB4MTM5Jyk9PT1fMHg2ZDY0KCcweDEzOScpKXtfMHgzZjBjZTNbXzB4NmQ2NCgnMHhlZicpXT1Qcm9taXNlW18weDZkNjQoJzB4ZjAnKV0oKTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweGU0JyldW18weDZkNzQ1N107fX19LCdzdGFydCc6ZnVuY3Rpb24oXzB4NmQ3NDU3KXtpZihfMHg2ZDY0KCcweDEzYScpPT09J2tpcHlwJyl7XzB4NmQ3NDU3W18weDZkNjQoJzB4MTNiJyldJiZfMHg2ZDc0NTdbXzB4NmQ2NCgnMHgxM2InKV1bXzB4NmQ2NCgnMHgxM2MnKV0oKTt9ZWxzZXtfMHgzZjBjZTNbXzB4NmQ2NCgnMHgxM2QnKV0oXzB4MjMxOTBiLF8weDQ4YTQ4MixmdW5jdGlvbihfMHg0ZDY1Yzgpe2lmKF8weDZkNjQoJzB4MTNlJyk9PT1fMHg2ZDY0KCcweDEzZScpKXtfMHg2ZDc0NTcoXzB4NGQ2NWM4W18weDZkNjQoJzB4MTNmJyldKSYmXzB4M2YwY2UzW18weDZkNjQoJzB4MTJjJyldKF8weDIzMTkwYltfMHg2ZDY0KCcweDEyZCcpXSxmdW5jdGlvbigpeyRfJHRyYWNlcltfMHg2ZDY0KCcweDMxJyldKCk7fSk7fWVsc2V7dHJ5e18weDNmMGNlMyYmIV8weDNmMGNlM1tfMHg2ZDY0KCcweGQzJyldJiYoXzB4NWNhMjY1PV8weDM0ZDg0OFtfMHg2ZDY0KCcweGQwJyldKSYmXzB4NWNhMjY1WydjYWxsJ10oXzB4MzRkODQ4KTt9ZmluYWxseXtpZihfMHg1N2ZhNWMpdGhyb3cgXzB4NTdmYTVjW18weDZkNjQoJzB4OGQnKV07fX19KTt9fX19XTt9fWVsc2V7XzB4M2YwY2UzJiZfMHgzZjBjZTMoXzB4NGQ2NWM4KTt9fSk7fSk7fSxfMHg0ZDY1YzhbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4MTI4JyldPWZ1bmN0aW9uKCl7aWYoJ2xWVHZLJz09PV8weDZkNjQoJzB4MTQwJykpe2lmKHRoaXNbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDE0MScpXSgpKXRocm93eydydW5DYW5jZWxsZWQnOiEweDB9O31lbHNle3RoaXNbXzB4NmQ2NCgnMHgxNDInKV09XzB4NmQ3NDU3LHRoaXNbXzB4NmQ2NCgnMHgxNDMnKV09XzB4NGQ2NWM4O319LF8weDRkNjVjOFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MTQ0JyldPWZ1bmN0aW9uKF8weDZkNzQ1Nyl7cmV0dXJuIHZvaWQgMHgwPT09XzB4NmQ3NDU3JiYoXzB4NmQ3NDU3PXt9KSxfWydleHRlbmQnXSh7J3BvcnQnOnRoaXNbXzB4NmQ2NCgnMHgxMTYnKV1bXzB4NmQ2NCgnMHgxNDUnKV0sJ2hvc3QnOl8weDZkNjQoJzB4MTQ2Jyl9LF8weDZkNzQ1Nyk7fSxfMHg0ZDY1YzhbJ3Byb3RvdHlwZSddWydfZXZhbHVhdGVPblRhYiddPWZ1bmN0aW9uKF8weDZkNzQ1NyxfMHg0ZDY1YzgsXzB4NWNhMjY1KXtyZXR1cm4gdm9pZCAweDA9PT1fMHg1Y2EyNjUmJihfMHg1Y2EyNjU9X1tfMHg2ZDY0KCcweDE0NycpXSksXzB4M2YwY2UzKHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXt2YXIgXzB4M2YwY2UzO3JldHVybiBfMHg1N2ZhNWModGhpcyxmdW5jdGlvbihfMHg1N2ZhNWMpe3N3aXRjaChfMHg1N2ZhNWNbJ2xhYmVsJ10pe2Nhc2UgMHgwOnJldHVybiBfMHg1N2ZhNWNbXzB4NmQ2NCgnMHhlMicpXVsncHVzaCddKFsweDAsMHgyLCwweDNdKSxfMHg2ZDc0NTdbXzB4NmQ2NCgnMHgxNDgnKV0/WzB4NCxfMHg2ZDc0NTdbXzB4NmQ2NCgnMHgxNDgnKV1bJ2V2YWx1YXRlJ10oeydleHByZXNzaW9uJzonKCcrXzB4NGQ2NWM4W18weDZkNjQoJzB4NTMnKV0oKStfMHg2ZDY0KCcweDE0OScpfSldOlsweDJdO2Nhc2UgMHgxOnJldHVybiBfMHg1N2ZhNWNbJ3NlbnQnXSgpLF8weDVjYTI2NSgpLFsweDMsMHgzXTtjYXNlIDB4MjpyZXR1cm4gXzB4M2YwY2UzPV8weDU3ZmE1Y1tfMHg2ZDY0KCcweDExMycpXSgpLF8weGM3NWVjZChfMHg2ZDY0KCcweDE0YScpK18weDNmMGNlM1tfMHg2ZDY0KCcweDIzJyldKSxbMHgzLDB4M107Y2FzZSAweDM6cmV0dXJuWzB4Ml07fX0pO30pO30sXzB4NGQ2NWM4W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgxM2QnKV09ZnVuY3Rpb24oXzB4NmQ3NDU3LF8weDRkNjVjOCxfMHg1Y2EyNjUpe3JldHVybiB2b2lkIDB4MD09PV8weDVjYTI2NSYmKF8weDVjYTI2NT1fW18weDZkNjQoJzB4MTQ3JyldKSxfMHgzZjBjZTModGhpcyx2b2lkIDB4MCx2b2lkIDB4MCxmdW5jdGlvbigpe3ZhciBfMHgzZjBjZTMsXzB4MzRkODQ4LF8weDIzMTkwYixfMHg0OGE0ODIsXzB4Yzc1ZWNkLF8weDFhNGRmZSxfMHgzNGRhNDIsXzB4NWViMmIwLF8weDVkMGE4NSxfMHgxYTZkOWYsXzB4MWM2ZDZlPXRoaXM7cmV0dXJuIF8weDU3ZmE1Yyh0aGlzLGZ1bmN0aW9uKF8weDU3ZmE1Yyl7aWYoJ0psWmJCJyE9PV8weDZkNjQoJzB4MTRiJykpe3N3aXRjaChfMHg1N2ZhNWNbXzB4NmQ2NCgnMHhkZicpXSl7Y2FzZSAweDA6aWYoXzB4NTdmYTVjW18weDZkNjQoJzB4ZTInKV1bJ3B1c2gnXShbMHgwLDB4MTIsLDB4MTNdKSwhdGhpc1snX2Nocm9tZSddKXRocm93IG5ldyBFcnJvcihfMHg2ZDY0KCcweDE0YycpKTtyZXR1cm5bMHg0LF8weGNmMjI5MltfMHg2ZDY0KCcweDE0ZCcpXSh0aGlzW18weDZkNjQoJzB4MTQ0JyldKHsndXJsJzpfMHg0ZDY1Yzh9KSldO2Nhc2UgMHgxOnJldHVybiBfMHgzZjBjZTM9XzB4NTdmYTVjW18weDZkNjQoJzB4MTEzJyldKCksXzB4NmQ3NDU3W18weDZkNjQoJzB4MTJkJyldPXsndGFyZ2V0Jzp7J2lkJzpfMHgzZjBjZTNbJ2lkJ119fSx0aGlzW18weDZkNjQoJzB4MTI4JyldKCksWzB4NCxfMHhjZjIyOTIoeyd0YWInOl8weDNmMGNlM30pXTtjYXNlIDB4MjpfMHgzNGQ4NDg9XzB4NTdmYTVjW18weDZkNjQoJzB4MTEzJyldKCksXzB4NmQ3NDU3W18weDZkNjQoJzB4MTJkJyldPV8weDM0ZDg0OCx0aGlzW18weDZkNjQoJzB4MTI4JyldKCksXzB4MjMxOTBiPV8weDM0ZDg0OFtfMHg2ZDY0KCcweDEzNCcpXSxfMHg0OGE0ODI9XzB4MzRkODQ4WydOZXR3b3JrJ10sXzB4NTdmYTVjW18weDZkNjQoJzB4ZGYnKV09MHgzO2Nhc2UgMHgzOnJldHVybiBfMHg1N2ZhNWNbJ3RyeXMnXVsncHVzaCddKFsweDMsMHgxMCwsMHgxMV0pLF8weGM3NWVjZD0hIXRoaXNbXzB4NmQ2NCgnMHhmYycpXVsnZG9lc1NhbmRib3hDb250YWluRVNNb2R1bGVzJ10oKSxfMHgxYTRkZmU9W18weDIzMTkwYltfMHg2ZDY0KCcweDE0ZScpXSgpXSxfMHhjNzVlY2QmJl8weDFhNGRmZVtfMHg2ZDY0KCcweDFjJyldKF8weDQ4YTQ4MltfMHg2ZDY0KCcweDE0ZScpXSgpKSxbMHg0LFByb21pc2VbXzB4NmQ2NCgnMHgxNGYnKV0oXzB4MWE0ZGZlKV07Y2FzZSAweDQ6aWYoXzB4NTdmYTVjW18weDZkNjQoJzB4MTEzJyldKCksdGhpc1tfMHg2ZDY0KCcweDEyOCcpXSgpLCFfMHhjNzVlY2QpcmV0dXJuWzB4MywweGRdO18weDQ4YTQ4MlsncmVxdWVzdEludGVyY2VwdGVkJ10oZnVuY3Rpb24oXzB4NmQ3NDU3KXtpZihfMHg2ZDY0KCcweDE1MCcpIT09XzB4NmQ2NCgnMHgxNTAnKSl7dmFyIF8weDUzNGU3MT1fMHgxYzZkNmVbXzB4NmQ2NCgnMHgxNTEnKV0oXzB4NGQ2NWM4WydlcnJvcnMnXSgpLGZ1bmN0aW9uKF8weDViYzM5NSl7cmV0dXJuIF8weDViYzM5NSYmXzB4NWJjMzk1W18weDZkNjQoJzB4MTUyJyldJiZfMHg1YmMzOTVbXzB4NmQ2NCgnMHgxNTInKV0oKVsnbGVuZ3RoJ107fSk7aWYoIV8weDUzNGU3MSl7dmFyIF8weDMxYjExZT1fMHg0ZDY1YzhbXzB4NmQ2NCgnMHgxNTMnKV0oKTtyZXR1cm4gXzB4MzFiMTFlP3snZmlsZSc6XzB4NGQ2NWM4W18weDZkNjQoJzB4MTU0JyldKCksJ2xvYyc6W18weDMxYjExZVtfMHg2ZDY0KCcweDE1NScpXSgpLF8weDMxYjExZVtfMHg2ZDY0KCcweDE1NicpXSgpXX06e307fXZhciBfMHgxYzDigItkMTI9XzB4NTM0ZTcxW18weDZkNjQoJzB4MTUyJyldKClbMHgwXSxfMHgzZGI2ZjU9XzB4MWMwZDEyW18weDZkNjQoJzB4MTU3JyldKCksXzB4MTU0NWYzPXt9O3JldHVybiBfMHgxNTQ1ZjNbXzB4NmQ2NCgnMHgxNTgnKV09XzB4MWMwZDEyW18weDZkNjQoJzB4MTU0JyldKCksXzB4M2RiNmY1JiYoXzB4MTU0NWYzW18weDZkNjQoJzB4MjQnKV09W18weDNkYjZmNVtfMHg2ZDY0KCcweDE1NScpXSgpLF8weDNkYjZmNVtfMHg2ZDY0KCcweDE1NicpXSgpXSksXzB4MTU0NWYzO31lbHNle3ZhciBfMHg0ZDY1Yzg9XzB4NmQ3NDU3W18weDZkNjQoJzB4MTU5JyldLF8weDVjYTI2NT1fMHg2ZDc0NTdbJ3JlcXVlc3QnXTtyZXR1cm4gXzB4NDhhNDgyW18weDZkNjQoJzB4MTVhJyldKHsnaW50ZXJjZXB0aW9uSWQnOl8weDRkNjVjOCwndXJsJzpfMHgxYzZkNmVbJ191cGRhdGVUcmFja2VkRmlsZVVybElmUmVxdWlyZWQnXShfMHg1Y2EyNjVbJ3VybCddKX0pW18weDZkNjQoJzB4N2YnKV0oZnVuY3Rpb24oXzB4NmQ3NDU3KXt9KTt9fSksXzB4NTdmYTVjW18weDZkNjQoJzB4ZGYnKV09MHg1O2Nhc2UgMHg1OnJldHVybiBfMHg1N2ZhNWNbXzB4NmQ2NCgnMHhlMicpXVtfMHg2ZDY0KCcweDFjJyldKFsweDUsMHg3LCwweGNdKSxbMHg0LF8weDM0ZDg0OFsnc2VuZCddKCdOZXR3b3JrLnNldFJlcXVlc3RJbnRlcmNlcHRpb24nLHsncGF0dGVybnMnOlt7J3VybFBhdHRlcm4nOicqJ31dfSldO2Nhc2UgMHg2OnJldHVybiBfMHg1N2ZhNWNbJ3NlbnQnXSgpLFsweDMsMHhjXTtjYXNlIDB4NzpfMHgzNGRhNDI9XzB4NTdmYTVjW18weDZkNjQoJzB4MTEzJyldKCksXzB4NTdmYTVjWydsYWJlbCddPTB4ODtjYXNlIDB4ODpyZXR1cm4gXzB4NTdmYTVjW18weDZkNjQoJzB4ZTInKV1bXzB4NmQ2NCgnMHgxYycpXShbMHg4LDB4YSwsMHhiXSksWzB4NCxfMHg0OGE0ODJbXzB4NmQ2NCgnMHgxNWInKV0oeydlbmFibGVkJzohMHgwfSldO2Nhc2UgMHg5OnJldHVybiBfMHg1N2ZhNWNbXzB4NmQ2NCgnMHgxMTMnKV0oKSxbMHgzLDB4Yl07Y2FzZSAweGE6cmV0dXJuIF8weDVlYjJiMD1fMHg1N2ZhNWNbJ3NlbnQnXSgpLGNvbnNvbGVbXzB4NmQ2NCgnMHgxNWMnKV0oXzB4NmQ2NCgnMHgxNWQnKSksWzB4MywweGJdO2Nhc2UgMHhiOnJldHVyblsweDMsMHhjXTtjYXNlIDB4Yzp0aGlzW18weDZkNjQoJzB4MTI4JyldKCksXzB4NTdmYTVjW18weDZkNjQoJzB4ZGYnKV09MHhkO2Nhc2UgMHhkOnJldHVyblsweDQsXzB4MjMxOTBiW18weDZkNjQoJzB4MTVlJyldKHsndXJsJzpfMHg0ZDY1Yzh9KV07Y2FzZSAweGU6cmV0dXJuIF8weDU3ZmE1Y1tfMHg2ZDY0KCcweDExMycpXSgpLHRoaXNbXzB4NmQ2NCgnMHgxMjgnKV0oKSxbMHg0LF8weDIzMTkwYltfMHg2ZDY0KCcweDE1ZicpXSgpXTtjYXNlIDB4ZjpyZXR1cm4gXzB4NTdmYTVjW18weDZkNjQoJzB4MTEzJyldKCksdGhpc1tfMHg2ZDY0KCcweDEyOCcpXSgpLF8weDVjYTI2NSh7J3N0YXR1cyc6XzB4NmQ2NCgnMHgxNjAnKX0pLFsweDMsMHgxMV07Y2FzZSAweDEwOnJldHVybiBfMHg1ZDBhODU9XzB4NTdmYTVjW18weDZkNjQoJzB4MTEzJyldKCksdGhpc1snX2Nsb3NlVGFiJ10oXzB4NmQ3NDU3KSxfMHg1Y2EyNjUoeydzdGF0dXMnOl8weDZkNjQoJzB4MTYxJykrKF8weDVkMGE4NVsnbWVzc2FnZSddfHxfMHg2ZDY0KCcweDE2MicpKX0pLFsweOKAizMsMHgxMV07Y2FzZSAweDExOnJldHVyblsweDMsMHgxM107Y2FzZSAweDEyOnJldHVybiBfMHgxYTZkOWY9XzB4NTdmYTVjW18weDZkNjQoJzB4MTEzJyldKCksXzB4NWNhMjY1KHsnc3RhdHVzJzpfMHg2ZDY0KCcweDE2MScpKyhfMHgxYTZkOWZbXzB4NmQ2NCgnMHgyMycpXXx8XzB4NmQ2NCgnMHgxNjInKSl9KSxbMHgzLDB4MTNdO2Nh4oCLc2UgMHgxMzpyZXR1cm5bMHgyXTt9fWVsc2V7dmFyIF8weDFjZmIxMj10aGlzLF8weGIzNzZjPV8weDZkNzQ1N1tfMHg2ZDY0KCcweDE2MycpXSxfMHgxZmVhNzM9XzB4NGQ2NWM4P3ZvaWQgMHgwOnRoaXNbJ19scnVDYWNoZSddW18weDZkNjQoJzB4MTY0JyldKF8weDZkNzQ1N1tfMHg2ZDY0KCcweDRlJyldKTtyZXR1cm4oXzB4MWM2ZDZlW18weDZkNjQoJzB4MTY1JyldKF8weDFmZWE3Myk/dGhpc1snX2Vuc3VyZVJlYWRGaWxlV2l0aENvcnJlY3RDb250ZW50J10oXzB4Y2YyMjkyW18weDZkNjQoJzB4NGMnKV0oXzB4MWNmYjEyWydfYmFzZURpciddLF8weDZkNzQ1N1sncGF0aCddKSk6UVtfMHg2ZDY0KCcweGMyJyldKF8weDFmZWE3MykpW18weDZkNjQoJzB4N2UnKV0oZnVuY3Rpb24oXzB4M2ZhMjFhKXtyZXR1cm4gXzB4M2ZhMjFhPV8weDNmYTIxYT9fMHg2ZDc0NTdbXzB4NmQ2NCgnMHgxNjYnKV0/XzB4M2ZhMjFhW18weDZkNjQoJzB4NTMnKV0oJ2Jhc2U2NCcpOl8weDNmYTIxYVtfMHg2ZDY0KCcweDUzJyldKCk6JycsXzB4MWNmYjEyW18weDZkNjQoJzB4MTY3JyldfHxfMHhiMzc2YyE9PV8weDZkNzQ1N1snY2hhbmdlVHMnXXx8XzB4MWNmYjEyW18weDZkNjQoJzB4NjUnKV1bXzB4NmQ2NCgnMHgxNjgnKV0oXzB4NmQ3NDU3W18weDZkNjQoJzB4NGUnKV0sXzB4M2ZhMjFhKSxRWyd3aGVuJ10oXzB4MWM2ZDZlW18weDZkNjQoJzB4MzQnKV0oe30sXzB4NmQ3NDU3LHsnY29udGVudCc6XzB4M2ZhMjFhfSkpO30pW18weDZkNjQoJzB4N2YnKV0oZnVuY3Rpb24oXzB4NTVjZGViKXtfMHhiMzc2Yz09PV8weDZkNzQ1N1tfMHg2ZDY0KCcweDE2MycpXSYmXzB4MWNmYjEyWydfbHJ1Q2FjaGUnXeKAi1tfMHg2ZDY0KCcweDE2OScpXShfMHg2ZDc0NTdbXzB4NmQ2NCgnMHg0ZScpXSksXzB4MWNmYjEyW18weDZkNjQoJzB4MTZhJyldKF8weDZkNjQoJzB4OGQnKSxfMHg1NWNkZWIpO30pO319KTt9KTt9LF8weDRkNjVjOFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MTIzJyldPWZ1bmN0aW9uKF8weDZkNzQ1Nyl7aWYoXzB4NmQ2NCgnMHgxNmInKSE9PSdiS2Z0Zicpe3JldHVybiBfMHgzZjBjZTModGhpcyx2b2lkIDB4MCx2b2lkIDB4MCxmdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4MTZjJyk9PT1fMHg2ZDY0KCcweDE2YycpKXt2YXIgXzB4NGQ2NWM4LF8weDVjYTI2NTtyZXR1cm4gXzB4NTdmYTVjKHRoaXMsZnVuY3Rpb24oXzB4M2YwY2UzKXtzd2l0Y2goXzB4M2YwY2UzW18weDZkNjQoJzB4ZGYnKV0pe2Nhc2UgMHgwOmlmKCFfMHg2ZDc0NTd8fCFfMHg2ZDc0NTdbXzB4NmQ2NCgnMHgxMmQnKV0pcmV0dXJuWzB4MywweDZdO18weDRkNjVjOD1fMHg2ZDc0NTdbXzB4NmQ2NCgnMHgxMmQnKV0sZGVsZXRlIF8weDZkNzQ1N1snY2xpZW50J10sXzB4M2YwY2UzW18weDZkNjQoJzB4ZGYnKV09MHgxO2Nhc2UgMHgxOnJldHVybiBfMHgzZjBjZTNbJ3RyeXMnXVtfMHg2ZDY0KCcweDFjJyldKFsweDEsMHg0LCwweDVdKSx0aGlzW18weDZkNjQoJzB4ZjYnKV0/WzB4MywweDNdOlsweDQsXzB4Y2YyMjkyWydDbG9zZSddKHRoaXNbXzB4NmQ2NCgnMHgxNDQnKV0oeydpZCc6XzB4NGQ2NWM4W18weDZkNjQoJzB4MTZkJyldWydpZCddfSkpXTtjYXNlIDB4MjpfMHgzZjBjZTNbJ3NlbnQnXSgpLF8weDNmMGNlM1tfMHg2ZDY0KCcweGRmJyldPTB4MztjYXNlIDB4MzpyZXR1cm5bMHgzLDB4NV07Y2FzZSAweDQ6cmV0dXJuIF8weDVjYTI2NT1fMHgzZjBjZTNbJ3NlbnQnXSgpLF8weGM3NWVjZCgnRmFpbGVkXHgyMHRvXHgyMGNsb3NlXHgyMENocm9tZVx4MjBUYWI6XHgyMCcrXzB4NWNhMjY1W18weDZkNjQoJzB4MjMnKV0pLFsweDMsMHg1XTtjYXNlIDB4NTp0cnl7aWYoJ2pYZVZDJyE9PV8weDZkNjQoJzB4MTZlJykpe3ZhciBfMHg0M2VmMTA9cGFyc2VJbnQoYlsweDFdLDB4YSk7XzB4NTdmYTVjPV8weDVjYTI2NVtfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MTZmJyldKF8weDVjYTI2NVtfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4N2InKV0oX1snbHRyaW0nXShiWzB4MF0sJy8nKSksXzB4NDNlZjEwLHBhcnNlSW50KGJbMHgyXSwweGEpKSxfMHg1N2ZhNWMmJl8weDU3ZmE1Y1snbGluZSddPyhfMHgzNGQ4NDg9XzB4NWNhMjY1WydfZXh0cmFjdE5vZGVTdGFja0xpbmVDb250ZXh0J10oXzB4NmQ3NDU3LHkpLF8weDM0ZDg0OCYmKF8weGM3NWVjZFtfMHhjZjIyOTJbXzB4NmQ2NCgnMHg4ZScpXV09XzB4MzRkODQ4KSxfMHhjZjIyOTJbXzB4NmQ2NCgnMHgxYycpXShbXzB4NTdmYTVjWydmaWxlJ10sXzB4NTdmYTVjW18weDZkNjQoJzB4MTcwJyldXSkpOl8weDU3ZmE1YyYmXzB4NGQ2NWM4JiZfMHhjZjIyOTJbXzB4NmQ2NCgnMHgxYycpXShbXzB4NTdmYTVjW18weDZkNjQoJzB4MTU4JyldLF8weDQzZWYxMF0pO31lbHNle18weDRkNjVjOFtfMHg2ZDY0KCcweDEzYycpXSgpO319Y2F0Y2goXzB4Mzk1MjQxKXtfMHhjNzVlY2QoXzB4NmQ2NCgnMHgxNzEnKStfMHgzOTUyNDFbXzB4NmQ2NCgnMHgyMycpXSk7fV8weDNmMGNlM1tfMHg2ZDY0KCcweGRmJyldPTB4NjtjYXNlIDB4NjpyZXR1cm5bMHgyXTt9fSk7fWVsc2V7cmV0dXJuIF8weDRkNjVjOFtfMHg2ZDY0KCcweDE3MicpXShfMHg2ZDc0NTcpO319KTt9ZWxzZXtfMHg0OGE0ODIoXzB4M2YwY2UzW18weDZkNjQoJzB4ZDUnKV0oXzB4NmQ3NDU3KSk7fX0sXzB4NGQ2NWM4Wydwcm90b3R5cGUnXVsnX2xhdW5jaENocm9tZUluc3RhbmNlJ109ZnVuY3Rpb24oKXtyZXR1cm4gXzB4M2YwY2UzKHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXt2YXIgXzB4NGQ2NWM4LF8weDVjYTI2NSxfMHgzZjBjZTMsXzB4Y2YyMjkyO3JldHVybiBfMHg1N2ZhNWModGhpcyxmdW5jdGlvbihfMHg1N2ZhNWMpe3N3aXRjaChfMHg1N2ZhNWNbXzB4NmQ2NCgnMHhkZicpXSl7Y2FzZSAweDA6cmV0dXJuIF8weDU3ZmE1Y1sndHJ5cyddW18weDZkNjQoJzB4MWMnKV0oWzB4MCwweDIsLDB4M10pLF8weDRkNjVjOD1bXzB4NmQ2NCgnMHgxNzMnKSwnLS1kaXNhYmxlLWdwdScsXzB4NmQ2NCgnMHgxNzQnKV0sXzB4NWNhMjY1PV8weDZkNzQ1Nygnb3MnKSxfMHg2ZDY0KCcweDE3NScpPT09XzB4NWNhMjY1Wyd0eXBlJ10oKSYmKF8weDRkNjVjOFtfMHg2ZDY0KCcweDFjJyldKF8weDZkNjQoJzB4MTc2JykpLF8weDRkNjVjOFtfMHg2ZDY0KCcweDFjJyldKCctLWRpc2FibGUtc2V0dWlkLXNhbmRib3gnKSksXzB4M2YwY2UzPXRoaXMsWzB4NCxfMHgzNGQ4NDhbJ2xhdW5jaCddKHsnY2hyb21lRmxhZ3MnOnRoaXNbXzB4NmQ2NCgnMHhmNCcpXXx8XzB4NGQ2NWM4LCdjaHJvbWVQYXRoJzp0aGlzWydfcGF0aCddLCdsb2dMZXZlbCc6XzB4NmQ2NCgnMHgxNzcnKX0pXTtjYXNlIDB4MTpyZXR1cm4gXzB4M2YwY2UzW18weDZkNjQoJzB4MTE2JyldPV8weDU3ZmE1Y1tfMHg2ZDY0KCcweDExMycpXSgpLFsweDMsMHgzXTtjYXNlIDB4MjpyZXR1cm4gXzB4Y2YyMjkyPV8weDU3ZmE1Y1tfMHg2ZDY0KCcweDExMycpXSgpLHRoaXNbXzB4NmQ2NCgnMHgxNzgnKV0oXzB4Y2YyMjkyKSxbMHgzLDB4M107Y2FzZSAweDM6cmV0dXJuWzB4Ml07fX0pO30pO30sXzB4NGQ2NWM4Wydwcm90b3R5cGUnXVsnX3VwZGF0ZVRyYWNrZWRGaWxlVXJsSWZSZXF1aXJlZCddPWZ1bmN0aW9uKF8weDZkNzQ1Nyl7aWYoXzB4NmQ2NCgnMHgxNzknKT09PV8weDZkNjQoJzB4MTc5Jykpe2lmKCFfMHg2ZDc0NTd8fH5fMHg2ZDc0NTdbXzB4NmQ2NCgnMHgxN2EnKV0oXzB4NmQ2NCgnMHgxN2InKSl8fH5fMHg2ZDc0NTdbXzB4NmQ2NCgnMHgxN2EnKV0oXzB4NmQ2NCgnMHg1NCcpKSlyZXR1cm4gXzB4NmQ3NDU3O3ZhciBfMHg0ZDY1Yzg9XzB4NmQ3NDU3O2lmKF8weDRkNjVjOD1fMHg0ZDY1YzhbXzB4NmQ2NCgnMHg5MScpXSh0aGlzW18weDZkNjQoJzB4ZmMnKV1bXzB4NmQ2NCgnMHhiZScpXSgpLCcnKSxfMHg0ZDY1Yzg9PT1fMHg2ZDc0NTcpcmV0dXJuIF8weDZkNzQ1Nzt2YXIgXzB4NWNhMjY1PV8weDRkNjVjOFtfMHg2ZDY0KCcweDE3YycpXSgnPycpO18weDVjYTI2NT49MHgwJiYoXzB4NGQ2NWM4PV8weDRkNjVjOFtfMHg2ZDY0KCcweDE3ZCcpXSgweDAsXzB4NWNhMjY1KSk7dmFyIF8weDNmMGNlMz1fMHg0ZDY1YzgmJnRoaXNbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHgxN2UnKV0oXzB4NGQ2NWM4KTtyZXR1cm4gXzB4M2YwY2UzP18weDZkNzQ1Nysofl8weDVjYTI2NT8nJic6Jz8nKStfMHgzZjBjZTNbXzB4NmQ2NCgnMHgxNjMnKV0rJyZ3YWxsYWJ5RmlsZUlkPScrXzB4M2YwY2UzWydpZCddOl8weDZkNzQ1Nzt9ZWxzZXtpZihfMHgzNGQ4NDgpdGhyb3cgXzB4MzRkODQ4W18weDZkNjQoJzB4OGQnKV07fX0sXzB4NGQ2NWM4Wydwcm90b3R5cGUnXVsnX2hhbmRsZUhvc3RFcnJvciddPWZ1bmN0aW9uKF8weDZkNzQ1Nyl7aWYoJ2lIVGFWJyE9PV8weDZkNjQoJzB4MTdmJykpe3JldHVybichJz09PV8weDZkNzQ1N1sweDBdJiYhXzB4MWE0ZGZlWydwYXRoTWF0Y2hlc1BhdHRlcm4nXShfMHg1Y2EyNjUsXzB4NmQ3NDU3LHsnZG90JzpfMHg0ZDY1YzhbJ2RvdCddLCdtaWNyb21hdGNoJzpfMHg0ZDY1YzhbJ21pY3JvbWF0Y2gnXX0pO31lbHNle18weDZkNzQ1Nz1fMHg2ZDc0NTd8fHt9LHRoaXNbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDE4MCcpXShfMHg2ZDc0NTcpO3ZhciBfMHg0ZDY1Yzg9XzB4NmQ2NCgnMHgxODEnKSsoXzB4NmQ3NDU3W18weDZkNjQoJzB4MjMnKV18fF8weDZkNjQoJzB4MTYyJykpLF8weDVjYTI2NT1fMHg2ZDc0NTdbXzB4NmQ2NCgnMHgxNTInKV18fF8weDRkNjVjODtjb25zb2xlW18weDZkNjQoJzB4OGQnKV0oXzB4NWNhMjY1KSx0aGlzWydfcHJvamVjdCddW18weDZkNjQoJzB4MTgyJyldKF8weDRkNjVjOCk7fX0sXzB4NGQ2NWM4O30oKTtfMHg0ZDY1YzhbXzB4NmQ2NCgnMHg0JyldPV8weDFhNGRmZTt9LHsnLi9icm93c2VyRW52aXJvbm1lbnQnOjB4NCwnLi9ydW5Xb3JrZXJQb29sJzoweDIxLCdjaHJvbWUtbGF1bmNoZXInOnZvaWQgMHgwLCdjaHJvbWUtcmVt4oCLb3RlLWludGVyZmFjZSc6dm9pZCAweDAsJ2ZzJzp2b2lkIDB4MCwnb3MnOnZvaWQgMHgwfV0sNjpbZnVuY3Rpb24oXzB4NDMzYzEwLF8weDQ1MWZmMixfMHgyY2I3NjMpe3ZhciBfMHg1N2M2ZWM9bG9nZ2VyW18weDZkNjQoJzB4M2InKV0oXzB4NmQ2NCgnMHgxODMnKSlbJ2RlYnVnJ10sXzB4NWI1YjcwPV8weDQzM2MxMCgncGF0aCcpLF8weDQxZDY4ZT1fMHg0MzNjMTAoXzB4NmQ2NCgnMHgxODQnKSksXzB4NGIxNjc0PV8weDQzM2MxMChfMHg2ZDY0KCcweGViJykpLF8weDE1YTAwYj1fMHg0MzNjMTAoXzB4NmQ2NCgnMHhlYycpKSxfMHg1YTU5ZjM9MHgwLF8weGM3MGRkPWZ1bmN0aW9uKF8weDQzM2MxMCl7dmFyIF8weDQ1MWZmMj10aGlzO18weDQ1MWZmMltfMHg2ZDY0KCcweDU5JyldPV8weDQzM2MxMCxfMHg0NTFmZjJbXzB4NmQ2NCgnMHhlZicpXT1RW18weDZkNjQoJzB4YzInKV0oITB4MCksXzB4NDUxZmYyWydfcGFyYW1zJ109XzB4NDMzYzEwW18weDZkNjQoJzB4NWMnKV0oKVsnZW52J11bXzB4NmQ2NCgnMHg2ZScpXSxfMHg0NTFmZjJbXzB4NmQ2NCgnMHgxODUnKV09XzB4NDMzYzEwW18weDZkNjQoJzB4NWMnKV0oKVtfMHg2ZDY0KCcweGYxJyldW18weDZkNjQoJzB4ZjMnKV0sXzB4NDUxZmYyW18weDZkNjQoJzB4MTg2JyldPV8weDQzM2MxMFtfMHg2ZDY0KCcweDVjJyldKClbJ2VudiddW18weDZkNjQoJzB4MTg3JyldLF8weDQ1MWZmMlsnX2NsZWFyTWVtb3J5Q2FjaGUnXT1fMHg0MzNjMTBbXzB4NmQ2NCgnMHg1YycpXSgpW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxODgnKV0sXzB4NDUxZmYyW18weDZkNjQoJzB4MTg5JyldPXZvaWQgMHgwLF8weDQ1MWZmMltfMHg2ZDY0KCcweDEyMScpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLF8weDQ1MWZmMltfMHg2ZDY0KCcweDE4YScpXT1RW18weDZkNjQoJzB4MThiJyldKGZ1bmN0aW9uKF8weDQzM2MxMCxfMHgyY2I3NjMpe3RyeXtpZihfMHg2ZDY0KCcweDE4YycpIT09XzB4NmQ2NCgnMHgxOGQnKSl7dmFyIF8weDU3YzZlYz1fW18weDZkNjQoJzB4MzQnKV0oe30scHJvY2Vzc1snZW52J10sXzB4NDUxZmYyWydfcGFyYW1zJ11bJ2VudiddP19bXzB4NmQ2NCgnMHg4YScpXShfMHg0NTFmZjJbXzB4NmQ2NCgnMHgxOGUnKV1bXzB4NmQ2NCgnMHhmMScpXVsnc3BsaXQnXSgnOycpLGZ1bmN0aW9uKF8weDQzM2MxMCxfMHg0NTFmZjIpe3ZhciBfMHgyY2I3NjM9XzB4NDUxZmYyW18weDZkNjQoJzB4ZjUnKV0oJz0nKTtyZXR1cm4gXzB4NDMzYzEwW18weDJjYjc2M1sweDBdXT1fMHgyY2I3NjNbMHgxXSxfMHg0MzNjMTA7fSx7fSk6e30pO2RlbGV0ZSBfMHg1N2M2ZWNbXzB4NmQ2NCgnMHgxOGYnKV0sZGVsZXRlIF8weDU3YzZlY1tfMHg2ZDY0KCcweDE5MCcpXSxfMHg1N2M2ZWNbXzB4NmQ2NCgnMHgxOTEnKV09ITB4MCxfMHg0NTFmZjJbXzB4NmQ2NCgnMHgxODknKV09XzB4NDFkNjhlW18weDZkNjQoJzB4MTkyJyldKF8weDViNWI3MFtfMHg2ZDY0KCcweDRjJyldKF9fZGlybmFtZSxfMHg2ZDY0KCcweDE5MycpLF8weDZkNjQoJzB4NTInKSxfMHg2ZDY0KCcweDE5NCcpKSxbXSx7J2V4ZWNQYXRoJzpfMHg0NTFmZjJbJ19ydW5uZXInXSwnZW52JzpfMHg1N2M2ZWMsJ2V4ZWNBcmd2JzpfMHg0NTFmZjJbXzB4NmQ2NCgnMHgxOGUnKV1bXzB4NmQ2NCgnMHhmMycpXT9fMHg0NTFmZjJbXzB4NmQ2NCgnMHgxOGUnKV1bJ3J1bm5lciddW18weDZkNjQoJzB4ZjUnKV0oJ1x4MjAnKTpbXX0pLF8weDQ1MWZmMlsnX2hvc3QnXVsnb24nXShfMHg2ZDY0KCcweDhkJyksZnVuY3Rpb24oXzB4NDMzYzEwKXtpZihfMHg2ZDY0KCcweDE5NScpIT09XzB4NmQ2NCgnMHgxOTUnKSl7dmFyIF8weDU4MGI1ND0nJztfMHg0MzNjMTA8MHgwP18weDQzM2MxMD0tXzB4NDMzYzEwPDwweDF8MHgxOl8weDQzM2MxMDw8PTB4MTtkb3t2YXIgXzB4MjFjNTRjPTB4MWYmXzB4NDMzYzEwO18weDQzM2MxMD4+Pj0weDUsXzB4NDMzYzEwPjB4MCYmKF8weDIxYzU0Y3w9MHgyMCksXzB4NTgwYjU0Kz1DW18weDIxYzU0Y107fXdoaWxlKF8weDQzM2MxMD4weDApO3JldHVybiBfMHg1ODBiNTQ7fWVsc2V7XzB4NDUxZmYyWydfaGFuZGxlSG9zdEVycm9yJ10oXzB4NDMzYzEwKTt9fSksXzB4NDUxZmYyW18weDZkNjQoJzB4MTg5JyldWydvbiddKCdtZXNzYWdlJyxmdW5jdGlvbihfMHgyY2I3NjMpe3RyeXtpZignWnBaaGgnPT09XzB4NmQ2NCgnMHgxOTYnKSl7dmFyIF8weGNjN2RjND10aGlzO18weGNjN2RjNFtfMHg2ZDY0KCcweDE5NycpXT1NYXRoW18weDZkNjQoJzB4MTk4JyldKDB4MSxfMHhjYzdkYzRbXzB4NmQ2NCgnMHgxOTknKV1bXzB4NmQ2NCgnMHgxOWEnKV1bXzB4NmQ2NCgnMHgxOWInKV18fE1hdGhbXzB4NmQ2NCgnMHgxOTgnKV0oXzB4NWI1YjcwW18weDZkNjQoJzB4MTljJyldKClbJ2xlbmd0aCddLTB4MiwweDIpKSx1JiYhXzB4Y2M3ZGM0W18weDZkNjQoJzB4MTk5JyldW18weDZkNjQoJzB4MTlhJyldWydpbml0aWFsJ10mJl8weDZkNjQoJzB4MTlkJyk9PT1fMHhjYzdkYzRbXzB4NmQ2NCgnMHgxOTknKV1bXzB4NmQ2NCgnMHhmMScpXVtfMHg2ZDY0KCcweDE5ZScpXSYmKF8weGNjN2RjNFtfMHg2ZDY0KCcweDE5NycpXT1NYXRoW18weDZkNjQoJzB4MTlmJyldKDB4MTAsXzB4Y2M3ZGM0W18weDZkNjQoJzB4MTk3JyldKSksXzB4Y2M3ZGM0WydfbWluV29ya2VycyddPU1hdGhbXzB4NmQ2NCgnMHgxOTgnKV0oMHgxLF8weGNjN2RjNFtfMHg2ZDY0KCcweDE5OScpXVtfMHg2ZDY0KCcweDE5YScpXVtfMHg2ZDY0KCcweDFhMCcpXXx8TWF0aFtfMHg2ZDY0KCcweDE5OCcpXShNYXRoW18weDZkNjQoJzB4MWExJyldKF8weGNjN2RjNFtfMHg2ZDY0KCcweDE5NycpXS8weDIpLDB4MikpLF8weDVhNTlmMyhfMHg2ZDY0KCcweDFhMicpLF8weGNjN2RjNFtfMHg2ZDY0KCcweDE5NycpXSxfMHhjYzdkYzRbJ19taW5Xb3JrZXJzJ10pO31lbHNle18weDJjYjc2M1snaWQnXT9fMHg0NTFmZjJbXzB4NmQ2NCgnMHgxYTMnKV0oXzB4MmNiNzYzKTpfMHg2ZDY0KCcweDFhNCcpPT09XzB4MmNiNzYzW18weDZkNjQoJzB4MzAnKV0/XzB4NDMzYzEwKF8weDQ1MWZmMltfMHg2ZDY0KCcweDE4OScpXSk6J2Vycm9yJz09PV8weDJjYjc2M1tfMHg2ZDY0KCcweDMwJyldJiZfMHg0NTFmZjJbXzB4NmQ2NCgnMHgxNzgnKV0oXzB4MmNiNzYzWydlcnJvciddKTt9fWNhdGNoKF8weDRhZTc1OSl7XzB4NDUxZmYyWydfaGFuZGxlSG9zdEVycm9yJ10oXzB4NGFlNzU5KTt9fSk7fWVsc2V7XzB4NDUxZmYyPXsnZXJyb3InOmt9O319Y2F0Y2goXzB4MTE0Y2JiKXtpZihfMHg2ZDY0KCcweDFhNScpIT09XzB4NmQ2NCgnMHgxYTYnKSl7XzB4MmNiNzYzKF8weDExNGNiYik7fWVsc2V7aWYoXzB4MTVhMDBiKXRocm93IF8weDE1YTAwYltfMHg2ZDY0KCcweDhkJyldO319fSlbXzB4NmQ2NCgnMHg3ZicpXShmdW5jdGlvbihfMHg0MzNjMTApe18weDQ1MWZmMltfMHg2ZDY0KCcweDE3OCcpXShfMHg0MzNjMTApO30pLF8weDQ1MWZmMltfMHg2ZDY0KCcweDU3JyldPW5ldyBfMHg0YjE2NzQoXzB4NDUxZmYyW18weDZkNjQoJzB4NTknKV0seydjcmVhdGUnOl9bJ2JpbmQnXShfMHg0NTFmZjJbXzB4NmQ2NCgnMHgxMWYnKV0sXzB4NDUxZmYyKSwncmVjeWNsZSc6X1snYmluZCddKF8weDQ1MWZmMltfMHg2ZDY0KCcweGZiJyldLF8weDQ1MWZmMiksJ2hlYWx0aHknOmZ1bmN0aW9uKCl7cmV0dXJuITB4MDt9LCdwcmVwYXJlJzpfWydiaW5kJ10oXzB4NDUxZmYyW18weDZkNjQoJzB4MWE3JyldLF8weDQ1MWZmMil9KSxfMHg0NTFmZjJbXzB4NmQ2NCgnMHhmYycpXT1uZXcgXzB4MTVhMDBiKF8weDQzM2MxMCxfMHg0NTFmZjJbXzB4NmQ2NCgnMHg1NycpXSk7fTtfMHhjNzBkZFtfMHg2ZDY0KCcweDgxJyldPXsncnVuJzpmdW5jdGlvbihfMHg0MzNjMTApe2lmKF8weDZkNjQoJzB4MWE4JykhPT0nZFJTdkMnKXt0aGlzW18weDZkNjQoJzB4MWE5JyldPV8weDQ1MWZmMjt9ZWxzZXt2YXIgXzB4NDUxZmYyPXRoaXM7cmV0dXJuIF8weDQ1MWZmMltfMHg2ZDY0KCcweDU3JyldW18weDZkNjQoJzB4MTA1JyldKF8weDQzM2MxMCk7fX0sJ19oYW5kbGVIb3N0RXJyb3InOmZ1bmN0aW9uKF8weDQzM2MxMCl7aWYoXzB4NmQ2NCgnMHgxYWEnKT09PV8weDZkNjQoJzB4MWFiJykpe3JldHVybih0aGlzW18weDZkNjQoJzB4ZjInKV18fFtdKVtfMHg2ZDY0KCcweGE3JyldKGZ1bmN0aW9uKF8weDRkOTIxOSl7cmV0dXJuIF8weDQxZDY4ZVsnZGlzcGxheVRlc3ROYW1lJ10oXzB4NGQ5MjE5KTt9KTt9ZWxzZXt2YXIgXzB4NDUxZmYyPXRoaXM7XzB4NDMzYzEwPV8weDQzM2MxMHx8e30sXzB4NDUxZmYyW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgxODAnKV0oXzB4NDMzYzEwKTt2YXIgXzB4MmNiNzYzPSdFbGVjdHJvblx4MjBydW5uZXJceDIwZXJyb3I6XHgyMCcrKF8weDQzM2MxMFtfMHg2ZDY0KCcweDIzJyldfHxfMHg2ZDY0KCcweDE2MicpKSxfMHg1N2M2ZWM9XzB4NDMzYzEwW18weDZkNjQoJzB4MTUyJyldfHxfMHgyY2I3NjM7Y29uc29sZVtfMHg2ZDY0KCcweDhkJyldKF8weDU3YzZlYyksXzB4NDUxZmYyW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgxODInKV0oXzB4MmNiNzYzKTt9fSwnX2NyZWF0ZSc6ZnVuY3Rpb24oXzB4NDMzYzEwLF8weDQ1MWZmMil7aWYoJ3FZc1hYJyE9PV8weDZkNjQoJzB4MWFjJykpe3JldHVybiB0aGlzWydfdHlwZSddO31lbHNle3ZhciBfMHgyY2I3NjM9dGhpcztfMHgyY2I3NjNbXzB4NmQ2NCgnMHgxOGEnKV1bXzB4NmQ2NCgnMHg3ZScpXShmdW5jdGlvbigpe18weDQ1MWZmMih7J3BhZ2VJZCc6XzB4NDMzYzEwfSk7fSk7fX0sJ19yZWN5Y2xlJzpmdW5jdGlvbihfMHg0MzNjMTApe3ZhciBfMHg0NTFmZjI9dGhpcztfMHg0NTFmZjJbXzB4NmQ2NCgnMHgxODknKV0mJl8weDQ1MWZmMltfMHg2ZDY0KCcweDE4OScpXVtfMHg2ZDY0KCcweDFhZCcpXSh7J3R5cGUnOl8weDZkNjQoJzB4MWFlJyksJ3BhZ2VJZCc6XzB4NDMzYzEwW18weDZkNjQoJzB4MWFmJyldfSk7fSwnX2V2YWx1YXRlT25QYWdlJzpmdW5jdGlvbihfMHg0MzNjMTAsXzB4NDUxZmYyLF8weDJjYjc2Myl7dmFyIF8weDU3YzZlYz10aGlzLF8weDViNWI3MD17J3R5cGUnOidldmFsdWF0ZU9uUGFnZScsJ3BhZ2VJZCc6XzB4NDMzYzEwLCdhY3Rpb24nOicoJytfMHg0NTFmZjJbXzB4NmQ2NCgnMHg1MycpXSgpK18weDZkNjQoJzB4MTQ5Jyl9O18weDU3YzZlY1tfMHg2ZDY0KCcweDFiMCcpXShfMHg1YjViNzAsXzB4MmNiNzYzfHxfW18weDZkNjQoJzB4MTQ3JyldKTt9LCdfb3BlblBhZ2UnOmZ1bmN0aW9uKF8weDQzM2MxMCxfMHg0NTFmZjIsXzB4MmNiNzYzLF8weDU3YzZlYyl7dmFyIF8weDViNWI3MD10aGlzLF8weDQxZDY4ZT17J3R5cGUnOl8weDZkNjQoJzB4MWIxJyksJ3BhZ2VJZCc6XzB4NDMzYzEwLCd1cmwnOl8weDQ1MWZmMiwnb3B0aW9ucyc6XzB4MmNiNzYzfTtfMHg1YjViNzBbXzB4NmQ2NCgnMHgxYjAnKV0oXzB4NDFkNjhlLF8weDU3YzZlY3x8X1tfMHg2ZDY0KCcweDE0N+KAiycpXSk7fSwnX2Nsb3NlUGFnZSc6ZnVuY3Rpb24oXzB4NDMzYzEwKXt2YXIgXzB4NDUxZmYyPXRoaXM7XzB4NDUxZmYyW18weDZkNjQoJzB4MTg5JyldWydzZW5kJ10oeyd0eXBlJzpfMHg2ZDY0KCcweDFhZScpLCdwYWdlSWQnOl8weDQzM2MxMH0pO30sJ19jYXB0dXJlUGFnZSc6ZnVuY3Rpb24oXzB4NDMzYzEwLF8weDQ1MWZmMil7dmFyIF8weDJjYjc2Mz10aGlzLF8weDU3YzZlYz1RW18weDZkNjQoJzB4MWIyJyldKCk7dHJ5e18weDJjYjc2M1snX3JlcXVlc3RXaXRoQ29ycmVsYXRpb25JZCddKHsndHlwZSc6XzB4NmQ2NCgnMHgxYjMnKSwnZmlsZSc6XzB4NDUxZmYyLCdwYWdlSWQnOl8weDQzM2MxMH0sZnVuY3Rpb24oKXtfMHg1N2M2ZWNbXzB4NmQ2NCgnMHhmMCcpXSgpO30pLF8weDJjYjc2M1tfMHg2ZDY0KCcweGVmJyldPV8weDU3YzZlY1sncHJvbWlzZSddO31jYXRjaChfMHg0MTQ4Mjgpe2lmKF8weDZkNjQoJzB4MWI0Jyk9PT1fMHg2ZDY0KCcweDFiNScpKXt0cnl7XzB4YzcwZGQmJiFfMHhjNzBkZFsnZG9uZSddJiYoXzB4MmNiNzYzPV8weDVhNTlmM1sncmV0dXJuJ10pJiZfMHgyY2I3NjNbXzB4NmQ2NCgnMHgzJyldKF8weDVhNTlmMyk7fWZpbmFsbHl7aWYoXzB4NDUxZmYyKXRocm93IF8weDQ1MWZmMltfMHg2ZDY0KCcweDhkJyldO319ZWxzZXtfMHg1N2M2ZWNbXzB4NmQ2NCgnMHgxYjYnKV0obmV3IEVycm9yKF8weDZkNjQoJzB4MWI3JykpKSxjb25zb2xlW18weDZkNjQoJzB4OGQnKV0oXzB4NmQ2NCgnMHgxYjcnKSxfMHg0MTQ4MjhbJ21lc3NhZ2UnXSk7fX19LCdfcHJlcGFyZSc6ZnVuY3Rpb24oXzB4NDMzYzEwLF8weDQ1MWZmMil7aWYoXzB4NmQ2NCgnMHgxYjgnKT09PV8weDZkNjQoJzB4MWI4Jykpe3ZhciBfMHgyY2I3NjM9dGhpcyxfMHg1YjViNzA9X1tfMHg2ZDY0KCcweDFiOScpXSgpLF8weDQxZDY4ZT1fMHgyY2I3NjNbXzB4NmQ2NCgnMHhmYycpXVtfMHg2ZDY0KCcweGMxJyldKF8weDQ1MWZmMixfMHg1YjViNzApO3JldHVybiBfMHg1N2M2ZWMoXzB4NmQ2NCgnMHgxMjYnKSxfMHg0MWQ2OGUpLF8weDJjYjc2M1tfMHg2ZDY0KCcweDU3JyldW18weDZkNjQoJzB4MTI3JyldKF8weDQ1MWZmMilbJ3RoZW4nXShmdW5jdGlvbigpe3JldHVybiBfMHgyY2I3NjNbXzB4NmQ2NCgnMHg1NycpXVsnY2FuY2VsbGVkJ10oKT9RW18weDZkNjQoJzB4MWI2JyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6KF8weDU3YzZlYyhfMHg2ZDY0KCcweDEyOScpLF8weDQxZDY4ZSksXzB4MmNiNzYzW18weDZkNjQoJzB4ZmMnKV1bXzB4NmQ2NCgnMHgxMmEnKV0oXzB4NDMzYzEwLF8weDViNWI3MCxfMHg0NTFmZjIpKTt9KVtfMHg2ZDY0KCcweDdlJyldKGZ1bmN0aW9uKF8weDQzM2MxMCl7aWYoJ29hRnhnJyE9PV8weDZkNjQoJzB4MWJhJykpe3JldHVybiBfMHgyY2I3NjNbXzB4NmQ2NCgnMHg1NycpXVsnY2FuY2VsbGVkJ10oKT9RW18weDZkNjQoJzB4MWI2JyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6KF8weDU3YzZlYygnUHJlcGFyZWRceDIwc2FuZGJveFx4MjBbJXNdJyxfMHg0MWQ2OGUpLFFbXzB4NmQ2NCgnMHhjMicpXSh7J2luc3RhbmNlJzp7J3Jlc3VtZSc6ZnVuY3Rpb24oKXtfMHgyY2I3NjNbXzB4NmQ2NCgnMHgxYmInKV0oXzB4NDUxZmYyLGZ1bmN0aW9uKCl7aWYoJ1BnRGRlJyE9PV8weDZkNjQoJzB4MWJjJykpe3ZhciBfMHgyOTA0ZGM9X1tfMHg2ZDY0KCcweDFiZCcpXShfMHgyY2I3NjMsZnVuY3Rpb24oXzB4MWVmZDgxKXtyZXR1cm4gXzB4MWVmZDgxWzB4MV1bXzB4NmQ2NCgnMHgxYmUnKV07fSk7XzB4MjkwNGRjPj0weDAmJihfMHgyY2I3NjM9XzB4MmNiNzYzW18weDZkNjQoJzB4MWJmJyldKDB4MCxfMHgyOTA0ZGMrMHgxKSk7fWVsc2V7JF8kdHJhY2VyW18weDZkNjQoJzB4MWMwJyldKCk7fX0pO30sJ3BpbmcnOmZ1bmN0aW9uKF8weDQzM2MxMCl7XzB4MmNiNzYzW18weDZkNjQoJzB4MWJiJyldKF8weDQ1MWZmMixmdW5jdGlvbigpe30sXzB4NDMzYzEwKTt9LCdjbG9zZSc6ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDFjMScpPT09XzB4NmQ2NCgnMHgxYzInKSl7XzB4NTdjNmVjW18weDZkNjQoJzB4ZWYnKV09UHJvbWlzZVtfMHg2ZDY0KCcweGYwJyldKCk7fWVsc2V7XzB4MmNiNzYzW18weDZkNjQoJzB4MWMzJyldKF8weDQ1MWZmMik7fX0sJ2Nsb3NpbmcnOmZ1bmN0aW9uKCl7XzB4MmNiNzYzWydfc2NyZWVuU2hvdFJlYWR5J109UVtfMHg2ZDY0KCcweGMyJyldKCk7fSwnc3RhcnQnOmZ1bmN0aW9uKF8weDU3YzZlYyl7XzB4MmNiNzYzW18weDZkNjQoJzB4MWM0JyldKF8weDQ1MWZmMixfMHg0MzNjMTAsXzB4MmNiNzYzW18weDZkNjQoJzB4MTg2JyldLGZ1bmN0aW9uKF8weDQzM2MxMCl7aWYoXzB4NmQ2NCgnMHgxYzUnKSE9PSdQV1JKWScpe3JldHVybiBfMHg0MzNjMTBbXzB4NmQ2NCgnMHgxMGYnKV07fWVsc2V7XzB4NTdjNmVjKF8weDQzM2MxMFtfMHg2ZDY0KCcweDEzZicpXSkmJl8weDJjYjc2M1tfMHg2ZDY0KCcweDFiYicpXShfMHg0NTFmZjIsZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDFjNicpPT09XzB4NmQ2NCgnMHgxYzcnKSl7XzB4NDUxZmYyWydjbG9zZSddKCk7fWVsc2V7JF8kdHJhY2VyW18weDZkNjQoJzB4MzEnKV0oKTt9fSk7fX0pO319LCduYW1lJzpfMHg0MWQ2OGUsJ3Nlc3Npb25JZCc6XzB4NWI1YjcwLCd3b3JrZXJJZCc6XzB4NDUxZmYyfSkpO31lbHNle3ZhciBfMHg1YzM0YTU9XzB4NWI1YjcwW18weDRiMTY3NF07cmV0dXJuIF8weDVjMzRhNT8hXzB4NWMzNGE1W18weDZkNjQoJzB4MWJlJyldJiZfMHhjNzBkZCYmKF8weDVjMzRhNVtfMHg2ZDY0KCcweDFjOCcpXT1fMHgxNWEwMGIsXzB4NWMzNGE1W18weDZkNjQoJzB4MWJlJyldPSEweDApOl8weDViNWI3MFtfMHg0YjE2NzRdPXsnY29sdW1uJzpfMHgxNWEwMGIsJ2JldHRlcic6XzB4YzcwZGR9LF8weDViNWI3MDt9fSk7fWVsc2V7aWYodGhpc1tfMHg2ZDY0KCcweDFjOScpXSl7dmFyIF8weDJlNTkyYj10aGlzW18weDZkNjQoJzB4MWNhJyldJiZ0aGlzW18weDZkNjQoJzB4MWNhJyldW18weDZkNjQoJzB4NDMnKV0sXzB4NTg3ZGU0PV8weDQzM2MxMHx8XzB4NDUxZmYyO18weDU4N2RlNCYmdGhpc1tfMHg2ZDY0KCcweDFjYScpXSYmdGhpc1tfMHg2ZDY0KCcweDFjYScpXVtfMHg2ZDY0KCcweDFjYicpXT90aGlzW18weDZkNjQoJzB4MWNjJyldPXRoaXNbJ190cmFjZVN0YXRlJ106dGhpc1tfMHg2ZDY0KCcweDFjZCcpXSgpLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4MWNhJyldLChfMHg1ODdkZTR8fF8weDJlNTkyYikmJihkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDFjOScpXSx0aGlzW18weDZkNjQoJzB4MWNlJyldKF8weDZkNjQoJzB4MWNmJykpKSx0aGlzW18weDZkNjQoJzB4MWQwJyldKCEweDEpLHRoaXNbXzB4NmQ2NCgnMHgxZDEnKV0oKSxfMHgyZTU5MmImJnRoaXNbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDFkMicpXSh7J2NhdGNodXAnOiEweDB9KSx0aGlzWydfcHJvamVjdCddW18weDZkNjQoJzB4OWUnKV0oKTt9fX0sJ2NhbmNlbCc6ZnVuY3Rpb24oXzB4NDMzYzEwKXtpZignU29wSUEnIT09J2d2b1FMJyl7dmFyIF8weDQ1MWZmMj10aGlzO3JldHVybiBfMHg0NTFmZjJbJ193b3JrZXJQb29sJ11bXzB4NmQ2NCgnMHgxMDYnKV0oXzB4NDMzYzEwKTt9ZWxzZXtfMHhjNzBkZFsnbGVuZ3RoJ10mJihfMHg1YTU5ZjM9ITB4MSxfW18weDZkNjQoJzB4M2EnKV0oXzB4YzcwZGQsZnVuY3Rpb24oXzB4NDRmNTQwKXt2YXIgXzB4MmMzMTViPV9bXzB4NmQ2NCgnMHgxZDMnKV0oXzB4MmNiNzYzLF8weDQ0ZjU0MFsnY2hhcmFjdGVyT2Zmc2V0J10sL1xuLylbXzB4NmQ2NCgnMHg4ZScpXSxfMHg0NzNjYTY9XzB4MmMzMTViK18weDQ0ZjU0MFtfMHg2ZDY0KCcweDFkNCcpXTsweDA9PT1fMHg0NGY1NDBbXzB4NmQ2NCgnMHgxZDUnKV0/XzB4NGIxNjc0W18weDZkNjQoJzB4MWQ2JyldKDB4MCwweDAseydzdGFydCc6XzB4NDczY2E2LCdlbmQnOl8weDQ3M2NhNn0pOl8weDQ0ZjU0MFsnbGluZURpZmZlcmVuY2UnXT4weDA/XzB4NGIxNjc0W18weDZkNjQoJzB4MWQ3JyldKF8weDQ3M2NhNixfMHg0NGY1NDBbJ2xpbmVEaWZmZXJlbmNlJ10seydzdGFydCc6XzB4NDczY2E2LCdlbmQnOl8weDQ3M2NhNisweDF9KTpfMHg0YjE2NzRbXzB4NmQ2NCgnMHgxZDcnKV0oXzB4NDczY2E2LF8weDQ0ZjU0MFtfMHg2ZDY0KCcweDFkNScpXSx7J3N0YXJ0JzpfMHg0NzNjYTYsJ2VuZCc6XzB4NDczY2E2LV8weDQ0ZjU0MFsnbGluZURpZmZlcmVuY2UnXX0pO30pKTt9fSwnc3RhcnQnOmZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHgxZDgnKT09PV8weDZkNjQoJzB4MWQ5Jykpe3JldHVybiBRW18weDZkNjQoJzB4MWRhJyldKF8weDJjYjc2M1tfMHg2ZDY0KCcweDFkYicpXSxfMHg0MzNjMTApW18weDZkNjQoJzB4N2UnKV0oZnVuY3Rpb24oXzB4MWUxZDdhKXtyZXR1cm4gUVtfMHg2ZDY0KCcweGMyJyldKEpTT05bXzB4NmQ2NCgnMHgxZGMnKV0oXzB4MWUxZDdhKSk7fSk7fWVsc2V7dmFyIF8weDQzM2MxMD10aGlzO3JldHVybiBfMHg0MzNjMTBbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDMxJyldKF8weDQzM2MxMFtfMHg2ZDY0KCcweGZjJyldW18weDZkNjQoJzB4MTEyJyldKCkpW18weDZkNjQoJzB4N2UnKV0oZnVuY3Rpb24oXzB4NDUxZmYyKXtpZihfMHg2ZDY0KCcweDFkZCcpIT09XzB4NmQ2NCgnMHgxZGQnKSl7dmFyIF8weDE2NWE4Zj10aGlzO3JldHVybiBfMHgxNjVhOGZbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDEwNScpXShfMHg0MzNjMTApO31lbHNle3JldHVybiBfMHg0MzNjMTBbXzB4NmQ2NCgnMHg1NycpXVsnc2V0RmlsZVJvb3QnXShfMHg0MzNjMTBbXzB4NmQ2NCgnMHhmYycpXVtfMHg2ZDY0KCcweGJlJyldKCkpLFFbXzB4NmQ2NCgnMHhjMicpXShfMHg0NTFmZjIpO319KTt9fSwnc3RvcCc6ZnVuY3Rpb24oKXt2YXIgXzB4NDMzYzEwPXRoaXM7XzB4NDMzYzEwWydfaG9zdCddJiYoXzB4NDMzYzEwWydfaG9zdCddW18weDZkNjQoJzB4MWFkJyldKHsndHlwZSc6XzB4NmQ2NCgnMHgxMTQnKX0pLF8weDQzM2MxMFtfMHg2ZDY0KCcweDE4OScpXVtfMHg2ZDY0KCcweDFkZScpXSgpLGRlbGV0ZSBfMHg0MzNjMTBbJ19jYWxsYmFja3MnXSxkZWxldGUgXzB4NDMzYzEwW18weDZkNjQoJzB4MTg5JyldKSxfMHg0MzNjMTBbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDExNCcpXSgpO30sJ19yZXF1ZXN0V2l0aENvcnJlbGF0aW9uSWQnOmZ1bmN0aW9uKF8weDQzM2MxMCxfMHg0NTFmZjIpe3ZhciBfMHgyY2I3NjM9dGhpcyxfMHg1N2M2ZWM9KytfMHg1YTU5ZjMsXzB4NWI1YjcwPV8weDJjYjc2M1tfMHg2ZDY0KCcweDEyMScpXVtfMHg1N2M2ZWNdPXsnZG9uZSc6XzB4NDUxZmYyfTtfMHg0MzNjMTBbJ2lkJ109XzB4NTdjNmVjLF8weDJjYjc2M1tfMHg2ZDY0KCcweDE4OScpXVtfMHg2ZDY0KCcweDFhZCcpXShfMHg0MzNjMTApLF8weDViNWI3MFtfMHg2ZDY0KCcweDEyMicpXT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHgxZGYnKSE9PV8weDZkNjQoJzB4MWUwJykpe2RlbGV0ZSBfMHgyY2I3NjNbXzB4NmQ2NCgnMHgxMjEnKV1bXzB4NTdjNmVjXTt9ZWxzZXt2YXIgXzB4OTk0ZDNjPUpTT05bXzB4NmQ2NCgnMHgxZGMnKV0oYik7cCYmMHgwPT09XzB4OTk0ZDNjW18weDZkNjQoJzB4MWUxJyldW18weDZkNjQoJzB4MWUyJyldPyhmKHUsJzAnKSxmKGgsJzAnKSxkZWxldGUgXzB4NDMzYzEwW18weDZkNjQoJzB4ZDInKV1bXzB4NmQ2NCgnMHgxZTMnKV0sbSgpLF8weDU3YzZlY1tfMHg2ZDY0KCcweDFlNCcpXShfMHg2ZDY0KCcweDhkJyksZCtfMHg2ZDY0KCcweDFlNScpKSxfMHg1N2M2ZWNbXzB4NmQ2NCgnMHgxMTQnKV0oKSxfMHg1N2M2ZWNbXzB4NmQ2NCgnMHgxZTYnKV0oKSk6XzB4NDMzYzEwWydvbmxpbmVMaWNlbnNlRGV0YWlscyddW18weDZkNjQoJzB4MWUzJyldJiZfMHg5OTRkM2NbXzB4NmQ2NCgnMHgxZTEnKV1bXzB4NmQ2NCgnMHgxZTInKV09PT1wPyhfMHg0MzNjMTBbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDFlMycpXVtfMHhjNzBkZCtfMHg2ZDY0KCcweDFlNycpXT1uZXcgXzB4NGIxNjc0KClbJ2dldFRpbWUnXSgpLG0oKSk6XzB4OTk0ZDNjW18weDZkNjQoJzB4MWUxJyldW18weDZkNjQoJzB4MWU4JyldPyhfMHg5OTRkM2NbXzB4NmQ2NCgnMHgxZTEnKV1bJ2xpY2Vuc2UnXVtfMHg2ZDY0KCcweDFlOScpXT8oZyh1LF8weDk5NGQzY1tfMHg2ZDY0KCcweDFlMScpXVtfMHg2ZDY0KCcweDFlOCcpXVtfMHg2ZDY0KCcweDFlOScpXSksXygpKTpmKHUsJzAnKSxfMHg5OTRkM2NbXzB4NmQ2NCgnMHgxZTEnKV1bXzB4NmQ2NCgnMHgxZTgnKV1bXzB4NmQ2NCgnMHgxZWEnKV0/ZyhoLF8weDk5NGQzY1tfMHg2ZDY0KCcweDFlMScpXVtfMHg2ZDY0KCcweDFlOCcpXVsnd2FsbGFieSddKTpmKGgsJzAnKSxkZWxldGUgXzB4NDMzYzEwWydvbmxpbmVMaWNlbnNlRGV0YWlscyddW18weDZkNjQoJzB4MWViJyldLF8weDQzM2MxMFtfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4MWUzJyldPXsnZW1haWwnOl8weDE1YTAwYiwnaWQnOl8weDVhNTlmMywnbGFzdE1vZGlmaWVkJzpfMHg5OTRkM2NbXzB4NmQ2NCgnMHgxZTEnKV1bJ2xhc3RNb2RpZmllZCddLCdxdW9ra2EnOl8weDk5NGQzY1tfMHg2ZDY0KCcweDFlMScpXVtfMHg2ZDY0KCcweDFlOCcpXVtfMHg2ZDY0KCcweDFlOScpXSwnd2FsbGFieSc6XzB4OTk0ZDNjW18weDZkNjQoJzB4MWUxJyldW18weDZkNjQoJzB4MWU4JyldWyd3YWxsYWJ5J119LF8weDQzM2MxMFtfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4MWUzJyldW18weGM3MGRkKydfbGFzdENoZWNrJ109bmV3IF8weDRiMTY3NCgpW18weDZkNjQoJzB4MWVjJyldKCksbSgpLE5bXzB4NmQ2NCgnMHgxZWQnKV0oXzB4NDMzYzEwWydjbGllbnQnXSxfMHg0MzNjMTBbXzB4NmQ2NCgnMHgxNTQnKV0sXzB4NDMzYzEwWydjdiddLF8weDQzM2MxMFsnb2wnXSksXzB4MmNiNzYzW18weDZkNjQoJzB4MWVlJyldKE5bXzB4NmQ2NCgnMHgxZWYnKV0sXzB4NWI1YjcwP2Z1bmN0aW9uKCl7fTpfMHg0NTFmZjIpKTp2KGQrXzB4NmQ2NCgnMHgxZjAnKSkmJnNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4geShfMHgxNWEwMGIsXzB4NWE1OWYzLF8weGM3MGRkLHApO30sXzB4NDFkNjhlKTt9fSwweDEyNGY4MCk7fSwnX3Jlc3BvbnNlV2l0aENvcnJlbGF0aW9uSWQnOmZ1bmN0aW9uKF8weDQzM2MxMCl7aWYoXzB4NmQ2NCgnMHgxZjEnKSE9PV8weDZkNjQoJzB4MWYxJykpe3JldHVybiBfMHg1YjViNzAodGhpcyx2b2lkIDB4MCx2b2lkIDB4MCxmdW5jdGlvbigpe3ZhciBfMHgxM2Y3Y2IsXzB4MWE0OTlmLF8weDI0YmUxYjtyZXR1cm4gXzB4NDFkNjhlKHRoaXMsZnVuY3Rpb24oXzB4NDk0MTc5KXtzd2l0Y2goXzB4NDk0MTc5WydsYWJlbCddKXtjYXNlIDB4MDppZighdGhpc1tfMHg2ZDY0KCcweDFmMicpXSlyZXR1cm5bMHgyLHRoaXNbXzB4NmQ2NCgnMHgxZjMnKV0oXzB4NDMzYzEwKV07XzB4MTNmN2NiPTB4MCxfMHg0OTQxNzlbXzB4NmQ2NCgnMHhkZicpXT0weDE7Y2FzZSAweDE6cmV0dXJuIF8weDEzZjdjYjwweGE/WzB4NCx0aGlzW18weDZkNjQoJzB4MWY0JyldKDB4YSldOlsweDMsMHg2XTtjYXNlIDB4MjpyZXR1cm4gXzB4NDk0MTc5WydzZW50J10oKSxbMHg0LHRoaXNbXzB4NmQ2NCgnMHgxZjUnKV0oXzB4NDMzYzEwKV07Y2FzZSAweDM6cmV0dXJuIF8weDFhNDk5Zj1fMHg0OTQxNzlbJ3NlbnQnXSgpLFsweDQsdGhpc1tfMHg2ZDY0KCcweDFmNCcpXSgweGEpXTtjYXNlIDB4NDpyZXR1cm4gXzB4NDk0MTc5WydzZW50J10oKSxbMHg0LHRoaXNbXzB4NmQ2NCgnMHgxZjMnKV0oXzB4NDMzYzEwKV07Y2FzZSAweDU6cmV0dXJuIF8weDI0YmUxYj1fMHg0OTQxNzlbXzB4NmQ2NCgnMHgxMTMnKV0oKSxfMHgxYTQ5OWZbXzB4NmQ2NCgnMHgxMTknKV09PT1fMHgyNGJlMWJbXzB4NmQ2NCgnMHg4ZScpXT9bMHgyLF8weDI0YmUxYl06KF8weDEzZjdjYisrLGgoXzB4NmQ2NCgnMHgxZjYnKSksWzB4MywweDFdKTtjYXNlIDB4NjpyZXR1cm5bMHgyXTt9fSk7fSk7fWVsc2V7dmFyIF8weDQ1MWZmMj10aGlzWydfY2FsbGJhY2tzJ11bXzB4NDMzYzEwWydpZCddXTtkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDEyMScpXVtfMHg0MzNjMTBbJ2lkJ11dLF8weDQ1MWZmMiYmKGNsZWFyVGltZW91dChfMHg0NTFmZjJbXzB4NmQ2NCgnMHgxMjInKV0pLF8weDQ1MWZmMlsnZG9uZSddKF8weDQzM2MxMCkpO319fSxfMHg0NTFmZjJbJ2V4cG9ydHMnXT1fMHhjNzBkZDt9LHsnLi9icm93c2VyRW52aXJvbm1lbnQnOjB4NCwnLi9ydW5Xb3JrZXJQb29sJzoweDIxLCdjaGlsZF9wcm9jZXNzJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDB9XSw3OltmdW5jdGlvbihfMHg1ODNkYzIsXzB4Mjg1MWQ2LF8weDRiOGJiZSl7J3VzZSBzdHJpY3QnO3ZhciBfMHg1NDc3ZDg9Z2xvYmFsWydEYXRlJ107aWYoXzB4NmQ2NCgnMHgxZjcnKSE9PV8weDU0NzdkOFtfMHg2ZDY0KCcweDUzJyldKCl8fF8weDZkNjQoJzB4MWY4JykhPT1fMHg1NDc3ZDhbJ3RvU3RyaW5nJ11bXzB4NmQ2NCgnMHg1MycpXSgpKXJldHVybiB2b2lkKF8weDI4NTFkNlsnZXhwb3J0cyddPXsnY3JlYXRlJzpmdW5jdGlvbigpe319KTt2YXIgXzB4MjAzYWM5PV8weDU4M2RjMihfMHg2ZDY0KCcweDRlJykpLF8weDE3YzY4ZT1mdW5jdGlvbihfMHgyODUxZDYpe3ZhciBfMHg0YjhiYmUsXzB4NTQ3N2Q4PV8weDU4M2RjMignLi9leHRlbnNpb24vdWkvc2VydmljZScpO2lmKF8weDI4NTFkNltfMHg2ZDY0KCcweDFmOScpXSlfMHg0YjhiYmU9XzB4Mjg1MWQ2W18weDZkNjQoJzB4MWY5JyldO2Vsc2V7aWYoXzB4NmQ2NCgnMHgxZmEnKSE9PV8weDZkNjQoJzB4MWZiJykpe3ZhciBfMHgyMDNhYzk9XzB4NTgzZGMyKF8weDZkNjQoJzB4MWZjJykpO18weDRiOGJiZT1uZXcgXzB4MjAzYWM5KHsnZmlsZUlkQnlQYXRoJzpmdW5jdGlvbihfMHg1ODNkYzIpe3JldHVybiBfMHgyODUxZDZbJ2lkQnlQYXRoJ10oXzB4NTgzZGMyKTt9LCdwcm9qZWN0JzpfMHgyODUxZDZ9KTt9ZWxzZXtyZXR1cm4gdGhpc1snX2tleSddfHwodGhpc1tfMHg2ZDY0KCcweDFmZCcpXSgpLHRoaXNbXzB4NmQ2NCgnMHgxZmUnKV0pO319XzB4Mjg1MWQ2W18weDZkNjQoJzB4MWZmJyldPW5ldyBfMHg1NDc3ZDgoXzB4NGI4YmJlKSxfMHgyODUxZDZbXzB4NmQ2NCgnMHgxZmYnKV1bJ29uJ10oJ21lc3NhZ2UnLGZ1bmN0aW9uKF8weDU4M2RjMil7aWYoXzB4NmQ2NCgnMHgyMDAnKT09PSdIZkNQcScpe3JldHVybiBfMHg2ZDY0KCcweDIwMScpPT09XzB4NTgzZGMyW18weDZkNjQoJzB4MzAnKV0mJl8weDI4NTFkNltfMHg2ZDY0KCcweDE2YScpXShfMHg2ZDY0KCcweDIzJyksXzB4NTgzZGMyKTt9ZWxzZXtyZXR1cm4gXzB4NTgzZGMyW18weDZkNjQoJzB4MjAyJyldKCk7fX0pO307XzB4Mjg1MWQ2W18weDZkNjQoJzB4NCcpXT17J2NyZWF0ZSc6ZnVuY3Rpb24oXzB4Mjg1MWQ2LF8weDRiOGJiZSl7aWYoXzB4NmQ2NCgnMHgyMDMnKSE9PV8weDZkNjQoJzB4MjA0Jykpe2lmKF8weDRiOGJiZSl7aWYoXzB4NmQ2NCgnMHgyMDUnKSE9PSdBbWZGSScpe2lmKF8weDI4NTFkNlsnZXhwaXJ5RGF0ZSddKXRyeXt2YXIgXzB4MmM2MjhmPV8weDI4NTFkNlsnZXhwaXJ5RGF0ZSddW18weDZkNjQoJzB4ZjUnKV0oJy0nKSxfMHgzNjBhMzc9bmV3IF8weDU0NzdkOChfMHgyYzYyOGZbMHgxXSsnLycrXzB4MmM2MjhmWzB4MF0rJy8nK18weDJjNjI4ZlsweDJdKTtfMHgzNjBhMzdbXzB4NmQ2NCgnMHgyMDYnKV0oXzB4MzYwYTM3WydnZXREYXRlJ10oKSsweDEpO3ZhciBfMHg3MGEzZGE9bmV3IF8weDU0NzdkOCgweDE3MGEzYWY3ZjIyKTtpZihfMHg3MGEzZGFbJ3NldEhvdXJzJ10oMHgwLDB4MCwweDAsMHgwKSwhcHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldW18weDZkNjQoJzB4MWU5JyldJiZfMHgzNjBhMzc8XzB4NzBhM2RhfHxwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0mJl8weDI4NTFkNltfMHg2ZDY0KCcweDIwNycpXSl7dmFyIF8weDQ2NWQzMD1wcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0/J1F1b2trYS5qc1x4MjBceDI3UHJvXHgyNyc6XzB4NmQ2NCgnMHgyMDgnKSxfMHhkYmFmZGQ9cHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldW18weDZkNjQoJzB4MWU5JyldP18weDZkNjQoJzB4MjA5Jyk6XzB4NmQ2NCgnMHgyMGEnKTtyZXR1cm4gUVtfMHg2ZDY0KCcweDFiNicpXSh7J21lc3NhZ2UnOidUaGVceDIwaW5zdGFsbGVkXHgyMCcrXzB4NDY1ZDMwK18weDZkNjQoJzB4MjBiJykrXzB4ZGJhZmRkKycuJ1snc3BsaXQnXSgnJylbXzB4NmQ2NCgnMHgyMGMnKV0oKVtfMHg2ZDY0KCcweDRjJyldKCcnKSwnbm9EZXRhaWxzJzohMHgwfSk7fX1jYXRjaChfMHg1YzJjOTMpe31wcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV18fF8weDE3YzY4ZShfMHg0YjhiYmUpO3ZhciBfMHhhNWYxZmU9XzB4NTgzZGMyKF8weDZkNjQoJzB4MjBkJykpLF8weGQ1OTBkOT0weDdkMDtpZihfMHgyODUxZDZbXzB4NmQ2NCgnMHgxZTgnKV0mJl8weDI4NTFkNltfMHg2ZDY0KCcweDFlOCcpXSE9PV8weDRiOGJiZVtfMHg2ZDY0KCcweDIwZScpXSYmIV8weDI4NTFkNltfMHg2ZDY0KCcweDIwZicpXSl7aWYoJ2RTZXNuJyE9PSdvZ3VOaicpe3ZhciBfMHgzMzA4ZDc9c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtfMHhhNWYxZmVbJ2VtaXQnXShfMHg2ZDY0KCcweDIxMCcpLF8weDI4NTFkNltfMHg2ZDY0KCcweDFlOCcpXSk7fSxfMHhkNTkwZDkpO18weGE1ZjFmZVsnb24nXShfMHg2ZDY0KCcweDIxMCcpLGZ1bmN0aW9uKF8weDU4M2RjMixfMHg1NDc3ZDgpe2lmKF8weDZkNjQoJzB4MjExJykhPT1fMHg2ZDY0KCcweDIxMScpKXtyZXR1cm4gXzB4Mjg1MWQ2WydfYWRkRmlsZSddKG5ldyBfMHhhNWYxZmUoXzB4NTgzZGMyLF8weDI4NTFkNltfMHg2ZDY0KCcweDIxMicpXSxfMHgyODUxZDZbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHgyMTMnKV0oKXx8XzB4Mjg1MWQ2W18weDZkNjQoJzB4NTknKV1bJ2lzTmF0aXZlQnVuZGxlciddKCksXzB4Mjg1MWQ2W18weDZkNjQoJzB4MjE0JyldKSk7fWVsc2V7aWYoXzB4Mjg1MWQ2WydsaWNlbnNlJ10mJl8weDU4M2RjMiYmXzB4Mjg1MWQ2W18weDZkNjQoJzB4MWU4JyldPT09XzB4NTgzZGMyKXtpZihfMHg2ZDY0KCcweDIxNScpPT09XzB4NTQ3N2Q4fHxfMHg2ZDY0KCcweDE0NicpPT09XzB4NTQ3N2Q4KXJldHVybjtfMHg0YjhiYmVbXzB4NmQ2NCgnMHgxY2UnKV0oeyd0eXBlJzpfMHg2ZDY0KCcweDIxNicpLCdhZGRyZXNzJzpfMHg1NDc3ZDh9KTt9fX0pLF8weDRiOGJiZVsnX211bHRpY2FzdGVyJ109eydzdG9wJzpmdW5jdGlvbigpe2NsZWFySW50ZXJ2YWwoXzB4MzMwOGQ3KSxfMHhhNWYxZmVbJ3N0b3AnXSgpO319O31lbHNle18weGE1ZjFmZSYmIV8weGE1ZjFmZVtfMHg2ZDY0KCcweGQzJyldJiYoXzB4MTdjNjhlPWhbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weDE3YzY4ZVsnY2FsbCddKGgpO319cmV0dXJuIF8weDI4NTFkNltfMHg2ZDY0KCcweDFlOCcpXT9RWyd3aGVuJ10oITB4MCk6XzB4NGI4YmJlW18weDZkNjQoJzB4MWY1JyldKF8weDIwM2FjOVtfMHg2ZDY0KCcweDIxNycpXShfX2Rpcm5hbWUpKVtfMHg2ZDY0KCcweDdmJyldKGZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHgyMTgnKSE9PSdObWtrZicpe3JldHVybiBRW18weDZkNjQoJzB4YzInKV0oe30pO31lbHNle19bXzB4NmQ2NCgnMHgzYScpXShfMHg1ODNkYzJbXzB4NmQ2NCgnMHgxNTInKV0oKSxmdW5jdGlvbihfMHgzOTgzMGQpe3ZhciBfMHg0MTdiZDQ9XzB4Mzk4MzBkW18weDZkNjQoJzB4MTU3JyldKCk7XzB4NDE3YmQ0JiZfMHg0MTdiZDRbXzB4NmQ2NCgnMHgyMTknKV0mJl8weDQxN2JkNFtfMHg2ZDY0KCcweDIxOScpXShfMHg1ODNkYzIpO30pO319KVtfMHg2ZDY0KCcweDdlJyldKGZ1bmN0aW9uKF8weDU4M2RjMil7aWYoXzB4NTgzZGMyJiZfMHg1ODNkYzJbJ210aW1lJ10pe2lmKF8weDZkNjQoJzB4MjFhJykhPT0namtwV0snKXt2YXIgXzB4Mjg1MWQ2PV8weDU4M2RjMltfMHg2ZDY0KCcweDIxYicpXTtpZihfMHgyODUxZDZbXzB4NmQ2NCgnMHgyMDYnKV0oXzB4NTgzZGMyW18weDZkNjQoJzB4MjFiJyldW18weDZkNjQoJzB4MjFjJyldKCkrMHgxZSksbmV3IF8weDU0NzdkOCgpPl8weDI4NTFkNilyZXR1cm4gUVsncmVqZWN0J10oeydtZXNzYWdlJzonbW9jLnNqeWJhbGxhd0BvbGxlaFx4MjB0YVx4MjBsaWFtZVx4MjBhaXZceDIwc3VceDIwdGNhdG5vY1x4MjBlc2FlbHBceDIwLG1hZXRceDIwcnVveVx4MjByb1x4MjBmbGVzcnVveVx4MjByb2ZceDIwZG9pcmVwXHgyMGxhaXJ0XHgyMHJlZ25vbFx4MjBhXHgyMGVnbmFycmFceDIwb3RceDIwZWtpbFx4MjBkbHVvd1x4MjB1b3lceDIwZklceDBhLmVzbmVjaWxceDIwYVx4MjBlc2FoY3J1cFx4MjBvdFx4MjBlc2FoY3J1cC9tb2Muc2p5YmFsbGF3Ly86c3B0dGhceDIwdGFceDIwZXRpc2Jld1x4MjBydW9ceDIwdGlzaXZceDIwZXNhZWxwXHgyMCx0Y2Vqb3JwXHgyMGVodFx4MjB0cm9wcHVzXHgyMGRuYVx4MjB0aVx4MjBnbmlzdVx4MjBldW5pdG5vY1x4MjBvdFx4MjBla2lsXHgyMGRsdW93XHgyMHVveVx4MjBkbmFceDIwLHl0aXZpdGN1ZG9ycFx4MjBydW95XHgyMGRlc2FlcmNuaVx4MjBzYWhceDIwc2oueWJhbGxhd1x4MjBmSVx4MGEudHVvXHgyMHRpXHgyMGduaXlydFx4MjByb2ZceDIwc2tuYWh0XHgyMCxyZXZvXHgyMHNpXHgyMGRvaXJlcFx4MjBsYWlydFx4MjBzai55YmFsbGF3XHgyMHJ1b1knW18weDZkNjQoJzB4ZjUnKV0oJycpWydyZXZlcnNlJ10oKVtfMHg2ZDY0KCcweDRjJyldKCcnKSwnbm9EZXRhaWxzJzohMHgwfSk7fWVsc2V7aWYoXzB4Mjg1MWQ2W18weDZkNjQoJzB4MjFkJyldKXtfMHgyODUxZDZbXzB4NmQ2NCgnMHgyMWUnKV09bmV3IERhdGUoKVsnZ2V0VGltZSddKCk7dmFyIF8weDFjNWRhPV8weDI4NTFkNlsnX2VuZFRpbWUnXS1fMHgyODUxZDZbJ19zdGFydFRpbWUnXSxfMHgzNzUwNzQ9XzB4NmQ2NCgnMHgyMWYnKTtfMHgxYzVkYT4weDNlOCYmKF8weDFjNWRhLz0weDNlOCxfMHgzNzUwNzQ9J3NlY29uZChzKScsXzB4MWM1ZGE+MHgzYyYmKF8weDFjNWRhLz0weDNjLF8weDM3NTA3ND0nbWludXRlKHMpJykpLGNvbnNvbGVbXzB4NmQ2NCgnMHgyMjAnKV0oJ0ZpbmlzaGVkXHgyMGV4ZWN1dGluZ1x4MjAnK18weDI4NTFkNltfMHg2ZDY0KCcweDIxZCcpXStfMHg2ZDY0KCcweDIyMScpK01hdGhbJ3JvdW5kJ10oMHg2NCpfMHgxYzVkYSkvMHg2NCsnXHgyMCcrXzB4Mzc1MDc0KTt9cmV0dXJuIFFbXzB4NmQ2NCgnMHhjMicpXShfMHg1ODNkYzIpO319cmV0dXJuIFFbXzB4NmQ2NCgnMHhjMicpXSghMHgwKTt9KTt9ZWxzZXtyZXR1cm57J3R5cGUnOl8weDU4M2RjMltfMHg2ZDY0KCcweDMwJyldKCksJ3RleHQnOl8weDI4NTFkNj92b2lkIDB4MDpfMHg1ODNkYzJbXzB4NmQ2NCgnMHgyMjInKV0oKSwnZmlsZSc6XzB4NTgzZGMyW18weDZkNjQoJzB4MTU4JyldKCkmJl8weDU4M2RjMltfMHg2ZDY0KCcweDE1OCcpXSgpW18weDZkNjQoJzB4NGUnKV0oKSwnbG9jJzp0aGlzW18weDZkNjQoJzB4MjIzJyldKF8weDU4M2RjMltfMHg2ZDY0KCcweDE1NycpXSgpKXx8XzB4NTgzZGMyWydsaW5lJ10oKSwnY29udGV4dCc6XzB4NTgzZGMyW18weDZkNjQoJzB4MjI0JyldKCksJ3ZhbHVlQmFnJzpfMHgyODUxZDY/XzB4NTgzZGMyW18weDZkNjQoJzB4MjI1JyldKCk6cHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldW18weDZkNjQoJzB4MWU5JyldP18weDU4M2RjMltfMHg2ZDY0KCcweDIyNicpXSgpOnZvaWQgMHgwLCdleHBlY3RlZCc6XzB4NTgzZGMyW18weDZkNjQoJzB4MjI3JyldKCksJ2FjdHVhbCc6XzB4NTgzZGMyW18weDZkNjQoJzB4MjI4JyldKCl9O319cmV0dXJuIF8weDU4M2RjMihfMHg2ZDY0KCcweDIyOScpKTt9ZWxzZXt2YXIgXzB4M2I3ZjUyPV9bXzB4NmQ2NCgnMHgxNTEnKV0oZyxmdW5jdGlvbihfMHg1NTRmODgpe3JldHVybiBfW18weDZkNjQoJzB4MjJhJyldKF8weDRiOGJiZSxfMHg1NTRmODhbXzB4NmQ2NCgnMHgyMmInKV0pO30pO18weDNiN2Y1MiYmKF8weDQ2NWQzMD0hayhfMHg0YjhiYmVbXzB4NmQ2NCgnMHg5MScpXShfMHgzYjdmNTJbJ3JlYWxQYXRoJ10sXzB4M2I3ZjUyWydwYXRoJ10pLF8weDI4NTFkNikpO319fTt9LHsnLi9leHRlbnNpb24vY29yZSc6MHg4LCcuL2V4dGVuc2lvbi9zZXJ2ZXIvbW9kZWwnOjB4MTQsJy4vZXh0ZW5zaW9uL3NlcnZlci9tdWx0aWNhc3Rlcic6MHgxNSwnLi9leHRlbnNpb24vdWkvc2VydmljZSc6MHgxYiwncGF0aCc6dm9pZCAweDB9XSw4OltmdW5jdGlvbihfMHgyMTU5NWIsXzB4NWY4MGEyLF8weDU0YWNhYyl7J3VzZSBzdHJpY3QnO3ZhciBfMHgzYThiNmM9dGhpcyYmdGhpc1tfMHg2ZDY0KCcweDIyYycpXXx8ZnVuY3Rpb24oKXt2YXIgXzB4MjE1OTViPWZ1bmN0aW9uKF8weDVmODBhMixfMHg1NGFjYWMpe2lmKF8weDZkNjQoJzB4MjJkJykhPT1fMHg2ZDY0KCcweDIyZScpKXtyZXR1cm4oXzB4MjE1OTViPU9iamVjdFtfMHg2ZDY0KCcweDIyZicpXXx8eydfX3Byb3RvX18nOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKF8weDIxNTk1YixfMHg1ZjgwYTIpe18weDIxNTk1YltfMHg2ZDY0KCcweDIzMCcpXT1fMHg1ZjgwYTI7fXx8ZnVuY3Rpb24oXzB4MjE1OTViLF8weDVmODBhMil7aWYoXzB4NmQ2NCgnMHgyMzEnKT09PV8weDZkNjQoJzB4MjMxJykpe2Zvcih2YXIgXzB4NTRhY2FjIGluIF8weDVmODBhMilfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgyZicpXShfMHg14oCLNGFjYWMpJiYoXzB4MjE1OTViW18weDU0YWNhY109XzB4NWY4MGEyW18weDU0YWNhY10pO31lbHNle3JldHVybiB0aGlzW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgyMzInKV0oKTt9fSkoXzB4NWY4MGEyLF8weDU0YWNhYyk7fWVsc2V7Y29uc29sZVtfMHg2ZDY0KCcweDE1YycpXShfMHg2ZDY0KCcweDIyJykrXzB4MjE1OTViKyc6XHgyMCcrKF8weDEwMjAwYyYmXzB4MTAyMDBjWydtZXNzYWdlJ10pKTt9fTtyZXR1cm4gZnVuY3Rpb24oXzB4NWY4MGEyLF8weDU0YWNhYyl7aWYoXzB4NmQ2NCgnMHgyMzMnKT09PV8weDZkNjQoJzB4MjMzJykpe2Z1bmN0aW9uIF8weDNhOGI2Yygpe3RoaXNbXzB4NmQ2NCgnMHgxYTknKV09XzB4NWY4MGEyO31fMHgyMTU5NWIoXzB4NWY4MGEyLF8weDU0YWNhYyksXzB4NWY4MGEyW18weDZkNjQoJzB4ODEnKV09bnVsbD09PV8weDU0YWNhYz9PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShfMHg1NGFjYWMpOihfMHgzYThiNmNbXzB4NmQ2NCgnMHg4MScpXT1fMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXSxuZXcgXzB4M2E4YjZjKCkpO31lbHNle3ZhciBfMHgxYmNmZTM9dGhpcztfMHgxYmNmZTNbJ19ob3N0J11bXzB4NmQ2NCgnMHgxYWQnKV0oeyd0eXBlJzpfMHg2ZDY0KCcweDFhZScpLCdwYWdlSWQnOl8weDIxNTk1Yn0pO319O30oKSxfMHgyNTYxMmE9dGhpcyYmdGhpc1tfMHg2ZDY0KCcweDIzNCcpXXx8ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDIzNScpPT09J05raFpqJyl7cmV0dXJuIF8weDI1NjEyYT1PYmplY3RbJ2Fzc2lnbiddfHxmdW5jdGlvbihfMHgyMTU5NWIpe2Zvcih2YXIgXzB4NWY4MGEyLF8weDU0YWNhYz0weDEsXzB4M2E4YjZjPWFyZ3VtZW50c1tfMHg2ZDY0KCcweDhlJyldO18weDU0YWNhYzxfMHgzYThiNmM7XzB4NTRhY2FjKyspe18weDVmODBhMj1hcmd1bWVudHNbXzB4NTRhY2FjXTtmb3IodmFyIF8weDI1NjEyYSBpbiBfMHg1ZjgwYTIpT2JqZWN0W18weDZkNjQoJzB4ODEnKV1bJ2hhc093blByb3BlcnR5J11bXzB4NmQ2NCgnMHgzJyldKF8weDVmODBhMixfMHgyNTYxMmEpJiYoXzB4MjE1OTViW18weDI1NjEyYV09XzB4NWY4MGEyW18weDI1NjEyYV0pO31yZXR1cm4gXzB4MjE1OTViO30sXzB4MjU2MTJhWydhcHBseSddKHRoaXMsYXJndW1lbnRzKTt9ZWxzZXt2YXIgXzB4YmE2ZDcwPV8weDI3YWVlNFtfMHhjODc5ZGVdPV8weDI3YWVlNFtfMHhjODc5ZGVdfHx7J2ZpbGUnOl8weDMxMzhjOFtfMHg2ZDY0KCcweDRlJyldKCksJ21lc3NhZ2VzJzpbXX07XzB4YmE2ZDcwW18weDZkNjQoJzB4MjM2JyldW18weDZkNjQoJzB4MWMnKV0oXzB4NWY4MGEyKTt9fSxfMHg0M2ViYT10aGlzJiZ0aGlzW18weDZkNjQoJzB4MjM3JyldfHxmdW5jdGlvbihfMHgyMTU5NWIpe3ZhciBfMHg1ZjgwYTI9XzB4NmQ2NCgnMHg1Jyk9PXR5cGVvZiBTeW1ib2wmJl8weDIxNTk1YltTeW1ib2xbXzB4NmQ2NCgnMHhlOCcpXV0sXzB4NTRhY2FjPTB4MDtyZXR1cm4gXzB4NWY4MGEyP18weDVmODBhMlsnY2FsbCddKF8weDIxNTk1Yik6eyduZXh0JzpmdW5jdGlvbigpe3JldHVybiBfMHgyMTU5NWImJl8weDU0YWNhYz49XzB4MjE1OTViW18weDZkNjQoJzB4OGUnKV0mJihfMHgyMTU5NWI9dm9pZCAweDApLHsndmFsdWUnOl8weDIxNTk1YiYmXzB4MjE1OTViW18weDU0YWNhYysrXSwnZG9uZSc6IV8weDIxNTk1Yn07fX07fSxfMHhjODc5ZGU9Z2xvYmFsWydEYXRlJ107aWYoJ2Z1bmN0aW9uXHgy4oCLMERhdGUoKVx4MjB7XHgyMFtuYXRpdmVceDIwY29kZV1ceDIwfSchPT1fMHhjODc5ZGVbXzB4NmQ2NCgnMHg1MycpXSgpfHxfMHg2ZDY0KCcweDFmOCcpIT09XzB4Yzg3OWRlW18weDZkNjQoJzB4NTMnKV1bXzB4NmQ2NCgnMHg1MycpXSgpKV8weDVmODBhMltfMHg2ZDY0KCcweDQnKV09ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDIzOCcpPT09J0lZcnpSJyl7ZnVuY3Rpb24gXzB4MjE1OTViKCl7fXJldHVybiBfMHgyMTU5NWI7fWVsc2V7dmFyIF8weDU5N2Q5MD1fMHgyNTYxMmFbXzB4NmQ2NCgnMHgyMzknKV0oKTtpZighXzB4M2E4YjZjW18weDZkNjQoJzB4MjNhJyldKF8weDI1NjEyYSxfMHg1NGFjYWMpKXtfMHg1OTdkOTA+XzB4MjE1OTViJiYoXzB4NTk3ZDkwKz1fMHg1ZjgwYTIsXzB4MjU2MTJhWydudW1iZXInXShfMHg1OTdkOTApKTt2YXIgXzB4NDU0NDQ2PV8weDNhOGI2Y1tfMHg2ZDY0KCcweDIzYicpXVtfMHg1OTdkOTBdO18weDQ1NDQ0Nj8oXzB4NDU0NDQ2W18weDZkNjQoJzB4MjNjJyldKCksXzB4MjU2MTJhW18weDZkNjQoJzB4MjNjJyldKCksXzB4M2E4YjZjWydfcmVjeWNsZWRMaW5lcyddWydwdXNoJ10oXzB4NDU0NDQ2KSxfMHgzYThiNmNbXzB4NmQ2NCgnMHgyM2QnKV1bXzB4NmQ2NCgnMHgxYycpXShfMHgyNTYxMmEpLGRlbGV0ZSBfMHgzYThiNmNbJ19saW5lcyddW18weDU5N2Q5MF0pOl8weDNhOGI2Y1tfMHg2ZDY0KCcweDIzYicpXVtfMHg1OTdkOTBdPV8weDI1NjEyYTt9fX0oKTtlbHNle3ZhciBfMHgyN2FlZTQ9XzB4MjE1OTViKF8weDZkNjQoJzB4MjNlJykpLF8weDMxMzhjOD1fMHgyMTU5NWIoXzB4NmQ2NCgnMHg0ZScpKSxfMHg1YjNhMTY9XzB4MjE1OTViKCdvcycpLF8weGM2NmVjZj1fMHgyMTU5NWIoXzB4NmQ2NCgnMHgyM2YnKSksXzB4MWIzNDgwPV8weDIxNTk1YihfMHg2ZDY0KCcweDI0MCcpKSxfMHgxMDIwMGM9XzB4MjE1OTViKCdjaGlsZF9wcm9jZXNzJylbJ2V4ZWNTeW5jJ10sXzB4ZjFlZDZkPV8weDIxNTk1YihfMHg2ZDY0KCcweDI0MScpKVtfMHg2ZDY0KCcweDI0MicpXSxfMHg0OGQwYWU9XzB4MjE1OTViKF8weDZkNjQoJzB4MjQxJykpW18weDZkNjQoJzB4MjQzJyldLF8weDQyODlhND1fMHgyMTU5NWIoXzB4NmQ2NCgnMHgyNDQnKSksXzB4NTc0ZTQ2PV8weDIxNTk1YihfMHg2ZDY0KCcweDI0NScpKSxfMHgyZTFkMmE9XzB4MjE1OTViKF8weDZkNjQoJzB4MjQ2JykpLF8weDFiZTg0MD1fMHgyMTU5NWIoXzB4NmQ2NCgnMHgyNDcnKSksXzB4NDBmZDU0PV8weDIxNTk1YihfMHg2ZDY0KCcweDI0OCcpKVtfMHg2ZDY0KCcweDFiOScpXSxfMHg1ZDQ4ZDE9bG9nZ2VyW18weDZkNjQoJzB4M2InKV0oJ2V4dGVuZGVkLWNvcmUnKVtfMHg2ZDY0KCcweDU2JyldLF8weDJjMTIxOD0weDkyN2MwLF8weDFhMjg4Nj0weDFiNTgsXzB4MmVhNzg3PTB4NSxfMHg5ZGY4ZGY9MHhlLF8weGYzODNmMj1fMHg2ZDY0KCcweDI0OScpLF8weDQ5MGZjMT1fMHg2ZDY0KCcweDI0YScpLF8weDcxNjUzZT1fMHg2ZDY0KCcweDI0YicpLF8weDNlYjQ4MT1fMHg2ZDY0KCcweDI0YycpLF8weDNhNWQ2ZT1fMHg2ZDY0KCcweDI0ZCcpLF8weGQyOTk2ZD1fMHg2ZDY0KCcweDI0ZScpLF8weGZkMzQ1MT1fMHg2ZDY0KCcweDI0ZicpLF8weDQ3ODIzND1fMHg2ZDY0KCcweDI1MCcpLF8weDE3ZWJiYT1mdW5jdGlvbihfMHgyMTU5NWIsXzB4NWY4MGEyLF8weDU0YWNhYyxfMHgzYThiNmMpe2lmKCdDR2dBaCchPT1fMHg2ZDY0KCcweDI1MScpKXtfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyNTInKV18fChfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyNTInKV09e30pLF8weDIxNTk1YlsnaGVhZGVycyddW18weDZkNjQoJzB4MjUzJyldPV8weDVmODBhMltfMHg2ZDY0KCcweDhlJyldO3ZhciBfMHgyNTYxMmE9XzB4MjdhZWU0W18weDZkNjQoJzB4MjU0JyldKF8weDIxNTk1YixmdW5jdGlvbihfMHgyMTU5NWIpe3ZhciBfMHg1ZjgwYTI9Jyc7XzB4MjE1OTViWydvbiddKF8weDZkNjQoJzB4MTM2JyksZnVuY3Rpb24oXzB4MjE1OTViKXtpZihfMHg2ZDY0KCcweDI1NScpIT09XzB4NmQ2NCgnMHgyNTYnKSl7XzB4M2E4YjZjJiYoXzB4NWY4MGEyKz1fMHgyMTU5NWIpO31lbHNle3JldHVybiB0aGlzW18weDZkNjQoJzB4MjU3JyldJiZ0aGlzW18weDZkNjQoJzB4MjU3JyldWydwYXRoJ10oKTt9fSksXzB4MjE1OTViWydvbiddKF8weDZkNjQoJzB4MjU4JyksZnVuY3Rpb24oKXtfMHgzYThiNmMmJl8weDNhOGI2YyhfMHg1ZjgwYTIpO30pO30pO18weDI1NjEyYVsnb24nXShfMHg2ZDY0KCcweDhkJyksZnVuY3Rpb24oXzB4MjE1OTViKXtpZignVk5CSEknPT09J1ZOQkhJJyl7XzB4NTRhY2FjJiZfMHg1NGFjYWMoXzB4MjE1OTViKTt9ZWxzZXtpZihfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgxZTgnKV0mJl8weDIxNTk1YiYmXzB4NWY4MGEyWydsaWNlbnNlJ109PT1fMHgyMTU5NWIpe2lmKF8weDZkNjQoJzB4MjE1Jyk9PT1fMHgzYThiNmN8fF8weDZkNjQoJzB4MTQ2Jyk9PT1fMHgzYThiNmMpcmV0dXJuO18weDU0YWNhY1tfMHg2ZDY0KCcweDFjZScpXSh7J3R5cGUnOidsaWNlbnNlQ29sbGlzaW9uJywnYWRkcmVzcyc6XzB4M2E4YjZjfSk7fX19KSxfMHgyNTYxMmFbXzB4NmQ2NCgnMHgyNTknKV0oXzB4NWY4MGEyKSxfMHgyNTYxMmFbJ2VuZCddKCk7fWVsc2V7cmV0dXJuIFFbXzB4NmQ2NCgnMHhjMicpXShKU09OW18weDZkNjQoJzB4MWRjJyldKF8weDIxNTk1YikpO319LF8weDJjMDU4MT17J0F0b20nOictLS0tLUJFR0lOXHgyMFBVQkxJQ1x4MjBLRVktLS0tLVx4MGFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXF5ZFFCWnBlNHZQbVd2SDJ5cmlIXHgwYThmL0Jtb2txY2xEcUpOSlVDb1YrUlFhdzE2cnQvaTNrUlVVSHFZWFYxb3p4UHZRc056QXBQcmFwKzIxTXFWVFRceDBhZ3pwU0pCNkhuaFlhYkFPTWFodXZ6YVpseHRFVVZBb2Rad0dY4oCLbjdiZERMNnRiN1dJam9oaEdteWZzREt2KzJwaVx4MGFWVm5CUCtxR1JYdHRhdE55S2swbVRPZmJVYjgwbXNxNlMzTW5maE04U3VPbzgzK3hZL3RaNWlQR3d6ajExYlNGXHgwYXR2a2JNQWNYM1ljS2hvRlJteThLZ0R1T3hqUThtZTgyRHk2U2dzaGxzYWU4LzJTTlZ6MGlNY2dDSVRBU1hPdVhceDBhMEYwUUZDcmVqeFhUVHpnaDdUQmU5YTR4NTFpWUtNZk0xd3FxWGhWLzN5Y3N6SFpyd0dFZjhGY283M0xXdGZvbVx4MGFId0lEQVFBQlx4MGEtLS0tLUVORFx4MjBQVUJMSUNceDIwS0VZLS0tLS0nLCdWU0NvZGUnOictLS0tLUJFR0lOXHgyMFBVQkxJQ1x4MjBLRVktLS0tLVx4MGFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdmMFJuNnJnRk1WTnVhZWczS2c5XHgwYWtqTE5VVDhaMmZuSXJqVWhER004RlM3bzVrNE5UMUZkem5xc29CcHJMZHJMUmRrTXpqSDhJUHJyRVU1cktpV2xceDBhVk8waUtVN1E3QW1NZkFUU3RlenZmeXMwQUFsK28zZi9rUWlTWnhEMlU1UC9LMzhrbFlwd2Y5TDhNTXRoQWVFRlx4MGF5NHh6QTVlQnVQekJkUkh4dlV3VXFoQ0I5bzczWjRNYXhIbnJhejVoeDBmNmFnRWRMVlU2WHNOa281d1huOFpOXHgwYVA2QmJrT09tL0hnVThLa1d1SmJVNTh5Z1h4UGYvZm5aSHUyZ3R2cnovck5lbW9YWTFmRHlkaXpOeER5K1pQZ1BceDBhaXdlU2RxbkxobEZvSkV1eG5Jd29QbFlNN0p3S2gzSmloT3pBcVFRNVU1SmtNNWUvbUZRL2xGcUNWeE1sbUJRV1x4MGFWd0lEQVFBQlx4MGEtLS0tLUVORFx4MjBQVUJMSUNceDIwS0VZLS0tLS0nLCdTdWJsaW1lJzpfMHg2ZDY0KCcweDI1YScpLCdGcmVlZG9tJzpfMHg2ZDY0KCcweDI1YicpLCdRdW9ra2EnOictLS0tLUJFR0lOXHgyMFBVQkxJQ1x4MjBLRVktLS0tLVx4MGFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW9oUi9POFg1cHRnUGJlbHNTc2FaXHgwYVdKSFo3RmtxbzM5Q3g5VVlQczJyWXpidzk0YVpySWVSZGRmZ0Q1NWdTWlozSmtSWFJkWjdLYm0rWFRyaTZWMC9ceDBhMFpldCtGS2FlVzB4a290SHZNUDBmVHpHbmFqUTZDODM2TTh3UVI5ZjFuZHFkN1RzYTMwa0FlZ3ZQcWhLdUkrV1x4MGFhVzFHWnJTZWVleXEzL3VaNHRoUEVHdkZEWGo2UDJvZ0VhRXgzNld1cUQ5RFYxVXVZN3ZjbS9mUFlacGZHZ1B1XHgwYThKNEhBeks1RzBPeXJTZW5UWC8rSk84cEtqT3RGNkpIS2FRbWkzQ0YxdENBMWV3OHN2WjBaTGtLOUFHb00rOE9ceDBhYTlreDFzQnA0WXZDakEwVlJ4ZE8vNjZPdEJSaEZuS1Y2SmJvUFRRNFNHMmJGQUtZUkpPN3RuUzdubmhpY2dIc1x4MGFFd0lEQVFBQlx4MGEtLS0tLUVORFx4MjBQVUJMSUNceDIwS0VZLS0tLS0nLCdJbnRlbGxpSic6XzB4NmQ2NCgnMHgyNWMnKSwnVlMnOictLS0tLUJFR0lOXHgyMFBVQkxJQ1x4MjBLRVktLS0tLVx4MGFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXQzRDlyVSttYWUxVFlJR0liY0hyXHgwYSs4LzNwUVhScklpNlkwTEtjTGwrbCtXTE4xNUlOTUJuZ24zMmQyN2VIakE5QVhWKzlCdTBObVFPVWZHVEoyZlhceDBhRHpKV1ZVVW13WExZSENXRVJKSjBQSTl0dTNBdW5md0NZbTMzbGxZelcwSU12aHdDM3l2SlJSdzVhUTJ3VVJjMVx4MGFlbFV4cDI0bGl1Yytvd1ZkOGcyWVdJTnQySXVtWDNOc1RlbmMrL3JoT1BuaWJLT0s0TlBZYWl5elNoTHc3U2FTXHgwYTZubHBhY2xqK0hmdTlCVXFkaEpsZVY5TGh3RE9uVndydGVYR3J1d0tSZVpsMWc4M3p5M2orNXRxQlEvR0k4N0RceDBhM2NHa3k5bDdwSDZ2UTl4aGJQS2N5ei95T3d6Z3ljcFJodmJkanVBTGZkMFFwdXVXSjUvZVlvcGZhWGRrYzZCSVx4MGEzUUlEQVFBQlx4MGEtLS0tLUVORFx4MjBQVUJMSUNceDIwS0VZLS0tLS0nfSxfMHg0MTA4MTQ9eydOT2ZUaDZWNUxGYnVFSU5zbUxYRTJ3OVMzMTZjSHhlVVpGTWJDcDM3Rit0R3JsTFFwblpDb1ZFQnpDTUNQdjZEaTRWMTFLUE5MSGl4ZGd3ckNGeDhPUFBONjQ4c2pJMXpWTUl0TXBrRHRiLytLdzR6MmJSSUF2cEl2Zyt4R05vQ1IzV0NOSTlhWWU1VXB3UUF3dGF2a2diU09kdHdGam1JL21pUzBXNmpXYUd1TnRCR3VkRVNVcmpNMFRlM3RjRlBDTVR3MFJYNXlpSXJsZVNkQkpVeE9TWkxTcGYwZ2w1YVkrTXNLVTk4dHpNalV1c2tGZGs3SXZqVE1lQ0tMb1p6d2h3MXRLMW11cFBObUNiVUd1a1Mrd1RVRlJWUEFvbENzVHpHL1JERWhWd2NLZkwrOC9yR011UUJrNFZ4ZzZCcnppOHo5WUpMRHZsa2hkckFOdkFXZncnOjB4MSwnRWNIa3YrWGt5bmN4UkRZV0VQUWJvN1hWbGpQRDdUbjB6MHB6bURlKzdvbk9VcGdhNUFza0tJMDJyRFRZK0UrZFY0L2kvZmFYbjB2UWp0Qnc3RVJrd0wzd1dVMU14cng1TWhoc252WjJKM0xjcGpvaXUyVEpobGJQeUkxdlZHL0ZBTjdYNW1XRWx1cm5SUUdqV0FwV05TQ0IvZjhQZmVkVWJtQ25pL3Nlbk04OVFOcitYMzRnMGNqN1pDUTNZWHZvN3RLTXAzUWt3bk95SGh5MG00K3VpOFhkSlhGTzhTNGpYU09ISS96K3I1MzJXQS9JQUt5S20zWDRVaVNaaUxUc0x2RjU1RmJHaTFKVjFhbE95RmtEcFZOeHhKMktRRE8yeUUzbytjaWxiVjgya1N3KzF0RmwvNm03bG5vd2EzQ0haa051WFh6V0UvTDc5QTBHSGI4RnFnJzoweDEsJ29qOXRBUWFLb0NHWkxsbWFncWVOM1RFQlVvcFExcXBjT1JJYzB3Z1Y1K1REMzROYWhHUFVoV2hVUmEvWnR6bDdFWm91dDM2Y2VSdE1HMlJMMCtpWjdGZWNjUlZ4MlU0TW1PbUhqTmxBV2ZDbSswOHQ2VXdpN0EvTndPU3JJbjJEVlk2cldPY01pRUpZOGliWWV6Z0FXdXQ3K1dBL05GMVdNdWRHL3pXZ3VXTzU5dUFhUHhHdEZ0WU43QU83UlpEQ2xhcm9yK0tPTU5nc1o0L2JjNjRDZk4zeHVmMkRPZE4wSDdvNlVKS2tNSmlDcGRjRU15UzNWdUhSbEVWZFVNajNqZWZTZUNNRkZhYmxwVzBZc0NlQkE1N1pTd1lwSCtOSjVpK2tZZDN2Y2wrc3NRUXlURzVsWVIrYjJxVlg1RFpVVU11dDBXVE12KzNISkJ6TXBTbk42dyc6MHgxLCdxbnJYZ21jdFQrZDhBRTcwSW8xVVFvKzdIbGhORW1xSFRWc2lyYllUK3oyOEtONXB1NnppZjlCR0c3RFkwU3Z6bEFPQ1B5clpOejNveEk5Q253WVQyZmFEYzl4amJSbGZianAwOVVNMGI3b3IwNXNYRkcySzNIVWZjdk02QzhobTl1WXJlaVc0S0wxbDBFM0Z1SGhleHVHeW9mYUJ1bkYyMXVjRWJxVzFITG5wdUNsTisrNGhiK1VnSFZteEt6NTdPMHZOVWVMaytqcVRVK0JFTVh6Tk1jWUtVUXpvR3EwVDBzWi9abnVnTXlWMlJRbFB4bVRobWdHeERJK1FRMnpxd2lHbVF5YXNIVEtpNVZHa1BYNlZqVWUwY1VyRVAvQm00L1Z1d2htV2pFZVJMNnRvTjk0em9FYWVQQ0kreW5Cd0ZPMUt2RHdvdjZmSVgwMmFvMm12S3cnOjB4MSwnYjN2TThnRnNuaHdxOGUrZnUyeHVwVUViTkxXc1NWUjJ0YmVTRHVMTGpJN0N5Q25RWE96d2VoL0RPL2RMNis2dk9YVzdaU1A3TS9DT3YxendtL1d6SEYxV0tKZVNZcldvVFdYNDlmSEJWTE9MTmJFd05IeVh0M0R3Wnl1a2ZkQUJVU1lVQ2F0azB2OGFxcG50NDk2L1RVVEdnWXZFak5JS29aMk5XNHRySkJ5QzcvK2gyS0xEU1NxY2doYWpjQStaY0V6NzZOb3JBSm4rNWNER2JNUG9ZY282cFlrYXh3citQa0twVEJocnU4WHRUVHl4eFZZMDAxSmJWbmlVN3ZQYmVXWVhjRTNnVnRtcVE0ZjNLc2NWZThEcjYwYzZpSUo1K3ZrUFM3LzRrRlM0S05CRVlRY1VxL3FiOU5oVkN5UVFUaGFFY0drbk1PdE1lUGN3dWFLSUxBJzoweDEsJ0M4dGV6T3hZZW9RSGttUzlPeEg2YjN0dHN3Y0c2cFoycmk3M0QzQ3QreG1RcUh6M3E4WldhcjkyVysyVFVyaVh5aE9ORlJ0Y2VXcHhJcjRYY2FzNEoxbG5zUmo5c2R2ZTN2a0FtMytJVDllb0hNdFpnTU9CRU43ZW92VFZBaDk0SytvNUJ3WjhDS2EyUHplSk1Ic3RGcndrRnNLUjJQaEtELzA1cGQ3Szc3OHQ5b0N4T3Q1QzdxbGE1bE1neUpablFDaU9xRnoyTEtxdkk4K3A1cjc5MFo4TEU0T1BRY1AzbU5MKzV3dktXcmdoc002MGl1VDNxR2x1eVJBS3kvc25MOHV0Mm4zd3Z6bzR4K1RVbWJxSVdsY2NBREt4bEwxRU4rdWlaSGcxa21pdXpyQlJTVVc2Z2ovRWlybWk0THN2YUpYaUNqbXFvMkIveEhEdTR2NXJmUSc6MHgxLCd2S2MxZzA4TG91cE9QQ0hHWUdKR0dsY2ZZampGTzk3VkV5a0p2TldKcXBxOHl0U05CQlVaQWRTSVU5ckNlYUVKbzhjYmhOSllnNVV2YkphNXlZeWR3dDZ5WkJvSmhGS1laMFVsUSt1Q1F2T0hKWEZkS3pIY2ZOeWtieThPZk9zOExSYU9IY0Z1SDY3QzhLZlJqYUhpbmp3MXNMUlRnQlF1NjZkQ21UdmdKeXpQdHdqUFM5NVE5U1Z3OFFLNXdoYjBTMnJMcC9CbE1yaDVZaDZqRWlGRHE3VjNNeCtBZXNFbGRYekpiV0hmM2pkTEpKcURXL1YyL1JnNzJCdm1vWGZwRGpNZnd2ZDBOVjFIc0hTODh0cUxneUJweWhuVllIOWVLRVJSSXJuc1hrVmZPZ1BpNGxXZFNKZ091RXlRaVh6TGdEbEcxUjdBdW9kZ1RlSjhzL2RZVlEnOjB4MSwnejFSZFI1RWVnaVcxWC82Mk5LNkdFSWZQalloK1FBYUV3TFVLbm9MMUFTVWtGMWd4STFpdWFHWEl5SmZkYzRpTjZhSW41TmloVlZvbHdZMGhMREd6bWFmSUNrV0VSbWNRMHBvdEd2NzdGMGZxMWk2T0FFekhTc0t6T3o2dFVPK3JpVnBWY1BwVGxCdnVCZExzNHlnM2ZrNnJZS1Z6SGtjR3ovMGJ5S3VFWEkzRExEaENxSlNvMVV2TWlHT1ZQSlFjWVhqa3ZKV1F3M0FVSGpLdTVwVE1TQU5jSHRSbFFYcWpRSEtZWmdyWTNIeFg0ZnBVaktKVkg2Y01YaUk0eTFJZzhPNzk3VXVBMjRoOWdzbkZVdVdYWlVYZXRORlpVTGJyTHVYcU1IYWhxMWI0ZVpra2lCbVlpRGRhNTRMMCs0TE5zWkhWTkJHUUExcHNtNmwvSWtXejd3JzoweDEsJ3J4Vis1Vmw2U1NDa1E3cC9uS2hvT3h3dzV0Qysyajlob240Qlp4SFZPbXlCQWoybVl4TzhEUFBNc29xWXc2Y05SN2ZRQnBUdmN6TGdqYjNzeG5oank4RHZOS21rUWVxalV1WGppMEdHWVNKR1k5VldGOWpnaXVSaE1nRU4vVzAzNVl0UzRDQzJGLzBxQVkxV1ZWOFIyNlBUM05zLy9QR3ZtMTZ4eitWOEZyRGV6TjlrNGNoUUs4NEFGMEZ1WjEwSm02NHVkSE1TeUh6Z2R5YUtXd09MZGJhazBWdjlKOCs4OTNzVkQxS3paNlhKaTRlNjBmVjdHUnZtWFR0WmZqUUcxMDB1ZEg0b045SXA4d1REdjhuR0t4OEpYdW5kbzYyUXhwcjZPSmdaK1hYLzFCUWZPVGhzb2pNZGdEbFdDTjB2Q1kvTmpFRmRQa2NQWlBkS1pBT3ZBQSc6MHgxLCdEeGNMWU1RNFAvNmxkaW9qU1VPUGdGZXl6aW9xR2dOYWdXNnNyTTYzcTg2V0MxdEFOdlhVSGord3F6ckJ3ekZHTGRhVXV4U0U1RUZGMmhITkNHTTNGWXZXTnA5UzlESHArbjQzMFB3TTNhdFlUOTFDQTV1S2I3Y2pMdjlDYk1FTTA4ZzRyRzVEdWJ6N1hxMXl0MTI5eFlFempsWUJrUjlPSDJ6T0VyV29BalFuT3lYdHFtVUc1VTRiTDF6UmhIQk5IckVjbW5odGV4eXRxQzU3ckxyRnoyRTRTS2tlZHk3NXNqc25oSDFYWTRsTzh3cUJFOUpKelZ1V0ZtZHFIcmJyQm1GRmlFRDNYTnJWRGVBYW5ndlFnTkNOdFpEQU93dEEzRldWTkxEajI5a3JidEIyUDdLbUVpVlNSNFk3TVdsdWpNNFp4Nnl1aG8rbDlHZWhCelRyNHcnOjB4MSwndFc5dlpZTWFKQkdzaTNCSEdHWFN5ajg1djlXTVUzNUZSZHlZUVFDcWVyZ1BXS25JR1RYbXhlYStyUExIaytpc0FMeGRDZnVYMTc5UGMvamd0dmdSTXFnK0l5Zm16NTljK2NQOXBibzQwdjhWK29GRjd2QWRYVXNFNUxQcUpMQkpxdHloSytCSXlnbzU2dGt4RXNvaDA5NmtNQ3Z3TUZmMG1seFBaMG5PbENYL0JCbC9KbXRkdzdKYytTWHk3MlU2SmhlaVhJVTRoQkVRTHlCaUZrUDhiWGd3MmFjK05odkpZWW1YdHNtRi80UU4xc2lCQmd6dXRmelVIWkpyVjRXSzRkY1Y3OWc1c2IrWVF5RXZobTYxVWFldUJmaWhaSVJCenBZQ2pUQlNSN3RCYVV3Rlc3Z3R4Z2J1U0JENXNOVlVhdHBlMXVwbUxUcTJFRDFBSkhmSzBRJzoweDEsJ2NrUVc5N0ZzY0srR1lGQkhabWlYTFdvU3ZRYVNpOEM0NC9Xd2FhMFhNb1ZkdEVENXJ2KzYvZGM0T1E2VWhVdThNb2JNVHc3bWRqeUxlRDI3dHI2Y0ZNcmIwbWh3cTN3eGs2NHVveGpLTFZrNUhkaGhVYlRSQitpb25uOTlhZi9obU1HV1FZZ2tMUVlnR3JLQWZJSWsxOUlXWDFOakIrOWFRYjFjQ1hUd0R6OENMTlJkVDA2SkJzb29QcHpRbzBpQm5LVkhVU1dPUktIMzhBbDdMSGg3MW1MNlVtZFRtRWlRR2J0OEIwWHUvNUpWdXVrdkRxNGZ2S3hub3pKYVdQK016ckdTNHpLb1hPaWpCZEZ1OU0xM3crWU4vNVVvYkNBMUpUc0JjMnZnNkhxVDNZekNTRjVZNnY1eFk4bnhjMTk1S3QzbXp6aTJvMnJlTkJEeUJwR00wUSc6MHgxLCd3THJPUW1NUGZFalV4dkhzNnFrRWFoalR1d0xKTUNSWVRxRUpkd1dyOUw1SkNUVzVteWltczVRZFY2T1ZuVGxuUnBLVWVCREdYNzBzenhMNi9tNW9lZ2VIZmZlOWJDcXdBdlkrek5rRHEvRDNHa2R3alk2OVNtbHJEeHZncWdQT3YxOC9NbEd4SEZKZ1Vub1NWeCtCMnlreXdZYlNvMkc2eWNaN1dwb0s4eXRkSW1qUytoV3hDQzYzQ2hQajNvdTR5cHgyYjBzQVM1TW9palpYSEpzczJFTy9UaFhZT0RiOExRMVZzYXpMOEtENndVaE5IZWFmRGx0amJSZW5tQ2J2UDQ5a25tcUtmTlN1bHhyQXR5MDVrU0YyOG9KZTRBNUNYYmdnWUszM3haenU0a3hqa09XckkvR3FtOHJsYnpPNVZGM0FQRC9jRC9pY1FxM3ZPajRlUVEnOjB4MSwnbGd4RStuQkdxajUrWXd1algyWUFkc0xNZ0x3ak5pOFlmSHdJVndxUWNYMkVpdkhNWlFFQzV1OC82bzdMOVc0N2lPR3NZS0NGR0czWkpjSHdEMDV3NUlVQlJrQkgwVTI5RlgxV01PWWVkSThMVmI5d2UzdUk5OG9QSUo5ZHduVGF5ejBVK2k5ckd6cG5rTXVnWnhOYjB1V2tYWFlFVktlL2Flbis5bWtaTVBCL1FxZGdQMTNabmZoOEp4RUdwdjZYVDNRYzlza0g5SFJPaUZ2WFAxTm15NTdncUpUdXMwaXFZa2pWVmNselphRU1JK0NReGREa0swbkoyWXVYNDE1YzkzZFpoKzdqbFpnZHVBa25PWUJxaFVxMjR6bUtrQzk5YVdhN05aYWphcUwvRk9hL0RrMmhYZGZPUnk4cmlab2NUK3BJV2VKZ0h0cXJURFlyQm5sRUp3JzoweDEsJ2R4aStSVnpHVjRSTFdxU1VOWElmS08rczNyVCt2Mko4NWM0Ui9mRExzenJsOVloRWpjWCtjTE9ER1FjalFiZHRSS3BkS2VNckpGdmlNN1ZlY3ZzLytRWm5sbjBrRXJLV1NuKzA0RjRhbmdmdHBjYkZtdWYwSy8reFF2YVNwODhEZU04WTFqbk4yUWsycXRFUHArUThnQ1IvWkNsRVRWc1BZSEc0TjMvSVEyVVZ0Vkl4dnR1ejdJZHlVd0xNeVplSk9Pc0lHTTVqYjV5b3dwcVVSY3BGV05QL1l4WGRYK05jU0MzL1ptMG1oZVB0SURnZUxyMlhsL1Nha2kvV0E0V3B3aGl0M3crYm95dWhQb2VIRGhGTzd5ME41N2JkQ0krZU83NU80NHBaVUJrdDBuOFpwYVlTOFA3Rk1HU1h6azBJTWpiaFZLWWt6OHo2L2VOQytMbEUrdyc6MHgxLCdSSTFLNm12OHpBam1ORER1dFhtdXF6ZThsa1NoUlF4NEVJOUhRNVdBOVhad2FUNzVCZ2hwelNpekF0WnhhWHlkQ1FsRkRMYjBzaEVlY0JCc01qTFd0TWlHNEdnSVV0Zk0xNVJER3kxOWxSWTdRZlNIeElWSUZtNjVUam5rdVY0dlBEd0E2U1J5aUtpRnkrV2krdE1idzlhK0RTaDg2OXpSMU1yclBaRmlFYzF0SXVFalZXL1VueEcyaGE0ZitVUzd5Wnl5akpPNFhadzFVK2FFT09uTGtCWGxrb3RjcWUwQSsyL29Pb2xVZjZZNFFpSWp5aGxZdFRxMi9ncFV2RXd1eVVqV3EyRHk1UzlOdWUrNWwvck1QSFBnRFVTM1ZtZnIwei9CMUVIY1lLcmxVMjFaaFFPeHB4SWdTanNZZG1OQ1hidFFyS2RWNFhWbEl3ZmROWEZjQmcnOjB4MSwnaEpOOG1yNGEzaml4emVSb1lvMzJwUG03NXgvL2h4QktlZ3dpd1pXM1FESk5NVWtVMW9rNnlUUEw0ZjJ0ZGhoc2ZQU3hQK2ZXVTlIam9oN1RWT3dUcWVzOFlUZFJGMDRvaFE5SmVqMmFKeU1JY1RGNmFta0tPWVZWYUZDNDZYOEpaTTVUQ1VvbENXVi9NTWdjYjdLOEZXNFpLZ3Z0UEFDZVN6bVppbnFSd0hiTjBVOFoxMFM5OXVLL1dLdUlBdnRhUjdtTWdKY2xaeFh3NGdVRDF0b1o4ak1TOEhCWnZ2b1lYaEtTVUxFeU4vWE5jeDA4Y3BVV2UrcXN0MXFVRFAzZjdtN1VMV1lsRnY5U08rUVhlNWFIQ3plTDZlQ3c3WFEwSEZGVWNYbHdiZ3VrM20yU1ZzVDJsQ1ZzeW55Yml0Z2VNMmJRbXhKbnBGdFhXUE50RU5JQmd3JzoweDEsJ1NXWFFocXZDaGI3dnJqV3QxeFdvcU0vd25BRWJxMU9peU5sTndRcnljWi9USXVGMFMvd1Z2WGpZUlhCTVQ2eVo4ZCtJVi9ackZRQmRTYUo0V2JBSDZOWUY2WGZ2NmUwanM0czJUeXhGRWc4eWZUTzlxaEZhcjNZa1JPT0xMYjFrM3MwUTRyVnRSYStHUFh3MExGa2FNSlBNd0R4Zll6Um0zQm9iamwrZ29mTlphSElCNXlwME9uWkZFOWdtWXRwOGRyZGNubHd5dE1xdEFtYTkvY0FNLzErZUtyREc4cElGVXFuaHR6ZkRNWFU4bU5vL0VGa0o3Q2lMZzZwWGxCNTdMMXUwYUpmM1NJc3RNcXdLOE1PUFhVRWNWTi91ZWNFVCtwRVdvaUd0djlVSTNkZTlia0h4ZHVGSExmeXpNVDhXdWZNa0tYWlU0ZHIrVndNNTZBTzFDZyc6MHgxLCdscks5VGM3UzJZY1ZnT0NwNFZZSXFQWVdvd2UvMTU0ZmpmV1BJM2Q4WGlhM3JrdVZZTEhqSElYOEg2cDR3Ry8xYUQxaHREeXQwdkZCQXBnNEtFdDdiT3NHYWhwbkdrS244dmx6NHlNSnhIM0lLVHJsSVJ4azFsWFc4MEZmbTNTTm52dUhvdFFjQzhoNHZQUTZkWkQ4VHpQdGw4SjFQOXZKVUVTQmxGb0x2dFAzVU5oL3lXZ1FBQ3h0eS9BbmF6UU1YcUVMRlhIRU51U2swZ0NOV0U4b0l1RXg5bjkvcjlHa0gyVG1zV0JyUkZwNmlaRk83SWwwNFp3Q01yV0ljQzE1aXI1VGRVbGYzNUkvYXBZSHNqanlWM3IwdWxVSGk1VFNOWU5KNGRDRHhtUUs2ek93VWVHbW4vaS94aDlnQ0V1aGZ0MGs3WXJsdTRwMXJjeTRaSXBnNGcnOjB4MSwnU0l4Z3NiY2Mya3dlZzVNQ2R5eEtsYzc2blVNQ1J4RFMxL0g5NzVCSjdHM2I1aFZxOXB4QXh2Z3Ywa1BNam9rSWxRNnFwK3VBUFQwYWtGTGh6QndtN3dWYkRJTk9KWWZySnVmSjhQQ1MxK1l1SlZIOCtQa2pOSWVTd0JITjQyY2pYSGVmVmNVQytCK0JMUmhtWkgzQUJXRG50VWJ0QWh0QTlhTzU0WnRSY1pQMHUvbndXN1Z1UW1DS01LeUtDL0RoWG9RT0ZZSmpJdVMxakFXMUQrcU56LzJZREJvWGkyMjFzWFV0S0l3eFpqYXA1SWxJTVM0T1ZvRXF5ZTRkQjlpY1A1S2ZzVitCMWJoZWdYU1VFZ2Q3MnUrdUc1eXJYcFlkN2pRcEpFbG8yYy9Rcmt6VzY1WEhiNlhZbGZ4WUZVTU5GSWlKOWgvRkZmMlRJcnNQcXVCcSt3JzoweDEsJ0owUzUzVW1XMnlhaGgxQ1lTVFgvTmVTSitZa1NWRUFTZ1AvbkdxU0dxQ0ZVNVZNMCt5OS9VZFk2ZDhWU0o3dWRQTzUzaFoyZXhDeVJJKzBNQlc4cG12aS91TCtSNWt4bkhhNHJ0dHNKbmFKNzlpQ2cvZEpra09Hc1Z6dDZOcTh1TmRHd2xSRGh0UkZtUC9SMlM0VzYwNTloNkpwS2VhOVVCbkNBMjFaNk03ajk1TDRDS3lPYjVjQThjRFBPYkZlZjRTa2lhWU5aRUsyOUZ2NHRnNjdBL2dTVDRCelliU2xaYTN3dktqbEREUDJYNlY3cXk0dUFVSitIVTJ5dTFWTjhaUGRZeDNRclR1Tmo1eUgxMmVKS0h0QStwK0p4R3oxQ1ZkRkJPSGVISUtMdVNvR09oajZFOTQrWS9qR2JmWWVtaUg1WlJYdDJzNnJEQWdIN0MrNHM3dyc6MHgxLCdUNnVCM2xrTDBjaEZ0OTl3S3ZhcHgxM3hKNGZYVDR4R2RhUk5MNXFwZDFuSUhJOXBaejQvdmJjMXdwOUQwZEhBbkt0VUxDSUZ1cDB4T1M4WUFRaVdCQTJuYnkxdnpZZDRtbVdWakZwMUJudnZNLzZGWEVIYXpzdmJ1Qklwbko3ZFVwVXN5TjRiaVlxVndpVitjMTJFY1NXSDY3M3dKNjBGUXoxK3VJNHl5RE9jcjE5c0VONzJDWFNPWXFqbEdQSTR2WDI4bC95aXNaTDFSUzVPeU9qQmZWTE45RVdnYzBwa1JaSVdzV055NkVWOVVNcFo0Zk52aldDejgxWEhHQkg3UjN4LzVkeHBGTlNpcjdZVDlkWS9TMUk1b3BSbllJenppQTJycVZBeGxGWndUeWgyOVhtNC9lWXJFWlcvN2wyR05FbmZmbkhsWkg5TlRUVmJ5N3VHYlEnOjB4MSwnaU92WjV3cEhkNFJCcHFKNHlOQnVSbmZHM2kxRVhFaTZPWi9IbmE0WHlQNmFYcWNUY25wZDhZYkJxcEFPaStKb2k1REdpakJ3VHhoUUdQNXZuQ3kwSEJVdGtVN2ZLbXd1NGxwN2lPZ1dCMU5UallMTmZaNDUvaTJ6Z2gyK1hDamVKenlzUFFpYnFuTGlHVnlRV3BJdTZ4TE9kbzJSZDBhM2NweE5xeFlCUWJERGZpRHArbFVnVTJvYVBSQkczcmFzZUptdHd4czhvVktpNmlPVXAwVm5ZM2NJMHNmdjI2TTlMOXMrSUx6SEZ5MlZ0d09VUjhNVlV1SDJuUDgyOFkzSHVnVkhzeE9IS0JLRkVvanJuZTBxMUVHalZuZjBTMm11Ym9TN3FBcDFVeWNYbEVQYnZBdGpTdVZjS084YlhsSnUxMjhlbEc5SWtPSVFORjg2OXlsS053JzoweDEsJ1YyYjk4aEtBUTk2UWx2d2duMzYyUU5EeEpQMS84eWkzOWpJbXhuN0xRWjhMNzRFVVhlcGprandvN2YvRHZNbHpuaHpYWlNTN0FOa0J5UndvaDBOczBBM1FRZFo3V3FCZk1QeVVMOXhXZ3o4Nm4wMVNIeWllR3JyWDl6TEVnN3VPaDdxVU9JS21MWXB6VTNyRlBOUDNTNjBvZnBWZ2ZJZHBiZ1pXVm9Od3BGZExEazgvaDNxSmt1VGcrTHFCbkpEemxBZG02Z1pOcVNzUVFWK2xUd3hKNFFJUWVjZkV0K2xVMEd1QThKU3BSWjlTdVVsUDJYRnJ2U0NxeERFVjVxWmpJTG9ieUlqcmtUcnY1cXh1ZmRJVldFQ3E0ZzUzWUs0TTdIeDJLVm55SWNCZm9WSE1qWTFlMjQ3N0J0VVRsUmJCWDlrYVZ0WnYyTXZXQWNrSkFRNC9FUSc6MHgxLCdPNFFrUVV4Q0UwYXZLejI0M3FmWUF5VVV6QmRscmtKNVBtYU9Rc3ZhMHB4Mlo2QWowOU9VUDNIRFllNjJXckYxb1R5Nkp0OEhLMjlDZGg4T3V4T0ZLd2U3WHphT0N1QzV6VHY5Y1kzcy9sNFkzRnluSy9CQmJIUzllNkk2OXJRZmxFNnA4bFJ3NERMeERxYjN5bjNtekpCZTRzQmJCVm45NUdMTXR4UEVDb1VwaWtyUFE3OVNSWTFQdVVRaXZSNElQSVdvYkdHbFR0R05QMExuMXF2emV0eEJpang2bmRxZFB6d2lSVTJraDFPR0R3b0Frc0VQSW40eFNyeXlxS3MxcHhoRGdCOEhSNktQY0tyOXpLTG1sa21jTHFrTHh1RmVuUENkWTZFTHlpTjBnQUFTbnZ1YUpPQ0xqcTVPS0owemtKUCtWbGpUQWtQbjJJeEd6VEd2Q3cnOjB4MSwnQ21ySTFIWDRCS1FpZzMybk1WSFVVK0JOaCt3OXp4YnNscDJySUtVVXhCVlM2WXFNYjBuR0dBeG0wYnhCQXpQZ3VuWFBZNmVveU90V3JhL25HdnhTdU1JUVR5S0Y1VFFnbSs3ZCtRaUNyMTh1eWpkUXM5Nm9TK1ZkbnEzYzJ4eGVvVVZsTkZreUlWQ0Y5M2FUTTRuUjMyUGsyMVorYmJsNkFseWhLZTN6MUVpbll1Zjg2UGdqNXVGQ25GbTg0MUJWc3dTVkN5NHRrUnFTMTVuMmdxYjdhUjVHeE1hOEJLLzRzQTdOOFA3STdVUzlqc1JrMWI4S0pGUld4UkdMWmt2blZSK1VZdHZvMnFNdVJnNjFzQ0thK2VsSVY5eXFLaHdORGsvZkxlQW1xeXpzQTM0bHRTNzBIVWt2K2I0RURuaW5YVExKSG1aSE15OUhIeWdjMnVOWFZ3JzoweDEsJ1hpYUtyQ2ZJLzVTQ0c1dk41Z1JiTW45UEYzQmJyUGI2d0Niempqb3duWUtIM1l0QnBrK2l4UCtYRWNsTGpBLzIxbjRjSFJKUkkyaWdIUWx5TTLigItUWnF6aTA1ZW10RVFCUTBjR1h3OXJnWXZoOFU5RHlYYUd2MU43NXJ4ejhwQlZGYzYwRWF4QTd6RjhNYjUzTER2SGFlelY0WkhtdmNEcWhCb2Q5SUczNXh6MTFTNHEvVElTd216c1VXN29FRVgxTDRjS3Jtem1RQVNtdXV1Sjd6U1oxd0tPeVRuUzNBemZoSDFMenIwSWl3ZHBPZXJYQ21iY20vUnhJSjllNG44Mno5ek1xang4Tkh4YklOU3BBeW5CeHZhZlU1K1Z0ZkUvbjVhaWxOTlQ4MEVRcFE3aFVKb1U2SFdsUStMelZuVTBHdEVuOXlib2VWQVNFWXV2WWthaXdDdyc6MHgxLCdhYVluK21TVWgvV1cxSzFaRi9KVVh2NWY1QXozMjJ2bkVPSU5jNStoMEk2Y2xERUNVWXY4bFliaXlTeHl5K1BDejFnMzZpMEQ1UWxNYTFmUVYzY0Y5aUVDK1N1S1d1RnNUQVU4c0lJWU5hZTBETytEdkVyZXFBWW13VFlGQnZuT3NoSmo1dkp4WmVRSkFONkFWRm5tRXlYZ241K2tVUk9sK0RsaTJvOWxlcU91K1JkRW90d3R1V0plVWlZUG5PMkZMYy9jVFlNNDRwL1pOclVjSitpUW5LVitaRXBKdzF5MlBjZkVuUlliVE9nTGt2L2RhaVVjdkh4ZFgxWjdianF6anl5dHloU3lMdHk2SDRBTDlyT3p1OVhtbVJvSnMrb0pWbWNUZEViOXdOMjNtL3pwZE5zdURybWhBVmdoSlBObmJhekN2cW9GOFgvL0d1Qkh3UDkwRGcnOjB4MSwnVHBpenNrREJleURyTlNnSkowL05aR2FKZWp0RGgzc254Wm1aN3htZEY1aXhCSVdUenJmTTVhN01nOEVVbFQ0ZENNYjRiNnZwaDlGRlV1Ukp1RSthSkMyejcvcGh5a2NKa1dqK2loNlQvaXM4ZGRMOTNlTUdnN0Q2Q0RsRlJSK3l4WlNTM1dmVnppWVB3WStBd2JPVHdPSTBleWd5eHl4VDl0cGxVV29BT3kyUGplb3c4cDdEYlBqNmxSQXpMYWJicW5ZVzU1YzkyMGlhRVZYR2JidytDRjVMQjFFaGlkZHhnZ2luS2dmenV6REJ6ZFhFTTY0ZWh2M0g3bmVVWXZoSlNYc3JuRTNOR3RVR0wrSDJrV3NTNG04azJCemh0L2FUcHhIT2Y4QmMwNmc3MWYvV2hJNlZhVDZoWUhIYiswRnVhU0RCSGljaXlkQWQ3OFIwTHk3R2NnJzoweDEsJ09XTkpYdk5vV0gzRWhxTzhFY3lXMlZXOVRrZG9UVlNuWkZYSUNvRXBSL0pDVEJ6RnpadS8wdGRxUFNWamVQdW9uS0ZrNktqc0RxZG5LemFxMWxWQnA4aGdDWHlsdE5WVFJxNzczcHBJSzFFVzVLcVZrZWY3ZDNOTE1OZmpEN1hNRUdlNElqVEdxRGhFNlBubEtiTi9OUTJ6cGtSZ05OblY0RU5QcWQwbW9uSFZhQVhuM2I1MTJjTFdtd1ZnS2E2ZVdjcGQ2ZXJQU21yMGdlNks0NVNza1VhaG9GMG1wSzYzbUpXNm5OZXluZlU2WkhCWm5OR0RaVzFYdUkwQytXWERQblN5TzkvWXJRdEdmV0J1U2RpUEErbjVLNVVrbWo3Z0VGSTBNMzJETzhybFRFbTg3Z0hadkpqUkUvK1o0NkFXYXo5YlNBbzZJZUpTZTU5aXVOYWxLZyc6MHgxLCdKY0I0Skg0VmExR1djZi8vUUl0bjJlUGhiN25HOFU2anU5RkUwVjIyV0YyRWxiMUg5d2ZKS2RvN21aMzlaVXBJdTNkNE5BR01Rc1dlY1VLZ2VHQUJDY3pMd2hUa3JabGJ5QmJoTmxkejV2OUlndTFWNGxSTklLcFEwMXlmdmlnaFZ2blkxNHROdkZhcU43ZU1wSkwrN2c3UXY0MGlsVDJnNTlnL0RFZ0s5eWhYSFBWLzV6YVUwSEJXQ3FtcktlMVJLQ1Z1YzlkMCtRdFdJTFhTWHpabnlzVzl2WDQxRTVxem9JR3YxWi9CUFhnNGREbFp6YkI4bDBqMmRHaVRCN0txUVNLQ3FEeTRFdDgzOXRWZWlWejdITGpQRDJTOTU3N2NMQVhkakZQSC9GRnlSVEVzT0gvUWszT2MrVWJlSXZYV0hDcHV6dnpPbXRKNG9XelBDa0prN2cnOjB4MSwnR3o5YmNVWTZ3VjBHTUJ5VmFoRkFURHBVWXNSTWMwM1B6bk1Zc0U0OVcyREt1OGtqVUNVOFRkMCsrSW83WkE2TUk0dnFMbmxNVXpibzBtTmlOaGErSnVPRnMvZG1PQUdqcCtzM3Vkd0ltS2tJTzZGOFZIdFg0TWpJaVlqQjFGMnJRcFRUM042dWE4eHlaeGVqSHNEaU5OeGhGSTByd2w0VFVaN1U2V3Vnd1NkU0YxTTROZ285VDliVml5eVlJQTQra1A3V1NqT3Uwd1pvSUJ2Y2NLWHhid2owQWZiNHZwblk5N0krZmFjTkt6NCtLNEpsQTJZaHMzOFY5eVdnNmV0K1ZjODJ6ZWRwMDl0Wjh0RHRVNmdzTkwxMFA5VTJpS3oyOTJEdFFVNlZzdEVjTCt3aDFISk8wMkgyY1BZYXRIWFlwVEVKYklpTXRVR0E3OGFSQTAzaWxRJzoweDEsJ0ltT1FoWFJJMkJqb05OSlFMblhsQVZVUmkwTHJGWU55TWNFNzRENm5yWVBwUnIwMG9lSldLc0V0YjEzZ0x6cmlwWWxISWFoTWRveHFTd0R1RCtVRzRJek83QjRhTjNsd3pYRytRbkRhdENFNnIrSmt4NU5IcWc3MFBXSEVVN2UxaU1FV2s5NUUwbzFYT2dPdW5FTERRMnhVMFo3WjVxMUpWTmhzVmRWVFcwVGx3S0xETGFpSmoxRHVMNkJvVFZDZ3FwekQ5c29COXl2Q2RSZ0Y1bHlXbWlJNUFIYVZQdnQzeCtYMFYxd3lGU2l2QWVlNWU3a0FJRXNzZGozRUx5cHNoYUU1bzVFTjg4dStOaEVPcFMwQVFZZVlRZUFRMmxWYXlnVjRaQ3JHTXFYdklNNkVqbXdQd2RDTCt2cUtJY0ZYTG0vdC85enltZFJWenAzY0g1TlpIdyc6MHgxLCdiY21JU21GWkJEd2Z2L2J4N0N1bHgzSEE1a1A4NEdpVVBrSE42T01Rbnh0WmRoRENQVDVoVEx3RmpOeXlUdVpvTndNd2FWRFcwS1NsOE1VRGFsTWoxaUVMZDFGRmlXR0JrSnRRR3ZTcm1kaUlWYzRHcTAzaDVzd2c3ZTM1TjBKRHZpU0RpbnVUMm1ESzJjZi8wblhsUkloWGNxdzd0SE5aRHVCaTJWUmRqc0RIc2RuVk45NjVreEZFY25Fd1REMWQwUlF6NUIySUhOYWUyUm5kYkRObmY0TWE5UVcxUGo4V2EyMmR2NTBISHJVa2ZiMFlPT3NYbXoxQzZpV1pnS0NDQjBiWVJ1LytVSFJoc250bURqNitKZS91bkpjYk85bzgyUmZ4cmpaMjBwVDJEWmJmRW9Sa01yK2sxVTBneGlEUVhRUUJuZ09udDBDZ1p0SzFSZEJDc2cnOjB4MSwna0dGZkxFT3ZUcHdPMFN5aGdmZE5tK3VoSXkyZ0pVR1RkREUzVXQxRFZyVEs2alVrTjNIVlRMUkQvNWE2N2VWd25nZEw4SmVidU13U0ZveHlEVlMzZVVLbGtzOENUa1c1L05MQnhENFFzSms1VWNNQ2xRZmJ6M21sdzV0aEZSbzVRdE1RZkZVZXhydHNoSmx0UWN0cjlhNGVaQXJyZytDR1hTNDdMOG90ODlGVVNPMUk1a2VCTUlKN3dvWlBvSTZBWXFOcWRFa0gwK0kwNUU4YWlhYUZYU0NLTm9ubUpIcXdwL2U1enIwZTI2SVJ1Sk01WGt1TW5hMVBKTGF5Tm5LV2JraHBEeEFHQXVjMVR0Z2g1WkZLK3JKRmtRbzZJZWVydnIyTE1TazZYVUpnd1BoRW55MlNwbnFuc0JyaW1Ib2hURldtUXEyVjdxaHJTMGxqbGJJTWNnJzoweDEsJ0NnZk9qVk5PeHlneGtOUEZ4Y3A0aGVkZWY2OHkxYWJVRTVkWVNFWFJ2TWdQcURhV25Ua0Q1cUhXaWRjdzJiaVp1Kys3VHY3Rzg2Y3NXTjRaUGJNaWlMcW1aVm9PK3FKMTd6N3FCTlQwOWNSSDhLWmhmQk5RMDY2b0hOMDVnSUpFQ3lvM0ZicTBFOTRaOURCQkJsV2NGd1k1WjF6SzU5WWU5bWZtVnJid1FnY3djbTVaMFpXVGlwaVFlOVdWQm8xaUtwdVAzZ0dEODBPL1ZLZXlGSnFLNkNXcjZiNmVkLzA3WTRhcGRCTnErSCtlamlNUTdKY0ZjSVR5U3BGbjI3SDZJcDEvRWxTUERUcVo1N1J0cS9HanZmVjlSUDlBdFRQMnFGMmlEUzFmTW9lQm4wOXJZa2U1ZTZvcnRoYytmM1lUNFBBUmNjWllpbzFZeU5IeTBKYmFNdyc6MHgxLCdtMERDb3RVTlkvK2FlSHhlMHZNTVBiaDgyUlQ2QkYxay9uejVKd1lKV1V4S0VNVjdhbjZVaHNLY2pkUDRqVUNheGh2WmxFeG9haENFMXo4dHF2NXVuUm1UWVlFc0FrdFJQMEtFZThxYXRlTUZwZ1l4RDh1YVhnME9SRnJNRlM5cFR6UjVMa2cwWnlIOFpuV0VVM0NuRTNITnhLRkdCcFlRS0xpTVkySDdISEFGNkw4VTF0dmFpV2MvM1pabTBrb2dJTytIek5xK3piMTF0bC9Zc1RNT05xQmw4RnBDb1QvblNvdmdzQWZJVGZCWUVXeVJ6L0wxUkRrbkhjd0wwWGcveDJzQ0pvYjB1S3U2R0xEMmFlWU51ajgvQ3VsNHFUcW5mdjJENFJIN3lXdjVYa2VJa3lPMmVDTm5sczg1RVlYUWdzMXp3cUZHbmU2YTJDWldPT0lwRkEnOjB4MSwnTERyd1M0SHRwazZLWFpLMW9CK1VkU084cjJFZk8rR3d5WUE2TTd1TWZWbHJmL2paNmd6dkQ0ZCticklSSVlHalU2UThDL1VRK0xUZkhuaUFBNnR4VGVoTDFhSk50WVlJSURIa2RkNnRZYThvZmQrcEhEdVFueEVSVGU0VmhVY1RzL0NEUG1YTm1sa2RCb0tlcG5UMTRMbk1JUnRxWXpoV0RBcmU2YkVGQlJ2TXlOZHloVTBrY1gweHlkbDBlbXZCRlNEbmNxNUJJcUxlV3ViRjVGaEpPb1VGRzhBUWRvSzJtY0pBQlFBR1BqOGpucWxkVGRubngyajQ3NlQ4MjRMWlhMREhVRDVPcXdsaG1Cb2ZJZUN2c2dWd09sbVhCZVBjMHdEbFdRL2dsRUZrNGVQSnRPNGkwWlE1NDlrNWVvaDlXbmJhVGRuaXZnUSt1QU5yWE1vRXVBJzoweDEsJ0cyRDAxKzMxNEgwOElwZ3JES1ViUmVLQy9uM1J0SDJ1U3BoNGVJakg4ZC9vREprSEdEYzFIOEE5SXNLVEVaM1RrNXMwNlBDZjRpUG5xTnNPbW9vNzVqR0FMNHRwTVMyZnRXUFRLbG9KRk8zTXZ3TmVRcUUwSDdLNDI0bHh4cUxmSWt6bVhsa3RkMjdPRDFRemFzdUtlSnNtaEFsaUxxM283NndWcUhCbk5FY2Fsak1vU1E5K2kyLzFEYmREaUNRYlo1VGhFcEtKWWxUT1lPMmFSQkZKczRZcVFYRGtobStJaUpVZ0RkK0tCS00wbVJ6UStCTnhuQlJCVVNIQTl1ZFdYNS9aWlZaY3drdkJlMXNNUStmT2pBcVB5UXRaMCtvSVU3bi9CaXdTRUZHWmJtMmNWOEtOWGJYTVk0THg0aCtxQ2daWW9SUUpac09Ba3VLRmEvWDI5USc6MHgxLCdmMjhXVzlQMkxKNDY5OGh3T2s4VjZvYktJMTd5aERzMk9sRENTZ25HL2c2Zk1Lem01L3lCZXMrbk5NdnFZRjRtOERYSEhuSEl3Zi9EYVlLZS9KdllWcGJmeGVNRnMvL055bU9DbkdlRjRDWURINXNVWGU1SU41S1dPemU0L20xZ3BwN204djJTZDZHTTE2QUcvSEJVM2pvZjVwOC9ZY3ZqNmRHRWwva3MvbDIvdVRkNjJ2VnY2ckxZbHFzM09DblpYeXVid1R3UDVhWFFPdGZlREkwY0VMUG00a3A3bi84cXUwUVZGUjZCVi9FSUx0TDVNUUNkL3ZaM3BrUXRWM3Q0aS94OFM3bVpUTzJqVEx2a2N1amVpVU9UTVAraUlSK1R1L1h3akk4WGlGT09ETmExeXlUd3hGVHEvM3dRZFVwUHlEZzFRL3ZFTCtXSW9WZ1FEV1BVY1EnOjB4MSwnTTBMTC9uZDJDZG5rWVp2L0huM2l1TjhRZWpyLzZsLzExL2pCYS9QcWdHY3JTZVJ6ZVYwT0tGZEJXaFFDcjBkYnJJR2tYVHZpK3ZvajloSE9FMWllc01PS3h4aklmLzRBMkZHbStQdlJDSmxsdDN4MGlJZVBMakxOUWdKRWx1ZjVKRmVYSGlxNDdkZWRIdS9BbkFjL3FiUXZtQ1JsNG5KSFA1QVoxeHFuOUNCdDZvV0FGNnZuYzlQMVNIVk5XR1ZNSEdnWUVVSlVxWlprODRpSmF6WTZjdndlNUZLS3VpNTZSbWZMcmRJblhWMWFidHliZVVCaC83Vmdmc0x6TG01aEtnTWt2ekJ2Q0dYK0FYS2ZEbEh6YmkrdUhaM3dzcVE5MVA2eGNxUTRzbkxHczU5THFUV1RMWjhNTzlxamJPM3dsUzRsZzZnYnE4b0YyRVRZLzBKa25nJzoweDEsJ1d3RVhTc3ExSDFTbitEVTFnUUFQTVFmYXNlN2VWdDIvdWNtT3lzTGlINEtlbUI2Ull1ekl3eGNWb1c2TjVrMit2eVJtSVpEbm5lWEIyeWNkTUxveGg0SkJjbUNjRXcvVkJSYVhDUXR5QUtnQXdWN0RBWXJHU3VZMm84RDJrVzdQazhPS2MwdXVRMk5pRlZYSFlMcm5Td2V6STJSUHZlbHJza1VxVEtaS2E1cmhzYXNUNnZWNjlCWi83a0UrQVJ6NEYvTEdDVEFNcDhUUXA2NlIrZnFTcEpqZE1aWkVrRWhyN1g1b1Y5cDBZdStSTWhMZmM5eFN6MnZjZENkTk9VMU5hbXNxREhUTUo0UlI0UHkrWHk0L0lrSUtVeG9YdDdjbHNHRmFZb0FXbFVwdjlmbXVCbWVaVXNzYjl3bkYzUm9nTWxwa004c0x3bndxSGJjYmhrbmdudyc6MHgxLCcxd21HSG42cHMyM2ozd2NYaVRyV3Q2RHk4bDdiVjYrWDFoMmhCVHBnUUNIaStSN3B3RXFpdzQ0dmx5R0RmMWx3Vi9EcUZ3a2hkNWw3WXU4c01FVXdXR2hpVC92Mk9KL04vbnpuVHV3dWtXeVZJQmw3SGg2N3hNcW1oUUxZb2h3TW5LMW9Td1NQdXJmN3hCaFlHSHgrN1dibkJpaFpDdVQ1NUJaOUREalpnMmt3NUFueDhZcVpNT1Nxa2c3Qno4OU9pSTRlTUhkMWFkQkluSTZ0czNacUIxblBVaGpzdlA1OTB6WmtTc1MyNG9talltaHluVW9sbW9aMU03V2xqQ0g0bFV5WWZET3ZYSnNjUDdYWjFadFJTSkxFaSt2Wk0yVUdva2RJMVVuRk5Ed2NROWFOaWY5WkpabS9tMnZ6dU9rYTBEV1BjY09BYnNJTGV3dVpSTEhsTEEnOjB4MSwnNElTOGllNGlMa2lnaGVVZHNDNmtWQzdaUjhDVnpwa1F1K1kwZ3c0VllQNmh3WEhCTXRsc05KS0RlS1Z0a0pqdjE0TW1EOGtwUHVwNTVQVVRDNUwvVXJaSFJQS0U3VUdIN1hlWHczRlJxWTVxVFhPNXcrOGZyVkxjRnZWenQxdTNBN1Nabk54MHRyT1J3VjdCdXZCYkUxeGFuL1FrQUROWXp1dDIvKyt0MGpCVEtpV3ZHSzZBYk1JamZ0UWRHYVYwbnc3TVB1cEV4YnlxdklwSjVOOTAwdkRqNGxQbk1jQjRrMU5PSXovOHUwOE1QZmVMSW5lMHF4N2liTzNTeS93ZDc2RlRpNVd5VkduM0d6QU1nL1hwL1ZaK0I5TEpSK3FaaUdsL0tzUHNKRS9yeisrQk1PQ1ZNNkJvN3BHUC9zb2FLdFU1Y0pEZG1ndFdhaHhaV2Npdmp3JzoweDEsJ3AwMDhkVHM1RnlsZDA5L0NpdmJXODVVaW5FcFRNSVpNKzlyZGl4M1A1WkNCZHpCTjJwVTdOVDJWRzhjRWg0ZGJCTVdTVVlIWll6S2lGMTFCR1MveEpCOU9oRVZSd3VReVg4Y2FVVzJENXNLSTBwaTBqZFJkRGU0Q0JWZDg3TFgxdlZGc2wvRjc4SEJ1WFV2c3hybTNybytodzB3eENrZnFmZWNuUXZxRTF1UG12SGtrWmp1dWJnK0tZeVJjREpBUGJoaWhYNFVqU2lpV1pvZzh6dGVXL1hYRGl3RHhHMTk0Z2xYNEJTd3k4UEI4YThqNnRsS0lZTU9udW55RnlMeTRjVFpPdUU0cTZlZWhzWXR3Z1FpM2d2cC8vR2FpQ05QYno3dHJnYkw5YmN3VWFkSnNvTGF1Q0lmMVVCeFdzUWhxaGU0VDNHRjFKVG16VEVNdElhaFMrdyc6MHgxLCdMYlkwYkZaQjFnc0ZSbE01RzZ0Nzc2d1JhZDZEaEV5RGxnYVpDbEJENjhHUDRnVWRVM1ZEbG5rTWR3aHN6ZE1jZDBKdTg3ZHI0d3drNmlsdEpVcTVTR2ZDVjQ3endMeG9iQ2E3YjhRRGtJamxrcCt3ZGJoYW1ac1RzN2hTWnRNdE93a0dTeTVkUG1OampkSk1SQytGa1NLQVdLSDZRK3pKd3ZNc2ZHQm5uWVJXbTlYTGJ3MUVZQnR4SFFJM29VaTh1VkdCZmdYS094a2NiNTZKVzRnRjErcXlaWHk0czZpdmJ3cnBYcTJUY25DbDk3Z0FKT00zWHRzWXZpYk15VC8vWi83dGxTdWtsZDVjVGczQndMVlJNTDZVN1psUk1kY1pnL0JUaThFb0s1SWVUSE1iV3RzTHZoc2FXaGt6RHE3aDZOcmMrQTBFYVU5SEFaTVI3d2dGUHcnOjB4MSwnYnFMcFRieU1IV2grYnFoRWRtNXVyTHl5ZEpKOVFIUE5PWEg4MG5ndVhtWlhWQ080UTAwbU1NNm9tZWwvWkdoMWJveHR6STVrcjE4OWNUZjZsK2Z6UWJDbkxDQW9QcFoyMStYVFBuVnhFZXdUcU9sYWlZOUsxSzdhdUg5Rm1TenBCaStsUmltbmtrQ1c2dS9VTzFRTjJ4c2xyREJkWlZKSHBJZ2hVNUxQZ1JUdURCblhSU2R2Tm5EQ1ZGM010cVhwNEt6QnlEN1I0VUZBaDZ6WmcrRHN1blIxdkIvNzVqK0dDaGlJMUZpOGh1WTFtYW1hcjVCOXE5ekhTNVQ3UXJwWjVZeGdheUxFOWlsQ2pBOGN6NGF6OUJKSHZHNDFKU0hrSE02MGN1NlpJYXJuUnBrUFVYM0FwYXhERWsvYnkwS0tBWDdXcXBLNDdHa0RYZzJqZTRRajVBJzoweDEsJ1lpeWVOamJBc0dpbldsNUROTkd2VmtHMFUzOWpoVmsvdHNHTUh0UXI5NjBQdFpRMTQveU9JYTNPbGZacjNqd1ZHaU5wQjdub0ZNUnlXeVB4Z0x5aTVDaS96RGd5SUtiN1ZXYjlWRUEwaEJoN052VzJsZGZlQ3RpWURVSkp5T2pwOVJCMm45c2p3aU1LZjVKR24zVHV4OFNpN2F2c0U2ckJoUW1NVzB2UW9ZRHJQUGVuQlBFL3ViWWMveG5qK1dkd2RaWUV5UmFKbzJXWklaaXFFTmhvOXN5Zm5CVmNITEorbGR6dkVlZVdZYW9rMG1KOWRDNFRvaGlSdnBGS3NwNmtLYmswN0tZd0Q0VDRxNWlaTzdvaUgvS0dLRmx4ZmF4Mjd2U1ExekVkbkJaTHZNWlFOMDhaOWxDNWlzLys1ek1JZ2wvaGRCUnlOZE5MMzV0cjdrRkRqUSc6MHgxLCdhTGhkQklBdFhyamFMTDBlWkNSU0M2OCtiSFQyUVRkRHNhcVN0OVNocHpYbEd2ZDAzNzBmU3UxQ2xuV1Z1NFJEOUJ6YXFDODQ5NzVvb0dXeDZHSS82QThGL1NzSy9mTmFTZk4wRmUrRU5KY2l6cGRHWkFuaS8rWDdiejV2NDFwbzRtL2xnR2wvb3hFYWFBS3F6NWdwKzhYS0VjVkZFN091RmwxZ2NoZVZCc25Gd0pwOEQ4WG9zOHhYWUc0UThGZEF0WWtEbW4rV25KZVJXMmU5VFppaU1ZVWR6VHEvbEU2ZVBOYllDZS8zUHZPbGpXb2dscFF2bkdrRXFNTkpKZlB2T3l3WENHVk00UnB6SlBhMFAxUk9wVzhIclV0Unk2Q25uSmFHMDdWTUxsNmdyUm5DV2xCSHh1Tmx1aG0yKyt2RHNWVVVuRDBqTUxVcUlNWG85N0ZSeFEnOjB4MSwnaWxrMnZhenNPRVRadE1FVDV5bzQxUnZHVDhrUUphWXYyVUpaMGxvc2pLVEZHUUdMRFlsRXNHK2JKQUlKd1dYMjIrMTJzc0ZZQnd4OHdpbWlWaHZ6dmJ4TE5FVEd5VzhzbFlRU1ZtV2NlZlUzK3B6OVhaQ0xhVHdENzBFdWxwU3hFa0JYb1NSbG45R01XR21FVmx3TFFIck1nUXZHZThOUUlUdlRRL0FNd0xDRC83RDN1RFdCaGRTM1djWGZWYkNQS3pJdlpsSkx5WmduUkk0ekdwVkFmQm92aEluekxjV0drbk5TUUpvaFpleXNsRVRIZEliS1hFSHhYWnhqWFZTKzNkaGN2RFdFUklKb0d4UDloM1ZKZThzS1M4VUlnME43MEJDS3NldEpubVoyRmpuaFpoa2NiTjBlMnpBMzRoZVVBdW85bmJ3WjhsUUlQZjEvcFlWeUZ3JzoweDEsJ0l3aUEvS0Rpcks5S3o4elo1VnYvZFR6NVNlampudUhzZVI0c3poT3oxZWhnek9QS2hIc3RJU1d1Sm56N013QUtmQ1ZEZ3RpalZXdTUzNG54ZkJsSWZXTDNoK005SnNVam1LTmlTd2x3Tmxqdm1OeVR5ZCtYYi8vcW1lN3FuWmdtZUdXbVQyNDQ0NVVpYWlFVkpNS3lwM0ZrSDFCM1FMaWJMVklwTmNoeEJUQW9ocW1FcVdhNGRvdGpHcG9UaHpabERVeWVzbWdTOW5oRmJhNCt2Sm42OHVsTDU2TjRpR3VodmkrQjFGbCtjZiswQTk3Q1JFb1k3L3JOS1g0VXB6dVhqZUt5SGt3SDJDb2Jacjl2Z2JtN0pBTjVrZU1abHdUM25xcTlEQWlpMVRsTVFqUGJwT2JZNFBrcktkaGNWV01iSm8rNUFlVnZDTXRMVXBxS3BUaTZCZyc6MHgxLCdmVkxNenFxaGlUclRIemlTK1U0Y3B1NXE5UHNWQTVybzMrYWY5ZDdzV2Y2MFUzb21YZGNPQ0hBNDMya2lhQ3g2VW1sS0ZzN21tOFo1b2Q4UjQ3Rzd1TkxJL09ya1ZpRVNuRzlNT2Fpai91VGwzSjRyaEg2cFFUVWtOREM3U2ZBOTlVSU42OTdyMytFSkwzVDNUVFpHS2gwOVBkV3lFcWtBUk9iQTNsYzljOG9VQzl0cmx0OGtQVW40Mm1aR3RJV1VzbS9lMkFWRFBVVnNuN1d5UWVoZm5zbWFWT2tVbWdZZk43akdtMGtlMjF1TFNaVlFzdmI4c2NCUmlOZTNZeHJkWlBtUzJ2eHdYcGRwcmVSNWVybmFlVCtVN0pOaG9CK2MwdlZTZVRRWk1vVXhoSlAvRVc0NGZXY3BOV1NiNEpaSEdUYmRlM1NaTUpGUy9DNG5RQjl3SWcnOjB4MSwnSUxleXBSeXlycTV0bCtYUmZXMUg4c3V6UXkxNHRhL0JINW1sN1U2eDlMNDllSUQrUXNCdnlCdFJOVVhEeUpiYWlVYUg0VHhjU0ZCTmtSWTdJaDVIdDMrU2dVaUdEcll2R3gvMzBCZWdYRW1UVmVyaFhHUXJTNXErTm5sVnZBMUVUV3g2OERFcXdYOHNVaUREV0Erc3VhT2h5MGxOVHpHcm5PRnVLSGlIbEZXWlU3d21sZXp1dlVYcDBWS2JRUTVwWlAvSndJR3p2MEFnbkl2R3NNSUdMbmwrVDhOSXJlZ1JOWXYwVFdVZWxSaEs2K0xSeVMveFdtSTVUMStuR0hGNGU4U3Z1aW83eXZtR1FqZ21rQXFkcmZVN3E2ejFpMnBRSHc3Z0N0aFE2SjkydERGQzhZZ2ZVUFFablZWdkNZcUdNZVMvczc4Q2lSajFTMHZIMDl2di9RJzoweDEsJ0ZoaXovbjJ0dVpONFJLKytjMmdVY2lPckRmZngrV1E0QXg2ZzA1NmhPaE9uQ0dxdEFxS1VoQkM2VklYaEZUMGN6Y0ZKYzk2Yjc3QU5SSjFldnZuUE9wa0VrNGJsK1JkMFNFSVZhQVhGWUZLcnNacEM4Y2pwK3dWNWRhbERnVFhBRkVsdE9RUkFVZGVhcUVGdk1GMFVpcmsxdllucFRwQ0hManJPRU9ub2x3K3REVjFRb2RWSVVxRzJzaDZWUnFqRHdOSDZ5blBxYUV6VEdSVmQvT1hvOGJ6UFdEeGMvYThoZmhZclJRV1ZBZUR3WE9GWnIxM0pacDEyaHRxb1g5cHFrbE44S0FlaFZoOEl3cHIwdEFxa0I2TDcxalYyZHlvTGd0dnZJZmZlQ0dMbnpXd0RxcTAyZ0lhNWptSVN0TEYySy9vR0hHOVVFWnNzZ1NoQis3eUNLZyc6MHgxLCdkamxqUTJWa1drRzdMSDR4RUpRVW9zUWNKNFBOZ2tWWHdUbUNxVVM1MTFERXFNUWh1aDRseVp3UFVPVXdtNU5PajBCZWJQZFpWM2E0Z05DWXo5czUyUDBwNEt2ZlJ5NjV4Z0dha3p3VXVuT2s5ZmlDektXZzJacUlOWm9oT011TjdVQmVsTGZBUUJnYlA5eEttYnNVZy9ZbWRFVCt2dDlSVlc1cDFTMmF4SHg2UXYwVGRlU2g0R09VZWZXTGluQ1o1U0l4MXVScXQ3TkVrYXRLcmpqQlA1UFFuR1ZHa1N4UzVIUEdtSHV1TlYvNFhOM0VJc3RZVHB6emVWbUExaGlwOEdmb3lDUk1LUnFHUEV1NHZoemtSWkdZNldFS2E5MWpQeUdVdWxndUdVd21BNHFDQ0tjRkFWd05Uc2FkN1o2Yk9EVEhkcktLNlBKNDR3MmU5aGR5YmcnOjB4MSwnZzY1Q2tmWEdCS0lNZHZPanlMNzZSTEZEczFtU0xUL1RLNWd0dnpyTlRoa2xQOGhuNERCT3Y0QTF1bmxzZEhzdHltZ0VyZnhvR3EzR284cUs4RmI4dXRsVDh1T3lIQ3YxZXBKdWUwTFRNa2hrSmZiQzg2OWdndUV3S1BaUDU2WkJ1dEsxUzFYeXRMMTVzMTNTR3ZYeUNXY1VwTytCUXJOSFMxcWpHVlBPUWZCemhEWWgrK2JjVnZaeHo3SVRFL1ByNC8yUDREZFR3dHJpSkRpSmJ0VE1kRE1VU1MzSGNhSTc1RXZQdEExcGd5TVgxWXdtUXVjWVhFdWQ3b3VaMzIwNnVGVUtLbWMxc2Z2NTJXQlFzb2QxYkNrZTNqc2h4WCtuTGhVTVdFb3RlVHY5dW5vM2ZYUW1Uc2lrcEQ2Mk1XNm40VVBnOTFzUElGNGtFeUJkbFBuT3pBJzoweDEsJ1BFYUg4enZtaENQOUl5MGlmZEIzbkwxU0tWZTVmY1ZLRVJacW5mUmFFcFZGcjBaaXRQa3J2ZStyczQ0eWJLU2JiSnRHTlVSWDZnWnNkd1VEWndiQUJCelQrUENoMndhRG5LZU1iNXRuV3BxWG5ka0xoMGVBQnlCaXNDbjM3c2M5cFQ1UVpzQkxmcDI3TldSMDFlUjJhME1GdVF5OXVtVVZ6OWduMVVVVFdFRDVqelNhL0M5SDdHeURZWE85M0dzRUxERUpJL2wzZmxjNVQ4bXlxak5MTklYUzNhZEk2c3hvQTdYSjRjRmM3cGd6YnZyU29jRTBkdU5ERXV3WHBGYXpzdkxxUm5aQjVWSk1oVkt5L3J6MmhLWXNTUVpmYjNZNkdkMEYzbnpYNnU0WDIvdGtiVUVKZkdYMUNLS0dwWmwvSUFtakk3dEY5bVJ3RDBWNHhuYWZnZyc6MHgxLCdLaUlZKzI1dnNEOWdzT3hxZzR5S01ndVpicG9iUnFCK0RvZzRScVlxZkZrdmZuNGE2Vm9PTHNBTVlHcmNIV3M3UG1vdXJTQWZxY3dZZkVwelBjZzcyZWQvYklsUlpPQ2dQbE85dkRmMy9lRmJacGJ3VGEra3JMY0M5bTJyQmVFeldHdUY2Yi9vVS90WHR3NGZ6T01pZW01djdXOUxVMmIramJBelhCeGw3U3hPaVVkUDF6enROZHo4SVh1OTZock5YMFFFS1JoaGtkS2tyNW5YVnludEJ5aTFObUVOYjZpMlYxQVpXUHVMdHlzNURkRm0xTElrQjBMV3lLTWpXM0hoVjhVa09YN0tMUERMbktOeThxemtubnMxWlBiQlIzVHNBVmdBNUVmVzRkZ2lvUVI5b1YwOVNwSGxwaFBGYzVVRHFKdTNPMGRiak91ejZoRTJjeUUwZkEnOjB4MSwnTGVRRW1wMksxNXpGTjZMZGVYMmFGaTlOaDVGaUR3QnNTWGYxWUpHSjEybDhlT0hGUEkxMDUwM2VrR2E3azBEQnF3bytQUmY1ZFJ4WE1OMk14eTFsYXFvU2tXaGJMa25RL2JvWXB0VHc1d1B5OG5kRXphTDIrRGZTaDRpbXNEQW1PMmV2TXl4QTJVVE5XY1lEYklScVVBWHJ3RFBVR3FrNkNQcERsUUIwdlRiK1ZXSldpUGFZdVZjRS8vd0hFUnZoZEFPTDhsYWhyb2ZvTHlQNXVtakRnSkhOVG54bVBuODFpMnVISFJSRVpCemlzbnExVCszazk5SWJLTWxuU2x3bjAxTUYwUE5heWVZS1A5VndkeTBPZ1FiSS92ei81QVRpelFXVlNCU1g4cDdUNTA5UmZ6aThOVE1XQXJ4ang5c3p1SkZ3cEpSdjlid1RjRHk5L2VHKytnJzoweDEsJ3VFM2YzZmQ0VlZtUVdmN1V5ZEc2eUErOUxKeHJGK2oxQ2pGZ1BRdnI3R3ZWREJOWlQwU24waTg1YThkN1ZUTnRSUXd0azBxR0FGSVdJQWVtMll5OUdpaGdsK3pLcmo4N0pmaU1qb2U5UEh3RDhZa1RQZEdpNTl2c1ZIbzJMUldCdDVBWU1UdkQxK2w3ME9uVzhYUkplUWh2eFNHOFRJcWZmbjJ3ZFVDdGpKdjg2YnFHOWJWY3YwZjgra0M4RWR3V1hqaVRzeDZwWkQ3ZzBIY1FISjhEdVoyUGJjQnFUQkZqb3RTbzFpZWFudy9GVG5nTkdpQXB0K0lhcHRsdXFiRlJqU2s3NnEycWc0cTJXUmF0aHBva3NTZklzVWoraFZFclVud0t4ejloNTRucXRhNGVyeXRYODM1N0JuRDM4RUMrM3lFMEtOK1VtZ0tydjJSaDBGcUtIQSc6MHgxLCdBcFQxOXM0b3RoaWJYUlRaZmJQd0kzVGdBdHRRSmdjN3FWTFpiNWJpZURyMlNLNTg3cjBuZW0zaUJkSGRnOEJ3VlRwSGhsRjA0NVNaNDhXSkNLQ0FJOEQ5OE43ZXJtZkRyK2dISm9qTkdydStlYWVNb1pKZmdkT3IxRUFDQjlmS2tVaWNrUGZabmZoNXk0ejdBcERQL2tYclhaWVpFZzcreE8rSHhPd0pqYmdSeTQzTWtHaExUT2F2WHdoRTBwZmpScnd2MC8vekJ4alMrbjdOL1E0WmtWOXdFM2ZlZGlqYlJpT01QNURjQlF6N1E2dWU2WVdzcVRmQWd1Y1ZXanVFKzZrR2lhNU1IOXRNYUMydzUrYjFFc3pVVnM4REdzS1JRUGVkVFAzVU4xeDQ2azBNVzJaNkFGeXg3aFhNOFFLYitVYXB5ZHJQcEYwblFObnRZUnQxOHcnOjB4MSwnSjZ3N04yS0JCb212eDAvSzdVSzZLWlVRdGU5c2NhY1I0Szd2K2lDZGZCWitpTW1qN1AvWm1hOFE0WDZod3FPYzFSRVNDK3poMXFWdHpEVHYxbnFsQS85VVVsVU42UnpVelVhWXBFemxpTFZOUTZrVDBwWkdtd20rd3pvY01HZUl1NHhsSEk0QnEvcHg0emliMytNQzFjSkgvQnBoMFBxZm5ITlFCaFV0Tm9vYXlLTDh0VXFnQWUwUHlhQk9pNzk0eU50OUwwWVhCWGtScEhtUDFnRk5ZdW10aTdrd2NoWGhCTXlvalowQWpraDg3WTZnNDNGb2p0WERQbTZBZjZKbUE2NWNpNGxKeUs2cDVmblpPYnlMRUUwVEJOTmNyOFNnWWRHMTlJUkhGQUtzY0NkNjZ0Q01lcisxQ0VFbHpXVjh2KzBtRGJrNlF2M1A5T3pCR0FCZllBJzoweDEsJ0FPVlhIYUlsZXhqcG9CM2lVeVVwUWpOaWxKRkJLMnpNeCs2Um9XaHEwUTRSRFV0c3JmS0J6MThWZEpyNktXZU1sMGZSQTFLcDRsT1Zla3NOZWp0Z2NEOXJDTThvVkw1TitrUkpjRkFSM0M4U252VzBOVi9STG16aks0MkkyaFg5aGZTaThhL21zRzRPTVRsNkVuLzVpOHY0NUZ1WmpsWWd3OUo2Q2FObllUQ1ZDYzhla1hRRkZVYjBYbkQ4R0psN3ZmeVA1cWp4SUU1Q3VXU1BTU3d5RGZaN1VwaVFCWklKVFU1QjRVdHJSbTRSYyt5UllRYkU4NldYY0VBdEJuc3JWZ3NHTU12VDRCeHhidEhRbVZHSWp2NXVjeENrTU9QdmVFeXVDdTQycFFxVGNmUVBodGVUc2ZXU29BM0lodS9RSmF3M3M4UkNNL242Q3RCVnBBSjdRQSc6MHgxLCdmVnRHbTN6YW5jeEZ4NUZKbFZyL2cyQjBkTURYV3VKbTBmdUU0TGVma3A3UWVCaGxyRFhCbldMRWo4SmRJV1h2OFl1UzBvR1JEZWhzYUxvTStvQ2J1Z0MydW51TlFTcXZRbjJTSEF6OHBjTXJ4Q0JMRXNqQkg2V2pHZS9lbTRrUUYwRTZtU3JmSXJXVS84QjVJeGhtWklmaXdQOEZmZXhRM1htblJMcXl6dGxVbzN1NE0vbHIwSEIzY3FUUzE4Q0M3WmtoSUpGT2cyRUlMZmJ0RGpOZUNVMit5QnBOQ1pCWEQyZU80czlRQnNjbFpCanVlRVc0SWlSRFEzODRMZmx4TUtVNlN4ajN6TWFjYTlrSXJwNmVhWkhBVjJhcjFSUjExZUxTbjBIUGVNU3c0Tnp1UjFNWkU5eXJFSWFocTkvTVhlRXFiWHM0eExzNXFxa0VzSE5tTEEnOjB4MSwnYzVmVi85aE5xZUJGNTVMSUlWejdpZ2hOWUNTdXFFSnZmbjlWOGE1RGZxZFVqanM3K1J0dFcwc2EvRFBQYzA1Q3JkV2xDL0hlNk1idndsZzBUNDlLWnlFdWhHa0NnandxaGMyajFpSm1NV2VhTTNQK01Kb3RBWTkrc3B5MTVLaGFTWkNxQ0YyTlNQMTFGWWxpbkFPSHd5aE9oOUJaKytPL3c3TlV1bXR0Y3dqU0tKbFVOYUR2ajhYUTlwTWtWa3pqY3F3RUdlVTVTVmh2Wm1wSnUxM0VyMXFlSkdLaGc1Y2dKU1RHNXhBZEtXSGZFZjY1RmRzbGxoL1htcnpaMWJsZXQ1VXQ3TVNRNFNTRU1ZbXpRNjlDcDVFZ2IyTU53bVZQYXhPU01na3FWN00xUFptaVlYb0tEUklra2NIQU1rRW40SDgrUlZiM2N4cVJDTjdyRHdaTFh3JzoweDEsJ0Y3MzNMM0RXY2kxdmVwRzZrS1NBbEtrZzB5ZERSYlRIdVA0eDhVTzdGNi83MmlVenlseWlrRWlnSWVFSjFiUE8wc1d0VGtRc3Q1SnR6WWIwdWpIeThoTHA3WmZSVEYrM1RJajhOVGk0dm5QdWFONVVYcEwrWlNlN0lYRVFzQ2FuczlHYlNDbFlpKzVPb25yRllyZENXUVVaUHBGL2MrcTJsQ0lCejM1SWwzd1VxdlJMYjBSaUVDQ0VuQkZMVFMrenN1TFRqSCttV09YdFRUWXpXTVlhS2hGTnUyZWE5WThDN2N5YmlocW44Yi9KR3dRTGlyem9naVBZa295b3JpQmpuRHFPd1ZZL053UmZSdHp2d1lCS2hSMG1MWU5SZ0M4WElLNXVab0h3M1lyUG1zVGhwait1WEs5Syt4TE1qWTBCaGxSa041enBIaFBnVmo0bEkycnVUQSc6MHgxLCdaTzlCQ1J2aG85eE45U2lFWlVUK1IvZEZOZEhGVHFaTDBLRTdBaVdrR0FQYXJFaVlBcEdOcE5keDlhSlpxb21GdmthdUllMmk3cVlIdVcvcFJGTDdGTExtdUkySk1wWWV6dHE2Z09BTWN5UEtXMzErWklaaVNZK3dCOTJJQ1c2VDFSQlQxYzhoOTh3YkFCb3MwV21HVVhObVdiT29XaUptQ2Y2bEJDY0VpNFM0bG40eGR5ek4yMS9zSlBUQjJid0VaQkY4U1V2T0owd3RRcVUyUjRwTS9Za00wVWlyOTUwTGc1d3U4SDNxU1gxc0J2MEdTYXBHa1dJNUpNbDcxQkV3WVlOVWNNSUpmeExhMk42M0R5ajBQTUgyU1BpSmx2Mkp2bmRUL2NYb0EwT2NUMnUvVTZneDNabzgrRjYrWDZyTXhhQ3c2QmZ5WXljODdKVWJleXRwcFEnOjB4MSwnZ2dnK05qYXA4enkzSXVwUjdwRmpiaVdObEVUVC9xeTNtTEwrYlFGWDBpUFdqWWxuT3BiNDl5YTJRY2VwSGJOcWVYNmdXWGh4UmE4a2VmYkZ1SDBPcGJaNW5ZK2NtWUc1RWx1aTRZRmRJWmtTQTVySmUvcTBIOTlRUHlpUzFTLzQ3YlFpbkhjcEhuM3NvY2Y1ak83SGh3M3ovUHAxSGdrS0NVZkFOc1FYSFVZeklMSVV2cmpPTWZ6ZnlrMWozNitzTXI5SENteWl5aHNMQmdlMmZ0K0N2Rk41d2ROczlmZ0FFVm9kOXFtTVhpbWtyVC8yV3FRVnptMWpaTEVpdFZSU2hEMHFSbDNHalJOOWVySm5rS0ZJMG5JVVVra3ZxUHp6VzI4UURKK1B1UTBzU2xSb0hzN2lmZ2ZLblgvRUUxZ0tnbFFqei83SEMzZndtWER5N21lQ3VnJzoweDEsJ0xPUlV0MUV5aHdjSVMzVFU2NDdnSTNJdEhUcThycUFiVVVKWHMrblhwQy9xMXV4ZkFpUjJ4Ni9mWXg4cEdveTd2cm9sa0xLQTRWeXdNYUw2a2xQTFZ0a1F3eXVNWk94Lzd5dzg1K05LcG54UlBrS1p5YWJrSnB2NXZUay9VMUVrNFZZNDhpNzhpNUZkb2RxVkI5RVFJa0JUa2VwelRkS0RBWjhCYkRjRGJWbU1KODNCSTJoL3pPQWVyNU1vUjVESUNnN1hTZC9nalNZZnNZSjZWbEcwT0ZiUkkza1psU0xWaTVBbXNCWCtXMGFyVTkrZ2FOSituT2p0ZHVjeGcyUzRWY0MwNU5ndFljUllRUFNpejQxTTlwajQxQU8rWGhvVEliRnRLZ3Q2eDlPUE03TUVzWndOTjZKNUF4NGhYdDkvWmRSVUs1SG1BeitRSUk3VGo1emZYUSc6MHgxLCdsNzZQWGlpbEhQVnVwbjNOd1laSG1CeW1RTUlkOGxnb0dHczNnU0NWNDFCM0gvR2FLWU9TcTFhMVUzM1JGVVZ4UDNTRnVLWGt3SDdrRDc0SjZnY1FVRHF4V1ZmRGFQSlpBRDY0dm0wN2toM0xJckRhd2tZandFcXpkR3JtSVJOZFQ4eFlxUDJReEVpMU90T2FJYk85N0NselJ4UnhTMUNuVFRUbzNzQysvdnhTTUpxV3QwVkpWOEViQ04rbVpidVl0VVd4c3Q4VmcyOUVvWnErL2QvR2pRd2t4LzRCQ3I4dVgwSE1vOGk3TDJybmhRK09NTVlZYzA5bHh4SVdveTEzSEpIQzBhcEM5VEttQTZsTEZudFM0NlNaMWJCbGhkQ05zNm01akt6aFhwYWlyZnRuTk51QzcwWWZvZjNOTk1LclNQVVF0SHNFT29ocGMxS0kxeUF0RXcnOjB4MSwnRE1wczFoZk9oNjBrbVF0UGZmdHVCRXZHdWNVOHVRVStQY3QwZDh6bnRHc1ZqWHJlRWlZMUtENVByby8rdGR2eUg0c1hCM2FuczhDSGIraU5qcmE1Z2hOZFMrNnBxck56VGF0enFaYzE1UnVlTkRIUm9QSDdyaUZwT1ArQkZLbi95UnlSWTdCbkliZkZycUtDRXlGZGtHWUNuL3QyeGxyY284ZWdyQm9nbWhtTk5SV0RLZUxzempZeWtGTWJLTyt1cTFMNHFzL2t0bjZndWp4cER1bEhHSnA1blJZdm53M3p1RVU5TFhJdHVYVEErUUhwVjVSWHpBcWUrZlUvVGdITUZUMXRJWWxWSGtKTjBNSnYxY2V0OHREOHIxUnlSVGh6dWo5QS9sUnExLzFuRFRhd2tZd1NxNU5UNXNTc0Z4eVp1alVFaW5iMUJrMkViRFdaMndKMFpRJzoweDEsJ0UzTnpYeVI5YmJ4NS8zY1RJWHdVb00rZE1GODNQdnRtclZoQmZNM1laM1VSbDZzeWgwWmpFNzV1MDl6cjY0a2xTbS9kdU5XdXQyV0x3NkJubUcwYi9aNW9TaDhzeXJxK2lOcEFTN0JIcHlXRXRZOHpSYi94Vm5tWjlUUGM5YlZqeFZVTHRuUTJWUzFxK05GelhmV05pUTc4T1RUUkZRa3RwTkNGakIvT01iRTc4QmZZMUR5aFBsb0xGQW5YWDhCSURIRGpwbVlUT0hpNk4xR2FuZFpUSUYxUElDRUhQNjVOQWhqWit3ZFdXWVBTd1RvekltZlNOSGY1Zm5WY1pKRHo3WHBtOTkvNzNCS1ZsYXUyWlBlWElyRlYwcXFhaVdWWk5nUmNjaXdCbjdDTlovZUY4TzZtOEVDUHNmeUo4VFliYm5zL01BTDgxWllCUVBHYnNiQTNwZyc6MHgxLCdPZGVmWllDVTRIcnhZWjVmcVNHQUxLYnFRM0pjY3M4ZmJmMi9ONmpOdVI1RWxmNFNPNkc4YlNJRGtHSTlzOG9IMlM2NTJtTHhJMTZTM0loVy9YNWM4aGhGd1JPajgwMjVJdU9xbEFVYWtwZHRCMHRINHJWcktXNWRFU1Fyam5iVU0wS0prRmd6eGE5MXE3RUV3Z3Q4VU9HYUI4UTBVNVFmYk1HSlpMbWMrTVBsMmc4SVladm5QU2R0THpNNi93OFprdGhZbGhiSGVPT0drZG56Y0ptZWdRdUJSeDFtNGIwZjQ4QTVMQk9jL1dSWlRqMzNjRkd0Z2NSYUtmUzFFc1VmTFMzT0RoN0VQZWpzeGdFL1ZpakJFdkpON3BTQzdxbVJVakVKUUgwL21WTCtGemR1RWNXeGQ5Y1g5aWt6YTFtRi9BYkRvUStjYWlEcTJEbktWTXRiaFEnOjB4MSwnSDlHQmx3d29CYXBxSW9Lc3RPM3RiZGlRcXdSTjJnYWpKb1ljZ3RUWlVvcW1QaVJaVEVSWldkdWdxY3ZRNzZib3dBUWZqR0E3MGNBSkZ1L0VkRm85ckFBVjRqVUliVFZTUndXWXB1TElLVlViR0EzWCtOSlpDb1AvQzZlN1ZZZGhtWTRNV21HaG9kSUoycUVSV3VCL2M5ckhrSmw0UzJOZkVFWDdhOHA1Ym9vWkYybFZaYzloa3dCYnpjakM4NFdpb3dGNXFZc09HYUd6Z2M2ZXRQQ2RJMjhmLzlNMmVEUEZVbllkNDl5bGVWV29tOXlGNEpaYWp0UFFwUEZqeWJpckZlNi9ISHdpTDBicDhrK2RsTk4zNmx1blhpRkM4RE05SXlkclQwa3FTaHIzWjBlazNkZS9WZ01NdU1zdUprWUVzTXZMc21JUWxUNEd3amNqNlYvV1B3JzoweDEsJ1cvQkFXNm5SaG5UNXp2MDN4MFdLQU1sWDlEOGJLYWMvZ0ZtRTNndVcxOFRNTndlbVFWRGYyRXFlMEhSeXF5VS9hZ2lXaVYydmNuQ2FibWd3cmNPWThZZ1VzbEFSZDFQNzBUODNvT3lJekpRdFlJTmkxOEdIcTg5VEUvWitrRTBmaEs5NDFHZU5MVU9wMEFKY0RrSkt0TVREZ3B4OWxDWWdKZVZQL1k4VWRaeDRBMHN2bTRkMm4xYlVta0tKSVVmQXI2T251S1cvTDcwQ2ppb0JUU0ZsK1NyUFk5cnd2azZjcVBMYS82WEE4NmJVcFc5VUY4TEo4THlzR0dIUTJiODZuVU5oRGRKVmN1VFlUU2xqOGRkTWJPRDRsM0NnRDkzRUczdnNHaXFzZG9FM3prdEVLQlhycmZOOHVBd3Z3MWIyUmVtY2cyYm9XZkZud2FIdkNueTdhdyc6MHgxLCdqeG9DVURBVmRaOXRRbXNNTVNVUmtpQ3B6VURGUkhKdGlzakZ5OVZ1Mm84VEFNYWR4aUptd1VXZ1JGckJMTjRIejFoOFNuM3FGeDJJZ21GR01DMFdQNXdOaVNaMmpRVnorNVhmWFg4ck1UWHZJQk9vNnB0eFhiMFNnOUZwc25rYnBBUmFMQjMzd2tlWFVKdXNLUC96R2tiak9TWFVwN0ZwclRKNXdZQWhwdS9DRW5GcHBTWU1CcEdWZHBjYmcwVWl2LzBXZmtrRGhZd3JWZklsQktzMEg2ZWZibnAzems3dkYxT0VJeE1Ja2w0VUo3d1pJRW4zMnBNTlY1aU1uWWxVZE1JcmIrYmg5akxTUDF2dTRJWFBlbU0zT0JHc1huRmJ5dGVvUHQwUWQybFFxWnNUYytZU3FQbzZuMVlDT0huVG93MHJkTWFadmN1WlBBQnMwUy9wZ2cnOjB4MSwnbEEwdU1HWU1nbjZTVlNHUjUzUTh4dXZXOFJKMGhMUEd4YnV5NmlDanhGcXZsZU4vY3IrUFVmN2JnNnAzeVRVcjJwdEI0SVlvWHlhQXhsbDJna1JYSU5mZWIzUjJyMDNkUTNxNS9abHdaWEFQS2lkRkVJUklBejNwL09KU3ArVWlVMU45Y3JBTFBVYU00eWtSQ2lEejJGNTRDYzdNNkJtOERHbmdIRkI3VjZxMW95djRkKzJwc1U2Sm4rQjJYVTZnUW1zYXRhSmh6dUh5dWNDRmVHM1QraGpUNXNESVhrY1h6UlZsTFNxeE12RmFOZldYbk1aYUtWSGRzdWFvUlAzVXpYK0ZCUFBCbEs2U2VwRndLT1Z0V05HRnBUelQ3OTNUdmppVEI5VEVGZFdYSUg1OXZud2h2VXE0ZWJXRW5BaHFCVzNBdWVqOWhaODBhTjNJU2x2WGZRJzoweDEsJ1hOTk52eE40QjZSNkpJbTJlbGR0ZGxZNjdKNGdzbTRUSFZISzdkdHZMNTEzMCs0RDZub0xwRDU3cWFYWXFpOThVWEJ4Qzd3RU80Snh1NnFmU2Y4MFhGZzl4VmRRUEptcjdFQ2hINXBpSm4yQkg4MVBhSmp3NGJVS0NKNWhFTXY2OWozOXl2VjVUNDd1NnA1ZXVlZTRlbWVWU1RIMHI5S21meXFRbGs4SE5YWVlLRU5IV1ZRbG1OdWMyU3BTV1RVSVptaTY5d2pEYjhHRGZEQjN2OFhrZFBPbnVVQnhXZDdyOUJDRkd4L0Z5R2s0bEFVQ1hOeG5tWlcxSVZwNk5yd29wZENveDlGRlVmSlF6TWQyZTdSWjQ4SHArSUd4T1NadWdnL1RRN3ErMU1ER29qc3FKZjRoTFlzeVd4SGxzaitncGt1MGhwNFVSanNtdHBDalNLQnd2dyc6MHgxLCdEbjFDTWRwc3ZxeTBuSEQyTHV3NXhUMnNEL1MzM3gvUmZMeGJKdEJNS0lsNys2ME9TN1pHOTRiNHpybXJPaHI5QW90bVdILzU0bStZNVYxUnJ5Z0ZCbVBqdkMzTDRoUk1xYm1tN0ZWamZOd3o5TldwdlNZa1h2K01iMC9XdmFrWGx1NGhaNmk1NnYvQzJwOU80R1JuVEhGYlgrVjhaSVRtZU0vN0E0aXN4WTZRODBkZmR6TldSSXdYdFpYTXI2TWcvM0d2czRpTGpERDdMMDVFekIzSnZhWDNEWXdqdy9oazg5d3hTSjBKQlEvZ0x0TmJhdnh4bFVGQkFZZFV5WlpKTDlsell6c0ExTkN5b0NlU29zSXMrMHVhQnJqVFlpdUIxdUxwVFgvZUt0UURadUd4aUxIbk8yQnlRRDB2ZTJvckcrWFFadW9EUEZJc0tDWGt6VU5PckEnOjB4MSwnSkR3dTErZm9tbXloczYvREJKOURacEV4YkRQSlh3WHp0SmVxT1cvb0tMU3JKcXpHM1RVWUJtb3FpeFlOR1ZwekxBaGg3NTFxcUEyR3ZERTduYU95WjFwbGZINURJcWErUXJQcFk3RnpIdVUrTFN5cW9YL1JKa2RGVFZ5bnA3U3FNZ1NOSDZDbmUyMEI3bENpWlhkQldnRnpvSm9CTlZrREYvRmh0alBGaGNYUi9WWmlLS3BRMFJwNzQrYktid2RNdENMMWYyL0hQWVd5NGlXdm40aXVUSlVKRHlZWXF0ZS9OSi9QaEhJSkFuaGsxVkZNSkpYTFIyendWTEprVWpTblA3b2dFME5WY1ZFSFJaZkZ4Y0w5b2ZvV3F0QjI2N1FyVERFOXJUNnJTR0ppMjJPaDlyVEJXL1MwN01VYjQvVG93SjVQSU1HYUJxV2c3ZjNkeERsMXJnJzoweDEsJ2Z2Ym5yYzJidU5RdS9zcE5GU0pTVjllQzBCMGlDMlFCZytXeEhFWkVyem01UnhDVGwwazlVUkduMUZOVXovQVJ5K2dCdld6UGJidjR2SUdvM3ByRVBoa2tRQ1hWZ0h6TlAzd09JMnZUMzN6MXVkRDFpUjZ5Qkt2T1pZdmw5Zm1lTlJYbDZub0REZ1hudzBKbENJMUtmeXBFaTF6QVRudkZHOTlQK012VHI0OHhMbzdPYjAwRWFuaHBsSUxJb3Npa21SRTd2bkFwUkphaDRMSjVLai9STVpNM0dvdjk5WElzY2tjZHdhZmYwTzB5a0tiL3VyeDQ5M09kZjFaSkpQbGFjUHhnMWNadG4vbFdmZzRHa2JCK3JBUDlnMzhNMnBKTkM2UHRBRGRna0I2Q1h6TUh0SjN2MTBNQ1h5ajhwT0RFb1piR3djSTkzY1pGKzNDNU1nVnFvZyc6MHgxLCdYTW0xdk4zVFVmclJKanVrdE1VZTlzTGsrQitRMGMycmJPaDJob250RGdwOWhtSE1RZmpHRGdaTE95MkZtMjB5Ulgxa0c1MVZSZ2JLYmlJK3JSNGQ5MzIvN0dRSHZjRDhPOForOU9NRG1Oek9zN3BLR3ZGaVQzOHZHK1g1V1Q5MnpJRWxuZjcvZC9VMDJiN2ZQWS83dXRnbGx6a2VPM1hSRHc0eHJvVUMwZGlFVkRNcWpORW02aTN6a1JadG5tVTkwTmRWVXlwT3pIbWgwaTlmcmg0QVVJUXN6RWlTMXhvdVFpbElnR2gzOFFJbzJ3V2psQWs3N3RkT0tFcVUxNTNMbkVQT3NrRThnOW0ybmpHUzZPOVBNSWVTdHMrU0lTcGlqN0x0cGMzbU8xcWcwQkdFTmNFenlhUHFrZ2lERFNTaC9XSjNpMXlwRFJaMTNVZjYvQmVMc2cnOjB4MSwncDRPMUo1aERleWxUMW9zakJSaTgva3FSMG1lTyt5bXFTZEFhRll0Sk15aU0rNFpsZS9Ib0ZUQ2ZvbWZxWnVxVDRET3ZsZ04rdmdSYkN2ZW0vVkc1WDZleDFDT0JBeit3cEIzVDZxVW9xVHhtSWdTTzl2VzlITDlwUlAxdkNjK3pNaFRaOUxKdnoya3l5NHJ1OXc0aWp6aWFmYjhMdkhvUFZISnVXYk4yWmdSb0Z1SlI3WjRxTk5CZjFZMEZwV01uSHl4dkN1a2QwdDJ4YzN5NW5oMDU4dk01WEdWc3FXRjlLc0U3SmttRGk2T2FPUC9rVFhBRHJubHN6YW5nMEF6NkxNWC82aEVtbjJpSW85SXhnV3NPaGpxK1gySFJHemp0TFJORnQ3NzIxYmdrU29qNlZ5bDNYVW94M1JKQXhkTmoxc3F0YzdRVnM1bU43UDdac3Y3TzZRJzoweDEsJ1g5U2VFNU8xc1d1ZC9sZHBBWC9KQmlXYzBzK1FNTVVkUW9lbjBtQ1ZRdFZqcEZ1bHVqL2h2SUtuYWZ5cGthQ1htMXJLQ25QaFJRMDZyYjVpYTBqdXdrdmQ5bk9vb3VHNklaR1FNcUxudDFGZlZZemJ6WnVrOGRYYXBJUGZ1YUZPMExkc0VFUjB3NnA0YTBWbVdCZGNIVFVvR3pOU0RicWpEWGwxT3Rtay9mTzRJeStxYlRmSWxkQkVPWHFTQjBkeHRZc20xMFo4dkJmOHJGK2d5ME4xSWhSVUNDeVBZUkdKaklyMU5rZGEvTVpPcXpucjNsVldjZnpaV2lnSm5xWDREQURmaHBqaU9PbTI4MThZOTFibC8xZnJOdWt3Y3puS1l1cThURlpYOXF5QkRlcFRIMU82OC9HOGdPL1hWSjlUR3RqQmlrLzBLM2NyNkVtYWpud3BYdyc6MHgxLCdZTVlHb0haT1FpdjRhZmZDaTBoSmVWODJZbEcwdnk1d29UeW51R2puRWdZUTYzVklZZjlMQ1hiTFVvZ0kzRm9rWWVnMU9MeXFYUG96S1laS1dLaUc3TW1PbmFuYVBwY2xsR29LTFc0NU9tUy9DeEJIR2JhZ05na3BZaWtTQ1FvLzVDS0FsTUI2MW9MSGtRVjJwVVB5UFJRUm01Yjhja3JKbDJWOVptVFloTzdyUHRsc2hKS3JFVW5idW1ISkZESTF3NnZBOWkxQ0J0NGNpVWRJcCtsTlJDb2FaT1I1dFBYczByVWZRT013Tzg5NWszM0ZtZC9HZ3hxck8vQ2lLTHV3ajd2cnZYVzhvREc4V1QwbmdiNVNUOS9hY1BMSy82d3VqZDZqTlBVN05CSDdCMW5pRWhXWHhwblovNVZwTXdFck1zNVdFS3NzL2VaYTY2R24vU2VxVUEnOjB4MSwnaHJJdG9zSzZIWTdxVFZMSUI1LzA2R0VkTFg3Qm5qeVplemhqejFCdG0ySitxWGFucmpndHp6cCtiWUFSZ2tnYkUweERTZTkxb1lSYk5CeXVvdlYrNWtKTXhxbW5vNDcrWGFRTS80ZmgwN0V5TkRLSmxzMDUrTkhIWGRWVFVQSkY3ZmhZd1B2RVAyMFFaWEorVVNDVzNQV3pSMk12WnVnTXVCTWNEMUdMUnR4WUZUeU5pZVB5UmVzYVg2a0tBbktmS1lURWZnTnZTb2FxYlArU1Voek1GWDFtSnViSmRSaFRYZmJKd25VRUIvbjhNNmREZ0hJNzlXRTVlbExCOXhCVUlsc0ZVdzgxOXJ4dm5PRUJGR1Fubis1Y0tkdEpwRS9UeHFqYjBqUGdXeXVwMXEzRFRWUDBtdHQ1bWJ6cWlTajZ2ejFENEJxTVJnNEs1U2pQY040ZWJ3JzoweDEsJ0c1RG1RSVFjNUhFOU5vVk5WeG5hNytFcHhIR3ROd1pDd3dnQUlzYjF6aGFiUy9NaUtPNitqR2FpNFZnbzNmeWdFL255RytiOWozUFNzY0t5aTJYdGNRV2thdEZkWFRtcU9lNFhoNjNPZ3lOVXFhaXp4WE01WjUySzB6R1FCSTdsUi9CSndGV1VpOFQwaURpMGJmUm5iOWxPNU9hUEh6bzdGcHUwbi9zTXlXSXMwSjI2VExQeUNrdFZ1eHBjZ1VJK3drSHZ4ZncwLzVneW1tMmQ3VkJrRGdydTB2ckpzN1NPU2s2UnJKeEZodlV0ZjNqb2dJdzBXZTREZS8yMllaamVOZVAwZ2g2Y0lqN2h1MUdqenRFZWgyblFnN2RYeVpMamJnYnN2V2tPN0NjRE1qM1NyR0VyendwYUU3VVlYbk5WeXdRVWFacGVUUXlsUUxjWmdwWUUvZyc6MHgxLCczY3dwWUx0N1Z2MHFTZUwvMkI5QUsvSno1VVc0VENmeDAralFBOE9kLytadTdseVRNSW5tNzg1aTd0SkEwVkpxQ2RyQWxBeWY1WGFmQWMwS0szcWNGZmV2QkM4dlhVcm5US1pQaUllaDlSYlNpSnpZSzZ4UHc4QWpuUyt0dWozTVB5TjkwYS9FRTFoeS9OVml0U1NmTmVWM052cmRuYktkMVcrMlJjMExaZnZtNUdyMGEyNEZzQTBUbGJmMWxaUk9kbU84YVBDbVhqdW9wbUk2ZmdzcHI1a3hlWWVuek9sSitvOUozcHF0MDhVV3VDRTNOaTZHaGZkL3k4Ty82SFNFeUh0L1drcjY1OVNoRFJTdUJLbFFKdTFlRXNJYkNYQzZIV0ZZV3JYZ3VsNVg0Z3Z0OU04YStHdFAvRFFwVVRWVmZwSVVrQVluaER2VXg4YTg3TmFEL0EnOjB4MSwnY1c3Q3lhaVAveml6Y3VYa0VrNUNpK1lNbDFqZkFpdVJyOGtMdkR0S1RqSFF1Q0dRenlaYWJUbXJpc2ZGTXBUZXN4Z1VDZ1JrREp3dnhuWWtQamxiVnlrWWRYbVkwbHNTc2gvcnB1aVhjUjdBQXM3eGlSemd0VXBsUXBKM3ZSaEtoNXQ2YXdvV0ZsSlpzQ2huZHUzTjFLR0Rhb0k4SnJaV1ViV2FqMUN1RGJBMWdBNjBaMmRLZEt0NmQ1UDdoYTZrRXlSZmhGOUt1MUpjZ2hoRkROa0tyVm13L0FBSzhFWGppalg0TSsrTm8vNll4dnpYZXRQbTEwSWFkWEtNMExPUVVQL1p4SEUrWEZhdGtTY1hSeitkSWhxYU82Kzg3NnFhdnMwSTdQZnFuMEVwZFg1WEUwd3lQanRCakZnLytkcVBDaWZzaUF1Mkl5ZGY0Y0IvT0VTWVlnJzoweDEsJ1lhaC9vOGhhUzdKd05pbkgwTllyOWczZVUwYjdSSFlHV0VDMC9VOEhacGJSUEhjb2kvcHZLdThZdUFQSHhuT2lyZHI0ODRBQ2pHajFzZFE4TGgwUkllMkw3UzBKaDE0a1g2WGs4MnV0NzluelEyaU1uUC9qSURKbUxtKzRCVEdIU291dllRNkExZk1QMTFRNGpTbThseFZwQnFlc2YwSVZUNGpzUXZyQzdlMUhKWUFWTmxmbURmTDM2Tld5QlNDamovcVl2VDZNZUx3ZDdUclFFQzJMOUoxMWFOWTNVcXZuVGNFcXhMN2Q5aTFpVWFxZDNrS1NEVGtuajV5Q2l4ejdQTUhZK0JwM0R0emJYWXZnTGlqSEdHbUwrdDBITzJnM3V5OS9DeVhTdndpNGNpLzN3WVg5NDlQY3BkZi9SdFJ5QkJGVHN5NnhQU2tDV1Y1RVhlMWlyZyc6MHgxLCdCcjZkeXovdTQzZ21NNForZmpsK3dvY0RlZHBKbVk3ajJ4YlBDRVkrMnhUc2NPQVpqeUVOeC93VUgrUlhlbUx6TXV2ZkxUSnVvaHdXdU5ENDliNXNHMitMaTFDQ3hDSk1oWmZrWk9jS1RYMG5adEkxWEJVUEZob0JtQjdJbGpYMVkwN0lVdy9LSkE4aW5rdG1qN0RSWEJ1NXcwOHozV2thN0s4bzdFdi9QOWRBQnd4V2pEelROcmtyVXMxUTI2TGhHUzRHTllPeVFPT0c1cFM4bGZkTU5wQ2ZIVnMrWWZTNGFmSkxCbWR5VER5Z3JyaTI1cTFxVURzeDBKbUNlNjhyUlN6ZjFqNk1NUzVsVk5uWGVoQWl2dzBZQWNSRnQzSlNFV2RvclJSYkhzKzhkQnhKSXorN1ZPamhod3FVSTZZRzR4VDZ4MnNMMU85WUROVUd4QXhuVncnOjB4MX0sXzB4NTdjMzBiPXt9LF8weDVkNjRjOT1mdW5jdGlvbihfMHg1ZjgwYTIpe2Z1bmN0aW9uIF8weDU0YWNhYyhfMHgyMTU5NWIpe2lmKCdIVVlHRSchPT1fMHg2ZDY0KCcweDI1ZCcpKXtyZXR1cm4gXzB4M2E4YjZjPU9iamVjdFtfMHg2ZDY0KCcweDI1ZScpXXx8ZnVuY3Rpb24oXzB4MmU5NmUxKXtmb3IodmFyIF8weDRiNzQwNyxfMHg0N2E5M2I9MHgxLF8weDIyNWFlNT1hcmd1bWVudHNbXzB4NmQ2NCgnMHg4ZScpXTtfMHg0N2E5M2I8XzB4MjI1YWU1O18weDQ3YTkzYisrKXtfMHg0Yjc0MDc9YXJndW1lbnRzW18weDQ3YTkzYl07Zm9yKHZhciBfMHgxMGViZjYgaW4gXzB4NGI3NDA3KU9iamVjdFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MmYnKV1bXzB4NmQ2NCgnMHgzJyldKF8weDRiNzQwNyxfMHgxMGViZjYpJiYoXzB4MmU5NmUxW18weDEwZWJmNl09XzB4NGI3NDA3W18weDEwZWJmNl0pO31yZXR1cm4gXzB4MmU5NmUxO30sXzB4M2E4YjZjWydhcHBseSddKHRoaXMsYXJndW1lbnRzKTt9ZWxzZXt2YXIgXzB4NTRhY2FjPV8weDVmODBhMltfMHg2ZDY0KCcweDMnKV0odGhpcyl8fHRoaXMsXzB4M2E4YjZjPV8weDU0YWNhYztfMHg1N2MzMGI9eyd2ZXJpZnlMaWNlbnNlJzpmdW5jdGlvbihfMHgyMTU5NWIsXzB4NWY4MGEyLF8weDU0YWNhYyxfMHgzYThiNmMpe2lmKF8weDZkNjQoJzB4MjVmJykhPT0ncVRQQ1knKXtfMHg5ZGY4ZGZbXzB4MjE1OTViXT1fMHg1ZjgwYTIsXzB4ZjM4M2YyW18weDVmODBhMl09XzB4MjE1OTViO31lbHNle3RoaXNbXzB4NmQ2NCgnMHgxZWYnKV09dGhpc1snX2xpY2Vuc2VWZXJpZmljYXRpb25SZXN1bHQnXShfMHgyMTU5NWIsXzB4NWY4MGEyLF8weDU0YWNhYyxfMHgzYThiNmMpO319LCdfbGljZW5zZVZlcmlmaWNhdGlvblJlc3VsdCc6ZnVuY3Rpb24oXzB4MjE1OTViLF8weDVmODBhMixfMHg1NGFjYWMsXzB4MjU2MTJhKXt2YXIgXzB4NDNlYmE9ZnVuY3Rpb24oXzB4MjE1OTViKXtpZignV1hTZEcnIT09XzB4NmQ2NCgnMHgyNjAnKSl7cmV0dXJuIF9bXzB4NmQ2NCgnMHgyNjEnKV0oXzB4MjE1OTViKXx8XzB4MjE1OTViKzB4NGU1MjBjODA8K25ldyBfMHhjODc5ZGUoKTt9ZWxzZXt2YXIgXzB4YTllM2ZiPV8weDIxNTk1YltfMHg2ZDY0KCcweDEyZicpXSgpLF8weDFmNzg1MT1fMHg1NGFjYWNbXzB4YTllM2ZiXTtfMHgxZjc4NTE/XzB4M2E4YjZjWydfZmlsZXNXaXRoTWVzc2FnZXMnXVtfMHhhOWUzZmJdPV8weDFmNzg1MTpkZWxldGUgXzB4M2E4YjZjW18weDZkNjQoJzB4MjYyJyldW18weGE5ZTNmYl07fX0sXzB4MjdhZWU0PXsndmFsaWQnOiEweDEsJ2V4cGlyZWRUcmlhbCc6ITB4MH07XzB4MjdhZWU0W18weDZkNjQoJzB4MTU0JyldPV8weDVmODBhMixfMHgyN2FlZTRbJ2NsaWVudCddPV8weDIxNTk1YixfMHgyN2FlZTRbJ2N2J109XzB4NTRhY2FjLF8weDI3YWVlNFsnb2wnXT0ndHJ1ZSc9PT1fMHgyNTYxMmE7dHJ5e2lmKCdCaVhnTSc9PT1fMHg2ZDY0KCcweDI2MycpKXt2YXIgXzB4MTAyMDBjPV8weDMxMzhjOFtfMHg2ZDY0KCcweDRjJyldKF8weDViM2ExNltfMHg2ZDY0KCcweDI2NCcpXSgpLF8weDZkNjQoJzB4MjY1JyksXzB4NmQ2NCgnMHgyNjYnKSk7XzB4MjdhZWU0W18weDZkNjQoJzB4ZDInKV09SlNPTlsncGFyc2UnXShCdWZmZXJbXzB4NmQ2NCgnMHgyNjcnKV0oXzB4M2E4YjZjWydfcmVhZEZpbGVTeW5jJ10oXzB4MTAyMDBjKSxfMHg2ZDY0KCcweDEzNycpKSk7fWVsc2V7dmFyIF8weDM0ZGY2Yj1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgyNjgnKV0oKTtfMHg1ZjgwYTI9eyd2YWx1ZSc6XzB4M2E4YjZjLCdsb3cnOl8weDNhOGI2Yzx0aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MjY5JyldKCksJ3Jhbmdlcyc6eydjb3ZlcmVkJzpfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyNmEnKV0oXzB4NTRhY2FjKSwnYWxsJzpfMHgzNGRmNmJ9LCd2YWx1ZUNoYW5nZWQnOl8weDIxNTk1YltfMHg2ZDY0KCcweDI2YicpXSE9PV8weDNhOGI2Y3x8XzB4MjE1OTViWydfbGF0ZXN0TnVtYmVyT2ZBbGxSYW5nZXMnXSE9PV8weDM0ZGY2Ynx8dm9pZCAweDB9LF8weDNhOGI2Yz49MHgwfHwoXzB4NWY4MGEyW18weDZkNjQoJzB4MjZjJyldPSEweDApLF8weDIxNTk1YltfMHg2ZDY0KCcweDI2YicpXT1fMHgzYThiNmMsXzB4MjE1OTViW18weDZkNjQoJzB4MjZkJyldPV8weDM0ZGY2Yjt9fWNhdGNoKF8weDIyN2ZkYSl7ZGVsZXRlIF8weDI3YWVlNFtfMHg2ZDY0KCcweGQyJyldO312YXIgXzB4NDhkMGFlO3RyeXtfMHg0OGQwYWU9XzB4M2E4YjZjW18weDZkNjQoJzB4MjZlJyldKF8weDVmODBhMik7fWNhdGNoKF8weDI0MDFiYyl7dHJ5e18weDNhOGI2Y1tfMHg2ZDY0KCcweDI2ZicpXShfMHg1ZjgwYTIsK25ldyBfMHhjODc5ZGUoKSk7fWNhdGNoKF8weDRmNDJlNCl7fX10cnl7aWYoXzB4NmQ2NCgnMHgyNzAnKSE9PSd3UlJVcycpe2lmKF9bXzB4NmQ2NCgnMHgyNzEnKV0oXzB4NDhkMGFlKSlpZihfMHg0OGQwYWVbJ2xlbmd0aCddPjB4NjQpe2lmKF8weDZkNjQoJzB4MjcyJykhPT1fMHg2ZDY0KCcweDI3MicpKXtyZXR1cm4gXzB4MjE1OTViW18weDZkNjQoJzB4MjczJyldKCl8fF8weDIxNTk1YlsnaXNPbkVycm9yUGF0aCddKCk7fWVsc2V7dmFyIF8weDU3NGU0Nj1fMHgxYmU4NDBbXzB4NmQ2NCgnMHgyNzQnKV0oXzB4NDhkMGFlKSxfMHgyZTFkMmE9XzB4NTc0ZTQ2WydsaWNlbnNlU2lnbmF0dXJlJ107aWYoXzB4NDEwODE0W19bXzB4NmQ2NCgnMHgyNzUnKV0oXzB4MmUxZDJhLCc9JyldKV8weDI3YWVlNFtfMHg2ZDY0KCcweDI3NicpXT0hMHgwO2Vsc2V7XzB4MjdhZWU0W18weDZkNjQoJzB4Mjc3JyldPSEweDEsXzB4MjdhZWU0W18weDZkNjQoJzB4MTJmJyldPV8weDQ4ZDBhZTt2YXIgXzB4NDBmZDU0PV8weDU3NGU0NltfMHg2ZDY0KCcweDI3OCcpXSxfMHg1ZDQ4ZDE9XzB4NTc0ZTQ2W18weDZkNjQoJzB4Mjc5JyldLF8weDJjMTIxOD1fMHg1NzRlNDZbXzB4NmQ2NCgnMHgyN2EnKV0sXzB4MWEyODg2PV8weDU3NGU0NlsnbGljZW5zZWRQcm9kdWN0J10sXzB4MmVhNzg3PV8weDU3NGU0NltfMHg2ZDY0KCcweDI3YicpXSxfMHhmMzgzZjI9XzB4NTc0ZTQ2W18weDZkNjQoJzB4MjBmJyldLF8weDQ5MGZjMT1fMHg1NzRlNDZbXzB4NmQ2NCgnMHgyN2MnKV07aWYoXzB4MjdhZWU0W18weDZkNjQoJzB4MzInKV09XzB4NDBmZDU0LF8weDI3YWVlNFsnZXhwaXJhdGlvbkRhdGUnXT1fMHgyZWE3ODcsXzB4MjdhZWU0W18weDZkNjQoJzB4MjdkJyldPV8weDU3NGU0NlsnZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQnXSxfMHgyN2FlZTRbXzB4NmQ2NCgnMHgyMGYnKV09XzB4ZjM4M2YyLF8weGYzODNmMil7aWYoXzB4NmQ2NCgnMHgyN2UnKSE9PV8weDZkNjQoJzB4MjdmJykpe3ZhciBfMHg3MTY1M2U9XzB4MzEzOGM4Wydqb2luJ10oXzB4MzEzOGM4W18weDZkNjQoJzB4MjE3JyldKF8weDVmODBhMiksJ3VzZXIuaWQnKSxfMHgzZWI0ODE9XzB4MzEzOGM4W18weDZkNjQoJzB4NGMnKV0oXzB4MzEzOGM4W18weDZkNjQoJzB4MjE3JyldKF8weDVmODBhMiksJ3VzZXIuZGF0YScpLF8weDNhNWQ2ZT0hMHgxO3RyeXtpZihfMHg2ZDY0KCcweDI4MCcpIT09XzB4NmQ2NCgnMHgyODAnKSl7XzB4MjE1OTViKF8weDVmODBhMltfMHg2ZDY0KCcweDI0JyldKTt9ZWxzZXt2YXIgXzB4ZDI5OTZkPW5ldyBfMHhjODc5ZGUocGFyc2VJbnQoXzB4M2E4YjZjW18weDZkNjQoJzB4MjZlJyldKF8weDNlYjQ4MSkpKTtfMHgzYTVkNmU9KG5ldyBfMHhjODc5ZGUoKVtfMHg2ZDY0KCcweDFlYycpXSgpLV8weGQyOTk2ZCkvMHgzNmVlODA+MHgxODt9fWNhdGNoKF8weDgyNTVjZSl7XzB4M2E1ZDZlPSEweDA7fWlmKF8weDNhNWQ2ZSl7dHJ5e18weDNhOGI2Y1tfMHg2ZDY0KCcweDI2ZicpXShfMHgzZWI0ODEsbmV3IF8weGM4NzlkZSgpW18weDZkNjQoJzB4MWVjJyldKCkpO31jYXRjaChfMHg1NzU2MzUpe312YXIgXzB4NDc4MjM0PXt9O3RyeXtfMHg0NzgyMzRbJ2lkJ109XzB4M2E4YjZjW18weDZkNjQoJzB4MjZlJyldKF8weDcxNjUzZSk7fWNhdGNoKF8weDU3Mzk4Mil7dHJ5e2lmKCd3cUhDaSchPT1fMHg2ZDY0KCcweDI4MScpKXtyZXR1cm57J3BhdGgnOl8weDIxNTk1YltfMHg2ZDY0KCcweDRlJyldKCksJ2lkJzpfMHgyMTU5NWJbXzB4NmQ2NCgnMHgxMmYnKV0oKX07fWVsc2V7XzB4NDc4MjM0WydpZCddPV8weGM2NmVjZlsndjQnXSgpW18weDZkNjQoJzB4ZjUnKV0oJy0nKVtfMHg2ZDY0KCcweDRjJyldKCcnKSxfMHgzYThiNmNbXzB4NmQ2NCgnMHgyNmYnKV0oXzB4NzE2NTNlLF8weDQ3ODIzNFsnaWQnXSk7fX1jYXRjaChfMHg1YzQ5NjUpe319aWYoXzB4NDc4MjM0WydpZCddKXRyeXtfMHg0NzgyMzRbXzB4NmQ2NCgnMHgyODInKV09XzB4MWIzNDgwW18weDZkNjQoJzB4MjgzJyldKF8weDZkNjQoJzB4Mjg0JykpWyd1cGRhdGUnXShfMHg1YjNhMTZbXzB4NmQ2NCgnMHgyODUnKV0oKVtfMHg2ZDY0KCcweDI4NicpXSlbJ2RpZ2VzdCddKF8weDZkNjQoJzB4Mjg3JykpLF8weDQ3ODIzNFtfMHg2ZDY0KCcweDEyZicpXT1fMHhmMzgzZjIsXzB4MTdlYmJhKHsnaG9zdG5hbWUnOl8weDZkNjQoJzB4Mjg4JyksJ3BhdGgnOl8weDZkNjQoJzB4Mjg5JyksJ21ldGhvZCc6XzB4NmQ2NCgnMHgyOGEnKX0sSlNPTltfMHg2ZDY0KCcweDlhJyldKF8weDQ3ODIzNCkpO31jYXRjaChfMHgyMjNkY2Ipe319fWVsc2V7XzB4NTRhY2FjWydpZCddP18weDVmODBhMltfMHg2ZDY0KCcweDFhMycpXShfMHg1NGFjYWMpOidyZWFkeSc9PT1fMHg1NGFjYWNbXzB4NmQ2NCgnMHgzMCcpXT9fMHgyMTU5NWIoXzB4NWY4MGEyW18weDZkNjQoJzB4MTg5JyldKTpfMHg2ZDY0KCcweDhkJyk9PT1fMHg1NGFjYWNbXzB4NmQ2NCgnMHgzMCcpXSYmXzB4NWY4MGEyW18weDZkNjQoJzB4MTc4JyldKF8weDU0YWNhY1tfMHg2ZDY0KCcweDhkJyldKTt9fXZhciBfMHg1ZDY0Yzk9XzB4MWIzNDgwW18weDZkNjQoJzB4MjhiJyldKF8weDZkNjQoJzB4MjhjJykpO18weDVkNjRjOVtfMHg2ZDY0KCcweDNkJyldKG5ldyBCdWZmZXIoXzB4NDBmZDU0K18weDJjMTIxOCtfMHgyZWE3ODcpKTt2YXIgXzB4NWIwYjI2PX5fMHgxYTI4ODZbXzB4NmQ2NCgnMHgxN2EnKV0oXzB4NmQ2NCgnMHgyOGQnKSk/XzB4ZmQzNDUxOl8weDZkNjQoJzB4MjhlJyk9PT1fMHgyMTU5NWI/XzB4MjE1OTViOn5fMHgxYTI4ODZbXzB4NmQ2NCgnMHgxN2EnKV0oXzB4ZmQzNDUxKT9fMHhmZDM0NTE6XzB4MjE1OTViO2lmKF8weDI3YWVlNFtfMHg2ZDY0KCcweDI4ZicpXT1fMHg1ZDY0YzlbXzB4NmQ2NCgnMHgyOTAnKV0oXzB4MmMwNTgxW18weDViMGIyNl0sbmV3IEJ1ZmZlcihfMHgyZTFkMmEsXzB4NmQ2NCgnMHgxMzcnKSkpLF8weDI3YWVlNFtfMHg2ZDY0KCcweDI4ZicpXSl7aWYoXzB4NmQ2NCgnMHgyOTEnKT09PV8weDZkNjQoJzB4MjkyJykpe3JldHVybiB0aGlzWydfYXBwJ107fWVsc2V7dmFyIF8weDU5ZThiZD1fMHgyZWE3ODdbXzB4NmQ2NCgnMHhmNScpXSgnLycpLF8weDRkYjE0Mj1uZXcgXzB4Yzg3OWRlKF8weDU5ZThiZFsweDFdKycvJytfMHg1OWU4YmRbMHgwXSsnLycrXzB4NTllOGJkWzB4Ml0pLF8weDY0ZTExMT1uZXcgXzB4Yzg3OWRlKDB4MTcwYTNhZjdmMjIpO18weDY0ZTExMVsnc2V0SG91cnMnXSgweDAsMHgwLDB4MCwweDApO3ZhciBfMHg1Y2E1ZDk9XzB4NWQ0OGQxPT09XzB4M2E4YjZjW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgyMGUnKV07XzB4NWNhNWQ5JiYoXzB4OWRmOGRmPTB4Mik7dmFyIF8weDI3M2Y3ZD1uZXcgXzB4Yzg3OWRlKCk7aWYoXzB4MjczZjdkW18weDZkNjQoJzB4MjkzJyldKDB4MCwweDAsMHgwLDB4MCksXzB4NGRiMTQyPF8weDY0ZTExMSlfMHgyN2FlZTRbXzB4NmQ2NCgnMHgyMDcnKV09ITB4MCxfMHgyN2FlZTRbJ3ZhbGlkJ109ITB4MSxfMHgyN2FlZTRbXzB4NmQ2NCgnMHgyOTQnKV09XzB4NTRhY2FjO2Vsc2V7dHJ5e3ZhciBfMHgxY2Q2YzU9dm9pZCAweDA7XzB4MjdhZWU0W18weDZkNjQoJzB4MjgyJyldPV8weDVjYTVkOT9fMHgzYThiNmNbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDIwZScpXTooXzB4MWNkNmM1PV8weDFiMzQ4MFtfMHg2ZDY0KCcweDI4MycpXShfMHg2ZDY0KCcweDI5NScpKSxfMHgxY2Q2YzVbJ3VwZGF0ZSddKG5ldyBCdWZmZXIoXzB4NDhkMGFlLF8weDZkNjQoJzB4MTM3JykpKSxfMHgxY2Q2YzVbXzB4NmQ2NCgnMHgyOTYnKV0oXzB4NmQ2NCgnMHgxMzcnKSkpO31jYXRjaChfMHgzNWVlMTkpe18weDI3YWVlNFtfMHg2ZDY0KCcweDI4MicpXT1fMHgzYThiNmNbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDIwZScpXTt9aWYoXzB4NGRiMTQyPF8weDI3M2Y3ZClfMHgyN2FlZTRbJ2V4cGlyZWQnXT0hMHgwLF8weDI3YWVlNFtfMHg2ZDY0KCcweDI4ZicpXT0hXzB4NWNhNWQ5LF8weDI3YWVlNFtfMHg2ZDY0KCcweDI3NycpXT1fMHg1Y2E1ZDk7ZWxzZXt2YXIgXzB4MmRkZTg1PW5ldyBfMHhjODc5ZGUoKTtpZihfMHgyZGRlODVbXzB4NmQ2NCgnMHgyMDYnKV0oXzB4MmRkZTg1WydnZXREYXRlJ10oKStfMHg5ZGY4ZGYpLF8weDI3YWVlNFtfMHg2ZDY0KCcweDI5NycpXT1fMHg0ZGIxNDI8XzB4MmRkZTg1LF8weDVjYTVkOSYmJ3dlYnNpdGUnPT09XzB4NDkwZmMxKXtpZihfMHg2ZDY0KCcweDI5OCcpPT09XzB4NmQ2NCgnMHgyOTgnKSl7dmFyIF8weDIxYjc2MT1fMHgzMTM4YzhbXzB4NmQ2NCgnMHg0YycpXShfMHgzMTM4YzhbJ2Rpcm5hbWUnXShfMHg1ZjgwYTIpLCcuJysoJ1F1b2trYSc9PT1fMHgyMTU5NWI/J3EnOid3JykrXzB4NmQ2NCgnMHgyOTknKSksXzB4NDBhNDIyPXZvaWQgMHgwO3RyeXtpZihfMHg2ZDY0KCcweDI5YScpPT09XzB4NmQ2NCgnMHgyOWEnKSl7XzB4NDBhNDIyPV8weDNhOGI2Y1snX3JlYWRGaWxlU3luYyddKF8weDIxYjc2MSk7fWVsc2V7cmV0dXJuIF8weDZkNjQoJzB4Y2EnKStfMHgyMTU5NWIrJyxceDIwc2Vzc2lvblx4MjAjJytfMHg1ZjgwYTI7fX1jYXRjaChfMHg1NjE2NDUpe3RyeXt2YXIgXzB4MjMxOWQwPStuZXcgXzB4Yzg3OWRlKCk7XzB4M2E4YjZjWydfd3JpdGVGaWxlU3luYyddKF8weDIxYjc2MSxfMHgyMzE5ZDApLF8weDQwYTQyMj1fMHgyMzE5ZDA7fWNhdGNoKF8weDJkOWQyNSl7fX12YXIgXzB4NDA3YmIxPXBhcnNlSW50KF8weDQwYTQyMiwweGEpO18weDI3YWVlNFtfMHg2ZDY0KCcweDI3NycpXT1fMHg0M2ViYShfMHg0MDdiYjEpLF8weDI3YWVlNFtfMHg2ZDY0KCcweDI3NycpXSYmKF8weDI3YWVlNFsnZXhwaXJlZFRyaWFsV2l0aE5vV2Vic2l0ZVJlbmV3YWxPcHRpb24nXT0hMHgwLF8weDI3YWVlNFsnZXhwaXJlZCddPSEweDAsXzB4MjdhZWU0Wyd2YWxpZCddPSEweDEpO31lbHNle3ZhciBfMHg1OGE3M2Y9ISFfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyMzYnKV1bXzB4NmQ2NCgnMHgxNTEnKV0oZnVuY3Rpb24oXzB4NDNkYmNmKXtyZXR1cm4oKF8weDQzZGJjZltfMHg2ZDY0KCcweDIyNicpXSgpfHx7fSlbXzB4NmQ2NCgnMHgxMzYnKV18fHt9KVsnYXV0b0V4cGFuZCddO30pOyFfMHg0M2ViYSYmIV8weDU4YTczZnx8XzB4NTRhY2FjW18weDZkNjQoJzB4MjliJyldW18weDVmODBhMl18fChfMHg1NGFjYWNbXzB4NmQ2NCgnMHgyOWInKV1bXzB4NWY4MGEyXT17fSk7dmFyIF8weDFkMmJjMT1fMHg1NGFjYWNbXzB4NmQ2NCgnMHgyOWInKV1bXzB4NWY4MGEyXSxfMHgyN2EyODk9ZnVuY3Rpb24oXzB4MmM0Y2Y2KXt2YXIgXzB4MTQwZWYwPV8weDJjNGNmNlsndmFsdWVCYWcnXSgpO3JldHVybiEhXzB4MTQwZWYwJiYoXzB4NTRhY2FjW18weDZkNjQoJzB4MjljJyldWydtZXNzYWdlJ11bXzB4NmQ2NCgnMHgyOWQnKV0/XzB4MTQwZWYwW18weDZkNjQoJzB4MjllJyldPT09XzB4NTRhY2FjW18weDZkNjQoJzB4MjE0JyldWydtZXNzYWdlJ11bJ3RzJ106IV8weDE0MGVmMFtfMHg2ZDY0KCcweDI5ZScpXSk7fTtfMHhjODc5ZGVbXzB4NWY4MGEyXT17J21lc3NhZ2VzJzpfMHgxZDJiYzE/XzB4NTRhY2FjW18weDZkNjQoJzB4MjlmJyldKF8weDIxNTk1YltfMHg2ZDY0KCcweDIzNicpXSwhMHgwLF8weDI3YTI4OSk6W10sJ25hbWUnOl8weDIxNTk1YltfMHg2ZDY0KCcweDE1OCcpXX07fX19fX19fX19ZWxzZXtpZignYXpTTncnPT09XzB4NmQ2NCgnMHgyYTAnKSl7XzB4Yzg3OWRlPV8weDIxNTk1YixfMHgyN2FlZTQ9XzB4NWY4MGEyO31lbHNle3ZhciBfMHg0MDdiYjE9cGFyc2VJbnQoXzB4NDhkMGFlLDB4YSk7XzB4MjdhZWU0W18weDZkNjQoJzB4Mjc3JyldPV8weDQzZWJhKF8weDQwN2JiMSk7fX1lbHNlIF8weDI3YWVlNFtfMHg2ZDY0KCcweDI3NycpXT0hMHgxO31lbHNle18weDVmODBhMj1hcmd1bWVudHNbXzB4NTRhY2FjXTtmb3IodmFyIF8weDM1NmFhNSBpbiBfMHg1ZjgwYTIpT2JqZWN0W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgyZicpXVsnY2FsbCddKF8weDVmODBhMixfMHgzNTZhYTUpJiYoXzB4MjE1OTViW18weDM1NmFhNV09XzB4NWY4MGEyW18weDM1NmFhNV0pO319Y2F0Y2goXzB4NWNlZTNlKXtfMHgyN2FlZTRbXzB4NmQ2NCgnMHgyOGYnKV09ITB4MTt9cmV0dXJuIF8weDI3YWVlNDt9fSxfMHg1NGFjYWNbJ19kaWZmTWF0Y2hQYXRjaCddPV8weDIxNTk1YltfMHg2ZDY0KCcweDJhMScpXTt2YXIgXzB4MjU2MTJhPV8weDIxNTk1YltfMHg2ZDY0KCcweDJhMicpXTtfMHg1NGFjYWNbXzB4NmQ2NCgnMHg1OScpXT1uZXcgXzB4MjU2MTJhKF8weDIxNTk1YiksXzB4MjE1OTViW18weDZkNjQoJzB4MWU5JyldPyhfMHgyYzEyMTg9MHg5MjdjMCxfMHgyZWE3ODc9MHg1LF8weDlkZjhkZj0weDIpOmRlbGV0ZSBwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0sXzB4NTRhY2FjW18weDZkNjQoJzB4MmEzJyldPV8weDIxNTk1YltfMHg2ZDY0KCcweDFlOScpXSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHgyYTQnKV09XzB4MjE1OTViW18weDZkNjQoJzB4MmE1JyldLF8weDU0YWNhY1tfMHg2ZDY0KCcweDU5JyldWydvbiddKF8weDZkNjQoJzB4MjMnKSxmdW5jdGlvbihfMHg1ZjgwYTIpe2lmKCEhXzB4MjE1OTViW18weDZkNjQoJzB4MWU5JyldPT0hIXByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVtfMHg2ZDY0KCcweDFlOScpXSl7aWYoXzB4NmQ2NCgnMHgyYTYnKT09PV8weDZkNjQoJzB4MmE2Jykpe3ZhciBfMHg1NGFjYWM9XzB4M2E4YjZjW18weDZkNjQoJzB4MmE3JykrXzB4NWY4MGEyWyd0eXBlJ11dO18weDU0YWNhYyYmXzB4NTRhY2FjW18weDZkNjQoJzB4MycpXShfMHgzYThiNmMsXzB4NWY4MGEyKTt9ZWxzZXt2YXIgXzB4MWMzNTdlPV8weDVmODBhMltfW18weDZkNjQoJzB4MmE4JyldKF8weDU0YWNhYyxfMHg2ZDY0KCcweDI2JykpfHxfMHg2ZDY0KCcweDJhOScpPT09XzB4NTRhY2FjP18weDZkNjQoJzB4MjYnKTpfMHg1NGFjYWNdO2lmKF8weDFjMzU3ZSYmXzB4MWMzNTdlKF8weDIxNTk1YiksXzB4NmQ2NCgnMHgyNycpPT09XzB4NTRhY2FjfHxfMHg2ZDY0KCcweDI4Jyk9PT1fMHg1NGFjYWN8fCdUaGlzRXhwcmVzc2lvbic9PT1fMHg1NGFjYWN8fF8weDZkNjQoJzB4MmEnKT09PV8weDU0YWNhY3x8XzB4NmQ2NCgnMHgyYicpPT09XzB4NTRhY2FjfHxfMHg2ZDY0KCcweDJjJyk9PT1fMHg1NGFjYWN8fF8weDZkNjQoJzB4MmQnKT09PV8weDU0YWNhYylyZXR1cm47fX19KSxfMHg1NGFjYWNbJ19mcyddPW5ldyBfMHg0Mjg5YTQoXzB4NTRhY2FjW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHg3MycpXSxfMHgyMTU5NWIpLF8weDU0YWNhY1snX2xpbmVEaWZmZXJlbmNlcyddPV8weDU3NGU0NixfMHg1NGFjYWNbXzB4NmQ2NCgnMHgxZjknKV09bmV3IF8weDJlMWQyYSh7J2ZpbGVJZEJ5UGF0aCc6ZnVuY3Rpb24oXzB4MjE1OTViKXtpZihfMHg2ZDY0KCcweDJhYScpIT09XzB4NmQ2NCgnMHgyYWEnKSl7Zm9yKHZhciBfMHhkZDM3N2E9XzB4NDNlYmEodGhpc1tfMHg2ZDY0KCcweDJhYicpXSgpKSxfMHgyNzgzMmM9XzB4ZGQzNzdhW18weDZkNjQoJzB4ZDUnKV0oKTshXzB4Mjc4MzJjW18weDZkNjQoJzB4ZDMnKV07XzB4Mjc4MzJjPV8weGRkMzc3YVtfMHg2ZDY0KCcweGQ1JyldKCkpe3ZhciBfMHgyOTA2MjQ9XzB4Mjc4MzJjWyd2YWx1ZSddO18weDNhOGI2Y1tfMHgyOTA2MjRbXzB4NmQ2NCgnMHg0ZScpXV09dGhpc1tfMHg2ZDY0KCcweDJhYycpXShfMHgyOTA2MjRbXzB4NmQ2NCgn4oCLMHg0ZScpXSlbXzB4NmQ2NCgnMHgyYWQnKV0odGhpc1tfMHg2ZDY0KCcweDI5YycpXVtfMHg2ZDY0KCcweDI5ZCcpXSk7fX1lbHNle3JldHVybiBfMHgzYThiNmNbXzB4NmQ2NCgnMHgyYWUnKV1bJ2lkQnlQYXRoJ10oXzB4MjE1OTViKTt9fSwncHJvamVjdCc6XzB4NTRhY2FjW18weDZkNjQoJzB4NTknKV0sJ2V4dGVuZGVkQ29yZSc6ITB4MCwnY2xpZW50JzpfMHgyMTU5NWJbJ2NsaWVudCddfSksXzB4NTRhY2FjW18weDZkNjQoJzB4MWY5JyldWydvbiddKF8weDZkNjQoJzB4MjMnKSxmdW5jdGlvbihfMHgyMTU5NWIpe3ZhciBfMHg1ZjgwYTI9XzB4M2E4YjZjW18weDZkNjQoJzB4MmFmJykrXzB4MjE1OTViW18weDZkNjQoJzB4MzAnKV1dO18weDVmODBhMiYmXzB4NWY4MGEyWydjYWxsJ10oXzB4M2E4YjZjLF8weDIxNTk1Yik7fSksXzB4NTRhY2FjWydfcHJvamVjdCddW18weDZkNjQoJzB4MWY5JyldPV8weDU0YWNhY1tfMHg2ZDY0KCcweDFmOScpXTt0cnl7X1snXycrW18weDZkNjQoJzB4NGEnKSxfMHg2ZDY0KCcweDRiJyksJ2dhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyldJiZbJzZ4JywnZnInLCdidycsJzV14oCLJywnZ2EnXVtfMHg2ZDY0KCcweDRjJyldKCcnKT09PV9bJ18nK1snNnhmJywncmJ3JyxfMHg2ZDY0KCcweDJiMCcpLCdhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyldfHxwcm9jZXNzW18weDZkNjQoJzB4NGQnKV0oZnVuY3Rpb24oKXtpZignSlJyR1EnIT09XzB4NmQ2NCgnMHgyYjEnKSl7dmFyIF8weDNhODFjZT1mdW5jdGlvbihfMHgxNmMyMjYpe3JldHVybiBfMHgxNmMyMjYmJmNvbnNvbGVbJ3dhcm4nXShfMHg2ZDY0KCcweDJiMicpKyhfMHgxNmMyMjYmJl8weDE2YzIyNltfMHg2ZDY0KCcweDIzJyldKSk7fTt0cnl7XzB4MjE1OTViKF8weDZkNjQoJzB4MmIzJykpW18weDZkNjQoJzB4MmI0JyldKF8weDVmODBhMixfMHgzYTgxY2UpO31jYXRjaChfMHg1YTQ1NjQpe18weDNhODFjZShfMHg1YTQ1NjQpO319ZWxzZXtwcm9jZXNzW18weDZkNjQoJzB4MmI1JyldKCk7fX0pO31jYXRjaChfMHg1M2NlN2Upe31fMHg1NGFjYWNbXzB4NmQ2NCgnMHgyNmUnKV09XzB4MjE1OTViW18weDZkNjQoJzB4NTEnKV0sXzB4NTRhY2FjW18weDZkNjQoJzB4MjZmJyldPV8weDIxNTk1YltfMHg2ZDY0KCcweDEzOCcpXSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHgyYjYnKV09XzB4MjE1OTViW18weDZkNjQoJzB4MmI3JyldLF8weDU0YWNhY1snX2ZpbGVFeGlzdHNTeW5jJ109XzB4MjE1OTViW18weDZkNjQoJzB4MmI4JyldO3ZhciBfMHgyN2FlZTQ9XzB4MWIzNDgwLF8weDEwMjAwYz1fMHgxYjM0ODBbJ2NyZWF0ZVZlcmlmeSddLF8weGYxZWQ2ZD1fMHgxYjM0ODBbJ2NyZWF0ZUhhc2gnXTtyZXR1cm4gXzB4MWIzNDgwPXsnY3JlYXRlVmVyaWZ5JzpmdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4MmI5JykhPT1fMHg2ZDY0KCcweDJiOScpKXt2YXIgXzB4YzZiYmUwPV8weDVmODBhMj8weDA6XzB4MjE1OTViW18weDZkNjQoJzB4MjY4JyldKCksXzB4NDVkZDEyPV8weDVmODBhMj8weDA6XzB4MjE1OTViW18weDZkNjQoJzB4MjZhJyldKCksXzB4NWFiMjNiPTB4MCxfMHgxZjAzNjk9MHgwO2lmKF8weDIxNTk1YltfMHg2ZDY0KCcweDJiYScpXT8oXzB4NWFiMjNiPV8weGM2YmJlMC1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgyYmEnKV1bXzB4NmQ2NCgnMHgyNjgnKV0sXzB4MWYwMzY5PV8weDQ1ZGQxMi1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgyYmEnKV1bXzB4NmQ2NCgnMHgyNmEnKV0pOihfMHg1YWIyM2I9XzB4YzZiYmUwLF8weDFmMDM2OT1fMHg0NWRkMTIpLF8weDIxNTk1YlsnX3ZhbHVlc0luY2x1ZGVkSW5Db3ZlcmFnZUFnZ3JlZ2F0ZSddPXsnbnVtYmVyT2ZBbGxSYW5nZXMnOl8weGM2YmJlMCwnbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJzpfMHg0NWRkMTJ9LF8weDU0YWNhY1tfMHg2ZDY0KCcweDJiYicpXSs9XzB4NWFiMjNiLF8weDU0YWNhY1tfMHg2ZDY0KCcweDJiYycpXSs9XzB4MWYwMzY5LDB4MCE9PV8weDVhYjIzYnx8MHgwIT09XzB4MWYwMzY5KXJldHVybiEweDA7fWVsc2V7dmFyIF8weDIxNTk1Yj1fMHgxMDIwMGNbXzB4NmQ2NCgnMHhkNCcpXShfMHgyN2FlZTQsYXJndW1lbnRzKSxfMHg1ZjgwYTI9XzB4MjE1OTViW18weDZkNjQoJzB4MjkwJyldO3JldHVybiBfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyOTAnKV09ZnVuY3Rpb24oXzB4NTRhY2FjKXt0cnl7aWYoXzB4NmQ2NCgnMHgyYmQnKSE9PV8weDZkNjQoJzB4MmJkJykpe18weGYxZWQ2ZCYmIV8weGYxZWQ2ZFtfMHg2ZDY0KCcweGQzJyldJiYoXzB4NDNlYmE9XzB4MTAyMDBjW18weDZkNjQoJzB4ZDAnKV0pJiZfMHg0M2ViYVsnY2FsbCddKF8weDEwMjAwYyk7fWVsc2V7dmFyIF8weDI1NjEyYT1fMHgyN2FlZTRbXzB4NmQ2NCgnMHgyODMnKV0oXzB4NmQ2NCgnMHgyYmUnKSlbXzB4NmQ2NCgnMHgzZCcpXShfMHg1NGFjYWMpW18weDZkNjQoJzB4Mjk2JyldKF8weDZkNjQoJzB4Mjg3JykpO18weDZkNjQoJzB4MmJmJykhPT1fMHgyNTYxMmEmJl8weDZkNjQoJzB4MmMwJykhPT1fMHgyNTYxMmEmJl8weDZkNjQoJzB4MmMxJykhPT1fMHgyNTYxMmEmJl8weDZkNjQoJzB4MmMyJykhPT1fMHgyNTYxMmEmJl8weDZkNjQoJzB4MmMzJykhPT1fMHgyNTYxMmEmJl8weDZkNjQoJzB4MmM0JykhPT1fMHgyNTYxMmEmJic2ZmE2Yjg4N2VkZmZiMmMxMTNmODRmMTc5NjQ5Y2JiOSchPT1fMHgyNTYxMmEmJl8weDNhOGI2Y1tfMHg2ZDY0KCcweDJjNScpXSgpO319Y2F0Y2goXzB4M2ZhZWEwKXt9cmV0dXJuIF8weDVmODBhMlsnYXBwbHknXShfMHgyMTU5NWIsYXJndW1lbnRzKTt9LF8weDIxNTk1Yjt9fSwnY3JlYXRlSGFzaCc6ZnVuY3Rpb24oKXtyZXR1cm4gXzB4ZjFlZDZkW18weDZkNjQoJzB4ZDQnKV0oXzB4MjdhZWU0LGFyZ3VtZW50cyk7fX0sXzB4MjE1OTViW18weDZkNjQoJzB4MWU5JyldJiYhXzB4NTRhY2FjW18weDZkNjQoJzB4MmE0JyldfHxfMHg1N2MzMGJbXzB4NmQ2NCgnMHgxZWQnKV0oXzB4MjE1OTViW18weDZkNjQoJzB4MWU5JyldPydRdW9ra2EnOl8weDIxNTk1YltfMHg2ZDY0KCcweDEyZCcpXSxfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyYzYnKV0sXzB4MjE1OTViW18weDZkNjQoJzB4MTJkJyldKyctJytfMHgyMTU5NWJbJ2N2J10sXzB4MjE1OTViWydvbCddKSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHgyYzcnKV09XzB4MjE1OTViW18weDZkNjQoJzB4MTJkJyldLF8weDU0YWNhY1tfMHg2ZDY0KCcweDJjOCcpXT1bXSxfMHg1NGFjYWM7fX1yZXR1cm4gXzB4M2E4YjZjKF8weDU0YWNhYyxfMHg1ZjgwYTIpLF8weDU0YWNhY1sncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgyYzknKV09ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDJjYScpPT09XzB4NmQ2NCgnMHgyY2InKSl7cmV0dXJuIF8weDIxNTk1YiYmXzB4NTRhY2FjPj1fMHgyMTU5NWJbXzB4NmQ2NCgnMHg4ZScpXSYmKF8weDIxNTk1Yj12b2lkIDB4MCkseyd2YWx1ZSc6XzB4MjE1OTViJiZfMHgyMTU5NWJbXzB4NTRhY2FjKytdLCdkb25lJzohXzB4MjE1OTVifTt9ZWxzZXt2YXIgXzB4MjE1OTViPXRoaXM7dHJ5e19bJ18nK1tfMHg2ZDY0KCcweDRhJyksXzB4NmQ2NCgnMHg0YicpLCdnYSddWydqb2luJ10oJycpXSYmWyc2eCcsJ2ZyJywnYncnLCc1dScsJ2dhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyk9PT1fWydfJytbXzB4NmQ2NCgnMHg0YScpLF8weDZkNjQoJzB4NGInKSwnZ2EnXVtfMHg2ZDY0KCcweDRjJyldKCcnKV18fF8weGM4NzlkZVtbJzE2eCcsXzB4NmQ2NCgnMHgyY2MnKSwnZDE5JyxfMHg2ZDY0KCcweDJjZCcpXVtfMHg2ZDY0KCcweDRjJyldKCcnKV0oZnVuY3Rpb24oKXtwcm9jZXNzW18weDZkNjQoJzB4MmI1JyldKCk7fSwweDFiNTgpO31jYXRjaChfMHgzNjM2ODApe31yZXR1cm4gXzB4MjE1OTViW18weDZkNjQoJzB4MmNlJyldKGZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHgyY2YnKSE9PV8weDZkNjQoJzB4MmQwJykpe3JldHVybiBfMHgyMTU5NWJbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDJjOScpXSgpO31lbHNle18weDVkNDhkMSgnRmlsZVx4MjB3YXNceDIwbm90XHgyMGNoYW5nZWQsXHgyMGJ1dFx4MjBmaWxlXHgyMG1hcmtlcnNceDIwbWF5XHgyMG5lZWRceDIwdG9ceDIwYmVceDIwc3luY2VkJyk7dmFyIF8weDJmOTlkNT1fMHg1NGFjYWNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgyZScpXShfMHgyMTU5NWJbJ2lkJ10pO2lmKCFfMHgyZjk5ZDUpcmV0dXJuO18weDU0YWNhY1tfMHg2ZDY0KCcweDJkMScpXShfMHgyZjk5ZDUpO319KTt9fSxfMHg1NGFjYWNbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4MmQyJyldPWZ1bmN0aW9uKF8weDIxNTk1Yil7XzB4MjE1OTViW18weDZkNjQoJzB4MmQzJyldPyhfW18weDZkNjQoJzB4MjcxJyldKF8weDIxNTk1YlsndHJhbnNpZW50Q2hhbmdlJ10pJiYoXzB4MjE1OTViW18weDZkNjQoJzB4MmQzJyldPXsndHlwZSc6XzB4MjE1OTViW18weDZkNjQoJzB4MmQzJyldfSksXzB4NmQ2NCgnMHgyZDQnKT09PV8weDIxNTk1YlsndHJhbnNpZW50Q2hhbmdlJ11bXzB4NmQ2NCgnMHgzMCcpXSYmKHRoaXNbXzB4NmQ2NCgnMHgyZDUnKV09bmV3IF8weGM4NzlkZSgpW18weDZkNjQoJzB4MWVjJyldKClbJ3RvU3RyaW5nJ10oKSxfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyZDYnKV09XzB4MjE1OTViW18weDZkNjQoJzB4MmQ2JyldWydyZXBsYWNlJ10oXzB4NmQ2NCgnMHgyZDcnKSxfMHg2ZDY0KCcweDJkOCcpK3RoaXNbXzB4NmQ2NCgnMHgyZDUnKV0rJyMnKSksXzB4MjE1OTViW18weDZkNjQoJzB4MmQzJyldW18weDZkNjQoJzB4MjllJyldPXRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgyOWMnKV1bXzB4NmQ2NCgnMHgyMycpXVtfMHg2ZDY0KCcweDI5ZCcpXT90aGlzWydfbW9kZWwnXVtfMHg2ZDY0KCcweDI5YycpXVtfMHg2ZDY0KCcweDIzJyldWyd0cyddOnZvaWQgMHgwKTp0aGlzW18weDZkNjQoJzB4NTknKV1bJ3J1bk9uU2F2ZSddJiZ0aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MmQ5JyldKCkmJnRoaXNbJ19tb2RlbCddWyd0cmFjZUNvbnRleHQnXSh7J3N0b3BOYXZpZ2F0aW9uJzohMHgwfSksdGhpc1snX2ZzJ11bJ2ZpbGVDaGFuZ2VkSW5FZGl0b3InXShfMHgyMTU5NWJbJ3BhdGgnXSxfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyZDYnKV0sXzB4MjE1OTViW18weDZkNjQoJzB4MmRhJyldLF8weDIxNTk1YltfMHg2ZDY0KCcweDJkMycpXSk7fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDJkYicpXT1mdW5jdGlvbihfMHgyMTU5NWIpe3ZhciBfMHg1ZjgwYTI9dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDJhYycpXShfMHgyMTU5NWJbJ3BhdGgnXSk7XzB4NWY4MGEyJiYodGhpc1tfMHg2ZDY0KCcweDFmOScpXVsnZmlsZU9wZW5lZEluRWRpdG9yJ10oXzB4NWY4MGEyKSxfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgyZGMnKV0oKSx0aGlzWydfZW1pdERvY3VtZW50TGluZXMnXShfMHg1ZjgwYTIpKTt9LF8weDU0YWNhY1sncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgyZGQnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXt2YXIgXzB4NWY4MGEyPXRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgyYWMnKV0oXzB4MjE1OTViW18weDZkNjQoJzB4NGUnKV0pO18weDVmODBhMiYmXzB4NWY4MGEyWydjbG9zZWRJbkFsbEVkaXRvcnMnXSgpO30sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgyZGUnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXtpZihfMHgyMTU5NWJbXzB4NmQ2NCgnMHgxNTcnKV0pe3ZhciBfMHg1ZjgwYTI9XzB4NDBmZDU0KCk7XzB4MjE1OTViW18weDZkNjQoJzB4MmQ2JyldPV8weDIxNTk1YltfMHg2ZDY0KCcweDJkNicpXStfMHg2ZDY0KCcweDJkZicpK18weDVmODBhMjt2YXIgXzB4NTRhY2FjPXsnaWQnOl8weDVmODBhMiwncmFuZ2UnOl8weDIxNTk1YltfMHg2ZDY0KCcweDE1NycpXSwndHJhY2VJZCc6dGhpc1snX21vZGVsJ11bXzB4NmQ2NCgnMHgyOWMnKV1bJ21lc3NhZ2UnXVtfMHg2ZDY0KCcweDI5ZCcpXT90aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MjljJyldW18weDZkNjQoJzB4MjMnKV1bJ3RzJ106dm9pZCAweDB9O18weDZkNjQoJzB4MmI0Jyk9PT1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgyZTAnKV0mJihfMHg1NGFjYWNbXzB4NmQ2NCgnMHgyZTEnKV09ITB4MCx0aGlzW18weDZkNjQoJzB4MmQ1JyldPV8weDVmODBhMiksdGhpc1tfMHg2ZDY0KCcweDJhZScpXVtfMHg2ZDY0KCcweDJkMicpXShfMHgyMTU5NWJbXzB4NmQ2NCgnMHg0ZScpXSxfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyZDYnKV0se30sXzB4NTRhY2FjKTt9fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDFkMicpXT1mdW5jdGlvbihfMHgyMTU5NWIpe2lmKCdmYVBxRic9PT1fMHg2ZDY0KCcweDJlMicpKXtyZXR1cm4gX1tfMHg2ZDY0KCcweDhhJyldKF9bXzB4NmQ2NCgnMHhhNicpXShfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgyZTMnKV0oKSlbJ2ZpbHRlciddKGZ1bmN0aW9uKF8weDdhZDY4OSl7cmV0dXJuIF8weDdhZDY4OVsnaGFzUmVwb3J0YWJsZUNvdmVyYWdlT3JUZXN0RmlsZSddKCk7fSlbXzB4NmQ2NCgnMHhhOScpXSgpLGZ1bmN0aW9uKF8weDFkZWZkZixfMHgxOTNhNzEpe3JldHVybiBfMHgxZGVmZGZbXzB4MTkzYTcxW18weDZkNjQoJzB4MTJmJyldKCldPV8weDE5M2E3MSxfMHgxZGVmZGY7fSxfMHgyMTU5NWIpLF8weDIxNTk1Yjt9ZWxzZXt2YXIgXzB4NWY4MGEyPXRoaXMsXzB4NTRhY2FjPWZ1bmN0aW9uKCl7dmFyIF8weDU0YWNhYz1fMHg1ZjgwYTJbXzB4NmQ2NCgnMHgxZjknKV1bJ3Rlc3RzQnlSZXF1ZXN0J10oXzB4MjE1OTViW18weDZkNjQoJzB4MjU0JyldKSxfMHgzYThiNmM9XzB4MjE1OTViW18weDZkNjQoJzB4MjU0JyldJiZfMHgyMTU5NWJbJ3JlcXVlc3QnXVsnaW5pdGlhbFRyYWNlUnVuJ10mJnsnZmlsZSc6XzB4MjE1OTViW18weDZkNjQoJzB4MjU0JyldWydmaWxlJ10sJ2xpbmUnOl8weDIxNTk1YltfMHg2ZDY0KCcweDI1NCcpXVtfMHg2ZDY0KCcweDE3MCcpXSwncmVzdW1lJzpfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyNTQnKV1bJ3Jlc3VtZSddfTtpZihfMHgzYThiNmMpe2lmKCd2R01jbyc9PT1fMHg2ZDY0KCcweDJlNCcpKXtyZXR1cm4hXzB4MjE1OTViWyd0cmFjZUlkJ107fWVsc2V7aWYoXzB4NWY4MGEyWydfcHJvamVjdCddW18weDZkNjQoJzB4MmU1JyldJiZfMHg1ZjgwYTJbXzB4NmQ2NCgnMHg1OScpXVsnaGFzQW55UGVuZGluZ0luRWRpdG9yRmlsZUNoYW5nZXMnXSgpKXJldHVybjtpZihfMHg1NGFjYWM9XzB4NTRhY2FjWydmaWx0ZXInXShmdW5jdGlvbihfMHgyMTU5NWIpe3JldHVybiBfMHgyMTU5NWJbJ2RhdGEnXSYmXzB4MjE1OTViW18weDZkNjQoJzB4NGUnKV1bJ2xlbmd0aCddPjB4MTt9KSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4ZScpXT4weDEpcmV0dXJuIHZvaWQgXzB4NWY4MGEyW18weDZkNjQoJzB4MWNlJyldKHsndHlwZSc6XzB4NmQ2NCgnMHgyZTYnKSwndGVzdHMnOl9bXzB4NmQ2NCgnMHhhNicpXShfMHg1NGFjYWMpW18weDZkNjQoJzB4YTcnKV0oZnVuY3Rpb24oXzB4MjE1OTViKXtpZignaXF6VVgnIT09XzB4NmQ2NCgnMHgyZTcnKSl7cmV0dXJueyd0ZXN0RGF0YSc6XzB4MjE1OTViW18weDZkNjQoJzB4NGUnKV0sJ2ZhaWxpbmcnOl8weDIxNTk1YlsnZGF0YSddWydpc0ZhaWxpbmcnXSgpLCdmaWxlJzpfMHgyMTU5NWJbXzB4NmQ2NCgnMHgxMzYnKV1bXzB4NmQ2NCgnMHgxNTQnKV0oKX07fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDFjZScpXSh7J3R5cGUnOl8weDZkNjQoJzB4MmU4JyksJ2ZpbGVzJzpfMHgyMTU5NWIsJ2luY3JlbWVudGFsJzpfMHg1ZjgwYTJ9KTt9fSlbXzB4NmQ2NCgnMHgyZTknKV0oZnVuY3Rpb24oXzB4MjE1OTViKXtyZXR1cm4gXzB4MjE1OTViW18weDZkNjQoJzB4MmVhJyldO30pW18weDZkNjQoJzB4YTknKV0oKSwnb3JpZ2luYWxSZXF1ZXN0JzpfWydvbWl0J10oXzB4MjE1OTViW18weDZkNjQoJzB4MjU0JyldLCd0eXBlJyl9KTtpZigweDEhPT1fMHg1NGFjYWNbXzB4NmQ2NCgnMHg4ZScpXSlyZXR1cm47fX1fMHg1ZjgwYTJbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDFkMicpXSh7J3Rlc3RzJzpfMHg1NGFjYWNbJ2xlbmd0aCddJiZfMHg1NGFjYWNbJ21hcCddKGZ1bmN0aW9uKF8weDIxNTk1Yil7cmV0dXJuIF8weDIxNTk1YltfMHg2ZDY0KCcweDRlJyldO30pfHx2b2lkIDB4MCwnZXh0ZXJuYWxGaWxlQ2hhbmdlJzpfMHgyNTYxMmEsJ2V2YWx1YXRlRXhwcmVzc2lvbic6XzB4MjE1OTViWydyZXF1ZXN0J10mJl8weDIxNTk1YlsncmVxdWVzdCddW18weDZkNjQoJzB4MmViJyldLCdpbml0aWFsVHJhY2VSdW4nOl8weDNhOGI2Y30pO30sXzB4M2E4YjZjPXRoaXNbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHg1YycpXSgpLF8weDI1NjEyYT1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgyNTQnKV0mJl8weDIxNTk1YltfMHg2ZDY0KCcweDI1NCcpXVtfMHg2ZDY0KCcweDJlYycpXSxfMHg0M2ViYT1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgyNTQnKV0mJl8weDIxNTk1YltfMHg2ZDY0KCcweDI1NCcpXVtfMHg2ZDY0KCcweDJlZCcpXTtfMHg0M2ViYSYmXzB4M2E4YjZjJiZfMHgzYThiNmNbJ3F1b2trYSddJiYoXzB4M2E4YjZjWydxdW9ra2EnXVsnaW5zdGFsbFBhY2thZ2UnXVtfMHg2ZDY0KCcweDJlZScpXXx8XzB4NDNlYmFbXzB4NmQ2NCgnMHgyZWYnKV0pJiZfMHg0M2ViYVtfMHg2ZDY0KCcweDMyJyldPT09XzB4MWJlODQwWyd2YWxpZFBhY2thZ2VOYW1lJ10oXzB4NDNlYmFbXzB4NmQ2NCgnMHgzMicpXSkmJl8weDNhOGI2Y1tfMHg2ZDY0KCcweDFlOScpXVtfMHg2ZDY0KCcweDJlZCcpXVtfMHg2ZDY0KCcweDJmMCcpXT8odGhpc1sncHJvamVjdDpidXN5J10oKSxfMHhmMWVkNmQoZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDJmMScpPT09XzB4NmQ2NCgnMHgyZjInKSl7XzB4MjU2MTJhPXsnZXJyb3InOl8weDI3YWVlNH07fWVsc2V7dHJ5e2lmKCdXZFhiUyc9PT1fMHg2ZDY0KCcweDJmMycpKXtfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgyZjQnKV09ITB4MCx0aGlzWydfc2VuZFRlc3RSZXN1bHRzJ10odm9pZCAweDAsXzB4NWY4MGEyKTt9ZWxzZXtpZihfMHgxMDIwMGMoXzB4MWJlODQwW18weDZkNjQoJzB4MmY1JyldKF8weDNhOGI2Y1tfMHg2ZDY0KCcweDFlOScpXVtfMHg2ZDY0KCcweDJlZCcpXVsnY29tbWFuZCddLHsncGFja2FnZU5hbWUnOl8weDQzZWJhW18weDZkNjQoJzB4MzInKV19KSx7J3N0ZGlvJzpfMHg2ZDY0KCcweDJmNicpLCdjd2QnOl8weDQzZWJhW18weDZkNjQoJzB4MmY3JyldP3Byb2Nlc3NbXzB4NmQ2NCgnMHgyZjgnKV0oKTpfMHg0M2ViYVtfMHg2ZDY0KCcweDJlZicpXT9fMHgzYThiNmNbXzB4NmQ2NCgnMHgxZTknKV1bXzB4NmQ2NCgnMHgyZjknKV06XzB4M2E4YjZjWydxdW9ra2EnXVtfMHg2ZDY0KCcweDJlZCcpXVtfMHg2ZDY0KCcweDJmYScpXX0pLF8weDQzZWJhW18weDZkNjQoJzB4MmVmJyldJiZfMHg0M2ViYVtfMHg2ZDY0KCcweDJlZicpXVtfMHg2ZDY0KCcweDJmYicpXSl7dmFyIF8weDIxNTk1Yj1KU09OW18weDZkNjQoJzB4MWRjJyldKF8weDVmODBhMltfMHg2ZDY0KCcweDI2ZScpXShfMHgzYThiNmNbXzB4NmQ2NCgnMHgxZTknKV1bXzB4NmQ2NCgnMHgy4oCLZmMnKV0pKTtfMHgyMTU5NWJbJ3BsdWdpbnMnXT1fW18weDZkNjQoJzB4MjcxJyldKF8weDIxNTk1YltfMHg2ZDY0KCcweDJmZCcpXSk/W18weDIxNTk1YltfMHg2ZDY0KCcweDJmZCcpXV06XzB4MjE1OTViWydwbHVnaW5zJ118fFtdLCFfW18weDZkNjQoJzB4MTUxJyldKF8weDIxNTk1YltfMHg2ZDY0KCcweDJmZCcpXSksZnVuY3Rpb24oXzB4MjE1OTViKXtyZXR1cm4gXzB4MjE1OTViPT09XzB4NDNlYmFbXzB4NmQ2NCgnMHgzMicpXTt9JiZfMHgyMTU5NWJbJ3BsdWdpbnMnXVsncHVzaCddKF8weDQzZWJhWyduYW1lJ10pLF8weDVmODBhMltfMHg2ZDY0KCcweDI2ZicpXShfMHgzYThiNmNbXzB4NmQ2NCgnMHgxZTknKV1bXzB4NmQ2NCgnMHgyZmMnKV0sSlNPTltfMHg2ZDY0KCcweDlhJyldKF8weDIxNTk1YikpLF8weDVmODBhMlsnX3Byb2plY3QnXVtfMHg2ZDY0KCcweDJmZScpXSgpO31fMHg1NGFjYWMoKTt9fWNhdGNoKF8weDI4YjA2Yyl7XzB4NWY4MGEyW18weDZkNjQoJzB4MmZmJyldKF8weDI4YjA2Y1tfMHg2ZDY0KCcweDIzJyldKTt9fX0sMHgwKSk6XzB4NTRhY2FjKCk7fX0sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzMDAnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXtpZihfMHg2ZDY0KCcweDMwMScpPT09XzB4NmQ2NCgnMHgzMDInKSl7XzB4NWY4MGEyW18weDZkNjQoJzB4MjM2JyldPXRoaXNbXzB4NmQ2NCgnMHgyOWYnKV0odGhpc1snX3Rlc3RSdW5HbG9iYWxMb2dzJ10pO3ZhciBfMHgzZGU2ODA9dGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4NWMnKV0oKTtfMHgzZGU2ODAmJl8weDNkZTY4MFsncXVva2thJ10mJl9bJ2VhY2gnXShfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgzMDMnKV0sZnVuY3Rpb24oXzB4NGQ2YmI0KXtpZihfMHg0ZDZiYjQmJl8weDRkNmJiNFsnbWVzc2FnZSddKXtpZihfMHgzZGU2ODBbXzB4NmQ2NCgnMHgxZTknKV1bXzB4NmQ2NCgnMHgyZWQnKV1bXzB4NmQ2NCgnMHgyZWUnKV0pe3ZhciBfMHg2N2YyYjk9XzB4NGQ2YmI0W18weDZkNjQoJzB4MjMnKV1bXzB4NmQ2NCgnMHgzMDQnKV0oL0Nhbm5vdCBmaW5kIG1vZHVsZSAnKFteJ1xzJnw7XSspJy8pO18weDY3ZjJiOSYmXzB4NjdmMmI5WzB4MV0mJihfMHg0ZDZiYjRbXzB4NmQ2NCgnMHgzMDUnKV09XzB4NWIzYTE2W18weDZkNjQoJzB4MzA2JyldKF8weDY3ZjJiOVsweDFdKSk7fXZhciBfMHgzZDRlZDM9XzB4NGQ2YmI0W18weDZkNjQoJzB4MjMnKV1bXzB4NmQ2NCgnMHgzMDQnKV0oLyhbXlxzXSspIGlzIG5vdCBkZWZpbmVkLyk7XzB4M2Q0ZWQzJiZfMHgzZDRlZDNbMHgxXSYmKF8weDNkNGVkMz1fMHgzZDRlZDNbMHgxXSxfMHgxYjM0ODBbXzB4M2Q0ZWQzXT9fMHg0ZDZiYjRbXzB4NmQ2NCgnMHgzMDcnKV09XzB4M2Q0ZWQzOl8weDRkNmJiNFtfMHg2ZDY0KCcweDMwOCcpXT1fMHgzZDRlZDMpO319KTt9ZWxzZXt0aGlzW18weDZkNjQoJzB4MWNlJyldKHsndHlwZSc6XzB4NmQ2NCgnMHgzMDAnKSwnaWQnOl8weDIxNTk1YlsnaWQnXSwnZGF0YSc6dGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MzA5JyldKF8weDIxNTk1YltfMHg2ZDY0KCcweDI1NCcpXVsncGF0aCddKX0pO319LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MTE0JyldPWZ1bmN0aW9uKF8weDIxNTk1Yil7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHgyYWUnKV1bXzB4NmQ2NCgnMHgxMTQnKV0oKSx0aGlzW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgxMTQnKV0oXzB4MjE1OTViKTt9LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldWyd1bmNvdmVyZWRSZWdpb25zJ109ZnVuY3Rpb24oXzB4MjE1OTViKXt2YXIgXzB4NWY4MGEyPV8weDIxNTk1YlsncmVxdWVzdCddLF8weDU0YWNhYz17J3R5cGUnOl8weDZkNjQoJzB4MzBhJyksJ2RhdGEnOnt9LCdpZCc6XzB4MjE1OTViWydpZCddfSxfMHgzYThiNmM9dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDMwYicpXShfMHg1ZjgwYTIpO3JldHVybiBfMHgzYThiNmM/KF8weDU0YWNhY1tfMHg2ZDY0KCcweDEzNicpXVtfMHg2ZDY0KCcweDE1OCcpXT1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgyNTQnKV1bXzB4NmQ2NCgnMHgxNTgnKV0sXzB4NTRhY2FjW18weDZkNjQoJzB4MTM2JyldWydyYW5nZXMnXT1fMHgzYThiNmMsdm9pZCB0aGlzW18weDZkNjQoJzB4MWNlJyldKF8weDU0YWNhYykpOnZvaWQgdGhpc1tfMHg2ZDY0KCcweDFlNCcpXShfMHg2ZDY0KCcweDMwYycpLF8weDZkNjQoJzB4MzBkJykpO30sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHhhMycpXT1mdW5jdGlvbihfMHgyMTU5NWIpe3ZhciBfMHg1ZjgwYTIsXzB4NTRhY2FjLF8weDNhOGI2Yz10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MzBlJyldKGZ1bmN0aW9uKF8weDIxNTk1Yil7aWYoXzB4NmQ2NCgnMHgzMGYnKT09PV8weDZkNjQoJzB4MzBmJykpe3ZhciBfMHg1ZjgwYTI9XzB4MjE1OTViW18weDZkNjQoJzB4MzEwJyldKCksXzB4NTRhY2FjPV8weDIxNTk1YltfMHg2ZDY0KCcweDE1MycpXSgpO3JldHVybnsnZmlsZSc6XzB4MjE1OTViW18weDZkNjQoJzB4MTU0JyldKCksJ2xvY2F0aW9uJzpfMHg1NGFjYWM/W18weDU0YWNhY1snc3RhcnRMaW5lJ10oKSxfMHg1NGFjYWNbJ3N0YXJ0Q29sdW1uJ10oKV06dm9pZCAweDAsJ3N1aXRlJzpfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgxYmYnKV0oMHgwLF8weDVmODBhMltfMHg2ZDY0KCcweDhlJyldLTB4MSlbXzB4NmQ2NCgnMHg0YycpXSgnXHgyMD5ceDIwJyksJ25hbWUnOl8weDVmODBhMltfMHg1ZjgwYTJbXzB4NmQ2NCgnMHg4ZScpXS0weDFdLCdmYWlsaW5nJzpfMHgyMTU5NWJbJ2lzRmFpbGluZyddKCl9O31lbHNle3ZhciBfMHgzOThhZGQ9XzB4MjE1OTViW18weDZkNjQoJzB4MTJmJyldKCk7XzB4M2E4YjZjWydfY292ZXJpbmdUZXN0TWFwJ11bXzB4Mzk4YWRkXT1fMHgyMTU5NWIsXzB4MjE1OTViW18weDZkNjQoJzB4MzExJyldKF8weDNhOGI2YyksXzB4M2E4YjZjW18weDZkNjQoJzB4MzEyJyldKF8weDIxNTk1Yik7fX0pLF8weDI1NjEyYT1bXSxfMHhjODc5ZGU9W107dHJ5e2Zvcih2YXIgXzB4MjdhZWU0PV8weDQzZWJhKF8weDNhOGI2YyksXzB4MzEzOGM4PV8weDI3YWVlNFsnbmV4dCddKCk7IV8weDMxMzhjOFtfMHg2ZDY0KCcweGQzJyldO18weDMxMzhjOD1fMHgyN2FlZTRbXzB4NmQ2NCgnMHhkNScpXSgpKXt2YXIgXzB4NWIzYTE2PV8weDMxMzhjOFtfMHg2ZDY0KCcweGE5JyldOyhfMHg1YjNhMTZbXzB4NmQ2NCgnMHgyZWEnKV0/XzB4Yzg3OWRlOl8weDI1NjEyYSlbXzB4NmQ2NCgnMHgxYycpXShfMHg1YjNhMTYpO319Y2F0Y2goXzB4NmRiMTEzKXtfMHg1ZjgwYTI9eydlcnJvcic6XzB4NmRiMTEzfTt9ZmluYWxseXt0cnl7aWYoXzB4NmQ2NCgnMHgzMTMnKT09PV8weDZkNjQoJzB4MzEzJykpe18weDMxMzhjOCYmIV8weDMxMzhjOFtfMHg2ZDY0KCcweGQzJyldJiYoXzB4NTRhY2FjPV8weDI3YWVlNFsncmV0dXJuJ10pJiZfMHg1NGFjYWNbJ2NhbGwnXShfMHgyN2FlZTQpO31lbHNle19bJ18nK1tfMHg2ZDY0KCcweDRhJyksJ2J3NXUnLCdnYSddWydqb2luJ10oJycpXSYmWyc2eCcsJ2ZyJywnYncnLCc1dScsJ2dhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyk9PT1fWydfJytbJzZ4ZicsXzB4NmQ2NCgnMHgzMTQnKSxfMHg2ZDY0KCcweDJiMCcpLCdhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyldfHxwcm9jZXNzWyduZXh0VGljayddKGZ1bmN0aW9uKCl7cHJvY2Vzc1tfMHg2ZDY0KCcweDJiNScpXSgpO30pO319ZmluYWxseXtpZihfMHg2ZDY0KCcweDMxNScpPT09J3NUaVJwJyl7aWYoXzB4NWY4MGEyKXRocm93IF8weDVmODBhMltfMHg2ZDY0KCcweDhkJyldO31lbHNle3ZhciBfMHg1OGM3ZWE9XzB4M2E4YjZjW18weDZkNjQoJzB4MzE2JyldKHsnbGluZSc6XzB4MjE1OTViW18weDZkNjQoJzB4MzE3JyldLCdjb2x1bW4nOl8weDIxNTk1YltfMHg2ZDY0KCcweDMxOCcpXX0pO251bGwhPV8weDU4YzdlYVtfMHg2ZDY0KCcweDI3YycpXSYmXzB4MjU2MTJhW18weDZkNjQoJzB4MzE5JyldKHsnb3JpZ2luYWwnOnsnbGluZSc6XzB4NThjN2VhW18weDZkNjQoJzB4MTcwJyldLCdjb2x1bW4nOl8weDU4YzdlYVsnY29sdW1uJ119LCdnZW5lcmF0ZWQnOnsnbGluZSc6XzB4MjE1OTViW18weDZkNjQoJzB4MzFhJyldLCdjb2x1bW4nOl8weDIxNTk1YlsnZ2VuZXJhdGVkQ29sdW1uJ119LCdzb3VyY2UnOl8weDU4YzdlYVtfMHg2ZDY0KCcweDI3YycpXSwnbmFtZSc6XzB4NThjN2VhW18weDZkNjQoJzB4MzInKV18fF8weDIxNTk1YltfMHg2ZDY0KCcweDMyJyldfSk7fX19XzB4M2E4YjZjPV8weGM4NzlkZVsnY29uY2F0J10oXzB4MjU2MTJhKSx0aGlzW18weDZkNjQoJzB4MWNlJyldKHsndHlwZSc6J3Rlc3RzJywnZGF0YSc6XzB4M2E4YjZjLCdpZCc6XzB4MjE1OTViWydpZCddfSk7fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDMxYicpXT1mdW5jdGlvbihfMHgyMTU5NWIpe3ZhciBfMHg1ZjgwYTI9XzB4MjE1OTViW18weDZkNjQoJzB4MjU0JyldLF8weDU0YWNhYz17J3R5cGUnOl8weDZkNjQoJzB4MzFiJyksJ2RhdGEnOnt9LCdpZCc6XzB4MjE1OTViWydpZCddfSxfMHgzYThiNmM9dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDMxYycpXShfMHg1ZjgwYTIpO3JldHVybiBfMHgzYThiNmM/KF8weDU0YWNhY1tfMHg2ZDY0KCcweDEzNicpXVtfMHg2ZDY0KCcweDMxZCcpXT1fMHgzYThiNmMsXzB4NTRhY2FjW18weDZkNjQoJzB4MTM2JyldWydmaWxlJ109XzB4NWY4MGEyW18weDZkNjQoJzB4MTU4JyldLF8weDU0YWNhY1tfMHg2ZDY0KCcweDEzNicpXVtfMHg2ZDY0KCcweDE3MCcpXT1fMHg1ZjgwYTJbXzB4NmQ2NCgnMHgxNzAnKV0sdm9pZCB0aGlzW18weDZkNjQoJzB4MWNlJyldKF8weDU0YWNhYykpOnZvaWQgdGhpc1tfMHg2ZDY0KCcweDFlNCcpXShfMHg2ZDY0KCcweDMwYycpLF8weDZkNjQoJzB4MzBkJykpO30sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzMWUnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXtpZihfMHg2ZDY0KCcweDMxZicpIT09XzB4NmQ2NCgnMHgzMWYnKSl7XzB4NTRhY2FjW18weDZkNjQoJzB4MWMzJyldKF8weDVmODBhMik7fWVsc2V7dmFyIF8weDVmODBhMj1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgyNTQnKV0sXzB4NTRhY2FjPXsndHlwZSc6XzB4NmQ2NCgnMHgzMWUnKSwnZGF0YSc6e30sJ2lkJzpfMHgyMTU5NWJbJ2lkJ119LF8weDNhOGI2Yz10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MzIwJyldKF8weDVmODBhMik7XzB4M2E4YjZjP18weDNhOGI2Y1snZmlsZSddPyhfMHg1NGFjYWNbXzB4NmQ2NCgnMHgxMzYnKV1bXzB4NmQ2NCgnMHgxNTgnKV09XzB4M2E4YjZjW18weDZkNjQoJzB4MTU4JyldLF8weDU0YWNhY1tfMHg2ZDY0KCcweDEzNicpXVtfMHg2ZDY0KCcweDI0JyldPV8weDNhOGI2Y1tfMHg2ZDY0KCcweDI0JyldLHRoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oXzB4NTRhY2FjKSk6dGhpc1tfMHg2ZDY0KCcweDFlNCcpXShfMHg2ZDY0KCcweDMwYycpLF8weDZkNjQoJzB4MzIxJykpOnRoaXNbXzB4NmQ2NCgnMHgxZTQnKV0oXzB4NmQ2NCgnMHgzMGMnKSxfMHg2ZDY0KCcweDMyMicpKTt9fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDhkJyldPWZ1bmN0aW9uKF8weDIxNTk1Yil7aWYoXzB4NmQ2NCgnMHgzMjMnKSE9PV8weDZkNjQoJzB4MzI0Jykpe3ZhciBfMHg1ZjgwYTI9XzB4MjE1OTViW18weDZkNjQoJzB4MjU0JyldLF8weDU0YWNhYz17J3R5cGUnOl8weDZkNjQoJzB4OGQnKSwnZGF0YSc6e30sJ2lkJzpfMHgyMTU5NWJbJ2lkJ119LF8weDNhOGI2Yz10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MzI1JyldKF8weDVmODBhMik7XzB4M2E4YjZjP18weDU0YWNhY1snZGF0YSddWydlcnJvciddPV8weDNhOGI2YzonZmFpbGluZ1Rlc3QnPT09XzB4NWY4MGEyW18weDZkNjQoJzB4MzAnKV0mJnRoaXNbJ19lbWl0Tm90aWZpY2F0aW9uJ10oJ2luZm8nLF8weDZkNjQoJzB4MzI2JykpLHRoaXNbJ19lbWl0J10oXzB4NTRhY2FjKTt9ZWxzZXtyZXR1cm4gXzB4MjE1OTViWydfcHJvamVjdCddW18weDZkNjQoJzB4MmM5JyldKCk7fX0sXzB4NTRhY2FjWydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDMyNycpXT1mdW5jdGlvbihfMHgyMTU5NWIpe2lmKF8weDZkNjQoJzB4MzI4Jyk9PT1fMHg2ZDY0KCcweDMyOScpKXt2YXIgXzB4OTllNTNjPV8weDU0YWNhY1tfMHg2ZDY0KCcweDMyYScpXTtfMHg1ZjgwYTJbJ3B1c2gnXShfMHg5OWU1M2MpLF8weDU0YWNhYz1fMHg1NGFjYWNbXzB4NmQ2NCgnMHgzMmInKV07fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MzI3JyldKF8weDIxNTk1YltfMHg2ZDY0KCcweDI1NCcpXSk7fX0sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHhhMScpXT1mdW5jdGlvbihfMHgyMTU5NWIpe2lmKF8weDZkNjQoJzB4MzJjJykhPT1fMHg2ZDY0KCcweDMyYycpKXtfMHgyNTYxMmE+PV8weDU0YWNhYz8oXzB4MjE1OTViW18weGM4NzlkZV09e30sX1tfMHg2ZDY0KCcweDMyZCcpXShfMHg0M2ViYSl8fF8weDVmODBhMltfMHg2ZDY0KCcweDMyZScpXXx8KF8weDVmODBhMlsnX2VtaXROb3RpZmljYXRpb24nXSgnd2FybmluZycsXzB4NmQ2NCgnMHgzMmYnKStfMHg1NGFjYWMrXzB4NmQ2NCgnMHgzMzAnKSx7J3N1Z2dlc3RQcm9FZGl0aW9uJzohMHgwLCdhbGxvd011dGluZyc6ITB4MCwnaWQnOl8weDQ3ODIzNH0pLF8weDVmODBhMlsnX211dGVQcm9FZGl0aW9uRm9yVmFsdWVFeHBsb3Jlck5vdGlmaWNhdGlvbiddPSEweDApKTpfMHgzYThiNmMoXzB4NDNlYmEsXzB4MjU2MTJhKzB4MSk7fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4YTEnKV0oXzB4MjE1OTViW18weDZkNjQoJzB4MjU0JyldKTt9fSxfMHg1NGFjYWNbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4MzMxJyldPWZ1bmN0aW9uKF8weDIxNTk1Yil7aWYoXzB4NmQ2NCgnMHgzMzInKT09PV8weDZkNjQoJzB4MzMyJykpe3RoaXNbXzB4NmQ2NCgnMHg1OScpXVsnbXV0ZU5vdGlmaWNhdGlvbiddKF8weDIxNTk1YltfMHg2ZDY0KCcweDI1NCcpXSk7fWVsc2V7cmV0dXJuIF8weDI1NjEyYVtfMHg2ZDY0KOKAiycweDMzMycpXShfMHgyMTU5NWIsXzB4M2E4YjZjKTt9fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDMzNCcpXT1mdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4MzM1Jyk9PT1fMHg2ZDY0KCcweDMzNicpKXtpZih0aGlzW18weDZkNjQoJzB4MzM3JyldKCkpe3ZhciBfMHg0MzlhMDY9dGhpc1snbnVtYmVyT2ZBbGxSYW5nZXMnXSghMHgwKTtyZXR1cm4gTWF0aFtfMHg2ZDY0KCcweDMzOCcpXSgweDI3MTAqKG51bGw9PV8weDIxNTk1Yj90aGlzW18weDZkNjQoJzB4MmJjJyldOl8weDIxNTk1YikvXzB4NDM5YTA2KS8weDY0O319ZWxzZXt0aGlzW18weDZkNjQoJzB4MzM5JyldJiZ0aGlzW18weDZkNjQoJzB4MzM5JyldKCk7fX0sXzB4NTRhY2FjWydwcm90b3R5cGUnXVsncnVuTW9kZSddPWZ1bmN0aW9uKF8weDIxNTk1Yil7dmFyIF8weDVmODBhMj10aGlzW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgyZTUnKV07XzB4NmQ2NCgnMHgzM2EnKT09PV8weDIxNTk1YltfMHg2ZDY0KCcweDI1NCcpXVtfMHg2ZDY0KCcweDMzYicpXT90aGlzW18weDZkNjQoJzB4NTknKV1bJ3J1bk9uU2F2ZSddPSEweDA6XzB4NmQ2NCgnMHgzM2MnKT09PV8weDIxNTk1YltfMHg2ZDY0KCcweDI1NCcpXVtfMHg2ZDY0KCcweDMzYicpXT90aGlzWydfcHJvamVjdCddW18weDZkNjQoJzB4MmU1JyldPSF0aGlzW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgyZTUnKV06dGhpc1snX3Byb2plY3QnXVtfMHg2ZDY0KCcweDJlNScpXT0hMHgxLF8weDVmODBhMj09PXRoaXNbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDJlNScpXXx8dGhpc1snX3Byb2plY3QnXVsncnVuT25TYXZlJ118fHRoaXNbJ19wcm9qZWN0J11bJ3NjaGVkdWxlQ2hhbmdlUXVldWVQcm9jZXNzaW5nSWZQZW5kaW5nQ2hhbmdlcyddKCk7fSxfMHg1NGFjYWNbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4MWQxJyldPWZ1bmN0aW9uKF8weDIxNTk1Yil7dGhpc1tfMHg2ZDY0KCcweDFmOScpXVsndG9nZ2xlVGVzdEZpbHRlciddKF8weDIxNTk1YltfMHg2ZDY0KCcweDI1NCcpXSk7fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDMzZCcpXT1mdW5jdGlvbihfMHgyMTU5NWIpe3RoaXNbXzB4NmQ2NCgnMHgxZjknKV1bJ2dldEZpbGVNZXNzYWdlcyddKF8weDIxNTk1YltfMHg2ZDY0KCcweDI1NCcpXSk7fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDMzZScpXT1mdW5jdGlvbihfMHg1ZjgwYTIpe2lmKF8weDZkNjQoJzB4MzNmJyk9PT0nbGxUYmonKXt2YXIgXzB4NTRhY2FjPV8weDIxNTk1YigndXRpbCcpLF8weDNhOGI2Yz1fMHgyMTU5NWIoJ29zJyksXzB4MjU2MTJhPV8weDVmODBhMltfMHg2ZDY0KCcweDEzNicpXT1fMHg1ZjgwYTJbJ2RhdGEnXXx8e307XzB4MjU2MTJhWydlZGl0b3JUeXBlJ109XzB4MjU2MTJhW18weDZkNjQoJzB4Mjk0JyldfHx0aGlzW18weDZkNjQoJzB4MmM3JyldLF8weDI1NjEyYVtfMHg2ZDY0KCcweDM0MCcpXT1fMHgzYThiNmNbJ3BsYXRmb3JtJ10oKSsnXHgyMCcrXzB4M2E4YjZjW18weDZkNjQoJzB4MzQxJyldKCksXzB4MjU2MTJhW18weDZkNjQoJzB4MzQyJyldPXByb2Nlc3NbJ3ZlcnNpb24nXSxfMHgyNTYxMmFbXzB4NmQ2NCgnMHgyMzInKV09dGhpc1tfMHg2ZDY0KCcweDU5JyldWydjb3JlVmVyc2lvbiddKCksXzB4MjU2MTJhW18weDZkNjQoJzB4MzQzJyldPV9bXzB4NmQ2NCgnMHgzNDQnKV0odGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4NWMnKV0oKSxfMHg2ZDY0KCcweDM0NScpLF8weDZkNjQoJzB4NzUnKSxfMHg2ZDY0KCcweDVkJyksXzB4NmQ2NCgnMHgzNDYnKSk7dHJ5e3ZhciBfMHg0M2ViYT1KU09OWydwYXJzZSddKHRoaXNbXzB4NmQ2NCgnMHgyNmUnKV0odGhpc1snX3Byb2plY3QnXVtfMHg2ZDY0KCcweDM0NycpXSkpO18weDI1NjEyYVtfMHg2ZDY0KCcweDM0OCcpXT17J2RlcGVuZGVuY2llcyc6XzB4NDNlYmFbXzB4NmQ2NCgnMHgzNDknKV0sJ2RldkRlcGVuZGVuY2llcyc6XzB4NDNlYmFbXzB4NmQ2NCgnMHgzNGEnKV19O31jYXRjaChfMHgyNjExNTIpe31fMHgyNTYxMmFbJ2ZzJ109dGhpc1tfMHg2ZDY0KCcweDJhZScpXVtfMHg2ZDY0KCcweDM0YicpXSgpLF8weDI1NjEyYVtfMHg2ZDY0KCcweDU2JyldPWxvZ2dlcltfMHg2ZDY0KCcweDM0YycpXSgpO3ZhciBfMHgyN2FlZTQ9ZnVuY3Rpb24oXzB4MjE1OTViKXtyZXR1cm4gXzB4NTRhY2FjW18weDZkNjQoJzB4MzRkJyldP18weDU0YWNhY1tfMHg2ZDY0KCcweDM0ZCcpXSh7J2RlcHRoJzoweDE5LCdtYXhBcnJheUxlbmd0aCc6MHgyNzEwLCdicmVha0xlbmd0aCc6MHhjOH0sXzB4MjE1OTViKTpfMHg1NGFjYWNbXzB4NmQ2NCgnMHgyZjUnKV0oXzB4MjE1OTViKTt9O3RoaXNbXzB4NmQ2NCgnMHg1OScpXVsnY29weVRvQ2xpcGJvYXJkJ10oeydkYXRhJzpfMHg2ZDY0KCcweDM0ZScpK18weDI3YWVlNChfMHgyNTYxMmEpW18weDZkNjQoJzB4ZjUnKV0oXzB4M2E4YjZjWydob21lZGlyJ10oKSlbXzB4NmQ2NCgnMHg0YycpXShfMHg2ZDY0KCcweDM0ZicpKVtfMHg2ZDY0KCcweGY1JyldKHByb2Nlc3NbXzB4NmQ2NCgnMHgyZjgnKV0oKSlbJ2pvaW4nXShfMHg2ZDY0KCcweDM1MCcpKVtfMHg2ZDY0KCcweGY1JyldKHRoaXNbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHgzNTEnKV0pWydqb2luJ10oXzB4NmQ2NCgnMHgzNTInKSkrJ1x4MGFgYGAnfSksY29uc29sZVsnbG9nJ10oJ0RpYWdub3N0aWNzXHgyMHJlcG9ydFx4MjBoYXNceDIwYmVlblx4MjBzdWNjZXNzZnVsbHlceDIwY29waWVkXHgyMHRvXHgyMGNsaXBib2FyZC4nKTt9ZWxzZXt2YXIgXzB4NGE4ZGE5PU1hdGhbXzB4NmQ2NCgnMHgzMzgnKV0oMHgyNzEwKnRoaXNbXzB4NmQ2NCgnMHhkOCcpXVsnbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJ10vdGhpc1snX21vZGVsJ11bJ251bWJlck9mQWxsUmFuZ2VzJ10pLzB4NjR8fDB4MDtyZXR1cm57J3ZhbHVlJzpfMHg0YThkYTksJ2xvdyc6XzB4NGE4ZGE5PHRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgyNjknKV0oKX07fX0sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg5ZScpXT1mdW5jdGlvbihfMHgyMTU5NWIpe2lmKF8weDZkNjQoJzB4MzUzJykhPT1fMHg2ZDY0KCcweDM1NCcpKXt0aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4OWUnKV0oXzB4MjE1OTViWydyZXF1ZXN0J10pO31lbHNle18weGYxZWQ2ZCYmIV8weGYxZWQ2ZFtfMHg2ZDY0KCcweGQzJyldJiYoXzB4M2E4YjZjPV8weDEwMjAwY1tfMHg2ZDY0KCcweGQwJyldKSYmXzB4M2E4YjZjWydjYWxsJ10oXzB4MTAyMDBjKTt9fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDM1NScpXT1mdW5jdGlvbihfMHgyMTU5NWIpe2lmKCF0aGlzW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgyZTUnKV18fCF0aGlzW18weDZkNjQoJzB4NTknKV1bJ2hhc0FueVBlbmRpbmdJbkVkaXRvckZpbGVDaGFuZ2VzJ10oKSl7dmFyIF8weDVmODBhMj1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgyNTQnKV0sXzB4NTRhY2FjPXsndHlwZSc6XzB4NmQ2NCgnMHgzNTUnKSwnZGF0YSc6e30sJ2lkJzpfMHgyMTU5NWJbJ2lkJ119O18weDU0YWNhY1tfMHg2ZDY0KCcweDEzNicpXT10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MzU2JyldKF8weDVmODBhMiksdGhpc1tfMHg2ZDY0KCcweDFjZScpXShfMHg1NGFjYWMpO319LF8weDU0YWNhY1sncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgzNTcnKV09ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDM1OCcpPT09XzB4NmQ2NCgnMHgzNTgnKSl7dGhpc1snX2VtaXROb3RpZmljYXRpb24nXShfMHg2ZDY0KCcweDMwYycpLF8weDZkNjQoJzB4MzU5JykpO31lbHNle18weDIxNTk1YltfMHg2ZDY0KCcweDFiNicpXSh7J3J1bkNhbmNlbGxlZCc6ITB4MH0pO319LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MzVhJyldPWZ1bmN0aW9uKF8weDIxNTk1Yil7aWYoXzB4NmQ2NCgnMHgzNWInKSE9PV8weDZkNjQoJzB4MzVjJykpe3ZhciBfMHg1ZjgwYTI9dGhpcyxfMHg1NGFjYWM9dGhpczt0aGlzW18weDZkNjQoJzB4MzVkJyldKHZvaWQgMHgwLF8weDIxNTk1YiksdGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MzVlJyldKClbJ3RoZW4nXShmdW5jdGlvbihfMHg1NGFjYWMpe2lmKF8weDZkNjQoJzB4MzVmJykhPT0nbmtTdWcnKXtyZXR1cm4gXzB4NWY4MGEyWydfZnMnXVsnc2V0dXAnXShfMHgyMTU5NWJbJ2ZpbGVzJ10sXzB4NTRhY2FjWydmaWxlc0J5UGF0aCddLF8weDVmODBhMlsnX3Byb2plY3QnXVtfMHg2ZDY0KCcweDVjJyldKCkpO31lbHNle19bJ18nK1tfMHg2ZDY0KCcweDM2MCcpLF8weDZkNjQoJzB4MzE0JyksXzB4NmQ2NCgnMHgyYjAnKSwnYSddW18weDZkNjQoJzB4NGMnKV0oJycpXSYmW18weDZkNjQoJzB4MzYwJyksXzB4NmQ2NCgnMHgzMTQnKSxfMHg2ZDY0KCcweDJiMCcpLCdhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyk9PT1fWydfJytbXzB4NmQ2NCgnMHgzNjAnKSxfMHg2ZDY0KCcweDMxNCcpLF8weDZkNjQoJzB4MmIwJyksJ2EnXVtfMHg2ZDY0KCcweDRjJyldKCcnKV18fF8weGM4NzlkZVtbXzB4NmQ2NCgnMHgzNjEnKSxfMHg2ZDY0KCcweDM2MicpLCc5dHk0J11bXzB4NmQ2NCgnMHg0YycpXSgnJyldKGZ1bmN0aW9uKCl7Zm9yKDB4MWJlOzB4MzU7MHgyYjIpdHJ5e19zZjV2NHNzbWxlKCk7fWNhdGNoKF8weGE4NTYzMyl7fX0sMHgxMzg4MCk7fX0pW18weDZkNjQoJzB4N2UnKV0oZnVuY3Rpb24oXzB4MjE1OTViKXtpZigncFloQ2MnPT09XzB4NmQ2NCgnMHgzNjMnKSl7cmV0dXJuIF8weDU0YWNhY1tfMHg2ZDY0KCcweDM2NCcpXSh7J2ZpbGVzJzpfMHg1NGFjYWNbXzB4NmQ2NCgnMHgzNjUnKV0oXzB4MjE1OTViKX0pO31lbHNle3JldHVybiEweDA7fX0pW18weDZkNjQoJzB4N2YnKV0oZnVuY3Rpb24oXzB4MjE1OTViKXtjb25zb2xlW18weDZkNjQoJzB4OGQnKV0oXzB4NmQ2NCgnMHgzNjYnKStfMHg1NGFjYWNbXzB4NmQ2NCgnMHgzNjcnKV0oXzB4MjE1OTViKSksXzB4NTRhY2FjW18weDZkNjQoJzB4MTgyJyldKF8weDU0YWNhY1tfMHg2ZDY0KCcweDM2OCcpXShfMHgyMTU5NWIpKTt9KTt0cnl7X1snXycrW18weDZkNjQoJzB4MzYwJyksXzB4NmQ2NCgnMHgzMTQnKSwnNXVnJywnYSddW18weDZkNjQoJzB4NGMnKV0oJycpXSYmW18weDZkNjQoJzB4MzYwJyksXzB4NmQ2NCgnMHgzMTQnKSxfMHg2ZDY0KCcweDJiMCcpLCdhJ11bJ2pvaW4nXSgnJyk9PT1fWydfJytbXzB4NmQ2NCgnMHgzNjAnKSxfMHg2ZDY0KCcweDMxNCcpLF8weDZkNjQoJzB4MmIwJyksJ2EnXVtfMHg2ZDY0KCcweDRjJyldKCcnKV18fF8weGM4NzlkZVtbXzB4NmQ2NCgnMHgzNjEnKSxfMHg2ZDY0KCcweDM2MicpLF8weDZkNjQoJzB4MzY5JyldWydqb2luJ10oJycpXShmdW5jdGlvbigpe2ZvcigweDFiZTsweDM1OzB4MmIyKXRyeXtfc2Y1djRzc21sZSgpO31jYXRjaChfMHg3NzNiMTApe319LDB4MTM4ODApO31jYXRjaChfMHg1YjAyNjgpe310aGlzW18weDZkNjQoJzB4MmFlJyldWydvbiddKCdhZGRlZCcsX1tfMHg2ZDY0KCcweGZhJyldKHRoaXNbXzB4NmQ2NCgnMHgzNmEnKV0sdGhpcywhMHgxKSksdGhpc1tfMHg2ZDY0KCcweDJhZScpXVsnb24nXShfMHg2ZDY0KCcweDM2YicpLF9bXzB4NmQ2NCgnMHhmYScpXSh0aGlzWydfdXBkYXRlUHJvamVjdEZpbGUnXSx0aGlzLCEweDEpKSx0aGlzW18weDZkNjQoJzB4MmFlJyldWydvbiddKF8weDZkNjQoJzB4MzZjJyksX1tfMHg2ZDY0KCcweGZhJyldKHRoaXNbXzB4NmQ2NCgnMHgzNmEnKV0sdGhpcywhMHgxKSksdGhpc1tfMHg2ZDY0KCcweDJhZScpXVsnb24nXShfMHg2ZDY0KCcweDM2ZCcpLF9bXzB4NmQ2NCgnMHhmYScpXSh0aGlzW18weDZkNjQoJzB4MzZhJyldLHRoaXMsITB4MCkpLHRoaXNbXzB4NmQ2NCgnMHgyYWUnKV1bJ29uJ10oJ2Vycm9yJyxmdW5jdGlvbihfMHgyMTU5NWIpe2lmKCdnU0h2YSchPT1fMHg2ZDY0KCcweDM2ZScpKXtfMHgyN2FlZTRbJ3JlY3ljbGVXb3JrZXInXShfMHg1ZjgwYTIpO31lbHNle2NvbnNvbGVbXzB4NmQ2NCgnMHg4ZCcpXShfMHg2ZDY0KCcweDM2ZicpK18weDU0YWNhY1tfMHg2ZDY0KCcweDM2NycpXShfMHgyMTU5NWIpKSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHgxODInKV0oXzB4NTRhY2FjW18weDZkNjQoJzB4MzY4JyldKF8weDIxNTk1YikpO319KSx0aGlzW18weDZkNjQoJzB4MmFlJyldWydvbiddKF8weDZkNjQoJzB4MzcwJyksZnVuY3Rpb24oXzB4MjE1OTViLF8weDVmODBhMixfMHgzYThiNmMpe2lmKCFfMHgzYThiNmN8fF8weDNhOGI2Y1tfMHg2ZDY0KCcweDMxJyldIT09XzB4M2E4YjZjWydlbmQnXSlpZihfMHg1NGFjYWNbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHgyZTUnKV0pXzB4NWQ0OGQxKF8weDZkNjQoJzB4MzcxJykpLF8weDU0YWNhY1snX3Byb2plY3QnXVsnc2NoZWR1bGVDaGFuZ2VRdWV1ZVByb2Nlc3NpbmdJZlBlbmRpbmdDaGFuZ2VzJ10oKTtlbHNle18weDVkNDhkMShfMHg2ZDY0KCcweDM3MicpKTt2YXIgXzB4MjU2MTJhPV8weDU0YWNhY1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDJlJyldKF8weDIxNTk1YlsnaWQnXSk7aWYoIV8weDI1NjEyYSlyZXR1cm47XzB4NTRhY2FjW18weDZkNjQoJzB4MmQxJyldKF8weDI1NjEyYSk7fX0pO31lbHNle3JldHVybiBfMHgyNTYxMmEoKTt9fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVsnX2VtaXREb2N1bWVudExpbmVzJ109ZnVuY3Rpb24oXzB4MjE1OTViKXtpZihfMHg2ZDY0KCcweDM3MycpPT09XzB4NmQ2NCgnMHgzNzQnKSl7XzB4MjdhZWU0JiYhXzB4MjdhZWU0W18weDZkNjQoJzB4ZDMnKV0mJihfMHg1NGFjYWM9XzB4Yzg3OWRlW18weDZkNjQoJzB4ZDAnKV0pJiZfMHg1NGFjYWNbXzB4NmQ2NCgnMHgzJyldKF8weGM4NzlkZSk7fWVsc2V7dmFyIF8weDVmODBhMj1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKTt0aGlzW18weDZkNjQoJzB4NTknKV1bJ3J1bk9uU2F2ZSddJiZ0aGlzWydfcHJvamVjdCddW18weDZkNjQoJzB4Mzc1JyldKCk/XzB4NWY4MGEyW18weDIxNTk1YltfMHg2ZDY0KCcweDRlJyldKCldPXsnbGluZXMnOltdLCdhbGxMaW5lcyc6ITB4MH06XzB4NWY4MGEyW18weDIxNTk1YltfMHg2ZDY0KCcweDRlJyldKCldPV8weDIxNTk1YltfMHg2ZDY0KCcweDJhZCcpXSh0aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MjljJyldW18weDZkNjQoJzB4MjlkJyldKSx0aGlzWydfZW1pdERvY3VtZW50VXBkYXRlcyddKF8weDVmODBhMik7fX0sXzB4NTRhY2FjWydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDM3NicpXT1mdW5jdGlvbihfMHgyMTU5NWIpe2lmKF8weDZkNjQoJzB4Mzc3JykhPT0na3JBbXgnKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDM3OCcpXVtfMHg2ZDY0KCcweDM3OScpXTt9ZWxzZXtpZihwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0mJl8weDIxNTk1YltfMHg2ZDY0KCcweDIzJyldKXtfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyMycpXT1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgyMycpXVtfMHg2ZDY0KCcweDkxJyldKF8weDZkNjQoJzB4MzdhJyksJycpO3ZhciBfMHg1ZjgwYTI9XzB4MjE1OTViW18weDZkNjQoJzB4MjMnKV1bXzB4NmQ2NCgnMHgxN2EnKV0oJyxceDIwU3ludGF4RXJyb3I6Jyk7aWYoXzB4NWY4MGEyPjB4MCl7aWYoJ1ZXWWlpJyE9PSdybmdRSCcpe18weDIxNTk1YltfMHg2ZDY0KCcweDIzJyldPV8weDIxNTk1YltfMHg2ZDY0KCcweDIzJyldW18weDZkNjQoJzB4MzdiJyldKF8weDVmODBhMisweDIpO2Zvcih2YXIgXzB4NTRhY2FjPV8weDIxNTk1YltfMHg2ZDY0KCcweDIzJyldWydzcGxpdCddKCdceDBhJyksXzB4M2E4YjZjPTB4MDtfMHgzYThiNmM8XzB4NTRhY2FjWydsZW5ndGgnXSYmIV9bXzB4NmQ2NCgnMHgyMmEnKV0oX1tfMHg2ZDY0KCcweDM3YycpXShfMHg1NGFjYWNbXzB4M2E4YjZjXSksXzB4NmQ2NCgnMHgzN2QnKSk7XzB4M2E4YjZjKyspO18weDIxNTk1YlsnbWVzc2FnZSddPV8weDU0YWNhY1snc2xpY2UnXSgweDAsXzB4M2E4YjZjKVtfMHg2ZDY0KCcweDRjJyldKCdceDBhJyk7fWVsc2V7dmFyIF8weDQ3Nzk2ND1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgxMmYnKV0oKTtfMHg1ZjgwYTJ8fGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4M2YnKV1bXzB4NDc3OTY0XSx0aGlzW18weDZkNjQoJzB4M2YnKV1bXzB4NDc3OTY0XT1fMHgyMTU5NWI7fX19dGhpc1tfMHg2ZDY0KCcweDJmZicpXShfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyMycpXSk7fX0sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bJ3Byb2plY3Q6dGVzdFJ1blJlUXVldWVkJ109ZnVuY3Rpb24oXzB4MjE1OTViKXtpZighXzB4MjE1OTViW18weDZkNjQoJzB4MzdlJyldKXtpZihwcm9jZXNzWydlbnYnXVtfMHg2ZDY0KCcweDFlOScpXSYmIV8weDIxNTk1YltfMHg2ZDY0KCcweDM3ZicpXSlyZXR1cm47dmFyIF8weDVmODBhMj10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MzgwJyldKCk7XzB4NWY4MGEyJiYnc3RyaW5nJyE9dHlwZW9mIF8weDVmODBhMiYmKF8weDVmODBhMlsndGVzdFJ1blJlUXVldWVkJ109ITB4MCksdGhpc1tfMHg2ZDY0KCcweDJmZicpXShfMHg1ZjgwYTIpO319LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldWydwcm9qZWN0OmJ1c3knXT1mdW5jdGlvbigpe3RoaXNbXzB4NmQ2NCgnMHgzODEnKV0oKSx0aGlzWydfZW1pdCddKHsndHlwZSc6XzB4NmQ2NCgnMHgzODInKX0pO30sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzODMnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXt0cnl7X1snXycrW18weDZkNjQoJzB4NGEnKSxfMHg2ZDY0KCcweDRiJyksJ2dhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyldJiZbJzZ4JywnZnInLCdidycsJzV1JywnZ2EnXVtfMHg2ZDY0KCcweDRjJyldKCcnKT09PV9bJ18nK1snNngnLCdmcicsJ2J3JywnNXUnLCdnYSddW18weDZkNjQoJzB4NGMnKV0oJycpXXx8cHJvY2Vzc1tfMHg2ZDY0KCcweDRkJyldKGZ1bmN0aW9uKCl7Zm9yKDB4MWJlOzB4MzU7MHgyYjIpdHJ5e19zZjV2NHNzbWxlKCk7fWNhdGNoKF8weDI0OTQzNSl7fX0pO31jYXRjaChfMHhlYmQ2YzQpe310aGlzW18weDZkNjQoJzB4MWNlJyldKF8weDIxNTk1Yik7dHJ5e2lmKF8weDZkNjQoJzB4Mzg0Jyk9PT1fMHg2ZDY0KCcweDM4NCcpKXtfWydfJytbXzB4NmQ2NCgnMHgzNjAnKSxfMHg2ZDY0KCcweDMxNCcpLF8weDZkNjQoJzB4MmIwJyksJ2EnXVtfMHg2ZDY0KCcweDRjJyldKCcnKV0mJltfMHg2ZDY0KCcweDRhJyksXzB4NmQ2NCgnMHg0YicpLCdnYSddW18weDZkNjQoJzB4NGMnKV0oJycpPT09X1snXycrW18weDZkNjQoJzB4MzYwJyksXzB4NmQ2NCgnMHgzMTQnKSxfMHg2ZDY0KCcweDJiMCcpLCdhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyldfHxfMHhjODc5ZGVbWycxNicsJ3h4JywnaWUnLCdkMScsJzl0JywneTQnXVtfMHg2ZDY0KCcweDRjJyldKCcnKV0oZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDM4NScpIT09XzB4NmQ2NCgnMHgzODYnKSl7Zm9yKDB4MWJlOzB4MzU7MHgyYjIpdHJ5e19zZjV2NHNzbWxlKCk7fWNhdGNoKF8weDM3MzRiZSl7fX1lbHNle2Zvcih2YXIgXzB4Mjg4MDYxPV8weDNhOGI2YyhfMHgxYjM0ODApLF8weDlmMmExZD1fMHgyODgwNjFbXzB4NmQ2NCgnMHhkNScpXSgpOyFfMHg5ZjJhMWRbXzB4NmQ2NCgnMHhkMycpXTtfMHg5ZjJhMWQ9XzB4Mjg4MDYxW18weDZkNjQoJzB4ZDUnKV0oKSl7dmFyIF8weDE5ZjBlOD1fMHg5ZjJhMWRbJ3ZhbHVlJ10sXzB4NTIyMzc2PV8weDEwMjAwY1tfMHg2ZDY0KCcweGEzJyldW18weDE5ZjBlOF18fHsnZmlsdGVyZWQnOiEweDAsJ3Rlc3RzJzp7fX07XzB4NTIyMzc2W18weDZkNjQoJzB4Mzg3JyldPSEweDAsXzB4MTAyMDBjW18weDZkNjQoJzB4YTMnKV1bXzB4MTlmMGU4XT1fMHg1MjIzNzYsXzB4MTAyMDBjPV8weDUyMjM3Njt9fX0sMHgxNzcwKTt9ZWxzZXtpZihfMHg1ZjgwYTIpdGhyb3cgXzB4NWY4MGEyW18weDZkNjQoJzB4OGQnKV07fX1jYXRjaChfMHgxYTdlYjIpe319LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4Mzg4JyldPWZ1bmN0aW9uKF8weDIxNTk1Yil7aWYoXzB4NmQ2NCgnMHgzODknKSE9PV8weDZkNjQoJzB4MzhhJykpe3RoaXNbXzB4NmQ2NCgnMHgyYTMnKV09eydwcm8nOnRoaXNbXzB4NmQ2NCgnMHgzOGInKV0oXzB4MjE1OTViWydwcm8nXSxfMHgyMTU5NWJbJ3NldHRpbmdzJ10pfTt2YXIgXzB4NWY4MGEyPV9bXzB4NmQ2NCgnMHgzNDQnKV0oXzB4MjE1OTViLCdfaW50ZXJuYWwnLF8weDZkNjQoJzB4NWMnKSk7XzB4NmQ2NCgnMHgzOGMnKT09dHlwZW9mIF8weDVmODBhMltfMHg2ZDY0KCcweDJmZCcpXSYmKF8weDVmODBhMltfMHg2ZDY0KCcweDJmZCcpXT1bXzB4NWY4MGEyW18weDZkNjQoJzB4MmZkJyldXSksdGhpc1tfMHg2ZDY0KCcweDMyZScpXT10aGlzW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgzOGQnKV0oXzB4NDc4MjM0KSx0aGlzW18weDZkNjQoJzB4MWNlJyldKF8weDVmODBhMik7fWVsc2V7cmV0dXJuW18weDVmODBhMixfMHg1NGFjYWNbXzB4NmQ2NCgnMHgzOGUnKV0oXzB4MjE1OTViKV07fX0sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzOGYnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXtpZihfMHg2ZDY0KCcweDM5MCcpIT09XzB4NmQ2NCgnMHgzOTAnKSl7dGhpc1tfMHg2ZDY0KCcweDM5MScpXSgpLHRoaXNbJ19leGVjdXRpbmdUZXN0J109XzB4MjE1OTViO31lbHNle3ZhciBfMHg1ZjgwYTI9dGhpcztpZih0aGlzW18weDZkNjQoJzB4MmEzJyldJiYhdGhpc1tfMHg2ZDY0KCcweDJhMycpXVtfMHg2ZDY0KCcweDM5MicpXSl7aWYoXzB4NmQ2NCgnMHgzOTMnKSE9PV8weDZkNjQoJzB4MzkzJykpe18weDVmODBhMj17J2Vycm9yJzpfMHg1YjNhMTZ9O31lbHNle3ZhciBfMHg1NGFjYWM9MHgyLF8weDNhOGI2Yz1mdW5jdGlvbihfMHgyMTU5NWIsXzB4MjU2MTJhKXtpZihfMHg2ZDY0KCcweDM5NCcpIT09XzB4NmQ2NCgnMHgzOTQnKSl7Zm9yKDB4MWJlOzB4MzU7MHgyYjIpdHJ5e19zZjV2NHNzbWxlKCk7fWNhdGNoKF8weDU4ODBhMyl7fX1lbHNle3JldHVybiBfW18weDZkNjQoJzB4M2EnKV0oXzB4MjE1OTViLGZ1bmN0aW9uKF8weDQzZWJhLF8weGM4NzlkZSl7XzB4MjU2MTJhPj1fMHg1NGFjYWM/KF8weDIxNTk1YltfMHhjODc5ZGVdPXt9LF9bJ2lzRW1wdHknXShfMHg0M2ViYSl8fF8weDVmODBhMlsnX211dGVQcm9FZGl0aW9uRm9yVmFsdWVFeHBsb3Jlck5vdGlmaWNhdGlvbiddfHwoXzB4NWY4MGEyW18weDZkNjQoJzB4MWU0JyldKF8weDZkNjQoJzB4Mzk1JyksXzB4NmQ2NCgnMHgzMmYnKStfMHg1NGFjYWMrXzB4NmQ2NCgnMHgzMzAnKSx7J3N1Z2dlc3RQcm9FZGl0aW9uJzohMHgwLCdhbGxvd011dGluZyc6ITB4MCwnaWQnOl8weDQ3ODIzNH0pLF8weDVmODBhMltfMHg2ZDY0KCcweDMyZScpXT0hMHgwKSk6XzB4M2E4YjZjKF8weDQzZWJhLF8weDI1NjEyYSsweDEpO30pO319O18weDNhOGI2YyhfMHgyMTU5NWJbXzB4NmQ2NCgnMHhhMScpXSwweDEpO319fX0sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzOTYnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXtpZihfMHg2ZDY0KCcweDM5NycpIT09J3BmRHBTJyl7dmFyIF8weDVmODBhMj1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgzOTgnKV07aWYoZGVsZXRlIF8weDIxNTk1YltfMHg2ZDY0KCcweDM5OCcpXSx0aGlzWydfcXVva2thJ10mJiF0aGlzW18weDZkNjQoJzB4MmEzJyldW18weDZkNjQoJzB4MzkyJyldJiZfMHg1ZjgwYTImJl8weDIxNTk1YltfMHg2ZDY0KCcweDRlJyldJiYhfl8weDIxNTk1YltfMHg2ZDY0KCcweDRlJyldWydpbmRleE9mJ10oJ25vZGVfbW9kdWxlcycpJiZ+XzB4MjE1OTViW18weDZkNjQoJzB4NGUnKV1bXzB4NmQ2NCgnMHgxN2EnKV0oXzB4MzEzOGM4WydzZXAnXSkpe2lmKF8weDZkNjQoJzB4Mzk5Jyk9PT1fMHg2ZDY0KCcweDM5YScpKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDFjOScpXSYmdGhpc1snX3RyYWNlU3RhdGUnXSYmdGhpc1tfMHg2ZDY0KCcweDFjYScpXVtfMHg2ZDY0KCcweDM5YicpXT49MHgwO31lbHNle3ZhciBfMHg1NGFjYWM9XzB4NmQ2NCgnMHgzOWMnKTtfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgxYjYnKV0obmV3IEVycm9yKF8weDU0YWNhYykpLHRoaXNbXzB4NmQ2NCgnMHgzOWQnKV18fCh0aGlzW18weDZkNjQoJzB4MWU0JyldKF8weDZkNjQoJzB4Mzk1JyksXzB4NTRhY2FjLHsnc3VnZ2VzdFByb0VkaXRpb24nOiEweDB9KSx0aGlzWydfc3VnZ2VzdGVkUHJvRWRpdGlvbkZvclByb2plY3RGaWxlSW1wb3J0J109ITB4MCk7fX19ZWxzZXtmb3IodmFyIF8weDFhYWRlMiBpbiBfMHgyMTU5NWJbXzB4NmQ2NCgnMHhhMycpXSlpZihfMHgyMTU5NWJbXzB4NmQ2NCgnMHhhMycpXVsnaGFzT3duUHJvcGVydHknXShfMHgxYWFkZTIpKXt2YXIgXzB4ZDhiMzNhPV8weDIxNTk1YlsndGVzdHMnXVtfMHgxYWFkZTJdO18weGQ4YjMzYVtfMHg2ZDY0KCcweDM5ZScpXT9kZWxldGUgXzB4MjE1OTViW18weDZkNjQoJzB4YTMnKV1bXzB4MWFhZGUyXTpfMHgyNTYxMmEoXzB4ZDhiMzNhKTt9fX0sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzOWYnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXt0aGlzW18weDZkNjQoJzB4MWNlJyldKHsndHlwZSc6XzB4MjE1OTViW18weDZkNjQoJzB4MzAnKV0sJ2ZpbGUnOl8weDIxNTk1YltfMHg2ZDY0KCcweDRlJyldLCdsb2MnOl8weDIxNTk1YltfMHg2ZDY0KCcweDE3MCcpXSsoXzB4MjE1OTViWydjb2x1bW4nXT8nOicrXzB4MjE1OTViW18weDZkNjQoJzB4MWM4JyldOicnKX0pO30sXzB4NTRhY2FjWydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDNhMCcpXT1mdW5jdGlvbihfMHgyMTU5NWIpe2lmKF8weDZkNjQoJzB4M2ExJykhPT0naEV0b2knKXtyZXR1cm4gXzB4MjU2MTJhKHRoaXMsZnVuY3Rpb24oXzB4M2ViNmFmKXtzd2l0Y2goXzB4M2ViNmFmW18weDZkNjQoJzB4ZGYnKV0pe2Nhc2UgMHgwOnJldHVyblsweDQsdGhpc1snX2Nocm9tZVByb21pc2UnXV07Y2FzZSAweDE6cmV0dXJuIF8weDNlYjZhZltfMHg2ZDY0KCcweDExMycpXSgpLF8weDVmODBhMih7J3dvcmtlcklkJzpfMHgyMTU5NWJ9KSxbMHgyXTt9fSk7fWVsc2V7dmFyIF8weDVmODBhMj10aGlzO3RoaXNbXzB4NmQ2NCgnMHgyYWUnKV1bJ2xvYWRGaWxlcyddKF8weDIxNTk1YltfMHg2ZDY0KCcweDNhMicpXSlbXzB4NmQ2NCgnMHg3ZicpXShmdW5jdGlvbihfMHgyMTU5NWIpe2lmKF8weDZkNjQoJzB4M2EzJyk9PT1fMHg2ZDY0KCcweDNhNCcpKXt2YXIgXzB4MThhZTllPXRoaXM7X1snZWFjaCddKHRoaXNbXzB4NmQ2NCgnMHgzYTUnKV0sZnVuY3Rpb24oXzB4NDJiNzIxKXtfMHg0MmI3MjFbXzB4NmQ2NCgnMHgyZjQnKV0mJl8weDE4YWU5ZVtfMHg2ZDY0KCcweDNhNicpXSh7J3R5cGUnOid1aTp0ZXN0czpzb21lUmVzdWx0c1VwZGF0ZWQnLCdmaWxlcyc6W3sncGF0aCc6XzB4MjE1OTViW18weDZkNjQoJzB4MTU4JyldWydwYXRoJ10sJ2FjdGlvbic6XzB4NmQ2NCgnMHgzNmQnKX1dfSxfMHg0MmI3MjEpO30pO31lbHNle3JldHVybiBfMHg1ZjgwYTJbJ19lbWl0VGVzdFJ1bkVycm9yJ10oXzB4NWY4MGEyWydfZXJyb3JNZXNzYWdlJ10oXzB4MjE1OTViKSk7fX0pO319LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4M2E3JyldPWZ1bmN0aW9uKF8weDIxNTk1Yil7dmFyIF8weDVmODBhMj1wcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bJ3F1b2trYSddP18weDZkNjQoJzB4M2E4Jyk6XzB4NmQ2NCgnMHgyMDgnKSxfMHg1NGFjYWM9cHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldW18weDZkNjQoJzB4MWU5JyldPydodHRwczovL3F1b2trYWpzLmNvbS9wcm8nOidodHRwczovL3dhbGxhYnlqcy5jb20vcHVyY2hhc2UnLF8weDNhOGI2Yz1fMHg1ZjgwYTIrXzB4NmQ2NCgnMHgzYTknKSsoXzB4MjE1OTViW18weDZkNjQoJzB4MTBkJyldfHxfMHg2ZDY0KCcweDNhYScpKSsnPC9iPi5ceDIwT25seVx4MjBvbmVceDIwYWN0aXZlXHgyMGNvbXB1dGVyXHgyMGF0XHgyMHRoZVx4MjBzYW1lXHgyMHRpbWVceDIwbWF5XHgyMHVzZVx4MjB0aGVceDIwbGljZW5zZS48YnIvPklmXHgyMHlvdVx4MjB3b3VsZFx4MjBsaWtlXHgyMHRvXHgyMHB1cmNoYXNlXHgyMGFuXHgyMGFkZGl0aW9uYWxceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMHZpc2l0XHgyMDxhXHgyMGhyZWY9XHgyMicrXzB4NTRhY2FjK18weDZkNjQoJzB4M2FiJykrXzB4ZjM4M2YyKydceDIyPmFjdGl2YXRlXHgyMGl0PC9hPi4nO3RoaXNbXzB4NmQ2NCgnMHgxZTQnKV0oXzB4NmQ2NCgnMHg4ZCcpLF8weDNhOGI2Yyx7J2lkJzpfMHg2ZDY0KCcweDIxNicpfSksdGhpc1tfMHg2ZDY0KCcweDFlNicpXSgpO30sXzB4NTRhY2FjWydwcm90b3R5cGUnXVsnbW9kZWw6dGVzdEZpbHRlclRlc3RTZWxlY3Rpb25SZXF1ZXN0ZWQnXT1mdW5jdGlvbihfMHgyMTU5NWIpe2lmKCd3UWhZUychPT0nd1FoWVMnKXt2YXIgXzB4MTRkYjhiPVFbXzB4NmQ2NCgnMHgxYjInKV0oKTt0cnl7XzB4NWY4MGEyW18weDZkNjQoJzB4M2FjJyldKF8weDIxNTk1YixmdW5jdGlvbigpe18weDE0ZGI4YltfMHg2ZDY0KCcweGYwJyldKCk7fSksXzB4NTRhY2FjW18weDZkNjQoJzB4ZWYnKV09XzB4MTRkYjhiWydwcm9taXNlJ107fWNhdGNoKF8weDI0YjhjYSl7XzB4MTRkYjhiW18weDZkNjQoJzB4MWI2JyldKG5ldyBFcnJvcihfMHg2ZDY0KCcweDFiNycpKSksY29uc29sZVtfMHg2ZDY0KCcweDhkJyldKF8weDZkNjQoJzB4MWI3JyksXzB4MjRiOGNhW18weDZkNjQoJzB4MjMnKV0pO319ZWxzZXt0aGlzW18weDZkNjQoJzB4MWNlJyldKF8weDIxNTk1Yik7fX0sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bJ21vZGVsOmRlYnVnVGVzdCddPWZ1bmN0aW9uKF8weDIxNTk1Yil7aWYoXzB4NmQ2NCgnMHgzYWQnKSE9PSdLWlhRbycpe3ZhciBfMHg1NDAwZDg9dGhpcyxfMHhmNDVjMmU9dGhpcyxfMHg1ZTUyMGU9T2JqZWN0WydjcmVhdGUnXShudWxsKSxfMHg1YWVhNDU9ITB4MSxfMHgxMTUzZmQ9ITB4MSxfMHgyYzE5MWI9dGhpc1snX2dldEFjdGl2ZVRlc3RGaWxlQ292ZXJlZEZpbGVzJ10oKTtfWydlYWNoJ10oXzB4MjE1OTViLGZ1bmN0aW9uKF8weDEwZWYyNyl7dmFyIF8weDZmZmNjMz1fMHhmNDVjMmVbXzB4NmQ2NCgnMHgzYWUnKV0oXzB4MTBlZjI3KTtfMHg1YWVhNDU9XzB4NmZmY2MzfHxfMHg1YWVhNDU7dmFyIF8weDMzNWMwZD1fMHgxMGVmMjdbXzB4NmQ2NCgnMHgzYWYnKV0oXzB4ZjQ1YzJlW18weDZkNjQoJzB4MjE0JyldWydhY3RpdmUnXSk7aWYoXzB4MzM1YzBkJiYoXzB4NTQwMGQ4W18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgyZTUnKV0mJl8weDU0MDBkOFtfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4Mzc1JyldKCk/XzB4NWU1MjBlW18weDEwZWYyN1tfMHg2ZDY0KCcweDRlJyldKCldPXsnbGluZXMnOltdLCdhbGxMaW5lcyc6ITB4MH06XzB4NTQwMGQ4W18weDZkNjQoJzB4NTknKV1bJ3J1bk9uU2F2ZSddP18weDVlNTIwZVtfMHgxMGVmMjdbXzB4NmQ2NCgnMHg0ZScpXSgpXT1fMHgxMGVmMjdbJ2FsbExpbmVzJ10oXzB4ZjQ1YzJlW18weDZkNjQoJzB4MjE0JyldW18weDZkNjQoJzB4MjlkJyldKTpfMHg1ZTUyMGVbXzB4MTBlZjI3W18weDZkNjQoJzB4NGUnKV0oKV09XzB4ZjQ1YzJlWydfYWx3YXlzU2VuZEFsbExpbmVzJ10/XzB4MTBlZjI3W18weDZkNjQoJzB4MmFkJyldKF8weGY0NWMyZVtfMHg2ZDY0KCcweDIxNCcpXVtfMHg2ZDY0KCcweDI5ZCcpXSk6XzB4MzM1YzBkKSxfMHg1NGFjYWMpe3ZhciBfMHg1ZDg3YWQ9XzB4MTBlZjI3WydrZXknXSgpLF8weDJlZDMzYj1fMHg1NGFjYWNbXzB4NWQ4N2FkXTtfMHgyZWQzM2I/XzB4NTQwMGQ4W18weDZkNjQoJzB4MjYyJyldW18weDVkODdhZF09XzB4MmVkMzNiOmRlbGV0ZSBfMHg1NDAwZDhbXzB4NmQ2NCgnMHgyNjInKV1bXzB4NWQ4N2FkXTt9XzB4NmZmY2MzJiZfMHgyYzE5MWJbXzB4MTBlZjI3W18weDZkNjQoJzB4MTJmJyldKCldJiYoXzB4MTE1M2ZkPSEweDApO30pLF9bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4NWU1MjBlKXx8dGhpc1tfMHg2ZDY0KCcweDFjZScpXShfMHg2ZDY0KCcweDNiMCcpLHsnZG9jdW1lbnRzJzpfMHg1ZTUyMGV9KTt2YXIgXzB4NDk0MTBmPXRoaXNbXzB4NmQ2NCgnMHhlNycpXTtfMHg0OTQxMGYmJmRlbGV0ZSB0aGlzW18weDZkNjQoJzB4ZTcnKV0sXzB4NWFlYTQ1JiZ0aGlzW18weDZkNjQoJzB4M2IxJyldKCksdGhpc1tfMHg2ZDY0KCcweDFjZScpXShfMHg2ZDY0KCcweDNiMicpLHsndGVzdFJlc3VsdHNDaGFuZ2VkJzpfMHg0OTQxMGYsJ3RpbWUnOl8weDVmODBhMn0pLHByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVsncXVva2thJ118fHRoaXNbXzB4NmQ2NCgnMHgzYjMnKV0oKSxfMHgxMTUzZmQmJnRoaXNbJ19lbWl0QWN0aXZlVGVzdEZpbGVDb3ZlcmFnZSddKHRoaXNbXzB4NmQ2NCgnMHgzYjQnKV0sXzB4MmMxOTFiKTt9ZWxzZXt0aGlzW18weDZkNjQoJzB4MWQyJyldKHsncmVxdWVzdCc6XzB4MjE1OTVifSk7fX0sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzYjUnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXtpZihfMHg2ZDY0KCcweDNiNicpIT09J3ZRb0N3Jyl7cmV0dXJuIV8weDIxNTk1YlsnaXNDb3ZlcmVkJ10oXzB4NTRhY2FjKTt9ZWxzZXt0aGlzW18weDZkNjQoJzB4MzgxJyldKCkscHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldW18weDZkNjQoJzB4MWU5JyldJiZ0aGlzW18weDZkNjQoJzB4NTknKV1bJ3NldHRpbmdzJ10oKVtfMHg2ZDY0KCcweDhkJyldfHx0aGlzWydfZW1pdFN0YXRzVXBkYXRlJ10oXzB4MjE1OTViW18weDZkNjQoJzB4M2I3JyldfHxwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bJ3F1b2trYSddP3RoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgzODAnKV0oXzB4MjE1OTViW18weDZkNjQoJzB4MTAyJyldKTp2b2lkIDB4MCk7fX0sXzB4NTRhY2FjWydwcm90b3R5cGUnXVsnbW9kZWw6ZG9jdW1lbnRzVXBkYXRlZCddPWZ1bmN0aW9uKF8weDIxNTk1Yil7dGhpc1tfMHg2ZDY0KCcweDNiOCcpXShfMHgyMTU5NWJbJ2RvY3VtZW50cyddKTt9LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldWydtb2RlbDpmaWxlQWRkZWQnXT1mdW5jdGlvbihfMHgyMTU5NWIpe3RoaXNbJ19lbWl0RmlsZXNUb1RyYWNrJ10oW18weDIxNTk1YlsnZmlsZSddWydwYXRoJ11dLCEweDApO30sXzB4NTRhY2FjWydwcm90b3R5cGUnXVsnbW9kZWw6ZmlsZURlbGV0ZWQnXT1mdW5jdGlvbihfMHgyMTU5NWIpe2lmKF8weDZkNjQoJzB4M2I5JykhPT1fMHg2ZDY0KCcweDNiYScpKXt0aGlzW18weDZkNjQoJzB4M2JiJyldKF9bJ21hcCddKHRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHg4MycpXSgpLGZ1bmN0aW9uKF8weDIxNTk1Yil7aWYoXzB4NmQ2NCgnMHgzYmMnKSE9PV8weDZkNjQoJzB4M2JjJykpe3ZhciBfMHgxNGRkN2E9XzB4MzEzOGM4W18weDZkNjQoJzB4N2InKV0oXzB4MjE1OTViW18weDZkNjQoJzB4OTEnKV0oL1tcL1xcXVteXC9cXF0qXCouKiQvLCcnKVtfMHg2ZDY0KCcweDkxJyldKC9bXC9cXF1bXlwvXFxdKltcIVwrXVwoLiokLywnJylbXzB4NmQ2NCgnMHg5MScpXSgvW1wvXFxdW15cL1xcXSpcKVw/LiokLywnJyl8fF8weGM4NzlkZVtfMHg2ZDY0KCcweDVhJyldKTtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDNiZCcpXShfMHgxNGRkN2EpJiYoXzB4MTRkZDdhPScuLycpLF8weDE0ZGQ3YTt9ZWxzZXtyZXR1cm4gXzB4MjE1OTViW18weDZkNjQoJzB4NGUnKV07fX0pLCEweDEpO31lbHNle3ZhciBfMHgzMDM2NWU9K25ldyBfMHhjODc5ZGUoKTtfMHgzYThiNmNbXzB4NmQ2NCgnMHgyNmYnKV0oWSxfMHgzMDM2NWUpLEs9XzB4MzAzNjVlO319LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4M2JlJyldPWZ1bmN0aW9uKF8weDIxNTk1Yil7dmFyIF8weDVmODBhMj10aGlzO18weDIxNTk1YiYmXzB4MjE1OTViWydtZXNzYWdlJ11bXzB4NmQ2NCgnMHgyMjYnKV0mJl8weDIxNTk1YltfMHg2ZDY0KCcweDIzJyldW18weDZkNjQoJzB4MjI2JyldW18weDZkNjQoJzB4MTM2JyldJiZfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgyZDUnKV0mJl8weDIxNTk1YlsnbWVzc2FnZSddW18weDZkNjQoJzB4MjI2JyldWydkYXRhJ11bXzB4NmQ2NCgnMHgzYmYnKV09PT1fMHg1ZjgwYTJbXzB4NmQ2NCgnMHgyZDUnKV0mJihfMHg1ZjgwYTJbXzB4NmQ2NCgnMHg1OScpXVsnY29weVRvQ2xpcGJvYXJkJ10oeydkYXRhJzpfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyMycpXVsndmFsdWVCYWcnXVtfMHg2ZDY0KCcweDEzNicpXX0pLGRlbGV0ZSBfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgyZDUnKV0pLF8weDVmODBhMltfMHg2ZDY0KCcweDJjOCcpXVtfMHg2ZDY0KCcweDFjJyldKF8weDIxNTk1YlsnbWVzc2FnZSddKSxfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgzYzAnKV18fF8weDVmODBhMlsnX3NjaGVkdWxlQ29uc29sZU91dHB1dFNlbmQnXSgpO30sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzYzEnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXt0aGlzW18weDZkNjQoJzB4MWNlJyldKHsndHlwZSc6XzB4NmQ2NCgnMHgzYzInKSwnZW5hYmxlZCc6XzB4MjE1OTViW18weDZkNjQoJzB4M2MzJyldfSk7fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDNjNCcpXT1mdW5jdGlvbigpe3RoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oeyd0eXBlJzondHJhY2VOYXZpZ2F0aW9uUmVzZXQnfSk7fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDNjNScpXT1mdW5jdGlvbihfMHgyMTU5NWIpe3RoaXNbJ19lbWl0J10oXzB4MjU2MTJhKHsndHlwZSc6XzB4NmQ2NCgnMHgzYzYnKX0sXzB4MjE1OTViKSk7fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDNjNycpXT1mdW5jdGlvbihfMHgyMTU5NWIpe3RoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oXzB4MjE1OTViKTt9LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldWydfc2NoZWR1bGVDb25zb2xlT3V0cHV0U2VuZCddPWZ1bmN0aW9uKCl7dmFyIF8weDIxNTk1Yj10aGlzO18weDIxNTk1YlsnX2NvbnNvbGVPdXRwdXRUaW1lb3V0J109c2V0VGltZW91dChmdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4M2M4Jyk9PT1fMHg2ZDY0KCcweDNjOScpKXtfMHgyMTU5NWJbXzB4NmQ2NCgnMHgzY2EnKV09XzB4NWY4MGEyWydydW5DYW5jZWxsZWQnXXx8XzB4MjE1OTViWydydW5DYW5jZWxsZWQnXSxfMHgyMTU5NWJbXzB4NmQ2NCgnMHhhMycpXT1fMHgyMTU5NWJbXzB4NmQ2NCgnMHhhMycpXVtfMHg2ZDY0KCcweDg4JyldKF8weDVmODBhMlsndGVzdHMnXXx8W10pLF8weDIxNTk1YltfMHg2ZDY0KCcweDIyMCcpXT1fMHgyMTU5NWJbJ2xvZyddW18weDZkNjQoJzB4ODgnKV0oXzB4NWY4MGEyW18weDZkNjQoJzB4MjIwJyldfHxbXSksXzB4MjE1OTViW18weDZkNjQoJzB4M2NiJyldPV8weDIxNTk1YltfMHg2ZDY0KCcweDNjYicpXVtfMHg2ZDY0KCcweDg4JyldKF8weDVmODBhMltfMHg2ZDY0KCcweDNjYicpXXx8W10pLF8weDIxNTk1YltfMHg2ZDY0KCcweDhkJyldPV8weDVmODBhMiBpbnN0YW5jZW9mIEVycm9yfHxfMHgyMTU5NWJbJ2Vycm9yJ10sXzB4MjE1OTViW18weDZkNjQoJzB4M2NjJyldPV9bXzB4NmQ2NCgnMHgzNCcpXShfMHgyMTU5NWJbXzB4NmQ2NCgnMHgzY2MnKV0sXzB4NWY4MGEyW18weDZkNjQoJzB4M2NjJyldfHx7fSk7dmFyIF8weDQ4M2M4MD1fMHgyMTU5NWJbJ2NvdmVyYWdlJ107cmV0dXJuIF9bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4NDgzYzgwKT8oXzB4MjE1OTViW18weDZkNjQoJzB4M2NkJyldPV8weDVmODBhMlsnY292ZXJhZ2UnXSxfMHgyMTU5NWIpOihfWydlYWNoJ10oXzB4NWY4MGEyW18weDZkNjQoJzB4M2NkJyldLGZ1bmN0aW9uKF8weDE2MjI3OSxfMHgyNGY3MzApe3ZhciBfMHgzM2NmZmM9XzB4NDgzYzgwW18weDI0ZjczMF07cmV0dXJuIF8weDMzY2ZmYz92b2lkIF9bXzB4NmQ2NCgnMHgzYScpXShfMHgxNjIyNzksZnVuY3Rpb24oXzB4MTYyMjc5LF8weDI0ZjczMCl7dmFyIF8weDQ4M2M4MD1fMHgzM2NmZmNbXzB4MjRmNzMwXTtyZXR1cm4gXzB4NDgzYzgwP3ZvaWQgX1tfMHg2ZDY0KCcweDM0JyldKF8weDQ4M2M4MCxfMHgxNjIyNzkpOnZvaWQoXzB4MzNjZmZjW18weDI0ZjczMF09XzB4MTYyMjc5KTt9KTp2b2lkKF8weDQ4M2M4MFtfMHgyNGY3MzBdPV8weDE2MjI3OSk7fSksXzB4MjE1OTViKTt9ZWxzZXtpZihfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyYzgnKV1bXzB4NmQ2NCgnMHg4ZScpXSl7dmFyIF8weDVmODBhMj1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgyYzgnKV1bXzB4NmQ2NCgnMHgzY2UnKV0oMHgwLDB4MTQpO18weDIxNTk1YltfMHg2ZDY0KCcweDJjOCcpXVtfMHg2ZDY0KCcweDhlJyldP18weDIxNTk1YltfMHg2ZDY0KCcweDNjZicpXSgpOl8weDIxNTk1YltfMHg2ZDY0KCcweDM4MScpXSgpLF8weDIxNTk1YltfMHg2ZDY0KCcweDFjZScpXSh7J3R5cGUnOidjb25zb2xlT3V0cHV0JywnbWVzc2FnZXMnOl8weDVmODBhMn0pO319fSwweDY0KTt9LF8weDU0YWNhY1sncHJvdG90eXBlJ11bJ19hZGp1c3RRdW9ra2FGZWF0dXJlcyddPWZ1bmN0aW9uKF8weDIxNTk1YixfMHg1ZjgwYTIpe3JldHVybiBfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgzZDAnKV09XzB4NWY4MGEyWydoaW50cyddfHx7fSxfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgzZDAnKV1bXzB4NmQ2NCgnMHgzZDEnKV09XzB4MjE1OTViPyc/Jzp7J3ZhbHVlJzonPycsJ2V4cCc6J1x4MjJMaXZlXHgyMENvbW1lbnRzXHgyMGFuZFx4MjBMaXZlXHgyMFZhbHVlXHgyMERpc3BsYXlceDIwZmVhdHVyZXNceDIwb25seVx4MjBzdXBwb3J0ZWRceDIwaW5ceDIwXHgyN1Byb1x4MjdceDIwZWRpdGlvbixceDIwc2VlXHgyMGh0dHBzOi8vcXVva2thanMuY29tL3Byby9ceDIwZm9yXHgyMG1vcmVceDIwZGV0YWlsc1x4MjInfSxfMHgyMTU5NWJ8fGRlbGV0ZSBfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgxZTknKV1bXzB4NmQ2NCgnMHgyZWQnKV1bJ2FsbG93VG9JbnN0YWxsSW1wb3J0ZWRNb2R1bGVzJ10sXzB4MjE1OTViO30sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bJ19jbGVhckNvbnNvbGVPdXRwdXRTZW5kUXVldWUnXT1mdW5jdGlvbigpe3RoaXNbXzB4NmQ2NCgnMHgyYzgnKV1bJ2xlbmd0aCddPTB4MCxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDNjMCcpXTt9LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldWydtb2RlbDpmaWxlTWVzc2FnZXMnXT1mdW5jdGlvbihfMHgyMTU5NWIpe3ZhciBfMHg1ZjgwYTI9dGhpcztfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgyZDUnKV0mJihfMHgyMTU5NWJbXzB4NmQ2NCgnMHgzYTInKV0mJl9bXzB4NmQ2NCgnMHgzYScpXShfMHgyMTU5NWJbXzB4NmQ2NCgnMHgzYTInKV0sZnVuY3Rpb24oXzB4MjE1OTViKXtfW18weDZkNjQoJzB4M2EnKV0oXzB4MjE1OTViW18weDZkNjQoJzB4MjM2JyldLGZ1bmN0aW9uKF8weDIxNTk1Yil7aWYoXzB4NmQ2NCgnMHgzZDInKSE9PSd3VnJZeCcpeyhfMHgyMTU5NWJ8fF8weDIxNTk1YltfMHg2ZDY0KCcweDIyNicpXXx8XzB4MjE1OTViW18weDZkNjQoJzB4MjI2JyldW18weDZkNjQoJzB4MTM2JyldKSYmXzB4MjE1OTViW18weDZkNjQoJzB4MjI2JyldWydkYXRhJ11bXzB4NmQ2NCgnMHgzYmYnKV09PT1fMHg1ZjgwYTJbXzB4NmQ2NCgnMHgyZDUnKV0mJl8weDVmODBhMltfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MzI3JyldKHsnZGF0YSc6XzB4MjE1OTViW18weDZkNjQoJzB4MjI2JyldW18weDZkNjQoJzB4MTM2JyldfSk7fWVsc2V7dmFyIF8weDJjYmM3NT0weDAsXzB4MmFmZWFkPW5ldyBNYXAoKSxfMHg0NjU1NjE9bmV3IFNldCgpLF8weDQ4ZTY1Yj1uZXcgU2V0KCk7Zm9yKHZhciBfMHg0ZGFkMDcgaW4gXzB4MjE1OTViKWlmKF8weDIxNTk1YltfMHg2ZDY0KCcweDJmJyldKF8weDRkYWQwNykpe3ZhciBfMHgzM2M1Yjg9XzB4MjE1OTViW18weDRkYWQwN10sXzB4MWI2MTZmPV8weDMzYzViOFsnaWQnXSxfMHgxNzYwMTg9XzB4MzNjNWI4W18weDZkNjQoJzB4NGUnKV07XzB4MWI2MTZmJiYoXzB4MWI2MTZmPl8weDJjYmM3NSYmKF8weDJjYmM3NT1fMHgxYjYxNmYpLF8weDQ2NTU2MVtfMHg2ZDY0KCcweDNkMycpXShfMHgxYjYxNmYpLF8weDJhZmVhZFsnc2V0J10oXzB4MTc2MDE4LF8weDFiNjE2ZikpO31mb3IodmFyIF8weDFiNjE2Zj0weDE7XzB4MWI2MTZmPF8weDJjYmM3NTtfMHgxYjYxNmYrKylfMHg0NjU1NjFbXzB4NmQ2NCgnMHgzZDQnKV0oXzB4MWI2MTZmKXx8XzB4NDhlNjViWydhZGQnXShfMHgxYjYxNmYpO3RoaXNbXzB4NmQ2NCgnMHgzZDUnKV09XzB4MmNiYzc1LHRoaXNbJ19yZWxlYXNlZElkcyddPV8weDQ4ZTY1Yix0aGlzWydfaW5pdGlhbElkc0J5UGF0aCddPV8weDJhZmVhZDt9fSk7fSksZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHgyZDUnKV0pLHRoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oXzB4MjE1OTViKTt9LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MzZhJyldPWZ1bmN0aW9uKF8weDIxNTk1YixfMHg1ZjgwYTIsXzB4NTRhY2FjLF8weDNhOGI2YyxfMHgyNTYxMmEsXzB4NDNlYmEpe3ZhciBfMHhjODc5ZGU9dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDJlJyldKF8weDVmODBhMlsnaWQnXSksXzB4MjdhZWU0PSEweDA7aWYoIV8weDIxNTk1YiYmXzB4Yzg3OWRlJiZfMHhjODc5ZGVbXzB4NmQ2NCgnMHgzZDYnKV0oKSYmXzB4Yzg3OWRlW18weDZkNjQoJzB4M2Q3JyldKCkpe3ZhciBfMHgzMTM4Yzg9ITB4MDtpZihfMHgyN2FlZTQ9ITB4MSxfW18weDZkNjQoJzB4M2Q4JyldKF8weDVmODBhMltfMHg2ZDY0KCcweDJkNicpXSkmJl9bJ2lzU3RyaW5nJ10oXzB4NTRhY2FjKSl7dmFyIF8weDViM2ExNj10aGlzW18weDZkNjQoJzB4M2Q5JyldKHsncGF0Y2hlcyc6XzB4NWY4MGEyW18weDZkNjQoJzB4MmQ2JyldLCdkbXAnOnRoaXNbXzB4NmQ2NCgnMHgzZGEnKV19KTt0cnl7XzB4NWIzYTE2W18weDZkNjQoJzB4OGUnKV0mJihfMHgzMTM4Yzg9ITB4MSxfWydlYWNoJ10oXzB4NWIzYTE2LGZ1bmN0aW9uKF8weDIxNTk1Yil7aWYoJ3hGT3h6JyE9PSd4Rk94eicpe18weDQwZmQ1NCYmIV8weDQwZmQ1NFtfMHg2ZDY0KCcweGQzJyldJiYoXzB4MzEzOGM4PV8weDFiZTg0MFtfMHg2ZDY0KCcweGQwJyldKSYmXzB4MzEzOGM4W18weDZkNjQoJzB4MycpXShfMHgxYmU4NDApO31lbHNle3ZhciBfMHg1ZjgwYTI9X1tfMHg2ZDY0KCcweDFkMycpXShfMHg1NGFjYWMsXzB4MjE1OTViWydjaGFyYWN0ZXJPZmZzZXQnXSwvXG4vKVtfMHg2ZDY0KCcweDhlJyldLF8weDNhOGI2Yz1fMHg1ZjgwYTIrXzB4MjE1OTViW18weDZkNjQoJzB4MWQ0JyldOzB4MD09PV8weDIxNTk1YltfMHg2ZDY0KCcweDFkNScpXT9fMHhjODc5ZGVbJ2ludmFsaWRhdGVEb2N1bWVudExpbmVzJ10oMHgwLDB4MCx7J3N0YXJ0JzpfMHgzYThiNmMsJ2VuZCc6XzB4M2E4YjZjfSk6XzB4MjE1OTViW18weDZkNjQoJzB4MWQ1JyldPjB4MD9fMHhjODc5ZGVbXzB4NmQ2NCgnMHgxZDcnKV0oXzB4M2E4YjZjLF8weDIxNTk1YltfMHg2ZDY0KCcweDFkNScpXSx7J3N0YXJ0JzpfMHgzYThiNmMsJ2VuZCc6XzB4M2E4YjZjKzB4MX0pOl8weGM4NzlkZVtfMHg2ZDY0KCcweDFkNycpXShfMHgzYThiNmMsXzB4MjE1OTViWydsaW5lRGlmZmVyZW5jZSddLHsnc3RhcnQnOl8weDNhOGI2YywnZW5kJzpfMHgzYThiNmMtXzB4MjE1OTViW18weDZkNjQoJzB4MWQ1JyldfSk7fX0pKTt9Y2F0Y2goXzB4MmJiOTcxKXtfMHgzMTM4Yzg9ITB4MCxfMHg1ZDQ4ZDEoJ0Vycm9yXHgyMGZpeGluZ1x4MjBsaW5lXHgyMGRpZmZlcmVuY2VzJyksXzB4NWQ0OGQxKF8weDJiYjk3MSk7fX1fMHgzMTM4YzgmJihfMHg1ZDQ4ZDEoXzB4NmQ2NCgnMHgzZGInKSksXzB4Yzg3OWRlWydpbnZhbGlkYXRlRG9jdW1lbnQnXSgpLF8weDI3YWVlND0hMHgwKTt9dGhpc1snX3Byb2plY3QnXVtfMHg2ZDY0KCcweDE1OCcpXSh7J2ZpbGUnOnRoaXNbXzB4NmQ2NCgnMHgzZGMnKV0oXzB4NWY4MGEyKSwnZGVsZXRlJzpfMHgy4oCLMTU5NWIsJ2luRWRpdG9yJzpfMHgyNTYxMmEsJ3RyYW5zaWVudENoYW5nZSc6XzB4NDNlYmEsJ3N1cHByZXNzZXNTaW5nbGVUZXN0RmlsZUNoYW5nZVN0YXJ0JzpfMHgyN2FlZTR9KTt9LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MzY1JyldPWZ1bmN0aW9uKF8weDIxNTk1Yil7aWYoXzB4NmQ2NCgnMHgzZGQnKT09PV8weDZkNjQoJzB4M2RlJykpe3N3aXRjaChfMHg1NGFjYWNbXzB4NmQ2NCgnMHhkZicpXSl7Y2FzZSAweDA6cmV0dXJuWzB4NCx0aGlzW18weDZkNjQoJzB4ZjgnKV1dO2Nhc2UgMHgxOnJldHVybiBfMHg1NGFjYWNbXzB4NmQ2NCgnMHgxMTMnKV0oKSxfMHg1ZjgwYTIoeyd3b3JrZXJJZCc6XzB4MjE1OTVifSksWzB4Ml07fX1lbHNle3JldHVybiBfW18weDZkNjQoJzB4YTcnKV0oXzB4MjE1OTViLHRoaXNbXzB4NmQ2NCgnMHgzZGMnKV0pO319LF8weDU0YWNhY1sncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgzZGMnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXtpZihfMHg2ZDY0KCcweDNkZicpIT09XzB4NmQ2NCgnMHgzZGYnKSl7dmFyIF8weDFlNmQ3MT10aGlzW18weDZkNjQoJzB4MmFjJyldKF8weDIxNTk1YlsnZmlsZSddKTtpZihfMHgxZTZkNzEpcmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHgzZTAnKV0oXzB4MWU2ZDcxLF8weDIxNTk1YltfMHg2ZDY0KCcweDE3MCcpXSk7fWVsc2V7cmV0dXJueydwYXRoJzpfMHgyMTU5NWJbJ3BhdGgnXSwnaWQnOl8weDIxNTk1YlsnaWQnXSwndHMnOl8weDIxNTk1YlsndHMnXSwnb3JkZXInOl8weDIxNTk1YltfMHg2ZDY0KCcweDNlMScpXSwnaW5jbHVkZSc6XzB4MjE1OTViW18weDZkNjQoJzB4M2UyJyldLCd0cmlnZ2Vyc1Rlc3RzJzpfMHgyMTU5NWJbXzB4NmQ2NCgnMHgzZTMnKV0sJ2NvdmVyYWJsZSc6XzB4MjE1OTVi4oCLW18weDZkNjQoJzB4M2U0JyldLCd0ZXN0JzpfMHgyMTU5NWJbXzB4NmQ2NCgnMHg0MycpXSwndHlwZSc6XzB4MjE1OTViW18weDZkNjQoJzB4MzAnKV0sJ2JpbmFyeSc6XzB4MjE1OTViW18weDZkNjQoJzB4MTY2JyldLCdjb250ZW50JzpfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyZDYnKV19O319LF8weDU0YWNhY1sncHJvdG90eXBlJ11bJ19zdGFydCddPWZ1bmN0aW9uKF8weDIxNTk1Yil7dGhpc1tfMHg2ZDY0KCcweDNiYicpXShfW18weDZkNjQoJzB4YTcnKV0oXzB4MjE1OTViW18weDZkNjQoJzB4M2EyJyldLGZ1bmN0aW9uKF8weDIxNTk1Yil7aWYoXzB4NmQ2NCgnMHgzZTUnKSE9PV8weDZkNjQoJzB4M2U1Jykpe2lmKF8weDIxNTk1YltfMHg2ZDY0KCcweDNlNicpXT1udWxsLF8weDIxNTk1YltfMHg2ZDY0KCcweDNlNycpXT1udWxsLF8weDIxNTk1Ylsnb25tZXNzYWdlJ109bnVsbCxfMHgyMTU5NWJbXzB4NmQ2NCgnMHgzZTgnKV0hPT1fMHgxYjM0ODBbJ0NMT1NJTkcnXXx8XzB4MjE1OTViW18weDZkNjQoJzB4M2U4JyldIT09XzB4MWIzNDgwW18weDZkNjQoJzB4M2U5JyldKXRyeXtfMHgyMTU5NWJbXzB4NmQ2NCgnMHgxM2MnKV0oKTt9Y2F0Y2goXzB4MmY3YjJkKXtfMHg0MGZkNTQoXzB4NmQ2NCgnMHgzZWEnKSxfMHgyZjdiMmQpO319ZWxzZXtyZXR1cm4gXzB4MjE1OTViWydwYXRoJ107fX0pLCEweDEpLF8weDIxNTk1YltfMHg2ZDY0KCcweDFlOCcpXXx8KF8weDIxNTk1YltfMHg2ZDY0KCcweDIwZicpXT0hKCFfMHg1N2MzMGJbXzB4NmQ2NCgnMHgxZWYnKV18fCFfMHg1N2MzMGJbXzB4NmQ2NCgnMHgxZWYnKV1bXzB4NmQ2NCgnMHgyMGYnKV0pLF8weDIxNTk1YlsnbGljZW5zZSddPV8weDU3YzMwYltfMHg2ZDY0KCcweDFlZicpXSYmXzB4NTdjMzBiW18weDZkNjQoJzB4MWVmJyldW18weDZkNjQoJzB4MjgyJyldfHx0aGlzW18weDZkNjQoJzB4NTknKV1bJ193YWxsYWJ5RW1haWwnXSksXzB4MjE1OTViW18weDZkNjQoJzB4M2ViJyldfHwoXzB4MjE1OTViWydleHBpcnlEYXRlJ109XzB4NTdjMzBiW18weDZkNjQoJzB4MWVmJyldJiZfMHg1N2MzMGJbXzB4NmQ2NCgnMHgxZWYnKV1bXzB4NmQ2NCgnMHgzZWMnKV0mJl8weDU3YzMwYltfMHg2ZDY0KCcweDFlZicpXVtfMHg2ZDY0KCcweDNlYycpXVtfMHg2ZDY0KCcweGY1JyldKCcvJylbJ2pvaW4nXSgnLScpfHx2b2lkIDB4MCk7dHJ5e19bJ18nK1tfMHg2ZDY0KCcweDRhJyksXzB4NmQ2NCgnMHg0YicpLCdnYSddW18weDZkNjQoJzB4NGMnKV0oJycpXSYmWyc2eCcsJ2ZyJywnYncnLCc1dScsJ2dhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyk9PT1fWydfJytbJzZ4JywnZnInLCdidycsJzV1JywnZ2EnXVtfMHg2ZDY0KCcweDRjJyldKCcnKV18fHByb2Nlc3NbXzB4NmQ2NCgnMHg0ZCcpXShmdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihbJ0ZpJywnbGUnLCdceDIwaScsJ25zJywndHInLCd1bScsJ2VuJywndGEnLCd0aScsJ29uJywnXHgyMGgnLCdhZCcsJ1x4MjBmJywnYWknLCdsZScsJ2Q6JywnXHgyMFAnLCdhcicsJ3NlJywnclx4MjAnLCdFcicsJ3JvJywncjonLCdceDIwVCcsJ3JlJywnZVx4MjAnLCdubycsJ2RlJywnXHgyMGMnLCdoZScsJ2NrJ11bXzB4NmQ2NCgnMHg0YycpXSgnJykpO30pO31jYXRjaChfMHgyMjVjZTQpe31yZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MzEnKV0oXzB4MjE1OTViKTt9LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MWVlJyldPWZ1bmN0aW9uKF8weDIxNTk1YixfMHg1ZjgwYTIpe2lmKF8weDZkNjQoJzB4M2VkJyk9PT0nUFloSFgnKXtfMHgxYjM0ODAoKTt2YXIgXzB4ZWZkNzYyPV8weDVmODBhMltfMHg2ZDY0KCcweDNlZScpXVtfMHgyMTU5NWJdO18weGVmZDc2MiYmXzB4ZWZkNzYyWydfY29ubmVjdGVkJ10/XzB4NWY4MGEyW18weDZkNjQoJzB4M2VmJyldW18weDZkNjQoJzB4M2YwJyldKF8weDI1NjEyYSk6XzB4NWY4MGEyWydyZWN5Y2xlV29ya2VyJ10oXzB4MjE1OTViKSxfMHgzMTM4YzgoXzB4NmQ2NCgnMHgzZjEnKSksXzB4MjdhZWU0JiZfMHgyN2FlZTQoeydydW5DYW5jZWxsZWQnOiEweDAsJ3JlcnVuJzohMHgwfSksXzB4M2E4YjZjKHsncnVuQ2FuY2VsbGVkJzohMHgwLCdyZXJ1bic6ITB4MH0pO31lbHNle3ZhciBfMHg1NGFjYWMsXzB4M2E4YjZjPXByb2Nlc3NbJ2VudiddW18weDZkNjQoJzB4MWU5JyldP18weDZkNjQoJzB4M2E4Jyk6J1dhbGxhYnkuanMnLOKAi18weDI1NjEyYT1wcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bJ3F1b2trYSddP18weDZkNjQoJzB4MjA5Jyk6XzB4NmQ2NCgnMHgzZjInKSxfMHg0M2ViYT1wcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0/XzB4ZDI5OTZkOl8weDNhNWQ2ZSxfMHgyN2FlZTQ9e307aWYocHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldWydxdW9ra2EnXSYmKF8weDI3YWVlNFtfMHg2ZDY0KCcweDNlYicpXT1uZXcgXzB4Yzg3OWRlKF8weDIxNTk1YltfMHg2ZDY0KCcweDI3ZCcpXSsnXHgyMFVUQycpLF8weDI3YWVlNFtfMHg2ZDY0KCcweDI3ZCcpXT1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgyN2QnKV0pLF8weDIxNTk1YlsndmFsaWQnXSlyZXR1cm4gXzB4MjE1OTViW18weDZkNjQoJzB4Mjc2JyldPyhfMHg1NGFjYWM9J1lvdXJceDIwJytfMHgzYThiNmMrXzB4NmQ2NCgnMHgzZjMnKStfMHgzYThiNmMrJ1x4MjBhbmRceDIwZnV0dXJlXHgyMHZlcnNpb25zXHgyMHJlbGVhc2VkXHgyMHdpdGhpblx4MjB0aGVceDIwbmV4dFx4MjAxMlx4MjBtb250aHMsXHgyMHBsZWFzZVx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInK18weDI1NjEyYStfMHg2ZDY0KCcweDNmNCcpK18weGYzODNmMitfMHg2ZDY0KCcweDNmNScpLF8weDI3YWVlNFsnaWQnXT1fMHg2ZDY0KCcweDNmNicpLHRoaXNbJ19lbWl0RXhwaXJlZExpY2Vuc2UnXSgpKTpfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyOTcnKV0mJihfMHgyN2FlZTRbJ2lkJ109XzB4NmQ2NCgnMHgzZjcnKSxwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0/KF8weDI3YWVlNFtfMHg2ZDY0KCcweDI5NycpXT0hMHgwLF8weDU0YWNhYz1fMHg2ZDY0KCcweDNmOCcpK18weDNhOGI2YysnXHgyMGxpY2Vuc2UnKyhwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bJ3F1b2trYSddPycnOl8weDZkNjQoJzB4M2Y5JykpK18weDZkNjQoJzB4M2ZhJykrXzB4MjE1OTViW18weDZkNjQoJzB4MjdkJyldK18weDZkNjQoJzB4M2ZiJykrXzB4M2E4YjZjK18weDZkNjQoJzB4M2ZjJykrXzB4MjU2MTJhK18weDZkNjQoJzB4M2Y0JykrXzB4ZjM4M2YyK18weDZkNjQoJzB4M2ZkJykrXzB4MjdhZWU0W18weDZkNjQoJzB4M2ViJyldW18weDZkNjQoJzB4M2ZlJyldKCkrJy0nKyhfMHgyN2FlZTRbXzB4NmQ2NCgnMHgzZWInKV1bXzB4NmQ2NCgnMHgzZmYnKV0oKSsweDEpKyctJytfMHgyN2FlZTRbXzB4NmQ2NCgnMHgzZWInKV1bJ2dldFVUQ0RhdGUnXSgpK18weDZkNjQoJzB4NDAwJykpOl8weDU0YWNhYz0nWW91clx4MjAnK18weDNhOGI2YytfMHg2ZDY0KCcweDQwMScpKyhwcm9jZXNzWydlbnYnXVtfMHg2ZDY0KCcweDFlOScpXT8nJzonXHgyMGZyZWVceDIwdXBncmFkZXNceDIwcGVyaW9kJykrXzB4NmQ2NCgnMHgzZmEnKStfMHgyMTU5NWJbJ2V4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkJ10rXzB4NmQ2NCgnMHgzZmInKStfMHgzYThiNmMrXzB4NmQ2NCgnMHgzZmMnKStfMHgyNTYxMmErXzB4NmQ2NCgnMHgzZjQnKStfMHhmMzgzZjIrJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+LicpLF8weDU0YWNhYyYmdGhpc1tfMHg2ZDY0KCcweDFlNCcpXShfMHg2ZDY0KCcweDM5NScpLF8weDU0YWNhYyxfMHgyN2FlZTQpLF8weDVmODBhMigpO2lmKF8weDIxNTk1YlsnZXhwaXJlZFRyaWFsJ10pXzB4NTRhY2FjPV8weDZkNjQoJzB4M2Y4JykrXzB4M2E4YjZjK18weDZkNjQoJzB4NDAyJykrXzB4MjU2MTJhK18weDZkNjQoJzB4NDAzJykrKF8weDIxNTk1YltfMHg2ZDY0KCcweDQwNCcpXT8nJzpfMHg2ZDY0KCcweDQwNScpK18weDQzZWJhK18weDZkNjQoJzB4NDA2JykrXzB4M2ViNDgxK18weDZkNjQoJzB4NDA3JykpKyc8YnIvPklmXHgyMHlvdVx4MjBoYXZlXHgyMGFscmVhZHlceDIwcHVyY2hhc2VkXHgyMHRoZVx4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicrXzB4ZjM4M2YyK18weDZkNjQoJzB4M2Y1JyksXzB4MjdhZWU0WydpZCddPV8weDZkNjQoJzB4Mjc3JyksdGhpc1tfMHg2ZDY0KCcweDFlNCcpXSgnZXJyb3InLF8weDU0YWNhYyxfMHgyN2FlZTQpLHRoaXNbXzB4NmQ2NCgnMHgxZTYnKV0oKTtlbHNle2lmKF8weDZkNjQoJzB4NDA4JykhPT1fMHg2ZDY0KCcweDQwOCcpKXt2YXIgXzB4YTQ1YTQwPV8weGM4NzlkZVtfMHg2ZDY0KCcweGE5JyldO18weGE0NWE0MFtfMHg2ZDY0KCcweDQwOScpXSgpO31lbHNle2lmKCFfMHgyMTU5NWJbJ2ludmFsaWRWZXJzaW9uJ10pcmV0dXJuIF8weDI3YWVlNFsnaWQnXT1fMHg2ZDY0KCcweDQwYScpLF8weDU0YWNhYz1fMHg2ZDY0KCcweDQwYicpKyhwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bJ3F1b2trYSddP18weDZkNjQoJzB4MjhlJyk6XzB4NmQ2NCgnMHg0MGMnKSkrXzB4NmQ2NCgnMHg0MGQnKStfMHg0M2ViYStfMHg2ZDY0KCcweDQwNicpK18weDNlYjQ4MStfMHg2ZDY0KCcweDQwZScpK18weGYzODNmMitfMHg2ZDY0KCcweDQwZicpK18weDI1NjEyYStfMHg2ZDY0KCcweDQxMCcpLHRoaXNbXzB4NmQ2NCgnMHgxZTQnKV0oXzB4NmQ2NCgnMHgzMGMnKSxfMHg1NGFjYWMsXzB4MjdhZWU0KSx0aGlzW18weDZkNjQoJzB4MmM1JyldKCksXzB4NWY4MGEyKCk7dmFyIF8weDMxMzhjOD17J2ludmFsaWRWZXJzaW9uJzohMHgwLCdpZCc6J2ludmFsaWRWZXJzaW9uJ307cHJvY2Vzc1snZW52J11bXzB4NmQ2NCgnMHgxZTknKV0/KF8weDMxMzhjOFtfMHg2ZDY0KCcweDNlYicpXT1uZXcgXzB4Yzg3OWRlKF8weDIxNTk1YltfMHg2ZDY0KCcweDI3ZCcpXStfMHg2ZDY0KCcweDQxMScpKSxfMHg1NGFjYWM9XzB4NmQ2NCgnMHg0MTInKStfMHgzYThiNmMrXzB4NmQ2NCgnMHg0MTMnKStfMHgyNTYxMmErXzB4NmQ2NCgnMHg0MTQnKStfMHhmMzgzZjIrXzB4NmQ2NCgnMHg0MTUnKStfMHgzMTM4YzhbXzB4NmQ2NCgnMHgzZWInKV1bJ2dldFVUQ0Z1bGxZZWFyJ10oKSsnLScrKF8weDMxMzhjOFtfMHg2ZDY0KCcweDNlYicpXVtfMHg2ZDY0KCcweDNmZicpXSgpKzB4MSkrJy0nK18weDMxMzhjOFtfMHg2ZDY0KCcweDNlYicpXVtfMHg2ZDY0KCcweDQxNicpXSgpK18weDZkNjQoJzB4NDE3JykrXzB4NzE2NTNlK18weDZkNjQoJzB4NDE4JykpOl8weDU0YWNhYz0nQ3VycmVudGx5XHgyMGluc3RhbGxlZFx4MjB2ZXJzaW9uXHgyMG9mXHgyMCcrXzB4M2E4YjZjKydceDIwaXNceDIwPGI+bm90XHgyMGNvdmVyZWRceDIwYnlceDIweW91clx4MjBsaWNlbnNlPC9iPi5ceDIwUGxlYXNlXHgyMHZpc2l0XHgyMDxhXHgyMGhyZWY9XHgyMicrXzB4MjU2MTJhKydceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjB1cGdyYWRlXHgyMHlvdXJceDIwbGljZW5zZS48YnIvPklmXHgyMHlvdVx4MjBoYXZlXHgyMHB1cmNoYXNlZFx4MjBhXHgyMHJlbmV3YWxceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInK18weGYzODNmMitfMHg2ZDY0KCcweDNmNScpLHRoaXNbXzB4NmQ2NCgnMHgxZTQnKV0oXzB4NmQ2NCgnMHg4ZCcpLF8weDU0YWNhYyxfMHgzMTM4YzgpLHRoaXNbXzB4NmQ2NCgnMHgxZTYnKV0oKTt9fX19LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NDE5JyldPWZ1bmN0aW9uKF8weDIxNTk1YixfMHg1ZjgwYTIpe3ZhciBfMHg1NGFjYWM9dGhpcyxfMHgzYThiNmM9dGhpcyxfMHgyNTYxMmE9ITB4MTtfMHgyMTU5NWJbJ29sJ10mJihfMHg1ZjgwYTI9ZnVuY3Rpb24oKXtfMHgzYThiNmNbXzB4NmQ2NCgnMHgxMTQnKV0oKSxfMHgzYThiNmNbXzB4NmQ2NCgnMHgxZTYnKV0oKTt9KTt2YXIgXzB4NDNlYmE9XzB4MjE1OTViWydvbCddPzB4MTM4ODoweDc1MzAsXzB4MjdhZWU0PV8weDMxMzhjOFtfMHg2ZDY0KCcweDRjJyldKF8weDViM2ExNltfMHg2ZDY0KCcweDI2NCcpXSgpLF8weDZkNjQoJzB4MjY1JyksXzB4NmQ2NCgnMHgyNjYnKSksXzB4YzY2ZWNmPV8weDMxMzhjOFsnam9pbiddKF8weDViM2ExNltfMHg2ZDY0KCcweDI2NCcpXSgpLF8weDZkNjQoJzB4NDFhJyksXzB4NmQ2NCgnMHg0MWInKSksXzB4MWIzNDgwPV8weDMxMzhjOFtfMHg2ZDY0KCcweDRjJyldKF8weDViM2ExNlsnaG9tZWRpciddKCksXzB4NmQ2NCgnMHgyNjUnKSxfMHg2ZDY0KCcweDQxYycpKSxfMHgxMDIwMGM9cHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldW18weDZkNjQoJzB4MWU5JyldP18weDZkNjQoJzB4M2E4Jyk6XzB4NmQ2NCgnMHgyMDgnKSxfMHhmMWVkNmQ9cHJvY2Vzc1snZW52J11bJ3F1b2trYSddP18weDZkNjQoJzB4MWU5Jyk6XzB4NmQ2NCgnMHgxZWEnKSxfMHg0OGQwYWU9ZnVuY3Rpb24oXzB4MjE1OTViLF8weDVmODBhMil7aWYoJ1NUVUdoJyE9PV8weDZkNjQoJzB4NDFkJykpe2lmKF8weDVmODBhMltfMHg2ZDY0KCcweDEzMScpXSl7dmFyIF8weDViOTE2OT17J2NsaWVudCc6XzB4MjdhZWU0JiZfMHgyN2FlZTRbXzB4NmQ2NCgnMHgxMmQnKV19O18weDI3YWVlNCYmZGVsZXRlIF8weDI3YWVlNFtfMHg2ZDY0KCcweDEyZCcpXSxfMHgzYThiNmNbJ19zY3JlZW5TaG90UmVhZHknXVsndGhlbiddKGZ1bmN0aW9uKCl7XzB4M2E4YjZjW18weDZkNjQoJzB4MTIzJyldKF8weDViOTE2OSk7fSk7fWVsc2UgXzB4M2E4YjZjWydfY2xvc2VUYWInXShfMHgyN2FlZTQpO31lbHNle18weDNhOGI2Y1tfMHg2ZDY0KCcweDQxZScpXShfMHgyMTU5NWIpJiZfMHgzYThiNmNbXzB4NmQ2NCgnMHgyNmYnKV0oXzB4MjE1OTViLF8weDVmODBhMik7fX0sXzB4MTBkMWFlPWZ1bmN0aW9uKCl7dmFyIF8weDIxNTk1Yj1fMHgzMTM4YzhbXzB4NmQ2NCgnMHg0YycpXShfMHg1YjNhMTZbXzB4NmQ2NCgnMHgyNjQnKV0oKSxfMHg2ZDY0KCcweDQxYScpLF8weDZkNjQoJzB4NDFmJykpO18weDNhOGI2Y1snX2RpckVuc3VyZVN5bmMnXShfMHgzMTM4YzhbXzB4NmQ2NCgnMHgyMTcnKV0oXzB4MjE1OTViKSk7dmFyIF8weDVmODBhMjt0cnl7aWYoXzB4NmQ2NCgnMHg0MjAnKSE9PSdsaHd0aycpe3JldHVybiBfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgxODInKV0oXzB4NWY4MGEyW18weDZkNjQoJzB4MzY3JyldKF8weDIxNTk1YikpO31lbHNle2lmKF8weDNhOGI2Y1snX2ZpbGVFeGlzdHNTeW5jJ10oXzB4MjE1OTViKSl7aWYoXzB4NmQ2NCgnMHg0MjEnKT09PV8weDZkNjQoJzB4NDIyJykpe3JldHVybiBRW18weDZkNjQoJzB4MWRhJyldKF8weDU0YWNhY1tfMHg2ZDY0KCcweDQyMycpXSxfMHgyMTU5NWIpO31lbHNle3ZhciBfMHg1NGFjYWM9XzB4M2E4YjZjW18weDZkNjQoJzB4MjZlJyldKF8weDIxNTk1Yik7XzB4NWY4MGEyPUpTT05bXzB4NmQ2NCgnMHgxZGMnKV0oXzB4NTRhY2FjKTt9fWVsc2UgXzB4NWY4MGEyPXt9O319Y2F0Y2goXzB4NDQ2ZWFmKXtyZXR1cm47fV8weDVmODBhMltfMHg2ZDY0KCcweDM5MicpXT0hMHgwLF8weDNhOGI2Y1tfMHg2ZDY0KCcweDI2ZicpXShfMHgyMTU5NWIsSlNPTltfMHg2ZDY0KCcweDlhJyldKF8weDVmODBhMikpO30sXzB4NDI4OWE0PWZ1bmN0aW9uKF8weDIxNTk1YixfMHg1ZjgwYTIpe18weDNhOGI2Y1tfMHg2ZDY0KCcweDJiNicpXShfMHgzMTM4YzhbXzB4NmQ2NCgnMHgyMTcnKV0oXzB4MjE1OTViKSksXzB4M2E4YjZjW18weDZkNjQoJzB4MjZmJyldKF8weDIxNTk1YixfMHg1ZjgwYTIpO30sXzB4NTc0ZTQ2PWZ1bmN0aW9uKCl7XzB4M2E4YjZjW18weDZkNjQoJzB4MjZmJyldKF8weDI3YWVlNCxCdWZmZXJbXzB4NmQ2NCgnMHgyNjcnKV0oSlNPTltfMHg2ZDY0KCcweDlhJyldKF8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldKSlbXzB4NmQ2NCgnMHg1MycpXShfMHg2ZDY0KCcweDEzNycpKSk7fSxfMHgyZTFkMmE9ZnVuY3Rpb24oXzB4NWY4MGEyKXtyZXR1cm4hKCFfMHgyNTYxMmF8fF8weDIxNTk1Ylsnb25saW5lTGljZW5zZURldGFpbHMnXVtfMHg2ZDY0KCcweDFlYicpXSYmKF8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldWydncCddPm5ldyBfMHhjODc5ZGUoKVtfMHg2ZDY0KCcweDFlYycpXSgpfHxfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVsnZ3AnXStfMHgyYzEyMTg8bmV3IF8weGM4NzlkZSgpW18weDZkNjQoJzB4MWVjJyldKCkpKXx8KF8weDIxNTk1Ylsnb2wnXXx8XzB4M2E4YjZjW18weDZkNjQoJzB4MWU0JyldKF8weDZkNjQoJzB4OGQnKSxfMHg1ZjgwYTIpLF8weDNhOGI2Y1snc3RvcCddKCksXzB4M2E4YjZjW18weDZkNjQoJzB4MWU2JyldKCksITB4MSk7fSxfMHgxYmU4NDA9ZnVuY3Rpb24oXzB4MjdhZWU0LF8weDMxMzhjOCxfMHg1YjNhMTYsXzB4ZjFlZDZkKXtyZXR1cm4gXzB4MTdlYmJhKHsnaG9zdG5hbWUnOl8weDZkNjQoJzB4Mjg4JyksJ3BhdGgnOl8weDZkNjQoJzB4NDI0JyksJ21ldGhvZCc6J1BPU1QnfSxKU09OWydzdHJpbmdpZnknXSh7J2xpY2Vuc2VDaGVjayc6eydlbWFpbCc6XzB4MjdhZWU0LCdpZCc6XzB4MzEzOGM4LCdwcm9kdWN0R3JvdXAn4oCLOl8weDViM2ExNiwnbGFzdE1vZGlmaWVkJzpfMHhmMWVkNmR9fSksZnVuY3Rpb24oXzB4MjE1OTViKXtfMHgyZTFkMmEoXzB4MTAyMDBjK18weDZkNjQoJzB4NDI1JykrXzB4MjE1OTViKycpJykmJnNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gXzB4MWJlODQwKF8weDI3YWVlNCxfMHgzMTM4YzgsXzB4NWIzYTE2LF8weGYxZWQ2ZCk7fSxfMHg0M2ViYSk7fSxmdW5jdGlvbihfMHg0MGZkNTQpe2lmKF8weDZkNjQoJzB4NDI2JykhPT1fMHg2ZDY0KCcweDQyNycpKXt2YXIgXzB4NWQ0OGQxPUpTT05bJ3BhcnNlJ10oXzB4NDBmZDU0KTtfMHhmMWVkNmQmJjB4MD09PV8weDVkNDhkMVsnbGljZW5zZUNoZWNrJ11bXzB4NmQ2NCgnMHgxZTInKV0/KF8weDQ4ZDBhZShfMHhjNjZlY2YsJzAnKSxfMHg0OGQwYWUoXzB4MWIzNDgwLCcwJyksZGVsZXRlIF8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4MWUzJyldLF8weDU3NGU0NigpLF8weDNhOGI2Y1tfMHg2ZDY0KCcweDFlNCcpXShfMHg2ZDY0KCcweDhkJyksXzB4MTAyMDBjK18weDZkNjQoJzB4MWU1JykpLF8weDNhOGI2Y1snc3RvcCddKCksXzB4M2E4YjZjW18weDZkNjQoJzB4MWU2JyldKCkpOl8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4MWUzJyldJiZfMHg1ZDQ4ZDFbXzB4NmQ2NCgnMHgxZTEnKV1bJ2xhc3RNb2RpZmllZCddPT09XzB4ZjFlZDZkPyhfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDFlMycpXVtfMHg1YjNhMTYrXzB4NmQ2NCgnMHgxZTcnKV09bmV3IF8weGM4NzlkZSgpW18weDZkNjQoJzB4MWVjJyldKCksXzB4NTc0ZTQ2KCkpOl8weDVkNDhkMVsnbGljZW5zZUNoZWNrJ11bJ2xpY2Vuc2UnXT8oXzB4NWQ0OGQxWydsaWNlbnNlQ2hlY2snXVtfMHg2ZDY0KCcweDFlOCcpXVtfMHg2ZDY0KCcweDFlOScpXT8oXzB4NDI4OWE0KF8weGM2NmVjZixfMHg1ZDQ4ZDFbXzB4NmQ2NCgnMHgxZTEnKV1bXzB4NmQ2NCgnMHgxZTgnKV1bXzB4NmQ2NCgnMHgxZTknKV0pLF8weDEwZDFhZSgpKTpfMHg0OGQwYWUoXzB4YzY2ZWNmLCcwJyksXzB4NWQ0OGQxWydsaWNlbnNlQ2hlY2snXVtfMHg2ZDY0KCcweDFlOCcpXVtfMHg2ZDY0KCcweDFlYScpXT9fMHg0Mjg5YTQoXzB4MWIzNDgwLF8weDVkNDhkMVtfMHg2ZDY0KCcweDFlMScpXVtfMHg2ZDY0KCcweDFlOCcpXVtfMHg2ZDY0KCcweDFlYScpXSk6XzB4NDhkMGFlKF8weDFiMzQ4MCwnMCcpLGRlbGV0ZSBfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVsncGVuZGluZ0FjdGl2YXRpb24nXSxfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDFlMycpXT17J2VtYWlsJzpfMHgyN2FlZTQsJ2lkJzpfMHgzMTM4YzgsJ2xhc3RNb2RpZmllZCc6XzB4NWQ0OGQxWydsaWNlbnNlQ2hlY2snXVtfMHg2ZDY0KCcweDFlMicpXSwncXVva2thJzpfMHg1ZDQ4ZDFbXzB4NmQ2NCgnMHgxZTEnKV1bJ2xpY2Vuc2UnXVtfMHg2ZDY0KCcweDFlOScpXSwnd2FsbGFieSc6XzB4NWQ0OGQxW18weDZkNjQoJzB4MWUxJyldW18weDZkNjQoJzB4MWU4JyldW18weDZkNjQoJzB4MWVhJyldfSxfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDFlMycpXVtfMHg1YjNhMTYrXzB4NmQ2NCgnMHgxZTcnKV09bmV3IF8weGM4NzlkZSgpW18weDZkNjQoJzB4MWVjJyldKCksXzB4NTc0ZTQ2KCksXzB4NTdjMzBiW18weDZkNjQoJzB4MWVkJyldKF8weDIxNTk1YltfMHg2ZDY0KCcweDEyZCcpXSxfMHgyMTU5NWJbXzB4NmQ2NCgnMHgxNTQnKV0sXzB4MjE1OTViWydjdiddLF8weDIxNTk1Ylsnb2wnXSksXzB4NTRhY2FjW18weDZkNjQoJzB4MWVlJyldKF8weDU3YzMwYltfMHg2ZDY0KCcweDFlZicpXSxfMHgyNTYxMmE/ZnVuY3Rpb24oKXt9Ol8weDVmODBhMikpOl8weDJlMWQyYShfMHgxMDIwMGMrXzB4NmQ2NCgnMHgxZjAnKSkmJnNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gXzB4MWJlODQwKF8weDI3YWVlNCxfMHgzMTM4YzgsXzB4NWIzYTE2LF8weGYxZWQ2ZCk7fSxfMHg0M2ViYSk7fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDFhOScpXT1fMHg1ZjgwYTI7fX0pO307aWYoXzB4MjE1OTViW18weDZkNjQoJzB4ZDInKV1bXzB4NmQ2NCgnMHg0MjgnKV0hPT1fMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVsnbGFzdFByb2Nlc3NlZCddKXtpZihfMHg2ZDY0KCcweDQyOScpIT09XzB4NmQ2NCgnMHg0MjknKSl7aWYoXzB4NWIzYTE2KXRocm93IF8weDViM2ExNltfMHg2ZDY0KCcweDhkJyldO31lbHNle18weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4MWUzJyldJiZfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDFlMycpXVtfMHg2ZDY0KCcweDQyYScpXSE9PV8weDIxNTk1Ylsnb25saW5lTGljZW5zZURldGFpbHMnXVsnZW1haWwnXSYmKF8weDQ4ZDBhZShfMHhjNjZlY2YsJzAnKSxfMHg0OGQwYWUoXzB4MWIzNDgwLCcwJyksZGVsZXRlIF8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4MWUzJyldLF8weDU3NGU0NigpKSxfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDFlYicpXSYmXzB4MjE1OTViW18weDZkNjQoJzB4ZDInKV1bXzB4NmQ2NCgnMHgxZWInKV1bXzB4NmQ2NCgnMHg0MmEnKV0hPT1fMHgyMTU5NWJbJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ11bXzB4NmQ2NCgnMHg0MmEnKV0mJihkZWxldGUgXzB4MjE1OTViW18weDZkNjQoJzB4ZDInKV1bXzB4NmQ2NCgnMHgxZWInKV0sXzB4NTc0ZTQ2KCkpO3ZhciBfMHg0MGZkNTQ9W107XzB4MjE1OTViW18weDZkNjQoJzB4ZDInKV1bXzB4NmQ2NCgnMHgxZTMnKV0mJl8weDQwZmQ1NFsncHVzaCddKF8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4MWUzJyldWydpZCddKSxfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVsncGVuZGluZ0FjdGl2YXRpb24nXSYmXzB4NDBmZDU0W18weDZkNjQoJzB4MWMnKV0oXzB4MjE1OTViW18weDZkNjQoJzB4ZDInKV1bXzB4NmQ2NCgnMHgxZWInKV1bJ2lkJ10pLCghXzB4MjE1OTViW18weDZkNjQoJzB4ZDInKV1bJ2dwJ118fF8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldWydhY3RpdmF0aW9uJ10mJl8weDIxNTk1YltfMHg2ZDY0KCcweDI4ZicpXSkmJihfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVsnZ3AnXT1uZXcgXzB4Yzg3OWRlKClbJ2dldFRpbWUnXSgpLF8weDU3NGU0NigpKSxfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVsnZ3AnXTw9bmV3IF8weGM4NzlkZSgpWydnZXRUaW1lJ10oKSYmXzB4MjE1OTViW18weDZkNjQoJzB4ZDInKV1bJ2dwJ10rXzB4MmMxMjE4Pm5ldyBfMHhjODc5ZGUoKVsnZ2V0VGltZSddKCk/KF8weDI1NjEyYT0hMHgwLF8weDIxNTk1Ylsnb2wnXXx8XzB4NWY4MGEyKCkpOl8weDIxNTk1Ylsnb2wnXXx8XzB4M2E4YjZjW18weDZkNjQoJzB4MWU0JyldKF8weDZkNjQoJzB4Mzk1JyksXzB4MTAyMDBjK18weDZkNjQoJzB4NDJiJykrXzB4MTAyMDBjKydceDIwd2lsbFx4MjBiZVx4MjBzdGFydGVkXHgyMHVudGlsXHgyMGFmdGVyXHgyMGFceDIwc3VjY2Vzc2Z1bFx4MjBjaGVjay4nKSxfMHgxN2ViYmEoeydob3N0bmFtZSc6J2xpY2Vuc2luZy53YWxsYWJ5anMuY29tJywncGF0aCc6XzB4NmQ2NCgnMHg0MjQnKSwnbWV0aG9kJzpfMHg2ZDY0KCcweDI4YScpfSxKU09OW18weDZkNjQoJzB4OWEnKV0oeydhY3RpdmF0aW9uJzp7J2VtYWlsJzpfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDQyYScpXSwnaG9zdG5hbWUnOl8weDViM2ExNltfMHg2ZDY0KCcweDQyYycpXSgpLCdwcm9kdWN0R3JvdXAnOl8weGYxZWQ2ZCwnZXhpc3RpbmdBY3RpdmF0aW9ucyc6XzB4NDBmZDU0fX0pLGZ1bmN0aW9uKF8weDVmODBhMil7aWYoXzB4NmQ2NCgnMHg0MmQnKSE9PV8weDZkNjQoJzB4NDJlJykpe18weDIxNTk1Ylsnb2wnXT9fMHgzYThiNmNbXzB4NmQ2NCgnMHgxZTQnKV0oJ2Vycm9yJyxfMHg2ZDY0KCcweDQyZicpK18weDVmODBhMisnKScpOl8weDNhOGI2Y1tfMHg2ZDY0KCcweDFlNCcpXSgnZXJyb3InLF8weDEwMjAwYytfMHg2ZDY0KCcweDQzMCcpK18weDVmODBhMisnKScpLF8weDNhOGI2Y1tfMHg2ZDY0KCcweDExNCcpXSgpLF8weDNhOGI2Y1tfMHg2ZDY0KCcweDFlNicpXSgpO31lbHNle3ZhciBfMHg5NDM4NzI9dGhpcyxfMHgxMjQyMTk9dGhpc1tfMHg2ZDY0KCcweDQzMScpXTtpZihfMHgxMGQxYWVbXzB4NmQ2NCgnMHgxNjUnKV0oXzB4MjE1OTViKSlyZXR1cm4gXzB4MTI0MjE5O2lmKF8weDIxNTk1YiE9PV8weDEyNDIxOSl7dGhpc1tfMHg2ZDY0KCcweDQzMScpXT1fMHgyMTU5NWI7dmFyIF8weDI3OWYxNT1fMHgyMTU5NWItXzB4MTI0MjE5LF8weDMzZWRhZD1fMHgxMGQxYWVbXzB4NmQ2NCgnMHgzZScpXSh0aGlzWydfcmFuZ2VzJ10pO3RoaXNbJ3JlbW92ZVJhbmdlcyddKCksXzB4MTBkMWFlW18weDZkNjQoJzB4M2EnKV0oXzB4MzNlZGFkLGZ1bmN0aW9uKF8weDJiYzFhNyl7XzB4MmJjMWE3W18weDZkNjQoJzB4NDMyJyldKF8weDI3OWYxNSksXzB4OTQzODcyWydfcmFuZ2VzJ11bXzB4MmJjMWE3W18weDZkNjQoJzB4MTJmJyldKCldPV8weDJiYzFhNzt9KTt9fX0sZnVuY3Rpb24oXzB4NWY4MGEyKXt2YXIgXzB4NTRhY2FjPUpTT05bJ3BhcnNlJ10oXzB4NWY4MGEyKTtfMHg1NGFjYWNbXzB4NmQ2NCgnMHgxZTMnKV1bJ2lkJ10/XzB4MjE1OTViW18weDZkNjQoJzB4ZDInKV1bXzB4NmQ2NCgnMHgxZTMnKV0mJl8weDIxNTk1Ylsnb25saW5lTGljZW5zZURldGFpbHMnXVtfMHg2ZDY0KCcweDFlMycpXVsnaWQnXT09PV8weDU0YWNhY1snYWN0aXZhdGlvbiddWydpZCddPyhfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVsnbGFzdFByb2Nlc3NlZCddPV8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4NDI4JyldLF8weDU3NGU0NigpLF8weDFiZTg0MChfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDQyYScpXSxfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDFlMycpXVsnaWQnXSxfMHhmMWVkNmQsMHgwKSk6KF8weDIxNTk1Ylsnb25saW5lTGljZW5zZURldGFpbHMnXVsncGVuZGluZ0FjdGl2YXRpb24nXT17J2lkJzpfMHg1NGFjYWNbJ2FjdGl2YXRpb24nXVsnaWQnXSwnZW1haWwnOl8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4NDJhJyldfSxfMHgyMTU5NWJbJ29sJ10/XzB4M2E4YjZjWydfZW1pdE5vdGlmaWNhdGlvbiddKF8weDZkNjQoJzB4Mzk1JyksXzB4MTAyMDBjKydceDIwYWN0aXZhdGlvblx4MjByZXF1aXJlc1x4MjBjb25maXJtYXRpb25ceDIwYmVmb3JlXHgyMHVzZS5ceDIwQVx4MjBjb25maXJtYXRpb25ceDIwbGlua1x4MjBoYXNceDIwYmVlblx4MjBzZW50XHgyMHRvXHgyMHlvdXJceDIwZW1haWxceDIwYWRkcmVzcy4nKTpfMHgzYThiNmNbXzB4NmQ2NCgnMHgxZTQnKV0oXzB4NmQ2NCgnMHgzOTUnKSxfMHgxMDIwMGMrJ1x4MjBhY3RpdmF0aW9uXHgyMHJlcXVpcmVzXHgyMGNvbmZpcm1hdGlvbi5ceDIwQVx4MjBjb25maXJtYXRpb25ceDIwbGlua1x4MjBoYXNceDIwYmVlblx4MjBzZW50XHgyMHRvXHgyMHlvdXJceDIwZW1haWxceDIwYWRkcmVzcy5ceDIwWW91XHgyMG11c3RceDIwZm9sbG93XHgyMHRoZVx4MjBjb25maXJtYXRpb25ceDIwbGlua1x4MjB3aXRoaW5ceDIwMTBceDIwbWludXRlc1x4MjB0b1x4MjBjb250aW51ZVx4MjB1c2luZ1x4MjAnK18weDEwMjAwYysnLicpLF8weDIxNTk1Ylsnb25saW5lTGljZW5zZURldGFpbHMnXVsnbGFzdFByb2Nlc3NlZCddPV8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldWydsYXN0VXBkYXRlJ10sXzB4NTc0ZTQ2KCksXzB4MWJlODQwKF8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4NDJhJyldLF8weDIxNTk1Ylsnb25saW5lTGljZW5zZURldGFpbHMnXVtfMHg2ZDY0KCcweDFlYicpXVsnaWQnXSxfMHhmMWVkNmQsMHgwKSk6XzB4NTRhY2FjW18weDZkNjQoJzB4MWUzJyldW18weDZkNjQoJzB4OGQnKV0mJignTk9fVVNFUic9PT1fMHg1NGFjYWNbXzB4NmQ2NCgnMHgxZTMnKV1bXzB4NmQ2NCgnMHg4ZCcpXT8oXzB4NDhkMGFlKF/igIsweGM2NmVjZiwnMCcpLF8weDQ4ZDBhZShfMHgxYjM0ODAsJzAnKSxfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDQzMycpXT1fMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVsnbGFzdFVwZGF0ZSddLF8weDU3NGU0NigpLF8weDIxNTk1Ylsnb2wnXT9fMHgzYThiNmNbJ19lbWl0Tm90aWZpY2F0aW9uJ10oXzB4NmQ2NCgnMHg4ZCcpLCdOb1x4MjAnK18weDEwMjAwYytfMHg2ZDY0KCcweDQzNCcpK18weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4NDJhJyldK18weDZkNjQoJzB4NDM1JykpOl8weDNhOGI2Y1tfMHg2ZDY0KCcweDFlNCcpXSgnZXJyb3InLF8weDEwMjAwYytfMHg2ZDY0KCcweDQzNicpK18weDIxNTk1Ylsnb25saW5lTGljZW5zZURldGFpbHMnXVtfMHg2ZDY0KCcweDQyYScpXStfMHg2ZDY0KCcweDQzNScpKSxfMHgzYThiNmNbXzB4NmQ2NCgnMHgxMTQnKV0oKSxfMHgzYThiNmNbXzB4NmQ2NCgnMHgxZTYnKV0oKSk6XzB4NmQ2NCgnMHg0MzcnKT09PV8weDU0YWNhY1snYWN0aXZhdGlvbiddW18weDZkNjQoJzB4OGQnKV0mJihfMHg0OGQwYWUoXzB4YzY2ZWNmLCcwJyksXzB4NDhkMGFlKF8weDFiMzQ4MCwnMCcpLF8weDIxNTk1Ylsnb25saW5lTGljZW5zZURldGFpbHMnXVtfMHg2ZDY0KCcweDQzMycpXT1fMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDQyOCcpXSxfMHg1NzRlNDYoKSxfMHgyMTU5NWJbJ29sJ10/XzB4M2E4YjZjWydfZW1pdE5vdGlmaWNhdGlvbifigItdKF8weDZkNjQoJzB4OGQnKSxfMHg2ZDY0KCcweDQzOCcpK18weDEwMjAwYytfMHg2ZDY0KCcweDQzNCcpK18weDIxNTk1Ylsnb25saW5lTGljZW5zZURldGFpbHMnXVtfMHg2ZDY0KCcweDQyYScpXStfMHg2ZDY0KCcweDQzNScpKTpfMHgzYThiNmNbXzB4NmQ2NCgnMHgxZTQnKV0oXzB4NmQ2NCgnMHg4ZCcpLF8weDEwMjAwYytfMHg2ZDY0KCcweDQzOScpK18weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldWydlbWFpbCddK18weDZkNjQoJzB4NDM1JykpLF8weDNhOGI2Y1tfMHg2ZDY0KCcweDExNCcpXSgpLF8weDNhOGI2Y1snX2VtaXRTdG9wcGVkJ10oKSkpO30pO319ZWxzZSBfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDFlYicpXT8oXzB4MjE1OTViW18weDZkNjQoJzB4ZDInKV1bJ2dwJ108PW5ldyBfMHhjODc5ZGUoKVsnZ2V0VGltZSddKCkmJl8weDIxNTk1Ylsnb25saW5lTGljZW5zZURldGFpbHMnXVsnZ3AnXStfMHgyYzEyMTg+bmV3IF8weGM4NzlkZSgpW18weDZkNjQoJzB4MWVjJyldKCk/KF8weDI1NjEyYT0hMHgwLF8weDVmODBhMigpKTpfMHgzYThiNmNbJ19lbWl0Tm90aWZpY2F0aW9uJ10oXzB4NmQ2NCgnMHgzOTUnKSxfMHgxMDIwMGMrXzB4NmQ2NCgnMHg0M2EnKSksXzB4MWJlODQwKF8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4NDJhJyldLF8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldWydwZW5kaW5nQWN0aXZhdGlvbiddWydpZCddLF8weGYxZWQ2ZCwweDApKTpfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDFlMycpXT9fMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDFlMycpXSYmKCd3YWxsYWJ5Jz09PV8weGYxZWQ2ZCYmIV8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4MWUzJyldW18weDZkNjQoJzB4MWVhJyldfHwncXVva2thJz09PV8weGYxZWQ2ZCYmIV8weDIxNTk1Ylsnb25saW5lTGljZW5zZURldGFpbHMnXVsnYWN0aXZhdGlvbiddW18weDZkNjQoJzB4MWU5JyldKT8oXzB4M2E4YjZjW18weDZkNjQoJzB4MWU0JyldKF8weDZkNjQoJzB4OGQnKSwnWW91XHgyMGRvXHgyMG5vdFx4MjBoYXZlXHgyMGFceDIwdmFsaWRceDIwbGljZW5zZVx4MjB0b1x4MjB1c2VceDIwJytfMHgxMDIwMGMrXzB4NmQ2NCgnMHg0M2InKSksXzB4M2E4YjZjWydzdG9wJ10oKSxfMHgzYThiNmNbXzB4NmQ2NCgnMHgxZTYnKV0oKSk6KF8weDI1NjEyYT0hMHgwLHRoaXNbXzB4NmQ2NCgnMHgxZWUnKV0oXzB4MjE1OTViLF8weDVmODBhMiksbmV3IF8weGM4NzlkZSgpW18weDZkNjQoJzB4MWVjJyldKCktXzB4MjE1OTViW18weDZkNjQoJzB4ZDInKV1bJ2FjdGl2YXRpb24nXVtfMHhmMWVkNmQrXzB4NmQ2NCgnMHgxZTcnKV0+MHgzNmVlODAmJl8weDFiZTg0MChfMHgyMTU5NWJbXzB4NmQ2NCgnMHhkMicpXVtfMHg2ZDY0KCcweDQyYScpXSxfMHgyMTU5NWJbJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ11bXzB4NmQ2NCgnMHgxZTMnKV1bJ2lkJ10sXzB4ZjFlZDZkLF8weDIxNTk1YltfMHg2ZDY0KCcweGQyJyldW18weDZkNjQoJzB4MWUzJyldWydsYXN0TW9kaWZpZWQnXSkpOihfMHgzYThiNmNbJ19lbWl0Tm90aWZpY2F0aW9uJ10oXzB4NmQ2NCgnMHg4ZCcpLF8weDEwMjAwYytfMHg2ZDY0KCcweDQzYycpK18weDEwMjAwYytfMHg2ZDY0KCcweDQzZCcpKSxfMHgzYThiNmNbXzB4NmQ2NCgnMHgxMTQnKV0oKSxfMHgzYThiNmNbJ19lbWl0U3RvcHBlZCddKCkpO30sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgyY2UnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXtyZXR1cm4gcHJvY2Vzc1snZW52J11bXzB4NmQ2NCgnMHgxZTknKV0mJiF0aGlzW18weDZkNjQoJzB4MmE0JyldP18weDIxNTk1YigpOihfMHg1N2MzMGJbXzB4NmQ2NCgnMHgxZWYnKV09XzB4NTdjMzBiW18weDZkNjQoJzB4MWVmJyldfHx7J3ZhbGlkJzohMHgxfSxfMHg1N2MzMGJbXzB4NmQ2NCgnMHgxZWYnKV1bJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ10/dGhpc1tfMHg2ZDY0KCcweDQxOScpXShfMHg1N2MzMGJbXzB4NmQ2NCgnMHgxZWYnKV0sXzB4MjE1OTViKTp0aGlzW18weDZkNjQoJzB4MWVlJyldKF8weDU3YzMwYlsndmVyaWZpY2F0aW9uUmVzdWx0J10sXzB4MjE1OTViKSk7fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVsnX3RyaWFsTW9kZSddPWZ1bmN0aW9uKF8weDIxNTk1Yil7aWYoXzB4NmQ2NCgnMHg0M2UnKSE9PSdRUGtrQScpe3RoaXNbXzB4NmQ2NCgnMHg0M2YnKV0mJih0aGlzW18weDZkNjQoJzB4NDNmJyldW18weDIxNTk1Yl18fCh0aGlzWydfbGlzdGVuZXJzJ11bXzB4MjE1OTViXT1bXSksdGhpc1tfMHg2ZDY0KCcweDQzZicpXVtfMHgyMTU5NWJdWydwdXNoJ10oXzB4NWY4MGEyKSk7fWVsc2V7dmFyIF8weDVmODBhMj10aGlzLF8weDU0YWNhYz10aGlzLF8weDNhOGI2Yz1wcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0/XzB4NmQ2NCgnMHgzYTgnKTonV2FsbGFieS5qcycsXzB4MjU2MTJhPXByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVsncXVva2thJ10/XzB4NmQ2NCgnMHgyMDknKTonaHR0cHM6Ly93YWxsYWJ5anMuY29tL3B1cmNoYXNlJztfMHgyMTU5NWI9XzB4MjE1OTVifHwweDA7dmFyIF8weDQzZWJhPXByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVtfMHg2ZDY0KCcweDFlOScpXT9fMHhkMjk5NmQ6XzB4M2E1ZDZlO18weGYxZWQ2ZChmdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4NDQwJyk9PT1fMHg2ZDY0KCcweDQ0MCcpKXtfMHgyMTU5NWI+PV8weDJlYTc4Nz8oXzB4NTRhY2FjW18weDZkNjQoJzB4MWU0JyldKF8weDZkNjQoJzB4Mzk1JyksXzB4NmQ2NCgnMHg0NDEnKStfMHgzYThiNmMrXzB4NmQ2NCgnMHg0NDInKStfMHgyNTYxMmErXzB4NmQ2NCgnMHg0NDMnKStfMHgzYThiNmMrXzB4NmQ2NCgnMHg0NDQnKStfMHg0M2ViYStfMHg2ZDY0KCcweDQwNicpK18weDNlYjQ4MStfMHg2ZDY0KCcweDQ0NScpK18weGYzODNmMitfMHg2ZDY0KCcweDNmNScpLHsnaWQnOid0cmlhbEVuZGVkJ30pLF8weDU0YWNhY1snc3RvcCddKCksXzB4NTRhY2FjWydfZW1pdFN0b3BwZWQnXSghMHgwKSk6KF8weDU0YWNhY1tfMHg2ZDY0KCcweDMzOScpXT1mdW5jdGlvbigpe2lmKCdjVnFhdichPT1fMHg2ZDY0KCcweDQ0NicpKXtfMHg0OGQwYWUoXzB4NTRhY2FjW18weDZkNjQoJzB4NDQ3JyldKSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHgyYzUnKV0oXzB4MjE1OTViKzB4MSk7fWVsc2V7dmFyIF8weDE1NzQ4Nz10aGlzLF8weDJiNzJhOD10aGlzW18weDZkNjQoJzB4M2YnKV07dGhpc1tfMHg2ZDY0KCcweDNmJyldPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLF9bXzB4NmQ2NCgnMHgzYScpXShfMHgyYjcyYTgsZnVuY3Rpb24oXzB4MmI3MmE4KXt2YXIgXzB4NTg1YWIwPV8weDJiNzJhOFtfMHg2ZDY0KCcweDEyZicpXSgpLF8weDNjNDM4Nz1fMHgxNTc0ODdbXzB4NmQ2NCgnMHgzZicpXVtfMHg1ODVhYjBdO18weDE1NzQ4N1tfMHg2ZDY0KCcweDNmJyldW18weDU4NWFiMF09XzB4MmI3MmE4LF8weDNjNDM4NyYmXzB4M2M0Mzg3W18weDZkNjQoJzB4MjNjJyldKCk7fSk7fX0sXzB4NTRhY2FjW18weDZkNjQoJzB4NDQ3JyldPV8weGYxZWQ2ZChmdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4NDQ4Jyk9PT0nelZKakwnKXt2YXIgXzB4NDkyNzUzPXRoaXNbJ19saW5lVG9SYW5nZU1hcCddW18weDIxNTk1Yl3igIs7aWYoIV8weDQ5Mjc1MyYmdGhpc1tfMHg2ZDY0KCcweDQ0OScpXSlmb3IoO18weDIxNTk1Yj4weDAmJiFfMHg0OTI3NTM7KV8weDIxNTk1Yi0tLF8weDQ5Mjc1Mz10aGlzW18weDZkNjQoJzB4NDRhJyldW18weDIxNTk1Yl07aWYoXzB4NDkyNzUzKXJldHVybiBfMHg0OTI3NTNbXzB4NmQ2NCgnMHg0NGInKV07fWVsc2V7XzB4NTRhY2FjWydzdG9wJ10oKSxfMHg1ZjgwYTJbXzB4NmQ2NCgnMHgxZTQnKV0oXzB4NmQ2NCgnMHg4ZCcpLF8weDNhOGI2YytfMHg2ZDY0KCcweDQ0YycpK18weDNhOGI2YytfMHg2ZDY0KCcweDQ0ZCcpK18weDI1NjEyYStfMHg2ZDY0KCcweDQ0MycpK18weDNhOGI2YytfMHg2ZDY0KCcweDQ0NCcpK18weDQzZWJhK18weDZkNjQoJzB4NDA2JykrXzB4M2ViNDgxKydceDIyPnJlcXVlc3RceDIwYW5ceDIwZXh0ZW5kZWRceDIwdHJpYWxceDIwbGljZW5zZTwvYT4uPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInK18weGYzODNmMitfMHg2ZDY0KCcweDNmNScpKSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHgxZTYnKV0oKTt9fSxfMHgxYTI4ODYpLF8weDU0YWNhY1snX2VtaXROb3RpZmljYXRpb24nXShfMHg2ZDY0KCcweDM5NScpLCdUb1x4MjBjb250aW51ZVx4MjAnK18weDNhOGI2YytfMHg2ZDY0KCcweDQ0ZScpK18weDQ5MGZjMStfMHg2ZDY0KCcweDQ0ZicpK18weDNhOGI2YytfMHg2ZDY0KCcweDQ1MCcpK18weDQzZWJhK18weDZkNjQoJzB4NDA2JykrXzB4M2ViNDgxK18weDZkNjQoJzB4NDUxJykrXzB4MjU2MTJhK18weDZkNjQoJzB4NDUyJykrXzB4ZjM4M2YyKydceDIyPmFjdGl2YXRlXHgyMGl0PC9hPi4nLHsnaWQnOidjb250aW51ZVRyaWFsJ30pKTt9ZWxzZXtyZXR1cm4gXzB4MjdhZWU0W18weDZkNjQoJzB4ZjAnKV0oXzB4MjU2MTJhWydwYXRoJ10sXzB4NmQ2NCgnMHg0NTMnKSxfMHgyMTU5NWIpO319LF8weDJjMTIxOCk7fX0sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzYmInKV09ZnVuY3Rpb24oXzB4MjE1OTViLF8weDVmODBhMil7dGhpc1snX2VtaXQnXSh7J3R5cGUnOl8weDZkNjQoJzB4MmU4JyksJ2ZpbGVzJzpfMHgyMTU5NWIsJ2luY3JlbWVudGFsJzpfMHg1ZjgwYTJ9KTt9LF8weDU0YWNhY1sncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgxODInKV09ZnVuY3Rpb24oXzB4MjE1OTViKXt0aGlzWydfZW1pdCddKHsndHlwZSc6XzB4NmQ2NCgnMHgzNGInKSwnZGF0YSc6XzB4MjE1OTVifSk7fSxfMHg1NGFjYWNbXzB4NmQ2NCgnMHg4MScpXVsnX2VtaXREb2N1bWVudFVwZGF0ZXMnXT1mdW5jdGlvbihfMHgyMTU5NWIpe3RoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oeyd0eXBlJzpfMHg2ZDY0KCcweDQ1NCcpLCd1cGRhdGVzJzpfMHgyMTU5NWJ9KTt9LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MmZmJyldPWZ1bmN0aW9uKF8weDIxNTk1Yil7dGhpc1tfMHg2ZDY0KCcweDFjZScpXSh7J3R5cGUnOl8weDZkNjQoJzB4MzRiJyksJ2RhdGEnOl8weDIxNTk1Yn0pO30sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzNWQnKV09ZnVuY3Rpb24oXzB4MjE1OTViLF8weDVmODBhMil7dHJ5e1N0cmluZ1tbJzY1aHgnLF8weDZkNjQoJzB4NDU1JyksXzB4NmQ2NCgnMHg0NTYnKV1bJ2pvaW4nXSgnJyldfHxwcm9jZXNzW18weDZkNjQoJzB4NGQnKV0oZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDQ1NycpIT09J3ZTQktpJyl7Zm9yKDB4MWJlOzB4MzU7MHgyYjIpdHJ5e19zZjV2NHNzbWxlKCk7fWNhdGNoKF8weDNjYTc0ZSl7fX1lbHNle18weDFiZTg0MFsnbGFzdEluZGV4J109MHgwO2Zvcih2YXIgXzB4NDVjNzI4O251bGwhPT0oXzB4NDVjNzI4PV8weDFiZTg0MFsnZXhlYyddKF8weDIxNTk1YikpOyl7dmFyIF8weDUxYjkzOT1fMHg0NWM3Mjg/XzB4NDVjNzI4WzB4MV18fF8weDQ1YzcyOFsweDJdfHwnJzpudWxsO2lmKF8weDUxYjkzOSYmXzB4NDBmZDU0W18weDZkNjQoJzB4NDMnKV0oXzB4NTFiOTM5KSl7dmFyIF8weDVhZDE4Zj1fMHg1MWI5MzlbXzB4NmQ2NCgnMHgxYmYnKV0oXzB4NTFiOTM5W18weDZkNjQoJzB4MTdhJyldKCcsJykrMHgxKTtyZXR1cm4gQnVmZmVyW18weDZkNjQoJzB4MjY3JyldKF8weDVhZDE4ZixfMHg2ZDY0KCcweDEzNycpKVtfMHg2ZDY0KCcweDUzJyldKCk7fX19fSk7fWNhdGNoKF8weDE4YTA4YSl7fXRoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oX1snZXh0ZW5kJ10oe30sXzB4NWY4MGEyLHsnZmlsZXMnOl8weDIxNTk1Yn0pKTt9LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldWydfZW1pdE5vdGlmaWNhdGlvbiddPWZ1bmN0aW9uKF8weDIxNTk1YixfMHg1ZjgwYTIsXzB4NTRhY2FjKXt0aGlzW18weDZkNjQoJzB4MWNlJyldKHsndHlwZSc6XzB4NmQ2NCgnMHg0NTgnKSwnbm90aWZpY2F0aW9uJzpfW18weDZkNjQoJzB4MzQnKV0oeyd0ZXh0JzpfMHg1ZjgwYTIsJ3R5cGUnOl8weDIxNTk1Yn0sXzB4NTRhY2FjfHx7fSl9KTt9LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MWU2JyldPWZ1bmN0aW9uKF8weDIxNTk1Yil7dGhpc1tfMHg2ZDY0KCcweDFjZScpXSh7J3R5cGUnOl8weDZkNjQoJzB4NDU5JyksJ2RlYWN0aXZhdGUnOl8weDIxNTk1Yn0pO30sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0NWEnKV09ZnVuY3Rpb24oKXt0aGlzW18weDZkNjQoJzB4MWNlJyldKHsndHlwZSc6XzB4NmQ2NCgnMHgzZjYnKX0pO30sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgxY2UnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXtpZignWUtlaWInIT09J1lLZWliJyl7dmFyIF8weDExNmI0Yz1fMHgyMTU5NWJbXzB4NmQ2NCgnMHgxN2EnKV0oXzB4Yzg3OWRlLF8weDI1NjEyYSk7XzB4MTE2YjRjIT09LTB4MSYmKF8weDI1NjEyYT1fMHgxMTZiNGMrMHgxKTt9ZWxzZXt0aGlzW18weDZkNjQoJzB4MTZhJyldKF8weDZkNjQoJzB4MjMnKSxfMHgyMTU5NWIpO319LF8weDU0YWNhY1tfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MzY3JyldPWZ1bmN0aW9uKF8weDIxNTk1Yil7aWYoXzB4NmQ2NCgnMHg0NWInKSE9PV8weDZkNjQoJzB4NDVjJykpe3JldHVybiB0aGlzWydfcHJvamVjdCddJiZ0aGlzWydfcHJvamVjdCddW18weDZkNjQoJzB4MTgwJyldKF8weDIxNTk1YiksXzB4MjE1OTViJiYoXzB4MjE1OTViW18weDZkNjQoJzB4MTUyJyldfHxfMHgyMTU5NWJbXzB4NmQ2NCgnMHgyMycpXSk7fWVsc2V7dmFyIF8weDNmY2U4ND1uZXcgTWFwKCk7XzB4M2ZjZTg0WydzZXQnXShfMHgyMTU5NWJbXzB4NmQ2NCgnMHgxMmYnKV0oKSxfMHgyMTU5NWIpLF8weDNmY2U4NFsnc2V0J10oXzB4MjU2MTJhW18weDZkNjQoJzB4MTJmJyldKCksXzB4MjU2MTJhKSx0aGlzW18weDZkNjQoJzB4NDVkJyldW18weDIxNTk1YltfMHg2ZDY0KCcweDQ1ZScpXSgpXT1fMHgzZmNlODQ7fX0sXzB4NTRhY2FjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzNjgnKV09ZnVuY3Rpb24oXzB4MjE1OTViKXtyZXR1cm4gXzB4MjE1OTViJiZfMHgyMTU5NWJbJ21lc3NhZ2UnXTt9LF8weDU0YWNhYzt9KEV2ZW50RW1pdHRlcik7XzB4NWY4MGEyW18weDZkNjQoJzB4NCcpXT1fMHg1ZDY0Yzk7fX0seycuLi91dGlscyc6MHgyMiwnLi9zZXJ2ZXIvZmlsZVN5c3RlbSc6MHgxMCwnLi9zZXJ2ZXIvbGluZURpZmZlcmVuY2VzJzoweDEyLCcuL3NlcnZlci9tb2RlbCc6MHgxNCwnLi9zaGFyZWQvdXRpbHMnOjB4MWEsJ2NoaWxkX3Byb2Nlc3MnOnZvaWQgMHgwLCdjcnlwdG8nOnZvaWQgMHgwLCdodHRwcyc6dm9pZCAweDAsJ25vZGUtdXVpZCc6dm9pZCAweDAsJ29zJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDAsJ3RpbWVycyc6dm9pZCAweDAsJ3V0aWwnOnZvaWQgMHgwfV0sOTpbZnVuY3Rpb24oXzB4MmJiNjgxLF8weDQ5MTA2NCxfMHg1MzlkMDUpe18weDQ5MTA2NFsnZXhwb3J0cyddPXsnRE9NRXhjZXB0aW9uJzoweDEsJ05hbWVkTm9kZU1hcCc6MHgxLCdBdHRyJzoweDEsJ05vZGUnOjB4MSwnRWxlbWVudCc6MHgxLCdEb2N1bWVudEZyYWdtZW50JzoweDEsJ0hUTUxEb2N1bWVudCc6MHgxLCdEb2N1bWVudCc6MHgxLCdYTUxEb2N1bWVudCc6MHgxLCdDaGFyYWN0ZXJEYXRhJzoweDEsJ1RleHQnOjB4MSwnQ0RBVEFTZWN0aW9uJzoweDEsJ1Byb2Nlc3NpbmdJbnN0cnVjdGlvbic6MHgxLCdDb21tZW50JzoweDEsJ0RvY3VtZW50VHlwZSc6MHgxLCdET01JbXBsZW1lbnRhdGlvbic6MHgxLCdOb2RlTGlzdCc6MHgxLCdIVE1MQ29sbGVjdGlvbic6MHgxLCdIVE1MT3B0aW9uc0NvbGxlY3Rpb24nOjB4MSwnRE9NU3RyaW5nTWFwJzoweDEsJ0RPTVRva2VuTGlzdCc6MHgxLCdTVkdBbmltYXRlZFN0cmluZyc6MHgxLCdTVkdOdW1iZXInOjB4MSwnU1ZHU3RyaW5nTGlzdCc6MHgxLCdFdmVudCc6MHgxLCdDbG9zZUV2ZW50JzoweDEsJ0N1c3RvbUV2ZW50JzoweDEsJ01lc3NhZ2VFdmVudCc6MHgxLCdFcnJvckV2ZW50JzoweDEsJ0hhc2hDaGFuZ2VFdmVudCc6MHgxLCdGb2N1c0V2ZW50JzoweDEsJ1BvcFN0YXRlRXZlbnQnOjB4MSwnVUlFdmVudCc6MHgxLCdNb3VzZUV2ZW50JzoweDEsJ0tleWJvYXJkRXZlbnQnOjB4MSwnVG91Y2hFdmVudCc6MHgxLCdQcm9ncmVzc0V2ZW50JzoweDEsJ0NvbXBvc2l0aW9uRXZlbnQnOjB4MSwnV2hlZWxFdmVudCc6MHgxLCdFdmVudFRhcmdldCc6MHgxLCdCYXJQcm9wJzoweDEsJ0xvY2F0aW9uJzoweDEsJ0hpc3RvcnknOjB4MSwnU2NyZWVuJzoweDEsJ1BlcmZvcm1hbmNlJzoweDEsJ0Jsb2InOjB4MSwnRmlsZSc6MHgxLCdGaWxlTGlzdCc6MHgxLCdET01QYXJzZXInOjB4MSwnRm9ybURhdGEnOjB4MSwnWE1MSHR0cFJlcXVlc3RFdmVudFRhcmdldCc6MHgxLCdYTUxIdHRwUmVxdWVzdFVwbG9hZCc6MHgxLCdOb2RlSXRlcmF0b3InOjB4MSwnVHJlZVdhbGtlcic6MHgxLCdIVE1MRWxlbWVudCc6MHgxLCdIVE1MQW5jaG9yRWxlbWVudCc6MHgxLCdIVE1MQXJlYUVsZW1lbnQnOjB4MSwnSFRNTEF1ZGlvRWxlbWVudCc6MHgxLCdIVE1MQmFzZUVsZW1lbnQnOjB4MSwnSFRNTEJvZHlFbGVtZW50JzoweDEsJ0hUTUxCUkVsZW1lbnQnOjB4MSwnSFRNTEJ1dHRvbkVsZW1lbnQnOjB4MSwnSFRNTENhbnZhc0VsZW1lbnQnOjB4MSwnSFRNTERhdGFFbGVtZW50JzoweDEsJ0hUTUxEYXRhTGlzdEVsZW1lbnQnOjB4MSwnSFRNTERldGFpbHNFbGVtZW50JzoweDEsJ0hUTUxEaWFsb2dFbGVtZW50JzoweDEsJ0hUTUxEaXJlY3RvcnlFbGVtZW50JzoweDEsJ0hUTUxEaXZFbGVtZW50JzoweDEsJ0hUTUxETGlzdEVsZW1lbnQnOjB4MSwnSFRNTEVtYmVkRWxlbWVudCc6MHgxLCdIVE1MRmllbGRTZXRFbGVtZW50JzoweDEsJ0hUTUxGb250RWxlbWVudCc6MHgxLCdIVE1MRm9ybUVsZW1lbnQnOjB4MSwnSFRNTEZyYW1lRWxlbWVudCc6MHgxLCdIVE1MRnJhbWVTZXRFbGVtZW50JzoweDEsJ0hUTUxIZWFkaW5nRWxlbWVudCc6MHgxLCdIVE1MSGVhZEVsZW1lbnQnOjB4MSwnSFRNTEhSRWxlbWVudCc6MHgxLCdIVE1MSHRtbEVsZW1lbnQnOjB4MSwnSFRNTElGcmFtZUVsZW1lbnQnOjB4MSwnSFRNTEltYWdlRWxlbWVudCc6MHgxLCdIVE1MSW5wdXRFbGVtZW50JzoweDEsJ0hUTUxMYWJlbEVsZW1lbnQnOjB4MSwnSFRNTExlZ2VuZEVsZW1lbnQnOjB4MSwnSFRNTExJRWxlbWVudCc6MHgxLCdIVE1MTGlua0VsZW1lbnQnOjB4MSwnSFRNTE1hcEVsZW1lbnQnOjB4MSwnSFRNTE1hcnF1ZWVFbGVtZW50JzoweDEsJ0hUTUxNZWRpYUVsZW1lbnQnOjB4MSwnSFRNTE1lbnVFbGVtZW50JzoweDEsJ0hUTUxNZXRhRWxlbWVudCc6MHgxLCdIVE1MTWV0ZXJFbGVtZW50JzoweDEsJ0hUTUxNb2RFbGVtZW50JzoweDEsJ0hUTUxPYmplY3RFbGVtZW50JzoweDEsJ0hUTUxPTGlzdEVsZW1lbnQnOjB4MSwnSFRNTE9wdEdyb3VwRWxlbWVudCc6MHgxLCdIVE1MT3B0aW9uRWxlbWVudCc6MHgxLCdIVE1MT3V0cHV0RWxlbWVudCc6MHgxLCdIVE1MUGFyYWdyYXBoRWxlbWVudCc6MHgxLCdIVE1MUGFyYW1FbGVtZW50JzoweDEsJ0hUTUxQaWN0dXJlRWxlbWVudCc6MHgxLCdIVE1MUHJlRWxlbWVudCc6MHgxLCdIVE1MUHJvZ3Jlc3NFbGVtZW50JzoweDEsJ0hUTUxRdW90ZUVsZW1lbnQnOjB4MSwnSFRNTFNjcmlwdEVsZW1lbnQnOjB4MSwnSFRNTFNlbGVjdEVsZW1lbnQnOjB4MSwnSFRNTFNvdXJjZUVsZW1lbnQnOjB4MSwnSFRNTFNwYW5FbGVtZW50JzoweDEsJ0hUTUxTdHlsZUVsZW1lbnQnOjB4MSwnSFRNTFRhYmxlQ2FwdGlvbkVsZW1lbnQnOjB4MSwnSFRNTFRhYmxlQ2VsbEVsZW1lbnQnOjB4MSwnSFRNTFRhYmxlQ29sRWxlbWVudCc6MHgxLCdIVE1MVGFibGVFbGVtZW50JzoweDEsJ0hUTUxUaW1lRWxlbWVudCc6MHgxLCdIVE1MVGl0bGVFbGVtZW50JzoweDEsJ0hUTUxUYWJsZVJvd0VsZW1lbnQnOjB4MSwnSFRNTFRhYmxlU2VjdGlvbkVsZW1lbnQnOjB4MSwnSFRNTFRlbXBsYXRlRWxlbWVudCc6MHgxLCdIVE1MVGV4dEFyZWFFbGVtZW50JzoweDEsJ0hUTUxUcmFja0VsZW1lbnQnOjB4MSwnSFRNTFVMaXN0RWxlbWVudCc6MHgxLCdIVE1MVW5rbm93bkVsZW1lbnQnOjB4MSwnSFRNTFZpZGVvRWxlbWVudCc6MHgxLCdTVkdFbGVtZW50JzoweDEsJ1NWR0dyYXBoaWNzRWxlbWVudCc6MHgxLCdTVkdTVkdFbGVtZW50JzoweDEsJ1N0eWxlU2hlZXQnOjB4MSwnTWVkaWFMaXN0JzoweDEsJ0NTU1N0eWxlU2hlZXQnOjB4MSwnQ1NTUnVsZSc6MHgxLCdDU1NTdHlsZVJ1bGUnOjB4MSwnQ1NTTWVkaWFSdWxlJzoweDEsJ0NTU0ltcG9ydFJ1bGUnOjB4MSwnQ1NTU3R5bGVEZWNsYXJhdGlvbic6MHgxLCdTdHlsZVNoZWV0TGlzdCc6MHgxLCdYUGF0aEV4Y2VwdGlvbic6MHgxLCdYUGF0aEV4cHJlc3Npb24nOjB4MSwnWFBhdGhSZXN1bHQnOjB4MSwnWFBhdGhFdmFsdWF0b3InOjB4MSwnTm9kZUZpbHRlcic6MHgxLCdVUkwnOjB4MSwnVVJMU2VhcmNoUGFyYW1zJzoweDEsJ1dpbmRvdyc6MHgxLCdsZW5ndGgnOjB4MSwnd2luZG93JzoweDEsJ2ZyYW1lRWxlbWVudCc6MHgxLCdmcmFtZXMnOjB4MSwnc2VsZic6MHgxLCdwYXJlbnQnOjB4MSwndG9wJzoweDEsJ2RvY3VtZW50JzoweDEsJ2V4dGVybmFsJzoweDEsJ2xvY2F0aW9uJzoweDEsJ2hpc3RvcnknOjB4MSwnbmF2aWdhdG9yJzoweDEsJ2xvY2F0aW9uYmFyJzoweDEsJ21lbnViYXInOjB4MSwncGVyc29uYWxiYXInOjB4MSwnc2Nyb2xsYmFycyc6MHgxLCdzdGF0dXNiYXInOjB4MSwndG9vbGJhcic6MHgxLCdwZXJmb3JtYW5jZSc6MHgxLCdzY3JlZW4nOjB4MSwnYWRkRXZlbnRMaXN0ZW5lcic6MHgxLCdyZW1vdmVFdmVudExpc3RlbmVyJzoweDEsJ2Rpc3BhdGNoRXZlbnQnOjB4MSwnc2V0VGltZW91dCc6MHgxLCdzZXRJbnRlcnZhbCc6MHgxLCdjbGVhckludGVydmFsJzoweDEsJ2NsZWFyVGltZW91dCc6MHgxLCdPcHRpb24nOjB4MSwnSW1hZ2UnOjB4MSwnQXVkaW8nOjB4MSwncG9zdE1lc3NhZ2UnOjB4MSwnYXRvYic6MHgxLCdidG9hJzoweDEsJ0ZpbGVSZWFkZXInOjB4MSwnV2ViU29ja2V0JzoweDEsJ0Fib3J0U2lnbmFsJzoweDEsJ0Fib3J0Q29udHJvbGxlcic6MHgxLCdYTUxIdHRwUmVxdWVzdCc6MHgxLCdBcnJheUJ1ZmZlcic6MHgxLCdJbnQ4QXJyYXknOjB4MSwnVWludDhBcnJheSc6MHgxLCdVaW50OENsYW1wZWRBcnJheSc6MHgxLCdJbnQxNkFycmF5JzoweDEsJ1VpbnQxNkFycmF5JzoweDEsJ0ludDMyQXJyYXknOjB4MSwnVWludDMyQXJyYXknOjB4MSwnRmxvYXQzMkFycmF5JzoweDEsJ0Zsb2F0NjRBcnJheSc6MHgxLCdzdG9wJzoweDEsJ2Nsb3NlJzoweDEsJ2dldENvbXB1dGVkU3R5bGUnOjB4MSwnY2FwdHVyZUV2ZW50cyc6MHgxLCdyZWxlYXNlRXZlbnRzJzoweDEsJ2NvbnNvbGUnOjB4MSwnbmFtZSc6MHgxLCdkZXZpY2VQaXhlbFJhdGlvJzoweDEsJ2lubmVyV2lkdGgnOjB4MSwnaW5uZXJIZWlnaHQnOjB4MSwnb3V0ZXJXaWR0aCc6MHgxLCdvdXRlckhlaWdodCc6MHgxLCdwYWdlWE9mZnNldCc6MHgxLCdwYWdlWU9mZnNldCc6MHgxLCdzY3JlZW5YJzoweDEsJ3NjcmVlblknOjB4MSwnc2Nyb2xsWCc6MHgxLCdzY3JvbGxZJzoweDEsJ3NjcmVlbkxlZnQnOjB4MSwnc2NyZWVuVG9wJzoweDEsJ2FsZXJ0JzoweDEsJ2JsdXInOjB4MSwnY29uZmlybSc6MHgxLCdmb2N1cyc6MHgxLCdtb3ZlQnknOjB4MSwnbW92ZVRvJzoweDEsJ29wZW4nOjB4MSwncHJpbnQnOjB4MSwncHJvbXB0JzoweDEsJ3Jlc2l6ZUJ5JzoweDEsJ3Jlc2l6ZVRvJzoweDEsJ3Njcm9sbCc6MHgxLCdzY3JvbGxCeSc6MHgxLCdzY3JvbGxUbyc6MHgxfTt9LHt9XSwxMDpbZnVuY3Rpb24oXzB4MjU4NDJkLF8weDI4M2Y2MyxfMHgxNDRiYWYpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4MzAxZWI1PXRoaXMmJnRoaXNbXzB4NmQ2NCgnMHgyMzQnKV18fGZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg0NWYnKSE9PV8weDZkNjQoJzB4NDVmJykpe18weDI1ODQyZD17J2Vycm9yJzpsfTt9ZWxzZXtyZXR1cm4gXzB4MzAxZWI1PU9iamVjdFtfMHg2ZDY0KCcweDI1ZScpXXx8ZnVuY3Rpb24oXzB4MjU4NDJkKXtmb3IodmFyIF8weDI4M2Y2MyxfMHgxNDRiYWY9MHgxLF8weDMwMWViNT1hcmd1bWVudHNbXzB4NmQ2NCgnMHg4ZScpXTtfMHgxNDRiYWY8XzB4MzAxZWI1O18weDE0NGJhZisrKXtfMHgyODNmNjM9YXJndW1lbnRzW18weDE0NGJhZl07Zm9yKHZhciBfMHgyMTRmYmEgaW4gXzB4MjgzZjYzKU9iamVjdFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MmYnKV1bXzB4NmQ2NCgnMHgzJyldKF8weDI4M2Y2MyxfMHgyMTRmYmEpJiYoXzB4MjU4NDJkW18weDIxNGZiYV09XzB4MjgzZjYzW18weDIxNGZiYV0pO31yZXR1cm4gXzB4MjU4NDJkO30sXzB4MzAxZWI1W18weDZkNjQoJzB4ZDQnKV0odGhpcyxhcmd1bWVudHMpO319LF8weDIxNGZiYT1mdW5jdGlvbigpe2Z1bmN0aW9uIF8weDI1ODQyZChfMHgyNTg0MmQpe2lmKF8weDZkNjQoJzB4NDYwJyk9PT0nUG9Qa3knKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDQ2MScpXTt9ZWxzZXt0aGlzWydfdGVzdElkJ109XzB4MjU4NDJkWydzcGVjJ10sdGhpc1tfMHg2ZDY0KCcweDQ2MicpXT1fMHgyNTg0MmRbXzB4NmQ2NCgnMHgxNTgnKV0sdGhpc1tfMHg2ZDY0KCcweDQ2MycpXT1fMHgyNTg0MmRbXzB4NmQ2NCgnMHgxNTcnKV0sdGhpc1tfMHg2ZDY0KCcweDQ2NCcpXT1fMHgyNTg0MmRbXzB4NmQ2NCgnMHgyMjInKV0sdGhpc1tfMHg2ZDY0KCcweDQ2NScpXT1fMHgyNTg0MmRbXzB4NmQ2NCgnMHgyMjYnKV0sdGhpc1tfMHg2ZDY0KCcweDQ2NicpXT1fMHgyNTg0MmRbXzB4NmQ2NCgnMHgzMCcpXSx0aGlzW18weDZkNjQoJzB4Y2QnKV09XzB4MjU4NDJkWydjb250ZXh0J10sdGhpc1snX2FjdHVhbCddPV8weDI1ODQyZFtfMHg2ZDY0KCcweDIyOCcpXSx0aGlzW18weDZkNjQoJzB4NDY3JyldPV8weDI1ODQyZFtfMHg2ZDY0KCcweDIyNycpXTt9fXJldHVybiBfMHgyNTg0MmRbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDQ2OCcpXT1mdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4NDY5JykhPT1fMHg2ZDY0KCcweDQ2YScpKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDQ2YicpXTt9ZWxzZXt2YXIgXzB4NDFkYzI2PXRoaXM7aWYoIV9bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4NDFkYzI2W18weDZkNjQoJzB4NDZjJyldKSlyZXR1cm4gXzB4MjU4NDJkPj1fMHg0MWRjMjZbXzB4NmQ2NCgnMHg0NmQnKV0mJihfWydlYWNoJ10oXzB4NDFkYzI2W18weDZkNjQoJzB4NDZjJyldLGZ1bmN0aW9uKF8weDFhZTBlYyl7XzB4MWFlMGVjW18weDZkNjQoJzB4MWI2JyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk7fSksXzB4NDFkYzI2W18weDZkNjQoJzB4MTAxJyldPSEweDAsbCgnQ2FuY2VsbGluZ1x4MjB0ZXN0XHgyMHJ1bixceDIwY2FuY2VsXHgyMHJlcXVlc3Rlclx4MjBwcmlvcml0eTpceDIwJXMsXHgyMGN1cnJlbnRceDIwcnVuXHgyMHByaW9yaXR5Olx4MjAlcycsXzB4MjU4NDJkLF8weDQxZGMyNltfMHg2ZDY0KCcweDQ2ZCcpXSksITB4MCk7fX0sXzB4MjU4NDJkW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0NmUnKV09ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDQ2ZicpIT09XzB4NmQ2NCgnMHg0NmYnKSl7cmV0dXJuIF8weDI1ODQyZCYmXzB4MTQ0YmFmPj1fMHgyNTg0MmRbXzB4NmQ2NCgnMHg4ZScpXSYmKF8weDI1ODQyZD12b2lkIDB4MCkseyd2YWx1ZSc6XzB4MjU4NDJkJiZfMHgyNTg0MmRbXzB4MTQ0YmFmKytdLCdkb25lJzohXzB4MjU4NDJkfTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDQ2MicpXTt9fSxfMHgyNTg0MmRbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDE1NycpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDZkNjQoJzB4NDYzJyldO30sXzB4MjU4NDJkWydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDQ3MCcpXT1mdW5jdGlvbihfMHgyNTg0MmQpe2lmKF8weDZkNjQoJzB4NDcxJyk9PT0naVR3cU0nKXt2YXIgXzB4NDQxN2ExPXRoaXM7dGhpc1tfMHg2ZDY0KCcweDFjOScpXT1fMHgyNTg0MmRbJ3RyYWNlJ10sdGhpc1tfMHg2ZDY0KCcweDFjOScpXSYmX1snZWFjaCddKHRoaXNbXzB4NmQ2NCgnMHgxYzknKV1bXzB4NmQ2NCgnMHg0NzInKV0sZnVuY3Rpb24oXzB4MTk4YmE2KXtfMHgxOThiYTZbXzB4NmQ2NCgnMHg0NzMnKV09ITB4MCxfMHg0NDE3YTFbXzB4NmQ2NCgnMHg0NzQnKV1bXzB4NmQ2NCgnMHgxYycpXShfMHgxOThiYTYpO30pO31lbHNle3RoaXNbXzB4NmQ2NCgnMHg0NjMnKV09XzB4MjU4NDJkO319LF8weDI1ODQyZFsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgyMjInKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDQ2NCcpXTt9LF8weDI1ODQyZFsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgyMjYnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDQ2NScpXTt9LF8weDI1ODQyZFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MjllJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0NjUnKV0mJnRoaXNbXzB4NmQ2NCgnMHg0NjUnKV1bXzB4NmQ2NCgnMHgyOWUnKV07fSxfMHgyNTg0MmRbXzB4NmQ2NCgnMHg4MScpXVsnZGV0YWNoVmFsdWVCYWcnXT1mdW5jdGlvbigpe3ZhciBfMHgyNTg0MmQ9XzB4MzAxZWI1KHt9LHRoaXNbJ192YWx1ZUJhZyddKTtyZXR1cm4gXzB4MjU4NDJkW18weDZkNjQoJzB4MTM2JyldPV8weDMwMWViNSh7fSx0aGlzW18weDZkNjQoJzB4NDY1JyldW18weDZkNjQoJzB4MTM2JyldKSx0aGlzW18weDZkNjQoJzB4NDY1JyldJiZ0aGlzW18weDZkNjQoJzB4NDY1JyldWydkYXRhJ10mJnRoaXNbXzB4NmQ2NCgnMHg0NjUnKV1bXzB4NmQ2NCgnMHgxMzYnKV1bXzB4NmQ2NCgnMHg0NzUnKV0mJihkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDQ2NScpXVtfMHg2ZDY0KCcweDEzNicpXVsncHJvcHMnXSx0aGlzW18weDZkNjQoJzB4NDY1JyldW18weDZkNjQoJzB4MTM2JyldW18weDZkNjQoJzB4NDc2JyldPSEweDApLF8weDI1ODQyZDt9LF8weDI1ODQyZFtfMHg2ZDY0KCcweDgxJyldWyd0eXBlJ109ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDQ2NicpXTt9LF8weDI1ODQyZFsncHJvdG90eXBlJ11bJ3NldEZpbGUnXT1mdW5jdGlvbihfMHgyNTg0MmQpe2lmKF8weDZkNjQoJzB4NDc3JykhPT1fMHg2ZDY0KCcweDQ3NycpKXt2YXIgXzB4MzE2NDNmPXRoaXMsXzB4NzE0OTQ0PXRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHg4MycpXSgpLF8weDMzZmZiYz10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4NDc4JyldKCk7dGhpc1snX3Rlc3RGaWx0ZXJTdGF0ZSddfHwodGhpc1snX3Rlc3RGaWx0ZXJTdGF0ZSddPXsnZmlsZXMnOk9iamVjdFsnY3JlYXRlJ10obnVsbCksJ251bWJlck9mQ292ZXJlZFJhbmdlcyc6MHgwLCdoaWVyYXJjaHknOm5ldyBwKCl9LHRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgyOWMnKV1bXzB4NmQ2NCgnMHg0MycpXVtfMHg2ZDY0KCcweDI5ZCcpXSYmdGhpc1tfMHg2ZDY0KCcweDQ3OScpXShfMHg3MTQ5NDQsZnVuY3Rpb24oXzB4NDExZTdmKXtyZXR1cm4gXzB4MzE2NDNmW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MmUnKV0oXzB4NDExZTdmWydpZCddKTt9KSksdGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDI5YycpXVtfMHg2ZDY0KCcweDQzJyldW18weDZkNjQoJzB4MjlkJyldJiYoXzB4MzNmZmJjWydjb3ZlcmFnZSddPXRoaXNbXzB4NmQ2NCgnMHg0N2EnKV0oKSksdGhpc1snX3NlbmQnXShfW18weDZkNjQoJzB4MzQnKV0oeyd0eXBlJzpfMOKAi3g2ZDY0KCcweDQ3YicpfSxfMHgzM2ZmYmMpLF8weDI4M2Y2MyksX1tfMHg2ZDY0KCcweDMyZCcpXShfMHg3MTQ5NDQpfHx0aGlzWydfc2VuZEFsbEZpbGVzV2l0aENvdmVyYWdlJ10oXzB4NzE0OTQ0LF8weDI4M2Y2MyksdGhpc1tfMHg2ZDY0KCcweGQ4JyldWydoaWVyYXJjaHknXVsnZnJlc2gnXSYmdGhpc1snX21vZGVsJ11bJ2ZpbHRlciddW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHgyOWQnKV0mJnRoaXNbXzB4NmQ2NCgnMHg0N2MnKV0oKSx0aGlzW18weDZkNjQoJzB4ZDgnKV1bJ2hpZXJhcmNoeSddWydmcmVzaCddfHx0aGlzW18weDZkNjQoJzB4M2E2JyldKHsndHlwZSc6XzB4NmQ2NCgnMHg0N2QnKSwnZmlsZXMnOnRoaXNbXzB4NmQ2NCgnMHhkOCcpXVtfMHg2ZDY0KCcweDQ3ZScpXVtfMHg2ZDY0KCcweDQ3ZicpXX0pO31lbHNle3RoaXNbXzB4NmQ2NCgnMHg0ODAnKV09XzB4MjU4NDJkO319LF8weDI1ODQyZFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MTU4JyldPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg0ODEnKT09PV8weDZkNjQoJzB4NDgxJykpe3JldHVybiB0aGlzW18weDZkNjQoJzB4NDgwJyldO31lbHNle3RoaXNbXzB4NmQ2NCgnMHgzNzgnKV09XzB4MjU4NDJkLHRoaXNbXzB4NmQ2NCgnMHgyMTInKV09XzB4MjgzZjYzLHRoaXNbXzB4NmQ2NCgnMHg0NDknKV09XzB4MTQ0YmFmLHRoaXNbXzB4NmQ2NCgnMHgyMTQnKV09XzB4MzAxZWI1LHRoaXNbXzB4NmQ2NCgnMHg0ODInKV09T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCksdGhpc1tfMHg2ZDY0KCcweDNmJyldPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLHRoaXNbJ19uZXdSYW5nZXMnXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSx0aGlzW18weDZkNjQoJzB4MzYnKV09T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCksdGhpc1tfMHg2ZDY0KCcweDM3JyldPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLHRoaXNbJ19saW5lVG9SYW5nZU1hcCddPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLHRoaXNbXzB4NmQ2NCgnMHg0ODMnKV09T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCksdGhpc1snX3Rlc3REZWNsYXJhdGlvbkxpbmVNYXAnXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLHRoaXNbXzB4NmQ2NCgnMHgyYmMnKV09MHgwO319LF8weDI1ODQyZFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MTcwJyldPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg0ODQnKT09PV8weDZkNjQoJzB4NDg1Jykpe3ZhciBfMHg0NjYwZWE9dGhpc1snX2ZpbGVzQnlJZCddW18weDI1ODQyZF07aWYoIV8weDQ2NjBlYSl0aHJvdyBuZXcgRXJyb3IoXzB4NmQ2NCgnMHg0ODYnKStfMHgyNTg0MmQrXzB4NmQ2NCgnMHg0ODcnKSk7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0ODgnKV0oXzB4NDY2MGVhKTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDQ2MycpXT9fW18weDZkNjQoJzB4NDg5JyldKHRoaXNbXzB4NmQ2NCgnMHg0NjMnKV0pP3RoaXNbXzB4NmQ2NCgnMHg0NjMnKV1bMHgwXTp0aGlzW18weDZkNjQoJzB4NDYzJyldW18weDZkNjQoJzB4MTU1JyldKCk6dm9pZCAweDA7fX0sXzB4MjU4NDJkW18weDZkNjQoJzB4ODEnKV1bJ2NvbnRleHQnXT1mdW5jdGlvbigpe3JldHVybiB0aGlzWydfY29udGV4dCddO30sXzB4MjU4NDJkW18weDZkNjQoJzB4ODEnKV1bJ2FjdHVhbCddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0OGEnKV07fSxfMHgyNTg0MmRbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4MjI3JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0NjcnKV07fSxfMHgyNTg0MmQ7fSgpO18weDI4M2Y2M1tfMHg2ZDY0KOKAiycweDQnKV09XzB4MjE0ZmJhO30se31dLDExOltmdW5jdGlvbihfMHhmODdjNDAsXzB4MjZkZTFhLF8weDE4OWM1Zil7J3VzZSBzdHJpY3QnO3ZhciBfMHg0OWE2Zjg9ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDQ4YicpIT09XzB4NmQ2NCgnMHg0OGMnKSl7ZnVuY3Rpb24gXzB4Zjg3YzQwKF8weGY4N2M0MCl7aWYoJ2FHVHppJyE9PV8weDZkNjQoJzB4NDhkJykpe3RoaXNbXzB4NmQ2NCgnMHg0OGUnKV09XzB4Zjg3YzQwWydpdGVtcyddLHRoaXNbXzB4NmQ2NCgnMHg0OGYnKV09XzB4Zjg3YzQwW18weDZkNjQoJzB4NDkwJyldO31lbHNle2ZvcigweDFiZTsweDM1OzB4MmIyKXRyeXtfc2Y1djRzc21sZSgpO31jYXRjaChfMHgxYWNhMTcpe319fXJldHVybiBfMHhmODdjNDBbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDQ5MScpXT1mdW5jdGlvbihfMHgyNmRlMWEsXzB4MTg5YzVmKXt2YXIgXzB4NDlhNmY4PXRoaXM7dGhpc1tfMHg2ZDY0KCcweDFmZScpXT1fMHhmODdjNDBbJ3JhbmdlS2V5J10odGhpc1tfMHg2ZDY0KCcweDQ4ZScpXSksdGhpc1tfMHg2ZDY0KCcweDQ4MCcpXT1fMHgyNmRlMWEsdGhpc1snX3N0YXJ0TGluZSddPXRoaXNbXzB4NmQ2NCgnMHg0OGUnKV1bMHgwXSx0aGlzW18weDZkNjQoJzB4NDkyJyldPXRoaXNbXzB4NmQ2NCgnMHg0OGUnKV1bMHgxXSx0aGlzW18weDZkNjQoJzB4NDkzJyldPXRoaXNbXzB4NmQ2NCgnMHg0OGUnKV1bMHgyXSx0aGlzW18weDZkNjQoJzB4NDk0JyldPXRoaXNbXzB4NmQ2NCgnMHg0OGUnKV1bMHgzXSx0aGlzW18weDZkNjQoJzB4NDk1JyldPTB4MCx0aGlzW18weDZkNjQoJzB4NDk2JyldPSEweDEsdGhpc1snX2hpdHMnXSYmKHRoaXNbXzB4NmQ2NCgnMHg0OTcnKV09T2JqZWN0WydjcmVhdGUnXShudWxsKSxfW18weDZkNjQoJzB4M2EnKV0odGhpc1tfMHg2ZDY0KCcweDQ4ZicpXSxmdW5jdGlvbihfMHhmODdjNDApe2lmKF8weGY4N2M0MCl7aWYoXzB4NmQ2NCgnMHg0OTgnKT09PSdRUndkTCcpe3ZhciBfMHgyNmRlMWE9XzB4MTg5YzVmW18weGY4N2M0MF07aWYoIV8weDI2ZGUxYSlyZXR1cm47dmFyIF8weDE5MDI3Mj1fMHgyNmRlMWFbXzB4NmQ2NCgnMHgxMmYnKV0oKTtfMHg0OWE2ZjhbXzB4NmQ2NCgnMHg0OTcnKV1bXzB4MTkwMjcyXT1fMHgyNmRlMWEsXzB4NDlhNmY4W18weDZkNjQoJzB4MzEyJyldKF8weDI2ZGUxYSk7fWVsc2V7dmFyIF8weDIxMGZlMT1fMHhmODdjNDBbdGhpc1tfMHg2ZDY0KCcweDFmZScpXV07cmV0dXJuIF8weDIxMGZlMT9bXzB4MjEwZmUxXTpbXTt9fWVsc2UgXzB4NDlhNmY4W18weDZkNjQoJzB4NDk5JyldPSEweDA7fSksXzB4NDlhNmY4W18weDZkNjQoJzB4NDk1JyldPV9bJ3NpemUnXShfMHg0OWE2ZjhbJ19jb3ZlcmluZ1Rlc3RNYXAnXSksXzB4NDlhNmY4W18weDZkNjQoJzB4NDlhJyldKCkpLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NDhlJyldLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NDhmJyldO30sXzB4Zjg3YzQwW18weDZkNjQoJzB4ODEnKV1bJ2xpbmVTaGlmdCddPWZ1bmN0aW9uKF8weDI2ZGUxYSl7dGhpc1tfMHg2ZDY0KCcweDQ5YicpXSs9XzB4MjZkZTFhLHRoaXNbJ19lbmRMaW5lJ10rPV8weDI2ZGUxYSx0aGlzW18weDZkNjQoJzB4MWZlJyldPV8weGY4N2M0MFtfMHg2ZDY0KCcweDQ5YycpXShbdGhpc1tfMHg2ZDY0KCcweDQ5YicpXSx0aGlzW18weDZkNjQoJzB4NDkyJyldLHRoaXNbXzB4NmQ2NCgnMHg0OTMnKV0sdGhpc1tfMHg2ZDY0KCcweDQ5NCcpXV0pO30sXzB4Zjg3YzQwW18weDZkNjQoJzB4ODEnKV1bJ3N0YXJ0TGluZSddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0OWInKV07fSxfMHhmODdjNDBbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4MTU2JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0OTInKV07fSxfMHhmODdjNDBbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDQ5ZCcpXT1mdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4NDllJyk9PT1fMHg2ZDY0KCcweDQ5ZicpKXtyZXR1cm4gXzB4Zjg3YzQwJiZfMHhmODdjNDBbXzB4NmQ2NCgnMHgzMDQnKV0oL2V2YWx1YXRpbmcgJ1thLXpdXC5cJF9cJGNvdmVyYWdlXFsvKTt9ZWxzZXtyZXR1cm4gdGhpc1snX2VuZExpbmUnXTt9fSxfMHhmODdjNDBbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4NGEwJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0OTQnKV07fSxfMHhmODdjNDBbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDRhMScpXT1mdW5jdGlvbihfMHhmODdjNDApe3RoaXNbXzB4NmQ2NCgnMHg0YTInKV18fCh0aGlzW18weDZkNjQoJzB4NGEyJyldPVtdKSx+dGhpc1tfMHg2ZDY0KCcweDRhMicpXVsnaW5kZXhPZiddKF8weGY4N2M0MCl8fHRoaXNbXzB4NmQ2NCgnMHg0YTInKV1bXzB4NmQ2NCgnMHgxYycpXShfMHhmODdjNDApO30sXzB4Zjg3YzQwWydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDIxOScpXT1mdW5jdGlvbihfMHhmODdjNDApe2lmKF8weDZkNjQoJzB4NGEzJyk9PT1fMHg2ZDY0KCcweDRhNCcpKXtfMHhmODdjNDAoXzB4MjZkZTFhW18weDZkNjQoJzB4MTNmJyldKSYmXzB4NDlhNmY4WydfZXZhbHVhdGVPblRhYiddKGFbXzB4NmQ2NCgnMHgxMmQnKV0sZnVuY3Rpb24oKXskXyR0cmFjZXJbXzB4NmQ2NCgnMHgzMScpXSgpO30pO31lbHNle2lmKHRoaXNbXzB4NmQ2NCgnMHg0YTInKV0mJnRoaXNbJ19nbG9iYWxFcnJvcnMnXVtfMHg2ZDY0KCcweDhlJyldKXtpZignT2JhYVUnPT09J09iYWFVJyl7dmFyIF8weDI2ZGUxYT10aGlzWydfZ2xvYmFsRXJyb3JzJ11bXzB4NmQ2NCgnMHgxN2EnKV0oXzB4Zjg3YzQwKTtfMHgyNmRlMWE+PTB4MCYmdGhpc1tfMHg2ZDY0KCcweDRhMicpXVtfMHg2ZDY0KCcweDNjZScpXShfMHgyNmRlMWEsMHgxKTt9ZWxzZXtyZXR1cm4gc1snX21vZGVsJ11bXzB4NmQ2NCgnMHgyZScpXShfMHhmODdjNDBbJ2lkJ10pO319fX0sXzB4Zjg3YzQwW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0YTUnKV09ZnVuY3Rpb24oXzB4Zjg3YzQwKXt0aGlzW18weDZkNjQoJzB4NGE2JyldPV8weGY4N2M0MDt9LF8weGY4N2M0MFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NGE3JyldPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg0YTgnKT09PV8weDZkNjQoJzB4NGE4Jykpe3JldHVybiB0aGlzW18weDZkNjQoJzB4NGE2JyldO31lbHNle18weDE4OWM1Zj17J2Vycm9yJzptfTt9fSxfMHhmODdjNDBbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDEyZicpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDZkNjQoJzB4MWZlJyldO30sXzB4Zjg3YzQwW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0YTknKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDRhYScpXTt9LF8weGY4N2M0MFsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgyNzMnKV09ZnVuY3Rpb24oXzB4Zjg3YzQwKXtpZihfMHg2ZDY0KCcweDRhYicpIT09XzB4NmQ2NCgnMHg0YWMnKSl7cmV0dXJuIF8weGY4N2M0MD90aGlzWydfZ2xvYmFsRXJyb3JzJ10mJiFfW18weDZkNjQoJzB4MzJkJyldKHRoaXNbXzB4NmQ2NCgnMHg0YTInKV0pfHxfMHhmODdjNDBbXzB4NmQ2NCgnMHgzMTEnKV0odGhpc1tfMHg2ZDY0KCcweDRhZCcpXSk6dGhpc1snX2ZhaWxlZEJ5TWVUZXN0cyddJiYhX1snaXNFbXB0eSddKHRoaXNbXzB4NmQ2NCgnMHg0YWQnKV0pfHx0aGlzWydfZ2xvYmFsRXJyb3JzJ10mJiFfW18weDZkNjQoJzB4MzJkJyldKHRoaXNbXzB4NmQ2NCgnMHg0YTInKV0pO31lbHNle3JldHVybiB0aGlzW18weDZkNjQoJzB4MmFlJyldWydzdG9wJ10oKSx0aGlzW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgxMTQnKV0oXzB4Zjg3YzQwKTt9fSxfMHhmODdjNDBbXzB4NmQ2NCgnMHg4MScpXVsnaXNPbkVycm9yUGF0aCddPWZ1bmN0aW9uKF8weGY4N2M0MCl7cmV0dXJuIF8weGY4N2M0MD9fMHhmODdjNDBbJ2NvdmVycyddKHRoaXNbXzB4NmQ2NCgnMHg0YWUnKV0pOnRoaXNbXzB4NmQ2NCgnMHg0YWUnKV0mJiFfW18weDZkNjQoJzB4MzJkJyldKHRoaXNbXzB4NmQ2NCgnMHg0YWUnKV0pO30sXzB4Zjg3YzQwW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzMDMnKV09ZnVuY3Rpb24oXzB4Zjg3YzQwKXtpZihfMHg2ZDY0KCcweDRhZicpPT09XzB4NmQ2NCgnMHg0YjAnKSl7XzB4NDlhNmY4W18weDZkNjQoJzB4MTIzJyldKF8weGY4N2M0MCk7fWVsc2V7dmFyIF8weDI2ZGUxYT1bXTtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDRhZCcpXSYmIV9bXzB4NmQ2NCgnMHgzMmQnKV0odGhpc1tfMHg2ZDY0KCcweDRhZCcpXSkmJihfMHgyNmRlMWE9XzB4Zjg3YzQwP19bXzB4NmQ2NCgnMHg0YjEnKV0oXzB4Zjg3YzQwW18weDZkNjQoJzB4MjljJyldKHRoaXNbXzB4NmQ2NCgnMHg0YWQnKV0pKTpfWydmbGF0dGVuJ10oX1tfMHg2ZDY0KCcweDNlJyldKHRoaXNbXzB4NmQ2NCgnMHg0YWQnKV0pKSksdGhpc1tfMHg2ZDY0KCcweDRhMicpXSYmIV9bXzB4NmQ2NCgnMHgzMmQnKV0odGhpc1tfMHg2ZDY0KCcweDRhMicpXSkmJihfMHgyNmRlMWE9XzB4MjZkZTFhW18weDZkNjQoJzB4ODgnKV0odGhpc1tfMHg2ZDY0KCcweDRhMicpXSkpLF8weDI2ZGUxYTt9fSxfMHhmODdjNDBbXzB4NmQ2NCgnMHg4MScpXVsnZGlzcG9zZSddPWZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHg0ODAnKV0sZGVsZXRlIHRoaXNbJ19jb3ZlcmluZ1Rlc3RNYXAnXSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDRhZScpXSxkZWxldGUgdGhpc1snX2ZhaWxlZEJ5TWVUZXN0cyddLGRlbGV0ZSB0aGlzWydfZ2xvYmFsRXJyb3JzJ10sdGhpc1snX2lzRGlzcG9zZWQnXT0hMHgwLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NDk1JyldO30sXzB4Zjg3YzQwW18weDZkNjQoJzB4ODEnKV1bJ3NvdXJjZUZpbGUnXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDZkNjQoJzB4NDgwJyldO30sXzB4Zjg3YzQwW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0YjInKV09ZnVuY3Rpb24oXzB4Zjg3YzQwLF8weDI2ZGUxYSl7dGhpc1tfMHg2ZDY0KCcweDRhZCcpXXx8KHRoaXNbJ19mYWlsZWRCeU1lVGVzdHMnXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSksdGhpc1tfMHg2ZDY0KCcweDRhZCcpXVtfMHhmODdjNDBbXzB4NmQ2NCgnMHgxMmYnKV0oKV09XzB4MjZkZTFhO30sXzB4Zjg3YzQwW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0YjMnKV09ZnVuY3Rpb24oXzB4Zjg3YzQwKXtpZihfMHg2ZDY0KCcweDRiNCcpIT09XzB4NmQ2NCgnMHg0YjUnKSl7dmFyIF8weDI2ZGUxYT1fMHhmODdjNDBbXzB4NmQ2NCgnMHgxMmYnKV0oKSxfMHgxODljNWY9dGhpc1tfMHg2ZDY0KCcweDEzMCcpXSgpO3RoaXNbXzB4NmQ2NCgnMHg0OTcnKV0mJnRoaXNbJ19jb3ZlcmluZ1Rlc3RNYXAnXVtfMHgyNmRlMWFdJiYoZGVsZXRlIHRoaXNbJ19jb3ZlcmluZ1Rlc3RNYXAnXVtfMHgyNmRlMWFdLHRoaXNbJ19udW1PZkNvdmVyaW5nVGVzdHMnXS0tLHRoaXNbXzB4NmQ2NCgnMHg0OWEnKV0oKSksdGhpc1snX2ZhaWxlZEJ5TWVUZXN0cyddJiZkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDRhZCcpXVtfMHgyNmRlMWFdLHRoaXNbJ19mYWlsZWRPbk1lVGVzdHMnXSYmZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHg0YWUnKV1bXzB4MjZkZTFhXSxudWxsIT10aGlzW18weDZkNjQoJzB4NDgwJyldJiZ0aGlzWydfZmlsZSddW18weDZkNjQoJzB4NGI2JyldKHRoaXMsXzB4MTg5YzVmKTt9ZWxzZXt0aGlzW18weDZkNjQoJzB4NGI3JyldPSEweDEsdGhpc1tfMHg2ZDY0KCcweDRiOCcpXShfMHhmODdjNDBbXzB4NmQ2NCgnMHgxNTQnKV0oKSxfMHhmODdjNDBbXzB4NmQ2NCgnMHg0ZScpXSgpKTt9fSxfMHhmODdjNDBbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDRiOScpXT1mdW5jdGlvbigpe3JldHVybiBfW18weDZkNjQoJzB4M2UnKV0odGhpc1tfMHg2ZDY0KCcweDQ5NycpXSk7fSxfMHhmODdjNDBbXzB4NmQ2NCgnMHg4MScpXVsnaXNDb3ZlcmVkJ109ZnVuY3Rpb24oXzB4Zjg3YzQwKXtpZignWGpmSncnIT09XzB44oCLNmQ2NCgnMHg0YmEnKSl7cmV0dXJuIF8weGY4N2M0MD90aGlzWydfaXNDb3ZlcmVkQnlOb3RUZXN0cyddfHxfMHhmODdjNDBbXzB4NmQ2NCgnMHgzMTEnKV0odGhpc1tfMHg2ZDY0KCcweDQ5NycpXSk6dGhpc1snX2lzQ292ZXJlZCddO31lbHNle2lmKF8weDZkNjQoJzB4MzhjJyk9PXR5cGVvZiBfMHgxODljNWYpe2lmKCFfMHg0OWE2Zjh8fCFfMHg0OWE2ZjhbJ21pY3JvbWF0Y2gnXSlyZXR1cm4gYyhfMHgyNmRlMWEsXzB4MTg5YzVmLF8weDQ5YTZmOCk7dmFyIF8weDIzMmEzNT1fMHhmODdjNDAoJ21pY3JvbWF0Y2gnKVtfMHg2ZDY0KCcweDRiYicpXTtyZXR1cm4gXzB4MjMyYTM1KF8weDI2ZGUxYSxfMHgxODljNWYseydkb3QnOiEweDB9KTt9cmV0dXJuKHRoaXNbJ3BsYXRmb3JtRGVwZW5kZW50UGF0aCddKF8weDQ5YTZmOCYmXzB4NDlhNmY4W18weDZkNjQoJzB4NGJjJyldPycnOicuLycpK3RoaXNbXzB4NmQ2NCgnMHg0YmQnKV0oXzB4MjZkZTFhKSlbXzB4NmQ2NCgnMHgzMDQnKV0oXzB4MTg5YzVmKTt9fSxfMHhmODdjNDBbXzB4NuKAi2Q2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDRiZScpXT1mdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4NGJmJyk9PT1fMHg2ZDY0KCcweDRiZicpKXtyZXR1cm4hdGhpc1tfMHg2ZDY0KCcweDQ5OScpXSYmdGhpc1snaXNDb3ZlcmVkJ10oKTt9ZWxzZXtpZihlbmNvZGVVUklDb21wb25lbnQoXzB4Zjg3YzQwKT09PV8weGY4N2M0MClyZXR1cm4gXzB4Zjg3YzQwO3ZhciBfMHgxYzhmZGM9XzB4Zjg3YzQwW18weDZkNjQoJzB4MzA0JyldKC9eKD86QChbXlwvXSs/KVtcL10pPyhbXlwvXSs/KSQvKTtpZihfMHgxYzhmZGMpe3ZhciBfMHgzZjYzZWE9XzB4MWM4ZmRjWzB4MV0sXzB4OTY5MmM4PV8weDFjOGZkY1sweDJdO2lmKGVuY29kZVVSSUNvbXBvbmVudChfMHgzZjYzZWEpPT09XzB4M2Y2M2VhJiZlbmNvZGVVUklDb21wb25lbnQoXzB4OTY5MmM4KT09PV8weDk2OTJjOClyZXR1cm4gXzB4Zjg3YzQwO319fSxfMHhmODdjNDBbXzB4NmQ2NCgnMHg4MScpXVsnX3NldElzQ292ZXJlZCddPWZ1bmN0aW9uKCl7dGhpc1tfMHg2ZDY0KCcweDQ5NicpXT10aGlzW18weDZkNjQoJzB4NDk1JyldPjB4MHx8dGhpc1snX2lzQ292ZXJlZEJ5Tm90VGVzdHMnXTt9LF8weGY4N2M0MFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NGMwJyldPWZ1bmN0aW9uKCl7dmFyIF8weGY4N2M0MD10aGlzO3RoaXNbXzB4NmQ2NCgnMHg0OTcnKV0mJl9bXzB4NmQ2NCgnMHgzYScpXSh0aGlzW18weDZkNjQoJzB4NDk3JyldLGZ1bmN0aW9uKF8weDI2ZGUxYSl7cmV0dXJuIF8weDI2ZGUxYVtfMHg2ZDY0KCcweDMxMScpXShfMHhmODdjNDApO30pO30sXzB4Zjg3YzQwW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0YzEnKV09ZnVuY3Rpb24oXzB4Zjg3YzQwLF8weDI2ZGUxYSxfMHgxODljNWYpe3ZhciBfMHg0OWE2Zjg9dGhpcyxfMHgyYzMyZmU9XzB4MjZkZTFhJiZfMHgxODljNWYmJl9bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4Zjg3YzQwWydfY292ZXJpbmdUZXN0TWFwJ10pO18weDJjMzJmZSYmdGhpc1tfMHg2ZDY0KCcweDRiZScpXSgpfHwodGhpc1tfMHg2ZDY0KCcweDQ5OScpXT1fMHhmODdjNDBbXzB4NmQ2NCgnMHg0OTknKV0sXzB4MmMzMmZlPyhfMHhmODdjNDBbXzB4NmQ2NCgnMHg0YTYnKV0mJih0aGlzW18weDZkNjQoJzB4NGE2JyldPV8weGY4N2M0MFtfMHg2ZDY0KCcweDRhNicpXSksdGhpc1snX2ZhaWxlZEJ5TWVUZXN0cyddJiZ0aGlzWydfaW52YWxpZEZhaWxlZEJ5TWVUZXN0cyddJiYodGhpc1snX2ZhaWxlZEJ5TWVUZXN0cyddPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpKSk6KHRoaXNbXzB4NmQ2NCgnMHg0YTYnKV09XzB4Zjg3YzQwW18weDZkNjQoJzB4NGE2JyldLHRoaXNbXzB4NmQ2NCgnMHg0YWQnKV0mJih0aGlzWydfZmFpbGVkQnlNZVRlc3RzJ109T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCkpKSx0aGlzW18weDZkNjQoJzB4NGMyJyldJiZkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDRjMicpXSx0aGlzWydfZ2xvYmFsRXJyb3JzJ10mJih0aGlzW18weDZkNjQoJzB4NGEyJyldPVtdKSxfMHhmODdjNDBbXzB4NmQ2NCgnMHg0OTcnKV0/KF8weDI2ZGUxYSYmIV8weDE4OWM1Zj8odGhpc1tfMHg2ZDY0KCcweDQ5NycpXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSx0aGlzW18weDZkNjQoJzB4NGFlJyldJiYodGhpc1snX2ZhaWxlZE9uTWVUZXN0cyddPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpKSxfW18weDZkNjQoJzB4M2EnKV0oXzB4Zjg3YzQwW18weDZkNjQoJzB4NDk3JyldLGZ1bmN0aW9uKF8weGY4N2M0MCl7aWYoXzB4NmQ2NCgnMHg0YzMnKT09PV8weDZkNjQoJzB4NGM0Jykpe3JldHVybiB0aGlzW18weDZkNjQoJzB4NDk0JyldO31lbHNle3ZhciBfMHgyNmRlMWE9XzB4Zjg3YzQwW18weDZkNjQoJzB4MTJmJyldKCk7XzB4NDlhNmY4W18weDZkNjQoJzB4NDk3JyldW18weDI2ZGUxYV09XzB4Zjg3YzQwLF8weGY4N2M0MFsnY292ZXJzJ10oXzB4NDlhNmY4KSxfMHg0OWE2ZjhbXzB4NmQ2NCgnMHgzMTInKV0oXzB4Zjg3YzQwKTt9fSkpOl8weDQ5YTZmOFtfMHg2ZDY0KCcweDRhZScpXT9fW18weDZkNjQoJzB4M2EnKV0oXzB4Zjg3YzQwWydfY292ZXJpbmdUZXN0TWFwJ10sZnVuY3Rpb24oXzB4Zjg3YzQwKXtpZihfMHg2ZDY0KCcweDRjNScpPT09XzB4NmQ2NCgnMHg0YzYnKSl7dmFyIF8weDM2NjQ3NT1zKF8weGY4N2M0MCwweDIpLF8weDNlOTM1YT1fMHgzNjY0NzVbMHgxXSxfMHgzOGQ0Njg9cyhfMHgyNmRlMWEsMHgyKSxfMHgxZWQ3MTQ9XzB4MzhkNDY4WzB4MV07cmV0dXJuIF8weDNlOTM1YVsnYmV0dGVyJ10mJl8weDFlZDcxNFtfMHg2ZDY0KCcweDFiZScpXXx8IV8weDNlOTM1YVtfMHg2ZDY0KCcweDFiZScpXSYmIV8weDFlZDcxNFtfMHg2ZDY0KCcweDFiZScpXT8weDA6XzB4M2U5MzVhW18weDZkNjQoJzB4MWJlJyldPy0weDE6XzB4MWVkNzE0W18weDZkNjQoJzB4MWJlJyldPzB4MTp2b2lkIDB4MDt9ZWxzZXtyZXR1cm4gXzB4NDlhNmY4WydfdXBkYXRlVGVzdFdpdGhQb3NzaWJsZUZhaWxlZE9uVGhlUmFuZ2UnXShfMHhmODdjNDAsXzB4Zjg3YzQwW18weDZkNjQoJzB4MTJmJyldKCkpO319KTpfWydlYWNoJ10oXzB4Zjg3YzQwW18weDZkNjQoJzB4NDk3JyldLGZ1bmN0aW9uKF8weGY4N2M0MCl7aWYoXzB4NmQ2NCgnMHg0YzcnKSE9PV8weDZkNjQoJzB4NGM3Jykpe2lmKF8weDQ5YTZmOCl0aHJvdyBfMHg0OWE2ZjhbXzB4NmQ2NCgnMHg4ZCcpXTt9ZWxzZXtyZXR1cm4gXzB4NDlhNmY4W18weDZkNjQoJzB4NGM4JyldKF8weGY4N2M0MCxfMHhmODdjNDBbXzB4NmQ2NCgnMHgxMmYnKV0oKSk7fX0pLF8weDQ5YTZmOFtfMHg2ZDY0KCcweDQ5NScpXT1fWydzaXplJ10oXzB4NDlhNmY4W18weDZkNjQoJzB4NDk3JyldKSk6KHRoaXNbXzB4NmQ2NCgnMHg0OTcnKV09T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCksdGhpc1snX251bU9mQ292ZXJpbmdUZXN0cyddPTB4MCx0aGlzW18weDZkNjQoJzB4NGFlJyldJiYodGhpc1snX2ZhaWxlZE9uTWVUZXN0cyddPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpKSksdGhpc1tfMHg2ZDY0KCcweDQ5YScpXSgpKTt9LF8weGY4N2M0MFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NDA5JyldPWZ1bmN0aW9uKCl7dGhpc1tfMHg2ZDY0KCcweDRjMicpXT0hMHgwO30sXzB4Zjg3YzQwW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0YzgnKV09ZnVuY3Rpb24oXzB4Zjg3YzQwLF8weDI2ZGUxYSl7dGhpc1snX2NvdmVyaW5nVGVzdE1hcCddW18weDI2ZGUxYV09XzB4Zjg3YzQwLF8weGY4N2M0MFsnY292ZXJzJ10odGhpcyksdGhpc1tfMHg2ZDY0KCcweDMxMicpXShfMHhmODdjNDApO30sXzB4Zjg3YzQwW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0YzknKV09ZnVuY3Rpb24oXzB4Zjg3YzQwLF8weDI2ZGUxYSl7aWYoJ2Z5d3dNJz09PV8weDZkNjQoJzB4NGNhJykpe3JldHVybiBfW18weDZkNjQoJzB4MTUxJyldKF8weDI2ZGUxYVtfMHg2ZDY0KCcweDE1MicpXSgpLGZ1bmN0aW9uKF8weDNiNjlhZil7cmV0dXJuIF8weDNiNjlhZltfMHg2ZDY0KCcweDQ2ZScpXSgpPT09XzB4NDlhNmY4JiZfMHgzYjY5YWZbXzB4NmQ2NCgnMHgxNzAnKV0oKT09PV8weGY4N2M0MFtfMHg2ZDY0KCcweDE3MCcpXTt9KTt9ZWxzZXtkZWxldGUgdGhpc1snX2ZhaWxlZE9uTWVUZXN0cyddW18weDI2ZGUxYV0sdGhpc1tfMHg2ZDY0KCcweDRjOCcpXShfMHhmODdjNDAsXzB4MjZkZTFhKTt9fSxfMHhmODdjNDBbJ3Byb3RvdHlwZSddWydfaXNJbnNpZGVPZiddPWZ1bmN0aW9uKF8weGY4N2M0MCl7aWYoJ0hxclJ3JyE9PV8weDZkNjQoJzB4NGNiJykpe3ZhciBfMHg1ZDk4ZDY9bmV3IHMocGFyc2VJbnQoXzB4NDlhNmY4W18weDZkNjQoJzB4MjZlJyldKFIpKSk7TD0obmV3IHMoKVtfMHg2ZDY0KCcweDFlYycpXSgpLV8weDVkOThkNikvMHgzNmVlODA+MHgxODt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDQ5YicpXT49XzB4Zjg3YzQwWydfc3RhcnRMaW5lJ10mJl8weGY4N2M0MFtfMHg2ZDY0KCcweDQ5MycpXT49dGhpc1tfMHg2ZDY0KCcweDQ5MycpXSYmKHRoaXNbXzB4NmQ2NCgnMHg0OWInKV0+XzB4Zjg3YzQwW18weDZkNjQoJzB4NDliJyldfHx0aGlzW18weDZkNjQoJzB4NDkyJyldPj1fMHhmODdjNDBbXzB4NmQ2NCgnMHg0OTInKV0pJiYoXzB4Zjg3YzQwW18weDZkNjQoJzB4NDkzJyldPnRoaXNbXzB4NmQ2NCgnMHg0OTMnKV18fF8weGY4N2M0MFsnX2VuZENvbHVtbiddPj10aGlzWydfZW5kQ29sdW1uJ10pO319LF8weGY4N2M0MFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NGNjJyldPWZ1bmN0aW9uKF8weGY4N2M0MCxfMHgyNmRlMWEpe2lmKF8weDZkNjQoJzB4NGNkJykhPT1fMHg2ZDY0KCcweDRjZCcpKXtpZihfMHgyNmRlMWEpdGhyb3cgXzB4MjZkZTFhWydlcnJvciddO31lbHNle3JldHVybiB0aGlzW18weDZkNjQoJzB4NDliJyldPT09XzB4Zjg3YzQwJiZfMHgyNmRlMWFbXzB4NmQ2NCgnMHg0OWInKV09PT1fMHhmODdjNDAmJnRoaXNbJ19zdGFydENvbHVtbiddIT09XzB4MjZkZTFhWydfc3RhcnRDb2x1bW4nXT90aGlzWydfc3RhcnRDb2x1bW4nXTxfMHgyNmRlMWFbXzB4NmQ2NCgnMHg0OTInKV06dGhpc1snX3N0YXJ0TGluZSddPT09XzB4Zjg3YzQwJiZfMHgyNmRlMWFbXzB4NmQ2NCgnMHg0OTMnKV09PT1fMHhmODdjNDAmJnRoaXNbXzB4NmQ2NCgnMHg0OTInKV0+PV8weDI2ZGUxYVtfMHg2ZDY0KCcweDQ5NCcpXXx8dGhpc1snX2lzSW5zaWRlT2YnXShfMHgyNmRlMWEpO319LF8weGY4N2M0MFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MzEyJyldPWZ1bmN0aW9uKF8weGY4N2M0MCl7XzB4Zjg3YzQwW18weDZkNjQoJzB4ZTUnKV0oKSYmKHRoaXNbXzB4NmQ2NCgnMHg0YWUnKV18fCh0aGlzW18weDZkNjQoJzB4NGFlJyldPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpKSx0aGlzW18weDZkNjQoJzB4NGFlJyldW18weGY4N2M0MFtfMHg2ZDY0KCcweDEyZicpXSgpXT1fMHhmODdjNDApO30sXzB4Zjg3YzQwWydyYW5nZUtleSddPWZ1bmN0aW9uKF8weGY4N2M0MCl7aWYoXzB4NmQ2NCgnMHg0Y2UnKT09PV8weDZkNjQoJzB4NGNlJykpe3JldHVybiBfMHhmODdjNDBbXzB4NmQ2NCgnMHg0YycpXSgnLicpO31lbHNle3RoaXNbJ19pbnZhbGlkRmFpbGVkQnlNZVRlc3RzJ109ITB4MDt9fSxfMHhmODdjNDA7fWVsc2V7dmFyIF8weDQ4YWEyND1fMHhmODdjNDBbJ2tleSddKCksXzB4M2QzNjBjPSEhXzB4MjZkZTFhW18weDZkNjQoJzB4ZTYnKV1bXzB4NDhhYTI0XTtkZWxldGUgXzB4MjZkZTFhW18weDZkNjQoJzB4ZTQnKV1bXzB4NDhhYTI0XSxkZWxldGUgXzB4MjZkZTFhW18weDZkNjQoJzB4ZTYnKV1bXzB4NDhhYTI0XSxfMHgyNmRlMWFbJ19jaGFuZ2VkJ109XzB4M2QzNjBjfHxfMHgyNmRlMWFbXzB4NmQ2NCgnMHhlNycpXTt9fSgpO18weDI2ZGUxYVtfMHg2ZDY0KCcweDQnKV09XzB4NDlhNmY4O30se31dLDEyOltmdW5jdGlvbihfMHgzM2ZiOTAsXzB4MjdkNWIxLF8weDRjZjFkMil7J3VzZSBzdHJpY3QnO3ZhciBfMHg1M2Y1NzU9dGhpcyYmdGhpc1snX192YWx1ZXMnXXx8ZnVuY3Rpb24oXzB4MzNmYjkwKXtpZihfMHg2ZDY0KCcweDRjZicpPT09J0hBS1J5Jyl7cmV0dXJuIF8weDI3ZDViMVsnaWRCeVBhdGgnXShfMHgzM2ZiOTApO31lbHNle3ZhciBfMHgyN2Q1YjE9XzB4NmQ2NCgnMHg1Jyk9PXR5cGVvZiBTeW1ib2wmJl8weDMzZmI5MFtTeW1ib2xbXzB4NmQ2NCgnMHhlOCcpXV0sXzB4NGNmMWQyPTB4MDtyZXR1cm4gXzB4MjdkNWIxP18weDI3ZDViMVtfMHg2ZDY0KCcweDMnKV0oXzB4MzNmYjkwKTp7J25leHQnOmZ1bmN0aW9uKCl7cmV0dXJuIF8weDMzZmI5MCYmXzB4NGNmMWQyPj1fMHgzM2ZiOTBbJ2xlbmd0aCddJiYoXzB4MzNmYjkwPXZvaWQgMHgwKSx7J3ZhbHVlJzpfMHgzM2ZiOTAmJl8weDMzZmI5MFtfMHg0Y2YxZDIrK10sJ2RvbmUnOiFfMHgzM2ZiOTB9O319O319LF8weDFkMGE4Nz10aGlzJiZ0aGlzW18weDZkNjQoJzB4NGQwJyldfHxmdW5jdGlvbihfMHgzM2ZiOTAsXzB4MjdkNWIxKXtpZignWWxmbE4nPT09XzB4NmQ2NCgnMHg0ZDEnKSl7dmFyIF8weDRjZjFkMj1fMHg2ZDY0KCcweDUnKT09dHlwZW9mIFN5bWJvbCYmXzB4MzNmYjkwW1N5bWJvbFtfMHg2ZDY0KCcweGU4JyldXTtpZighXzB4NGNmMWQyKXJldHVybiBfMHgzM2ZiOTA7dmFyIF8weDUzZjU3NSxfMHgxZDBhODcsXzB4MzJiOWU2PV8weDRjZjFkMlsnY2FsbCddKF8weDMzZmI5MCksXzB4MjE4YzU3PVtdO3RyeXtpZihfMHg2ZDY0KCcweDRkMicpIT09XzB4NmQ2NCgnMHg0ZDMnKSl7Zm9yKDsodm9pZCAweDA9PT1fMHgyN2Q1YjF8fF8weDI3ZDViMS0tPjB4MCkmJiEoXzB4NTNmNTc1PV8weDMyYjllNltfMHg2ZDY0KCcweGQ1JyldKCkpW18weDZkNjQoJzB4ZDMnKV07KV8weDIxOGM1N1tfMHg2ZDY0KCcweDFjJyldKF8weDUzZjU3NVsndmFsdWUnXSk7fWVsc2V7aWYoIV8weDMzZmI5MFtfMHg2ZDY0KCcweDRhOScpXSgpKXt2YXIgXzB4NGNjNWU3PV8weDMzZmI5MFtfMHg2ZDY0KCcweDE1NScpXSgpLF8weDQ1ZDQ5Yj1fMHgxZDBhODdbXzB4NmQ2NCgnMHgyM2InKV1bXzB4NGNjNWU3XTtfMHg0NWQ0OWJ8fChfMHg0NWQ0OWI9bmV3IF8weDMyYjllNihfMHg0Y2M1ZTcsXzB4MWQwYTg3W18weDZkNjQoJzB4MjE0JyldKSxfMHgxZDBhODdbXzB4NmQ2NCgnMHgyM2InKV1bXzB4NGNjNWU3XT1fMHg0NWQ0OWIsbFsncHVzaCddKF8weDQ1ZDQ5YikpLF8weDQ1ZDQ5YltfMHg2ZDY0KCcweDRkNCcpXShfMHgzM2ZiOTAsXzB4MjdkNWIxKSxfMHgxZTZjM2RbXzB4NmQ2NCgnMHgxYycpXShfMHg0NWQ0OWIpO319fWNhdGNoKF8weDQyZTRjMSl7XzB4MWQwYTg3PXsnZXJyb3InOl8weDQyZTRjMX07fWZpbmFsbHl7dHJ5e18weDUzZjU3NSYmIV8weDUzZjU3NVtfMHg2ZDY0KCcweGQzJyldJiYoXzB4NGNmMWQyPV8weDMyYjllNltfMHg2ZDY0KCcweGQwJyldKSYmXzB4NGNmMWQyW18weDZkNjQoJzB4MycpXShfMHgzMmI5ZTYpO31maW5hbGx5e2lmKF8weDFkMGE4Nyl0aHJvdyBfMHgxZDBhODdbXzB4NmQ2NCgnMHg4ZCcpXTt9fXJldHVybiBfMHgyMThjNTc7fWVsc2V7XzB4MzNmYjkwWydvbCddP18weDUzZjU3NVtfMHg2ZDY0KCcweDFlNCcpXSgnZXJyb3InLF8weDZkNjQoJzB4NDJmJykrXzB4MjdkNWIxKycpJyk6XzB4NTNmNTc1W18weDZkNjQoJzB4MWU0JyldKCdlcnJvcicsZCsnXHgyMGhhc1x4MjBiZWVuXHgyMHN0b3BwZWRceDIwYmVjYXVzZVx4MjBhblx4MjBlcnJvclx4MjBvY2N1cnJlZFx4MjBhdHRlbXB0aW5nXHgyMHRvXHgyMGFjdGl2YXRlLlx4MjBZb3VceDIwbXVzdFx4MjBiZVx4MjBjb25uZWN0ZWRceDIwdG9ceDIwdGhlXHgyMGludGVybmV0XHgyMGluXHgyMG9yZGVyXHgyMHRvXHgyMGFjdGl2YXRlXHgyMHlvdXJceDIwbGljZW5zZS5ceDIwKCcrXzB4MjdkNWIxKycpJyksXzB4NTNmNTc1W18weDZkNjQoJzB4MTE0JyldKCksXzB4NTNmNTc1W18weDZkNjQoJzB4MWU2JyldKCk7fX0sXzB4MzJiOWU2PV8weDMzZmI5MChfMHg2ZDY0KCcweDRkNScpKSxfMHgyMThjNTc9XzB4MzNmYjkwKF8weDZkNjQoJzB4NGQ2JykpWydsaW5lU3RhdGUnXSxfMHgxZTZjM2Q9ZnVuY3Rpb24oKXtmdW5jdGlvbiBfMHgzM2ZiOTAoXzB4MzNmYjkwLF8weDI3ZDViMSl7dGhpc1snX2ZpbHRlciddPV8weDMzZmI5MCx0aGlzWydfZ2V0VGVzdERlY2xhcmF0aW9uQnlMaW5lTnVtYmVyJ109XzB4MjdkNWIxLHRoaXNbXzB4NmQ2NCgnMHgyM2InKV09T2JqZWN0W18weDZkNjQoJzB4M2InKV3igIsobnVsbCksdGhpc1tfMHg2ZDY0KCcweDIzZCcpXT1bXSx0aGlzW18weDZkNjQoJzB4NGQ3JyldPSEweDE7fXJldHVybiBfMHgzM2ZiOTBbJ3Byb3RvdHlwZSddWyd1cGRhdGUnXT1mdW5jdGlvbihfMHgzM2ZiOTAsXzB4MjdkNWIxLF8weDRjZjFkMixfMHg1M2Y1NzUpe2lmKCdWV0NWQic9PT1fMHg2ZDY0KCcweDRkOCcpKXt2YXIgXzB4MWQwYTg3PXRoaXMsXzB4MjE4YzU3PXRoaXNbXzB4NmQ2NCgnMHg0ZDcnKV07ZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHg0ZDcnKV0sXzB4NGNmMWQyPyh0aGlzWydfbGluZXMnXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSx0aGlzW18weDZkNjQoJzB4MjNkJyldPVtdKTpfMHgyN2Q1YjEmJl9bXzB4NmQ2NCgnMHgzYScpXSh0aGlzW18weDZkNjQoJzB4MjNiJyldLGZ1bmN0aW9uKF8weDMzZmI5MCl7XzB4MzNmYjkwW18weDZkNjQoJzB4NGQ5JyldKCk7fSk7dmFyIF8weDFlNmMzZD1bXSxfMHgxMGUxYWE9W107X1tfMHg2ZDY0KCcweDNhJyldKF8weDMzZmI5MCxmdW5jdGlvbihfMHgzM2ZiOTApe2lmKCFfMHgzM2ZiOTBbXzB4NmQ2NCgnMHg0YTknKV0oKSl7dmFyIF8weDRjZjFkMj1fMHgzM2ZiOTBbXzB4NmQ2NCgnMHgxNTUnKV0oKSxfMHg1M2Y1NzU9XzB4MWQwYTg3W18weDZkNjQoJzB4MjNiJyldW18weDRjZjFkMl07XzB4NTNmNTc1fHwoXzB4NTNmNTc1PW5ldyBfMHgzMmI5ZTYoXzB4NGNmMWQyLF8weDFkMGE4N1tfMHg2ZDY0KCcweDIxNCcpXSksXzB4MWQwYTg3W18weDZkNjQoJzB4MjNiJyldW18weDRjZjFkMl09XzB4NTNmNTc1LF8weDEwZTFhYVtfMHg2ZDY0KCcweDFjJyldKF8weDUzZjU3NSkpLF8weDUzZjU3NVtfMHg2ZDY0KCcweDRkNCcpXShfMHgzM2ZiOTAsXzB4MjdkNWIxKSxfMHgxZTZjM2RbXzB4NmQ2NCgnMHgxYycpXShfMHg1M2Y1NzUpO319KTt2YXIgXzB4N2QyMjhkPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpO18weDFlNmMzZD1fMHgyN2Q1YjEmJiFfMHg0Y2YxZDI/X1sndmFsdWVzJ10odGhpc1snX2xpbmVzJ10pW18weDZkNjQoJzB4ODgnKV0oXzB4MTBlMWFhKTpfMHgxZTZjM2QsX1tfMHg2ZDY0KCcweDNhJyldKF8weDFlNmMzZCxmdW5jdGlvbihfMHgzM2ZiOTApe18weDMzZmI5MFtfMHg2ZDY0KCcweDRkYScpXSgpP18weDMzZmI5MFtfMHg2ZDY0KCcweDRkYicpXSgpJiYoXzB4N2QyMjhkW18weDMzZmI5MFtfMHg2ZDY0KCcweDEyZicpXSgpXT1fMHgzM2ZiOTApOihfMHgzM2ZiOTBbXzB4NmQ2NCgnMHgyM2MnKV0oKSxkZWxldGUgXzB4MWQwYTg3WydfbGluZXMnXVtfMHgzM2ZiOTBbJ251bWJlciddKCldLF8weDFkMGE4N1snX3JlY3ljbGVkTGluZXMnXVtfMHg2ZDY0KCcweDFjJyldKF8weDMzZmI5MCkpO30pO3ZhciBfMHgxYzk5OWE9dGhpc1tfMHg2ZDY0KCcweDIzZCcpXVtfMHg2ZDY0KCcweDFiZicpXSgpO3JldHVybiB0aGlzW18weDZkNjQoJzB4MjNkJyldPVtdLHsnbGluZXMnOl8weDRjZjFkMj9fW18weDZkNjQoJzB4YTcnKV0odGhpc1tfMHg2ZDY0KCcweDIzYicpXSxmdW5jdGlvbihfMHgzM2ZiOTApe2lmKF8weDZkNjQoJzB4NGRjJykhPT1fMHg2ZDY0KCcweDRkZCcpKXtyZXR1cm4gXzB4MWQwYTg3W18weDZkNjQoJzB4MzMzJyldKF8weDMzZmI5MCxfMHg1M2Y1NzUpO31lbHNle3RoaXNbXzB4NmQ2NCgnMHg0ZGUnKV09XzB4MzNmYjkwLHRoaXNbXzB4NmQ2NCgnMHg0ZGYnKV0rKyxfMHgzM2ZiOTAmJih0aGlzW18weDZkNjQoJzB4NGUwJyldPSEweDApO319KTpfW18weDZkNjQoJzB4YTcnKV0oXzB4MjE4YzU3P3RoaXNbXzB4NmQ2NCgnMHgyM2InKV06XzB4N2QyMjhkLGZ1bmN0aW9uKF8weDMzZmI5MCl7aWYoXzB4NmQ2NCgnMHg0ZTEnKT09PV8weDZkNjQoJzB4NGUyJykpe3ZhciBfMHgzNWRiYjk9bmV3IGYoXzB4NGNmMWQyKTtfMHgzNWRiYjlbXzB4NmQ2NCgnMHg0OTHigIsnKV0obnVsbCxfMHgzM2ZiOTBbJ3RzJ10sZnVuY3Rpb24oXzB4NDRkMDlhKeKAi3tfMHgzMmI5ZTZbXzB4NDRkMDlhWydpZCddKCldPV8weDQ0ZDA5YSxfMHgyN2Q1YjEhPT0hMHgxJiYoXzB4MjdkNWIxP18weDI3ZDViMVtfMHg2ZDY0KCcweGU1JyldKCl8fChfMHgyN2Q1YjE9ISFfMHg0NGQwOWFbXzB4NmQ2NCgnMHhlNScpXSgpJiZfMHg0NGQwOWEpOl8weDI3ZDViMT1fMHg0NGQwOWEpO30sZnVuY3Rpb24oXzB4MjdiOWQ5KXtyZXR1cm4gXzB4MjdiOWQ5W18weDZkNjQoJzB4NGUzJyldKF8weDUzZjU3NVtfMHg2ZDY0KCcweDJlJyldKF8weDI3YjlkOVtfMHg2ZDY0KCcweDQ2ZScpXSgpKSk7fSk7fWVsc2V7dmFyIF8weDI3ZDViMT1fMHgxZDBhODdbJ19jb21wYWN0TGluZSddKF8weDMzZmI5MCxfMHg1M2Y1NzUpO3JldHVybiBfMHgyN2Q1YjFbXzB4NmQ2NCgnMHgzNmMnKV09XzB4MjE4YzU3PyEhXzB4N2QyMjhkW18weDMzZmI5MFtfMHg2ZDY0KCcweDEyZicpXSgpXXx8dm9pZCAweDA6MHgxLF8weDI3ZDViMTt9fSlbXzB4NmQ2NCgnMHg4OCcpXShfW18weDZkNjQoJzB4YTcnKV0oXzB4MWM5OTlhLGZ1bmN0aW9uKF8weDMzZmI5MCl7cmV0dXJueydpZCc6XzB4MzNmYjkwW18weDZkNjQoJzB4MTJmJyldKCksJ2RlbCc6MHgxfTt9KSksJ2FsbExpbmVzJzpfMHg0Y2YxZDJ8fF8weDIxOGM1N307fWVsc2V7dmFyIF8weDRlZGIyZD1fMHg0Y2YxZDJbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgyZScpXShfMHgzM2ZiOTBbJ2lkJ10pO2lmKF8weDRlZGIyZFtfMHg2ZDY0KCcweDIwMicpXSgpKXJldHVybnsnYWN0aW9uJzpfMHg2ZDY0KCcweDRlNCcpLCdwYXRoJzpfMHgzM2ZiOTBbJ3BhdGgnXSwnaWQnOl8weDMzZmI5MFsnaWQnXSwndGVzdCc6XzB4NGVkYjJkJiZfMHg0ZWRiMmRbXzB4NmQ2NCgnMHg0ZTUnKV0oKXx8dm9pZCAweDAsJ2NvdmVyYWdlJzpfMHg0Y2YxZDJbJ19yZXBvcnRGaWxlQ292ZXJhZ2UnXShfMHg0ZWRiMmQpfTt9fSxfMHgzM2ZiOTBbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDE3MCcpXT1mdW5jdGlvbihfMHgzM2ZiOTApe2lmKCdTSGJKRCchPT0nSU1rcFQnKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDIzYicpXVtfMHgzM2ZiOTBdO31lbHNle18weDUzZjU3NVtfMHg2ZDY0KCcweDI2ZicpXShSLG5ldyBfMHgyMThjNTcoKVtfMHg2ZDY0KCcweDFlYycpXSgpKTt9fSxfMHgzM2ZiOTBbXzB4NmQ2NCgnMHg4MScpXVsnYWxsTGluZXMnXT1mdW5jdGlvbihfMHgzM2ZiOTApe3ZhciBfMHgyN2Q1YjE9dGhpcztyZXR1cm57J2xpbmVzJzpfW18weDZkNjQoJzB4YTcnKV0odGhpc1tfMHg2ZDY0KCcweDIzYicpXSxmdW5jdGlvbihfMHg0Y2YxZDIpe3JldHVybiBfMHgyN2Q1YjFbXzB4NmQ2NCgnMHgzMzMnKV0oXzB4NGNmMWQyLF8weDMzZmI5MCk7fSksJ2FsbExpbmVzJzohMHgwfTt9LF8weDMzZmI5MFsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgzMzMnKV09ZnVuY3Rpb24oXzB4MzNmYjkwLF8weDI3ZDViMSl7dmFyIF8weDRjZjFkMixfMHgzMmI5ZTYsXzB4MWU2YzNkPXRoaXMsXzB4MjIxYmExPV8weDMzZmI5MFtfMHg2ZDY0KCcweDIzOScpXSgpLF8weDNlZWRjND10aGlzW18weDZkNjQoJzB4NGU2JyldKF8weDIyMWJhMSksXzB4NDEyNjc2PXZvaWQgMHgwLF8weDUwZmZkMz1fMHgzM2ZiOTBbJ3N0YXRlJ10oXzB4MjdkNWIxKSxfMHgyY2UwOGE9XzB4MzNmYjkwW18weDZkNjQoJzB4NGU3JyldKF8weDI3ZDViMSk7aWYoXzB4M2VlZGM0KXt2YXIgXzB4MzM4NTU3PWZ1bmN0aW9uKF8weDMzZmI5MCl7IV8weDQxMjY3NiYmXzB4MWU2YzNkW18weDZkNjQoJzB4MjE0JyldW18weDZkNjQoJzB4NDMnKV1bJ2hhcyddKF8weDMzZmI5MFsna2V5J10oKSkmJihfMHg0MTI2NzY9eydmaWx0ZXJlZCc6ITB4MH0pLF8weDUwZmZkMyE9PV8weDIxOGM1N1tfMHg2ZDY0KCcweDRlOCcpXSYmKF8weDUwZmZkMz1fMHgzM2ZiOTBbJ2lzRmFpbGluZyddKCk/XzB4MjE4YzU3W18weDZkNjQoJzB4NGU4JyldOl8weDIxOGM1N1tfMHg2ZDY0KCcweDRlOScpXSk7fTtpZihfMHgzZWVkYzRbJ2VudHJpZXMnXSl0cnl7Zm9yKHZhciBfMHgzYjFmODU9XzB4NTNmNTc1KF8weDNlZWRjNCksXzB4ZGYwNjgzPV8weDNiMWY4NVsnbmV4dCddKCk7IV8weGRmMDY4M1snZG9uZSddO18weGRmMDY4Mz1fMHgzYjFmODVbXzB4NmQ2NCgnMHhkNScpXSgpKXt2YXIgXzB4MjU3ODk2PV8weDFkMGE4NyhfMHhkZjA2ODNbJ3ZhbHVlJ10sMHgyKSxfMHgyYThmOGU9XzB4MjU3ODk2WzB4MV07XzB4MzM4NTU3KF8weDJhOGY4ZSk7fX1jYXRjaChfMHhlMjJlMjIpe2lmKF8weDZkNjQoJzB4NGVhJyk9PT1fMHg2ZDY0KCcweDRlYicpKXtyZXR1cm4gbnVsbCE9dGhpc1snX2tleSddfHxudWxsIT10aGlzW18weDZkNjQoJzB4NGVjJyldO31lbHNle18weDRjZjFkMj17J2Vycm9yJzpfMHhlMjJlMjJ9O319ZmluYWxseXt0cnl7aWYoXzB4NmQ2NCgnMHg0ZWQnKT09PV8weDZkNjQoJzB4NGVlJykpe3ZhciBfMHg1MjNmMjU9dGhpcztfMHg1MjNmMjVbXzB4NmQ2NCgnMHgxODknKV0mJl8weDUyM2YyNVtfMHg2ZDY0KCcweDE4OScpXVtfMHg2ZDY0KCcweDFhZCcpXSh7J3R5cGUnOl8weDZkNjQoJzB4MWFlJyksJ3BhZ2VJZCc6XzB4MzNmYjkwW18weDZkNjQoJzB4MWFmJyldfSk7fWVsc2V7XzB4ZGYwNjgzJiYhXzB4ZGYwNjgzW18weDZkNjQoJzB4ZDMnKV0mJihfMHgzMmI5ZTY9XzB4M2IxZjg1W18weDZkNjQoJzB4ZDAnKV0pJiZfMHgzMmI5ZTZbJ2NhbGwnXShfMHgzYjFmODUpO319ZmluYWxseXtpZihfMHg0Y2YxZDIpdGhyb3cgXzB4NGNmMWQyW18weDZkNjQoJzB4OGQnKV07fX1lbHNlIF8weDMzODU1NyhfMHgzZWVkYzQpO31yZXR1cm57J2lkJzpfMHgzM2ZiOTBbXzB4NmQ2NCgnMHgxMmYnKV0oKSwnbnVtJzpfMHgyMjFiYTEsJ2RlY2wnOiEhXzB4M2VlZGM0fHx2b2lkIDB4MCwnc3RhdGUnOl8weDUwZmZkMywnbG9nJzpfMHgzM2ZiOTBbXzB4NmQ2NCgnMHg0ZWYnKV0oXzB4MjdkNWIxKSwnbG9uZ0xvZyc6XzB4MzNmYjkwW18weDZkNjQoJzB4NGYwJyldKF8weDI3ZDViMSksJ2Vycic6XzB4MmNlMDhhLCdtZXRhJzpfMHg0MTI2NzZ9O30sXzB4MzNmYjkwW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0ZjEnKV09ZnVuY3Rpb24oXzB4MzNmYjkwKXtpZignTXB5QlgnIT09J05tdWxXJyl7dmFyIF8weDI3ZDViMT10aGlzO3RoaXNbXzB4NmQ2NCgnMHg0ZDcnKV09ITB4MCxfW18weDZkNjQoJzB4M2EnKV0oX1tfMHg2ZDY0KCcweDE1NycpXShfMHgzM2ZiOTBbJ3N0YXJ0J10sXzB4MzNmYjkwW18weDZkNjQoJzB4MjU4JyldKSxmdW5jdGlvbihfMHg0Y2YxZDIpe3ZhciBfMHg1M2Y1NzU9XzB4MjdkNWIxWydfbGluZXMnXVtfMHg0Y2YxZDJdO18weDUzZjU3NSYmXzB4MjdkNWIxW18weDZkNjQoJzB4MjNhJyldKF8weDUzZjU3NSxfMHgzM2ZiOTApO30pO31lbHNle3JldHVybiBRW18weDZkNjQoJzB4YzInKV0oe30pO319LF8weDMzZmI5MFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NGYyJyldPWZ1bmN0aW9uKF8weDMzZmI5MCxfMHgyN2Q1YjEsXzB4NGNmMWQyKXt2YXIgXzB4NTNmNTc1PXRoaXM7dGhpc1tfMHg2ZDY0KCcweDRkNycpXT0hMHgwO3ZhciBfMHgxZDBhODc9X1sndmFsdWVzJ10odGhpc1tfMHg2ZDY0KCcweDIzYicpXSk7dGhpc1tfMHg2ZDY0KCcweDIzYicpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLF9bXzB4NmQ2NCgnMHgzYScpXShfMHgxZDBhODcsZnVuY3Rpb24oXzB4MWQwYTg3KXt2YXIgXzB4MzJiOWU2PV8weDFkMGE4N1tfMHg2ZDY0KCcweDIzOScpXSgpO2lmKCFfMHg1M2Y1NzVbXzB4NmQ2NCgnMHgyM2EnKV0oXzB4MWQwYTg3LF8weDRjZjFkMikpe2lmKF8weDZkNjQoJzB4NGYzJykhPT1fMHg2ZDY0KCcweDRmNCcpKXtfMHgzMmI5ZTY+XzB4MzNmYjkwJiYoXzB4MzJiOWU2Kz1fMHgyN2Q1YjEsXzB4MWQwYTg3W18weDZkNjQoJzB4MjM5JyldKF8weDMyYjllNikpO3ZhciBfMHgyMThjNTc9XzB4NTNmNTc1W18weDZkNjQoJzB4MjNiJyldW18weDMyYjllNl07XzB4MjE4YzU3PyhfMHgyMThjNTdbJ2Rpc3Bvc2UnXSgpLF8weDFkMGE4N1snZGlzcG9zZSddKCksXzB4NTNmNTc1WydfcmVjeWNsZWRMaW5lcyddW18weDZkNjQoJzB4MWMnKV0oXzB4MjE4YzU3KSxfMHg1M2Y1NzVbXzB4NmQ2NCgnMHgyM2QnKV1bXzB4NmQ2NCgnMHgxYycpXShfMHgxZDBhODcpLGRlbGV0ZSBfMHg1M2Y1NzVbXzB4NmQ2NCgnMHgyM2InKV1bXzB4MzJiOWU2XSk6XzB4NTNmNTc1W18weDZkNjQoJzB4MjNiJyldW18weDMyYjllNl09XzB4MWQwYTg3O31lbHNle3ZhciBfMHgxZGYxZTM9MHgyLF8weDRiMjkyMT1mdW5jdGlvbihfMHg3MDBhZDcsXzB4NTAxN2M3KXtyZXR1cm4gX1snZWFjaCddKF8weDcwMGFkNyxmdW5jdGlvbihfMHgyZWNmZmQsXzB4MmUxYTgzKXtfMHg1MDE3Yzc+PV8weDFkZjFlMz8oXzB4NzAwYWQ3W18weDJlMWE4M109e30sX1snaXNFbXB0eSddKF8weDJlY2ZmZCl8fF8weDI3ZDViMVtfMHg2ZDY0KCcweDMyZScpXXx8KF8weDI3ZDViMVtfMHg2ZDY0KCcweDFlNCcpXShfMHg2ZDY0KCcweDM5NScpLCdPbmx5XHgyMFx4MjdQcm9ceDI3XHgyMGVkaXRpb25ceDIwb2ZceDIwUXVva2thLmpzXHgyMHN1cHBvcnRzXHgyMG1vcmVceDIwdGhhblx4MjAnK18weDFkZjFlMysnXHgyMGV4cGFuZGVkXHgyMGxldmVsc1x4MjB3aXRoaW5ceDIwVmFsdWVceDIwRXhwbG9yZXIuJyx7J3N1Z2dlc3RQcm9FZGl0aW9uJzohMHgwLCdhbGxvd011dGluZyc6ITB4MCwnaWQnOkl9KSxfMHgyN2Q1YjFbJ19tdXRlUHJvRWRpdGlvbkZvclZhbHVlRXhwbG9yZXJOb3RpZmljYXRpb24nXT0hMHgwKSk6XzB4NGIyOTIxKF8weDJlY2ZmZCxfMHg1MDE3YzcrMHgxKTt9KTt9O18weDRiMjkyMShfMHgzM2ZiOTBbJ2V4cHJlc3Npb25zVG9FdmFsdWF0ZSddLDB4MSk7fX19KTt9LF8weDMzZmI5MFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MjNhJyldPWZ1bmN0aW9uKF8weDMzZmI5MCxfMHgyN2Q1YjEpe2lmKF8weDZkNjQoJzB4NGY1Jyk9PT1fMHg2ZDY0KCcweDRmNScpKXt2YXIgXzB4NGNmMWQyPV8weDMzZmI5MFtfMHg2ZDY0KCcweDIzOScpXSgpO2lmKF8weDRjZjFkMj49XzB4MjdkNWIxW18weDZkNjQoJzB4MzEnKV0mJl8weDRjZjFkMjw9XzB4MjdkNWIxW18weDZkNjQoJzB4MjU4JyldKXJldHVybiBfMHgzM2ZiOTBbJ2Rpc3Bvc2UnXSgpLHRoaXNbXzB4NmQ2NCgnMHgyM2QnKV1bXzB4NmQ2NCgnMHgxYycpXShfMHgzM2ZiOTApLCEweDA7fWVsc2V7XzB4NTNmNTc1PXsnZXJyb3InOlR9O319LF8weDMzZmI5MDt9KCk7XzB4MjdkNWIxW18weDZkNjQoJzB4NCcpXT1fMHgxZTZjM2Q7fSx7Jy4uL3NoYXJlZC9lbnVtcyc6MHgxOSwnLi9kb2N1bWVudExpbmUnOjB4ZH1dLDEzOltmdW5jdGlvbihfMHgxZDM1ZDYsXzB4MjNjZGVlLF8weDM1NjA5MCl7J3VzZSBzdHJpY3QnO3ZhciBfMHg0YWQyOGM9XzB4MWQzNWQ2KF8weDZkNjQoJzB4NGQ2JykpW18weDZkNjQoJzB4NGY2JyldLF8weDJlODIzNT0weDgwLF8weGYxOWUyNz0weDQwMCoocHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldW18weDZkNjQoJzB4MWU5JyldPzB4MTAwOjB4YSksXzB4ODZhY2E2PTB4ODAsXzB4NDI0N2U2PTB4MCxfMHgyNzVjMDQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBfMHgxZDM1ZDYoXzB4MWQzNWQ2LF8weDIzY2RlZSl7aWYoXzB4NmQ2NCgnMHg0ZjcnKSE9PV8weDZkNjQoJzB4NGY4Jykpe3RoaXNbJ19saW5lTnVtYmVyJ109XzB4MWQzNWQ2LHRoaXNbXzB4NmQ2NCgnMHgyMTQnKV09XzB4MjNjZGVlLHRoaXNbXzB4NmQ2NCgnMHgzZicpXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSx0aGlzWydfaWQnXT0rK18weDQyNDdlNjt9ZWxzZXtfMHgyZTgyMzVbJ19zb3VyY2VzJ11bJ2FkZCddKF8weDIzY2RlZSk7dmFyIF8weDJiM2QxMD1fMHgxZDM1ZDZbXzB4NmQ2NCgnMHg0ZjknKV0oXzB4MjNjZGVlKTtudWxsIT1fMHgyYjNkMTAmJl8weDJlODIzNVtfMHg2ZDY0KCcweDRmYScpXShfMHgyM2NkZWUsXzB4MmIzZDEwKTt9fXJldHVybiBfMHgxZDM1ZDZbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4NGRhJyldPWZ1bmN0aW9uKCl7cmV0dXJuIV9bXzB4NmQ2NCgnMHgzMmQnKV0odGhpc1tfMHg2ZDY0KCcweDNmJyldKTt9LF8weDFkMzVkNlsncHJvdG90eXBlJ11bJ3JhbmdlcyddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHgzZicpXTt9LF8weDFkMzVkNltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NGRiJyldPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg0ZmInKT09PV8weDZkNjQoJzB4NGZiJykpe3ZhciBfMHgxZDM1ZDY9dGhpcyxfMHgyM2NkZWU9ITB4MCxfMHgzNTYwOTA9ITB4MCxfMHgyZTgyMzU9ITB4MSxfMHhmMTllMjc9ITB4MSxfMHg4NmFjYTY9dGhpc1tfMHg2ZDY0KCcweGRjJyldLF8weDQyNDdlNj10aGlzWydfY29uc29sZUxvZ1RleHQnXSxfMHgyNzVjMDQ9dGhpc1snX2Vycm9yU291cmNlVGV4dCddO2RlbGV0ZSB0aGlzW18weDZkNjQoJzB4NGZjJyldLGRlbGV0ZSB0aGlzWydfbG9uZ0NvbnNvbGVMb2dUZXh0J10sZGVsZXRlIHRoaXNbJ19lcnJvclNvdXJjZVRleHQnXTt2YXIgXzB4M2JhOWQzPXRoaXNbXzB4NmQ2NCgnMHgyMTQnKV1bXzB4NmQ2NCgnMHgyMycpXVtfMHg2ZDY0KCcweDRmZCcpXSxfMHg0MzQxYjc9dGhpc1snX2ZpbHRlciddW18weDZkNjQoJzB4NDMnKV1bJ2FjdGl2ZSddO3JldHVybiBfMHg0MzQxYjc/dGhpc1snX2luaXRpYWxpemVUZXN0RmlsdGVyU3RhdGUnXSgpOnRoaXNbXzB4NmQ2NCgnMHhkOCcpXSYmZGVsZXRlIHRoaXNbJ190ZXN0RmlsdGVyU3RhdGUnXSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDExMScpXSxfWydlYWNoJ10odGhpc1snX29yZGVyZWRSYW5nZXMnXSgpLGZ1bmN0aW9uKF8weDRhZDI4Yyl7aWYoXzB4NmQ2NCgnMHg0ZmUnKT09PV8weDZkNjQoJzB4NGZlJykpe2lmKF8weDFkMzVkNlsnX2FjY3VtdWxhdGVSYW5nZUNvbnNvbGVMb2dUZXh0J10oXzB4NGFkMjhjLF8weDFkMzVkNixfMHgzYmE5ZDM/ZnVuY3Rpb24oXzB4MWQzNWQ2KXtpZigna2lxRXknIT09XzB4NmQ2NCgnMHg0ZmYnKSl7SVsnaWQnXT1fMHg0YWQyOGNbXzB4NmQ2NCgnMHgyNmUnKV0oRSk7fWVsc2V7cmV0dXJuIV8weDFkMzVkNltfMHg2ZDY0KCcweDI5ZScpXTt9fTpudWxsKSxfMHg0YWQyOGNbJ2lzRXJyb3JTb3VyY2UnXSgpKXtpZihfMHg2ZDY0KCcweDUwMCcpIT09XzB4NmQ2NCgnMHg1MDEnKSl7XzB4MmU4MjM1PSEweDA7dmFyIF8weDg2YWNhNj1fMHgxZDM1ZDZbXzB4NmQ2NCgnMHg1MDInKV0oXzB4NGFkMjhjKTtfW18weDZkNjQoJzB4MjcxJyldKF8weDg2YWNhNikmJihfMHgxZDM1ZDZbXzB4NmQ2NCgnMHgxMTAnKV09XzB4ODZhY2E2KTt9ZWxzZXtfMHg0MjQ3ZTZbJ3ZhbGlkJ109ITB4MTt9fV8weDRhZDI4Y1tfMHg2ZDY0KCcweDUwMycpXSgpJiYoXzB4ZjE5ZTI3PSEweDApLF8weDRhZDI4Y1tfMHg2ZDY0KCcweDEzMCcpXSgpP18weDM1NjA5MD0hMHgxOl8weDIzY2RlZT0hMHgxLF8weDQzNDFiNyYmXzB4MWQzNWQ2W18weDZkNjQoJzB4NTA0JyldKF8weDRhZDI4Yyk7fWVsc2V7dmFyIF8weDJmOTRmMD10aGlzW18weDZkNjQoJzB4NTA1JyldJiZ0aGlzW18weDZkNjQoJzB4NTA1JyldW18weDFkMzVkNltfMHg2ZDY0KCcweDE1NScpXSgpXTtpZighXzB4MmY5NGYwKXJldHVybltfMHgxZDM1ZDZbXzB4NmQ2NCgnMHgxNTUnKV0oKSxfMHgxZDM1ZDZbJ3N0YXJ0Q29sdW1uJ10oKSxfMHgxZDM1ZDZbXzB4NmQ2NCgnMHg0OWQnKV0oKSxfMHgxZDM1ZDZbXzB4NmQ2NCgnMHg0YTAnKV0oKV07dmFyIF8weDQ4MjEzMj10aGlzW18weDZkNjQoJzB4NTA2JyldKF8weDFkMzVkNixfMHgyZjk0ZjApO3JldHVybiBfMHg0ODIxMzI/W18weDQ4MjEzMltfMHg2ZDY0KCcweDMxJyldWydsaW5lJ10sXzB4NDgyMTMyW18weDZkNjQoJzB4MzEnKV1bJ2NvbHVtbiddLF8weDQ4MjEzMlsnZW5kJ11bJ2xpbmUnXSxfMHg0ODIxMzJbXzB4NmQ2NCgnMHgyNTgnKV1bXzB4NmQ2NCgnMHgxYzgnKV1dOltfMHgxZDM1ZDZbJ3N0YXJ0TGluZSddKCksXzB4MWQzNWQ2WydzdGFydENvbHVtbiddKCksXzB4MWQzNWQ2WydlbmRMaW5lJ10oKSxfMHgxZDM1ZDZbXzB4NmQ2NCgnMHg0YTAnKV0oKV07fX0pLHRoaXNbXzB4NmQ2NCgnMHg1MDcnKV0oXzB4MWQzNWQ2KSx0aGlzW18weDZkNjQoJzB4ZGMnKV09XzB4MWQzNWQ2W18weDZkNjQoJzB4ZGQnKV0oXzB4MmU4MjM1LF8weGYxOWUyNyxfMHgzNTYwOTAsXzB4MjNjZGVlKSx0aGlzW18weDZkNjQoJzB4ZGMnKV09PT1fMHg0YWQyOGNbJ25vdENvdmVyZWQnXSYmKGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NGZjJyldLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4MTBmJyldKSxfMHg0MzQxYjcmJnRoaXNbJ19maW5hbGl6ZVRlc3RGaWx0ZXJTdGF0ZSddKCksdGhpc1snX2xpbmVTdGF0ZSddIT09XzB4ODZhY2E2fHx0aGlzWydfY29uc29sZUxvZ1RleHQnXSE9PV8weDQyNDdlNnx8dGhpc1tfMHg2ZDY0KCcweDExMCcpXSE9PV8weDI3NWMwNDt9ZWxzZXt2YXIgXzB4MjgwMTA5O2lmKF9bJ2lzT2JqZWN0J10oXzB4MWQzNWQ2KXx8X1tfMHg2ZDY0KCcweDE2NScpXShfMHgxZDM1ZDYpKXJldHVybiBfMHgxZDM1ZDY7aWYoXzB4MWQzNWQ2Pj0weDApcmV0dXJuIF8weDI4MDEwOT17fSxfMHgyODAxMDlbXzB4MWQzNWQ2XT17J2NvbHVtbic6MHgwfSxfMHgyODAxMDk7Zm9yKHZhciBfMHgzMWNmZDMsXzB4MThkNTNiPXt9LF8weDFkOGQyOT0weDAsXzB4MWRmMmY4PTB4MCxfMHg1NDc4MmI9MHgwO18weDU0NzgyYjxfMHgxZDM1ZDZbXzB4NmQ2NCgnMHg4ZScpXTtfMHg1NDc4MmIrPTB4MSl7dmFyIF8weDQwNDRiZD14W18weDFkMzVkNltfMHg1NDc4MmJdXSxfMHgzZGE5NmM9MHgyMCZfMHg0MDQ0YmQ7aWYoXzB4NDA0NGJkJj0weDFmLF8weDFkZjJmOCs9XzB4NDA0NGJkPDxfMHgxZDhkMjksXzB4M2RhOTZjKV8weDFkOGQyOSs9MHg1O2Vsc2V7dmFyIF8weDQyZWJjNz0weDEmXzB4MWRmMmY4O18weDFkZjJmOD4+Pj0weDE7dmFyIF8weDI3MmUxNj1fMHg0MmViYzc/MHgwPT09XzB4MWRmMmY4Py0weDgwMDAwMDAwOi1fMHgxZGYyZjg6XzB4MWRmMmY4O18weDMxY2ZkMz49MHgwPyhfMHgxOGQ1M2JbXzB4MzFjZmQzXT17J2NvbHVtbic6XzB4MjcyZTE2fSxfMHgzMWNmZDM9dm9pZCAweDApOl8weDMxY2ZkMz1fMHgyNzJlMTYsXzB4MWRmMmY4PV8weDFkOGQyOT0weDA7fX1yZXR1cm4gXzB4MThkNTNiO319LF8weDFkMzVkNlsncHJvdG90eXBlJ11bJ2NvbnNvbGVMb2dUZXh0J109ZnVuY3Rpb24oXzB4MWQzNWQ2KXtyZXR1cm4gXzB4MWQzNWQ2P3RoaXNbXzB4NmQ2NCgnMHgyMTQnKV1bXzB4NmQ2NCgnMHgyMycpXVsnYWN0aXZlJ10/dGhpc1snX3Jlc29sdmVNZXNzYWdlRmlsdGVyU3RhdGUnXShmdW5jdGlvbihfMHgxZDM1ZDYpe3JldHVybiBfMHgxZDM1ZDZbJ19jb25zb2xlTG9nVGV4dCddO30pOnRoaXNbXzB4NmQ2NCgnMHg1MDgnKV0oZnVuY3Rpb24oXzB4MWQzNWQ2KXtyZXR1cm4gXzB4MWQzNWQ2W18weDZkNjQoJzB4NGZjJyldO30pOnRoaXNbXzB4NmQ2NCgnMHg0ZmMnKV07fSxfMHgxZDM1ZDZbXzB4NmQ2NCgnMHg4MScpXVsnbG9uZ0NvbnNvbGVMb2dUZXh0J109ZnVuY3Rpb24oXzB4MWQzNWQ2KXtpZihfMHg2ZDY0KCcweDUwOScpPT09XzB4NmQ2NCgnMHg1MDknKSl7cmV0dXJuIF8weDFkMzVkNj90aGlzW18weDZkNjQoJzB4MjE0JyldW18weDZkNjQoJzB4MjMnKV1bJ2FjdGl2ZSddP3RoaXNbXzB4NmQ2NCgnMHg1MGEnKV0oZnVuY3Rpb24oXzB4MWQzNWQ2KXtpZihfMHg2ZDY0KCcweDUwYicpIT09XzB4NmQ2NCgnMHg1MGInKSl7XzB4MmU4MjM1W18weDZkNjQoJzB4NTBjJyldWydvbiddKF8weDZkNjQoJzB4MTRmJyksZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoRiksRj1zZXRUaW1lb3V0KF9bJ2JpbmQnXShfMHg0YWQyOGMsbnVsbCwhMHgwKSxwKTt9KVsnb24nXShfMHg2ZDY0KCcweDNkMycpLF9bXzB4NmQ2NCgnMHhmYScpXShfMHgyZTgyMzVbXzB4NmQ2NCgnMHg1MGQnKV0sXzB4MmU4MjM1LF8weDJlODIzNVtfMHg2ZDY0KCcweDUwZScpXSkpWydvbiddKF8weDZkNjQoJzB4NTBmJyksX1tfMHg2ZDY0KCcweGZhJyldKF8weDJlODIzNVtfMHg2ZDY0KCcweDUwZCcpXSxfMHgyZTgyMzUsXzB4MmU4MjM1WydfZmlsZUNoYW5nZWQnXSkpWydvbiddKF8weDZkNjQoJzB4NDIzJyksX1tfMHg2ZDY0KCcweGZhJyldKF8weDJlODIzNVsnX3dpdGhOb3JtYWxpemVkUGF0aCddLF8weDJlODIzNSxfMHgyZTgyMzVbXzB4NmQ2NCgnMHg1MTAnKV0pKVsnb24nXShfMHg2ZDY0KCcweDFhNCcpLF9bJ2RlYm91bmNlJ10oXzB4NGFkMjhjLGYpKVsnb24nXShfMHg2ZDY0KCcweDhkJyksX1tfMHg2ZDY0KCcweGZhJyldKF8weDJlODIzNVtfMHg2ZDY0KCcweDE2YScpXSxfMHgyZTgyMzUsXzB4NmQ2NCgnMHg4ZCcpKSk7fWVsc2V7cmV0dXJuIF8weDFkMzVkNltfMHg2ZDY0KCcweDEwZicpXTt9fSk6dGhpc1snX3Jlc29sdmVUZXN0RmlsdGVyU3RhdGUnXShmdW5jdGlvbihfMHgxZDM1ZDYpe3JldHVybiBfMHgxZDM1ZDZbXzB4NmQ2NCgnMHgxMGYnKV07fSk6dGhpc1snX2xvbmdDb25zb2xlTG9nVGV4dCddO31lbHNle3RoaXNbXzB4NmQ2NCgnMHgzODEnKV0oKSx0aGlzW18weDZkNjQoJzB4MWNlJyldKHsndHlwZSc6XzB4NmQ2NCgnMHgzODInKX0pO319LF8weDFkMzVkNltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NTBhJyldPWZ1bmN0aW9uKF8weDFkMzVkNil7dmFyIF8weDIzY2RlZT10aGlzO2lmKHRoaXNbXzB4NmQ2NCgnMHgxMTEnKV0mJnRoaXNbXzB4NmQ2NCgnMHgxMTEnKV1bJ3RzJ109PT10aGlzW18weDZkNjQoJzB4MjE0JyldW18weDZkNjQoJzB4MjMnKV1bJ3RzJ10pcmV0dXJuIF8weDFkMzVkNih0aGlzW18weDZkNjQoJzB4MTExJyldKTt2YXIgXzB4MzU2MDkwPXRoaXNbXzB4NmQ2NCgnMHgxMTEnKV09eyd0cyc6dGhpc1snX2ZpbHRlciddW18weDZkNjQoJzB4MjMnKV1bJ3RzJ119O3JldHVybiBfW18weDZkNjQoJzB4M2EnKV0odGhpc1tfMHg2ZDY0KCcweDUxMScpXSgpLGZ1bmN0aW9uKF8weDFkMzVkNil7aWYoXzB4NmQ2NCgnMHg1MTInKSE9PV8weDZkNjQoJzB4NTEzJykpe3JldHVybiBfMHgyM2NkZWVbXzB4NmQ2NCgnMHg1MTQnKV0oXzB4MWQzNWQ2LF8weDM1NjA5MCxmdW5jdGlvbihfMHgxZDM1ZDYpe2lmKCdyS29iTCc9PT1fMHg2ZDY0KCcweDUxNScpKXtyZXR1cm4gXzB4MWQzNWQ2Wyd0cmFjZUlkJ109PT1fMHgyM2NkZWVbXzB4NmQ2NCgnMHgyMTQnKV1bXzB4NmQ2NCgnMHgyMycpXVsndHMnXTt9ZWxzZXt2YXIgXzB4M2NhOWVjPXRoaXM7X1tfMHg2ZDY0KCcweDNhJyldKF8weDFkMzVkNixmdW5jdGlvbihfMHgyNzQ0ODYpe3ZhciBfMHgzOGRhOTU9XzB4Mjc0NDg2W18weDZkNjQoJzB4MjMnKV0mJl8weDI3NDQ4NlsnbWVzc2FnZSddWydpbmRleE9mJ10oXzB4NmQ2NCgnMHg1MTYnKSl8fC0weDE7fl8weDM4ZGE5NSYmKF8weDI3NDQ4NltfMHg2ZDY0KCcweDIzJyldPV8weDI3NDQ4NltfMHg2ZDY0KCcweDIzJyldW18weDZkNjQoJzB4MTdkJyldKDB4MCxfMHgzOGRhOTUpKSxfMHgzY2E5ZWNbXzB4NmQ2NCgnMHg1MTcnKV0oXzB4Mjc0NDg2W18weDZkNjQoJzB4MjMnKV0pJiYoXzB4M2NhOWVjWydfcHJvamVjdCddW18weDZkNjQoJzB4NTE4JyldKCksXzB4Mjc0NDg2W18weDZkNjQoJzB4MjMnKV09ZiksXzB4M2NhOWVjW18weDZkNjQoJzB4NTE5JyldKF8weDI3NDQ4NiksXzB4M2NhOWVjW18weDZkNjQoJzB4NTFhJyldKF8weDI3NDQ4NixfMHgyM2NkZWUpLHByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVsncXVva2thJ10mJl8weDI3NDQ4NltfMHg2ZDY0KCcweDIzJyldJiYoXzB4Mjc0NDg2W18weDZkNjQoJzB4MjMnKV09XzB4Mjc0NDg2W18weDZkNjQoJzB4MjMnKV1bXzB4NmQ2NCgnMHg5MScpXShfMHgzY2E5ZWNbXzB4NmQ2NCgnMHg1MWInKV0sJy4nKVtfMHg2ZDY0KCcweDkxJyldKF8weDNjYTllY1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4NzMnKV0sJy4nKSk7fSk7fX0pO31lbHNle3JldHVybiBfW18weDZkNjQoJzB4M2UnKV0odGhpc1tfMHg2ZDY0KCcweDQ4MycpXSk7fX0pLHRoaXNbXzB4NmQ2NCgnMHg1MDcnKV0oXzB4MzU2MDkwKSxfMHgxZDM1ZDYoXzB4MzU2MDkwKTt9LF8weDFkMzVkNltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NGU3JyldPWZ1bmN0aW9uKF8weDFkMzVkNil7aWYoXzB4NmQ2NCgnMHg1MWMnKT09PV8weDZkNjQoJzB4NTFkJykpe3RoaXNbJ19lbWl0J10oeyd0eXBlJzonbm90aWZpY2F0aW9uJywnbm90aWZpY2F0aW9uJzpfW18weDZkNjQoJzB4MzQnKV0oeyd0ZXh0JzpfMHgyM2NkZWUsJ3R5cGUnOl8weDFkMzVkNn0sXzB4MzU2MDkwfHx7fSl9KTt9ZWxzZXtyZXR1cm4gXzB4MWQzNWQ2P3RoaXNbJ19yZXNvbHZlVGVzdEZpbHRlclN0YXRlJ10oZnVuY3Rpb24oXzB4MWQzNWQ2KXtpZignR2p1RmgnPT09XzB4NmQ2NCgnMHg1MWUnKSl7cmV0dXJuIF8weDIzY2RlZVsnaGludHMnXT1fMHgyM2NkZWVbXzB4NmQ2NCgnMHgzZDAnKV18fHt9LF8weDIzY2RlZVsnaGludHMnXVtfMHg2ZDY0KCcweDNkMScpXT1fMHgxZDM1ZDY/Jz8nOnsndmFsdWUnOic/JywnZXhwJzpfMHg2ZDY0KCcweDUxZicpfSxfMHgxZDM1ZDZ8fGRlbGV0ZSBfMHgyM2NkZWVbXzB4NmQ2NCgnMHgxZTknKV1bXzB4NmQ2NCgnMHgyZWQnKV1bXzB4NmQ2NCgnMHgyZWUnKV0sXzB4MWQzNWQ2O31lbHNle3JldHVybiBfMHgxZDM1ZDZbXzB4NmQ2NCgnMHgxMTAnKV07fX0pOnRoaXNbJ19lcnJvclNvdXJjZVRleHQnXTt9fSxfMHgxZDM1ZDZbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4NDdmJyldPWZ1bmN0aW9uKF8weDFkMzVkNil7cmV0dXJuIF8weDFkMzVkNj90aGlzW18weDZkNjQoJzB4NTA4JyldKGZ1bmN0aW9uKF8weDFkMzVkNil7cmV0dXJuIF8weDFkMzVkNltfMHg2ZDY0KCcweGRjJyldO30pOnRoaXNbJ19saW5lU3RhdGUnXTt9LF8weDFkMzVkNltfMHg2ZDY0KCcweDgxJyldWydhZGRSYW5nZSddPWZ1bmN0aW9uKF8weDFkMzVkNixfMHgyM2NkZWUpe3ZhciBfMHgzNTYwOTA9XzB4MWQzNWQ2W18weDZkNjQoJzB4MTJmJyldKCk7XzB4MjNjZGVlfHxkZWxldGUgdGhpc1snX3JhbmdlcyddW18weDM1NjA5MF0sdGhpc1snX3JhbmdlcyddW18weDM1NjA5MF09XzB4MWQzNWQ2O30sXzB4MWQzNWQ2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0ZDknKV09ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDUyMCcpPT09XzB4NmQ2NCgnMHg1MjEnKSl7aWYoXzB4ZjE5ZTI3KXRocm93IF8weGYxOWUyN1tfMHg2ZDY0KCcweDhkJyldO31lbHNle3RoaXNbXzB4NmQ2NCgnMHgzZicpXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKTt9fSxfMHgxZDM1ZDZbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDIzOScpXT1mdW5jdGlvbihfMHgxZDM1ZDYpe3ZhciBfMHgyM2NkZWU9dGhpcyxfMHgzNTYwOTA9dGhpc1tfMHg2ZDY0KCcweDQzMScpXTtpZihfW18weDZkNjQoJzB4MTY1JyldKF8weDFkMzVkNikpcmV0dXJuIF8weDM1NjA5MDtpZihfMHgxZDM1ZDYhPT1fMHgzNTYwOTApe3RoaXNbXzB4NmQ2NCgnMHg0MzEnKV09XzB4MWQzNWQ2O3ZhciBfMHg0YWQyOGM9XzB4MWQzNWQ2LV8weDM1NjA5MCxfMHgyZTgyMzU9X1sndmFsdWVzJ10odGhpc1tfMHg2ZDY0KCcweDNmJyldKTt0aGlzWydyZW1vdmVSYW5nZXMnXSgpLF9bXzB4NmQ2NCgnMHgzYScpXShfMHgyZTgyMzUsZnVuY3Rpb24oXzB4MWQzNWQ2KXtfMHgxZDM1ZDZbJ2xpbmVTaGlmdCddKF8weDRhZDI4YyksXzB4MjNjZGVlW18weDZkNjQoJzB4M2YnKV1bXzB4MWQzNWQ2W18weDZkNjQoJzB4MTJmJyldKCldPV8weDFkMzVkNjt9KTt9fSxfMHgxZDM1ZDZbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4MjNjJyldPWZ1bmN0aW9uKCl7dGhpc1tfMHg2ZDY0KCcweDRkOScpXSgpLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NGZjJyldLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4MTBmJyldLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4MTEwJyldLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4ZGMnKV0sZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHhkOCcpXSxkZWxldGUgdGhpc1snX21lc3NhZ2VGaWx0ZXJTdGF0ZSddLHRoaXNbXzB4NmQ2NCgnMHg0YWEnKV09ITB4MDt9LF8weDFkMzVkNltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NGE5JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0YWEnKV07fSxfMHgxZDM1ZDZbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4MTJmJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg1MjInKV07fSxfMHgxZDM1ZDZbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDUyMycpXT1mdW5jdGlvbihfMHgxZDM1ZDYsXzB4MjNjZGVlLF8weDM1NjA5MCl7aWYoXzB4NmQ2NCgnMHg1MjQnKSE9PV8weDZkNjQoJzB4NTI1Jykpe3ZhciBfMHg0YWQyOGM9XzB4MWQzNWQ2W18weDZkNjQoJzB4OGUnKV0+XzB4MjNjZGVlP18weDZkNjQoJzB4NTI2Jyk6Jyc7cmV0dXJuIF8weDFkMzVkNj1fMHgxZDM1ZDZbXzB4NmQ2NCgnMHgzN2InKV0oMHgwLF8weDIzY2RlZSksKF8weDM1NjA5MD9fMHgxZDM1ZDY6dGhpc1tfMHg2ZDY0KCcweDUyNycpXShfMHgxZDM1ZDYpKStfMHg0YWQyOGM7fWVsc2V7cmV0dXJueydtZXNzYWdlJzpfMHgxZDM1ZDZbXzB4NmQ2NCgnMHgyMycpXSgpLCdzdGFjayc6X1tfMHg2ZDY0KCcweGE3JyldKF8weDFkMzVkNltfMHg2ZDY0KCcweDE1MicpXSgpLGZ1bmN0aW9uKF8weGYwYTM1MCl7cmV0dXJueydmaWxlJzpfMHhmMGEzNTBbJ2ZpbGVQYXRoJ10oKSwnbG9jJzpfMHgyM2NkZWVbXzB4NmQ2NCgnMHgyMjMnKV0oXzB4ZjBhMzUwW18weDZkNjQoJzB4MTU3JyldKCkpfHxfMHhmMGEzNTBbXzB4NmQ2NCgnMHgxNzAnKV0oKSwnY29udGV4dCc6XzB4ZjBhMzUwW18weDZkNjQoJzB4MjI0JyldKCl9O30pLCdleHBlY3RlZCc6XzB4MWQzNWQ2W18weDZkNjQoJzB4MjI3JyldKCksJ2FjdHVhbCc6XzB4MWQzNWQ2WydhY3R1YWwnXSgpLCdzbmFwc2hvdCc6XzB4MWQzNWQ2W18weDZkNjQoJzB4NTI4JyldKCl9O319LF8weDFkMzVkNltfMHg2ZDY0KCcweDgxJyldWydfY2xlYW5TdHJpbmcnXT1mdW5jdGlvbihfMHgxZDM1ZDYpe2lmKF8weDZkNjQoJzB4NTI5Jyk9PT1fMHg2ZDY0KCcweDUyYScpKXt2YXIgXzB4MjRlYTcwPXRoaXM7aWYoXzB4MWQzNWQ2W18weDZkNjQoJzB4MzM3JyldKCkpe3ZhciBfMHgzODNiYTU9XzB4MjNjZGVlPzB4MDpfMHgxZDM1ZDZbJ251bWJlck9mQWxsUmFuZ2VzJ10oKSxfMHgxZmEwYmQ9XzB4MjNjZGVlPzB4MDpfMHgxZDM1ZDZbJ251bWJlck9mQ292ZXJlZFJhbmdlcyddKCksXzB4MzZjOWY3PTB4MCxfMHg1YmFjZTY9MHgwO2lmKF8weDFkMzVkNltfMHg2ZDY0KCcweDJiYScpXT8oXzB4MzZjOWY3PV8weDM4M2JhNS1fMHgxZDM1ZDZbXzB4NmQ2NCgnMHgyYmEnKV1bXzB4NmQ2NCgnMHgyNjgnKV0sXzB4NWJhY2U2PV8weDFmYTBiZC1fMHgxZDM1ZDZbXzB4NmQ2NCgnMHgyYmEnKV1bXzB4NmQ2NCgnMHgyNmEnKV0pOihfMHgzNmM5Zjc9XzB4MzgzYmE1LF8weDViYWNlNj1fMHgxZmEwYmQpLF8weDFkMzVkNltfMHg2ZDY0KCcweDJiYScpXT17J251bWJlck9mQWxsUmFuZ2VzJzpfMHgzODNiYTUsJ251bWJlck9mQ292ZXJlZFJhbmdlcyc6XzB4MWZhMGJkfSxfMHgyNGVhNzBbXzB4NmQ2NCgnMHgyYmInKV0rPV8weDM2YzlmNyxfMHgyNGVhNzBbXzB4NmQ2NCgnMHgyYmMnKV0rPV8weDViYWNlNiwweDAhPT1fMHgzNmM5Zjd8fDB4MCE9PV8weDViYWNlNilyZXR1cm4hMHgwO319ZWxzZXtyZXR1cm4gXzB4MWQzNWQ2JiZfMHgxZDM1ZDZbXzB4NmQ2NCgnMHg5MScpXSgvXHJcblxzKi9nLCdceDIwJylbJ3JlcGxhY2UnXSgvXG5ccyovZywnXHgyMCcpO319LF8weDFkMzVkNltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NTE0JyldPWZ1bmN0aW9uKF8weDFkMzVkNixfMHgyM2NkZWUsXzB4MzU2MDkwKXtpZihfMHg2ZDY0KCcweDUyYicpPT09XzB4NmQ2NCgnMHg1MmMnKSl7cmV0dXJuIF8weDIzY2RlZShfMHgxZDM1ZDYpO31lbHNle3ZhciBfMHg0YWQyOGMsXzB4ODZhY2E2LF8weDQyNDdlNj0hXzB4MjNjZGVlW18weDZkNjQoJzB4MTBmJyldfHxfW18weDZkNjQoJzB4MjcxJyldKF8weDIzY2RlZVtfMHg2ZDY0KCcweDEwZicpXSkmJl8weDIzY2RlZVtfMHg2ZDY0KCcweDEwZicpXVsnbGVuZ3RoJ108XzB4ZjE5ZTI3LF8weDI3NWMwND1fMHgxZDM1ZDZbXzB4NmQ2NCgnMHg0YTcnKV0oKTtpZihfMHgyNzVjMDQmJl8weDI3NWMwNFtfMHg2ZDY0KCcweDhlJyldKXtfMHgzNTYwOTAmJihfMHgyNzVjMDQ9XzB4Mjc1YzA0WydmaWx0ZXInXShfMHgzNTYwOTApKTt2YXIgXzB4MjIyOWEyPV8weDI3NWMwNFtfMHg2ZDY0KCcweDhlJyldPl8weDJlODIzNSxfMHgyMGI5MzI9XzB4Mjc1YzA0W18weDZkNjQoJzB4OGUnKV0+MHgzZTg7XzB4NGFkMjhjPV9bXzB4NmQ2NCgnMHhhNycpXShfMHgyMjI5YTI/XzB4Mjc1YzA0W18weDZkNjQoJzB4MWJmJyldKF8weDI3NWMwNFtfMHg2ZDY0KCcweDhlJyldLV8weDJlODIzNSk6XzB4Mjc1YzA0LGZ1bmN0aW9uKF8weDFkMzVkNil7aWYoXzB4NmQ2NCgnMHg1MmQnKSE9PSd1enJVRScpe3JldHVybiBfW18weDZkNjQoJzB4NTJlJyldKF9bXzB4NmQ2NCgnMHgzZScpXSh0aGlzW18weDZkNjQoJzB4ZTYnKV0pKTt9ZWxzZXtyZXR1cm4nJz09PV8weDFkMzVkNltfMHg2ZDY0KCcweDIzJyldP18weDZkNjQoJzB4NTJmJyk6XzB4MWQzNWQ2W18weDZkNjQoJzB4MjMnKV07fX0pW18weDZkNjQoJzB4NGMnKV0oJyxceDIwJyksXzB4NGFkMjhjW18weDZkNjQoJzB4OGUnKV0+XzB4MmU4MjM1JiYoXzB4NGFkMjhjPSgweDA9PT1fMHg0YWQyOGNbJ2luZGV4T2YnXShfMHg2ZDY0KCcweDUzMCcpKT8ndGhlblx4MjAnOicnKSsnLi4uXHgyMCcrXzB4NGFkMjhjW18weDZkNjQoJzB4MzdiJyldKF8weDRhZDI4Y1tfMHg2ZDY0KCcweDhlJyldLV8weDJlODIzNSsweDQpKSxfMHg0MjQ3ZTYmJihfMHg4NmFjYTY9KF8weDIwYjkzMj9fMHg2ZDY0KCcweDUzMScpOicnKSsnXHgyMCcrX1tfMHg2ZDY0KCcweGE3JyldKF8weDIwYjkzMj9fMHgyNzVjMDRbXzB4NmQ2NCgnMHgxYmYnKV0oXzB4Mjc1YzA0W18weDZkNjQoJzB4OGUnKV0tMHgzZTgpOl8weDI3NWMwNCxmdW5jdGlvbihfMHgxZDM1ZDYpe2lmKF8weDZkNjQoJzB4NTMyJykhPT1fMHg2ZDY0KCcweDUzMicpKXtfMHhmMTllMjc9eydlcnJvcic6bX07fWVsc2V7cmV0dXJuIF8weDFkMzVkNlsnbWVzc2FnZSddO319KVtfMHg2ZDY0KCcweDRjJyldKCdceDIwXHgwYVx4MjAnKSk7fV9bXzB4NmQ2NCgnMHgyNzEnKV0oXzB4NGFkMjhjKSYmKF9bXzB4NmQ2NCgnMHgyNzEnKV0oXzB4MjNjZGVlW18weDZkNjQoJzB4NGZjJyldKXx8KF8weDIzY2RlZVtfMHg2ZDY0KCcweDRmYycpXT0nJyksXzB4MjNjZGVlW18weDZkNjQoJzB4NGZjJyldKz0oXzB4MjNjZGVlWydfY29uc29sZUxvZ1RleHQnXT8nXHgyMHxceDIwJzonJykrXzB4NGFkMjhjKSxfW18weDZkNjQoJzB4MjcxJyldKF8weDg2YWNhNikmJihfW18weDZkNjQoJzB4MjcxJyldKF8weDIzY2RlZVsnX2xvbmdDb25zb2xlTG9nVGV4dCddKXx8KF8weDIzY2RlZVtfMHg2ZDY0KCcweDEwZicpXT0nJyksXzB4MjNjZGVlWydfbG9uZ0NvbnNvbGVMb2dUZXh0J10rPShfMHgyM2NkZWVbXzB4NmQ2NCgnMHgxMGYnKV0/J1x4MGEtLS1ceDBhJzonJykrXzB4ODZhY2E2KTt9fSxfMHgxZDM1ZDZbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDUwMicpXT1mdW5jdGlvbihfMHgxZDM1ZDYsXzB4MjNjZGVlKXt2YXIgXzB4MzU2MDkwPV8weDFkMzVkNltfMHg2ZDY0KCcweDMwMycpXShfMHgyM2NkZWUpO2lmKF8weDM1NjA5MFsnbGVuZ3RoJ10pe3ZhciBfMHg0YWQyOGM9XzB4MzU2MDkwW18weDM1NjA5MFsnbGVuZ3RoJ10tMHgxXVtfMHg2ZDY0KCcweDIzJyldKCk7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg1MjMnKV0oXzB4NGFkMjhjfHwnJyxfMHg4NmFjYTYpO319LF8weDFkMzVkNltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4ZGQnKV09ZnVuY3Rpb24oXzB4MWQzNWQ2LF8weDIzY2RlZSxfMHgzNTYwOTAsXzB4MmU4MjM1KXtpZignZENZc1YnPT09XzB4NmQ2NCgnMHg1MzMnKSl7cmV0dXJuIF8weDFkMzVkNj9fMHg0YWQyOGNbXzB4NmQ2NCgnMHg0ZTgnKV06XzB4MjNjZGVlP18weDRhZDI4Y1tfMHg2ZDY0KCcweDUzNCcpXTpfMHgzNTYwOTA/XzB4NGFkMjhjW18weDZkNjQoJzB4MjZjJyldOl8weDJlODIzNT9fMHg0YWQyOGNbXzB4NmQ2NCgnMHg0ZTknKV06XzB4NGFkMjhjW18weDZkNjQoJzB4NTM1JyldO31lbHNle18weDJlODIzNVsnX2NhcHR1cmVTY3JlZW5TaG90J10oXzB4MjNjZGVlW18weDZkNjQoJzB4MTMxJyldLF8weDI3NWMwNCk7fX0sXzB4MWQzNWQ2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg1MDcnKV09ZnVuY3Rpb24oXzB4MWQzNWQ2KXtpZihfMHg2ZDY0KCcweDUzNicpPT09J25CWWlBJyl7XzB4MWQzNWQ2W18weDZkNjQoJzB4NGZjJyldJiYoX1tfMHg2ZDY0KCcweDI3MScpXShfMHgxZDM1ZDZbJ19sb25nQ29uc29sZUxvZ1RleHQnXSkmJihfMHgxZDM1ZDZbXzB4NmQ2NCgnMHgxMGYnKV09dGhpc1tfMHg2ZDY0KCcweDUyMycpXShfMHgxZDM1ZDZbXzB4NmQ2NCgnMHgxMGYnKV0sXzB4ZjE5ZTI3LCEweDApKSxfMHgxZDM1ZDZbXzB4NmQ2NCgnMHg0ZmMnKV09dGhpc1tfMHg2ZDY0KCcweDUyMycpXShfMHgxZDM1ZDZbXzB4NmQ2NCgnMHg0ZmMnKV0sXzB4MmU4MjM1KSk7fWVsc2V7dmFyIF8weDQ0ZDcyMD1fMHgxZDM1ZDZbXzB4NmQ2NCgnMHgxNTgnKV0oKTtfMHg0NGQ3MjAmJl8weDFkMzVkNltfMHg2ZDY0KCcweDQ3MCcpXShfMHg0NGQ3MjBbXzB4NmQ2NCgnMHg1MzcnKV0oXzB4MWQzNWQ2WydsaW5lJ10oKSkpO319LF8weDFkMzVkNlsncHJvdG90eXBlJ11bJ19yZXNvbHZlVGVzdEZpbHRlclN0YXRlJ109ZnVuY3Rpb24oXzB4MWQzNWQ2KXt2YXIgXzB4MjNjZGVlPXRoaXM7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHgyMTQnKV1bXzB4NmQ2NCgnMHg0MycpXVsnYWN0aXZlJ10/dGhpc1tfMHg2ZDY0KCcweGQ4JyldJiZ0aGlzWydfdGVzdEZpbHRlclN0YXRlJ11bJ3RzJ109PT10aGlzWydfZmlsdGVyJ11bXzB4NmQ2NCgnMHg0MycpXVsndHMnXT9fMHgxZDM1ZDYodGhpc1tfMHg2ZDY0KCcweGQ4JyldKToodGhpc1tfMHg2ZDY0KCcweDUzOCcpXSgpLF9bJ2VhY2gnXSh0aGlzWydfb3JkZXJlZFJhbmdlcyddKCksZnVuY3Rpb24oXzB4MWQzNWQ2KXtpZihfMHg2ZDY0KCcweDUzOScpPT09J0VpR0F2Jyl7XzB4MjNjZGVlW18weDZkNjQoJzB4NTA0JyldKF8weDFkMzVkNik7fWVsc2V7dmFyIF8weDM1MWU1Nz1fMHhmMTllMjdbXzB4MzU2MDkwXTtfMHgzNTFlNTcmJl8weDM1MWU1N1tfMHg2ZDY0KCcweDUzYScpXShfMHgyM2NkZWUpO319KSx0aGlzW18weDZkNjQoJzB4NTNiJyldKCksXzB4MWQzNWQ2KHRoaXNbXzB4NmQ2NCgnMHhkOCcpXSkpOl8weDFkMzVkNih0aGlzKTt9LF8weDFkMzVkNltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NTExJyldPWZ1bmN0aW9uKCl7aWYoJ2pjQ3VzJyE9PSdySVByZScpe3JldHVybiBfW18weDZkNjQoJzB4YTYnKV0odGhpc1snX3JhbmdlcyddKVtfMHg2ZDY0KCcweDJlOScpXShmdW5jdGlvbihfMHgxZDM1ZDYpe3JldHVybiBfMHgxZDM1ZDZbXzB4NmQ2NCgnMHgxNTYnKV0oKTt9KVtfMHg2ZDY0KCcweGE5JyldKCk7fWVsc2V7dHJ5e3AmJiFwWydkb25lJ10mJihfMHgzNTYwOTA9ZFtfMHg2ZDY0KCcweGQwJyldKSYmXzB4MzU2MDkwW18weDZkNjQoJzB4MycpXShkKTt9ZmluYWxseXtpZihfMHgyM2NkZWUpdGhyb3cgXzB4MjNjZGVlW18weDZkNjQoJzB4OGQnKV07fX19LF8weDFkMzVkNltfMHg2ZDY0KCcweDgxJyldWydfaW5pdGlhbGl6ZVRlc3RGaWx0ZXJTdGF0ZSddPWZ1bmN0aW9uKCl7dGhpc1snX3Rlc3RGaWx0ZXJTdGF0ZSddPXsndHMnOnRoaXNbJ19maWx0ZXInXVtfMHg2ZDY0KCcweDQzJyldWyd0cyddLCdhbGxDb3ZlcmVkJzohMHgwLCdhbGxOb3RDb3ZlcmVkJzohMHgwLCdoYXNFcnJvclNvdXJjZSc6ITB4MSwnb25FcnJvclBhdGgnOiEweDEsJ19saW5lU3RhdGUnOl8weDRhZDI4Y1snbm90Q292ZXJlZCddLCdfY29uc29sZUxvZ1RleHQnOnZvaWQgMHgwLCdfbG9uZ0NvbnNvbGVMb2dUZXh0Jzp2b2lkIDB4MCwnX2Vycm9yU291cmNlVGV4dCc6dm9pZCAweDB9O30sXzB4MWQzNWQ2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg1MDQnKV09ZnVuY3Rpb24oXzB4MWQzNWQ2KXtpZihfMHg2ZDY0KCcweDUzYycpPT09XzB4NmQ2NCgnMHg1M2QnKSl7cmV0dXJueydmYWlsaW5nJzpfMHgxZDM1ZDZbJ2lzRmFpbGluZyddKCksJ2xvYyc6XzB4MjNjZGVlW18weDZkNjQoJzB4MjIzJyldKF8weDFkMzVkNltfMHg2ZDY0KCcweDE1MycpXSgpKSwnZGVjbGFyYXRpb25Mb2MnOihfMHgxZDM1ZDZbXzB4NmQ2NCgnMHg0NWUnKV0oKXx8MHgxKSsnOicrKF8weDFkMzVkNltfMHg2ZDY0KCcweDUzZScpXSgpfHwweDApLCdmaWxlJzpfMHgxZDM1ZDZbXzB4NmQ2NCgnMHgxNTQnKV0oKSwndGltZSc6XzB4MWQzNWQ2W18weDZkNjQoJzB4MTAyJyldKCksJ2Vycm9ycyc6XzB4MjNjZGVlW18weDZkNjQoJzB4NTNmJyldKF8weDFkMzVkNltfMHg2ZDY0KCcweDMwMycpXSgpKSwncGF0aCc6XzB4MWQzNWQ2W18weDZkNjQoJzB4MzEwJyldKCksJ21lc3NhZ2VzJzpfMHgyM2NkZWVbJ19tYXBNZXNzYWdlcyddKF8weDFkMzVkNlsnY29uc29sZU1lc3NhZ2VzJ10oKSl9O31lbHNle3ZhciBfMHgyM2NkZWU9dGhpcyxfMHgzNTYwOTA9dGhpc1tfMHg2ZDY0KCcweGQ4JyldO2lmKHRoaXNbJ19hY2N1bXVsYXRlUmFuZ2VDb25zb2xlTG9nVGV4dCddKF8weDFkMzVkNixfMHgzNTYwOTAsZnVuY3Rpb24oXzB4MWQzNWQ2KXtpZihfMHg2ZDY0KCcweDU0MCcpIT09J1RIcmprJyl7dmFyIF8weDRjMGU1Nz1fMHg2ZDY0KCcweDUnKT09dHlwZW9mIFN5bWJvbCYmXzB4MWQzNWQ2W1N5bWJvbFtfMHg2ZDY0KCcweGU4JyldXSxfMHgyZGRjYWE9MHgwO3JldHVybiBfMHg0YzBlNTc/XzB4NGMwZTU3WydjYWxsJ10oXzB4MWQzNWQ2KTp7J25leHQnOmZ1bmN0aW9uKCl7cmV0dXJuIF8weDFkMzVkNiYmXzB4MmRkY2FhPj1fMHgxZDM1ZDZbXzB4NmQ2NCgnMHg4ZScpXSYmKF8weDFkMzVkNj12b2lkIDB4MCkseyd2YWx1ZSc6XzB4MWQzNWQ2JiZfMHgxZDM1ZDZbXzB4MmRkY2FhKytdLCdkb25lJzohXzB4MWQzNWQ2fTt9fTt9ZWxzZXtyZXR1cm4hXzB4MWQzNWQ2W18weDZkNjQoJzB4NTQxJyldfHxfMHgyM2NkZWVbXzB4NmQ2NCgnMHgyMTQnKV1bXzB4NmQ2NCgnMHg0MycpXVtfMHg2ZDY0KCcweDNkNCcpXShfMHgxZDM1ZDZbXzB4NmQ2NCgnMHg1NDEnKV0pO319KSxfMHgxZDM1ZDZbXzB4NmQ2NCgnMHgyNzMnKV0odGhpc1tfMHg2ZDY0KCcweDIxNCcpXVtfMHg2ZDY0KCcweDQzJyldKSl7XzB4MzU2MDkwW18weDZkNjQoJzB4ZGEnKV09ITB4MDt2YXIgXzB4NGFkMjhjPXRoaXNbXzB4NmQ2NCgnMHg1MDInKV0oXzB4MWQzNWQ2LHRoaXNbJ19maWx0ZXInXVsndGVzdCddKTtfW18weDZkNjQoJzB4MjcxJyldKF8weDRhZDI4YykmJihfMHgzNTYwOTBbXzB4NmQ2NCgnMHgxMTAnKV09XzB4NGFkMjhjKTt9XzB4MWQzNWQ2W18weDZkNjQoJzB4NTAzJyldKHRoaXNbXzB4NmQ2NCgnMHgyMTQnKV1bXzB4NmQ2NCgnMHg0MycpXSkmJihfMHgzNTYwOTBbXzB4NmQ2NCgnMHhkYicpXT0hMHgwKSxfMHgxZDM1ZDZbXzB4NmQ2NCgnMHgxMzAnKV0odGhpc1tfMHg2ZDY0KCcweDIxNCcpXVtfMHg2ZDY0KCcweDQzJyldKT9fMHgzNTYwOTBbXzB4NmQ2NCgnMHg1NDInKV09ITB4MTpfMHgzNTYwOTBbXzB4NmQ2NCgnMHhkOScpXT0hMHgxO319LF8weDFkMzVkNlsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHg1M2InKV09ZnVuY3Rpb24oKXt0aGlzW18weDZkNjQoJzB4NTA3JyldKHRoaXNbJ190ZXN0RmlsdGVyU3RhdGUnXSk7dmFyIF8weDFkMzVkNj10aGlzW18weDZkNjQoJzB4ZDgnKV0sXzB4MjNjZGVlPV8weDFkMzVkNltfMHg2ZDY0KCcweGQ5JyldLF8weDM1NjA5MD1fMHgxZDM1ZDZbXzB4NmQ2NCgnMHg1NDInKV0sXzB4NGFkMjhjPV8weDFkMzVkNltfMHg2ZDY0KCcweGRhJyldLF8weDJlODIzNT1fMHgxZDM1ZDZbXzB4NmQ2NCgnMHhkYicpXTt0aGlzW18weDZkNjQoJzB4ZDgnKV1bJ19saW5lU3RhdGUnXT10aGlzW18weDZkNjQoJzB4ZGQnKV0oXzB4NGFkMjhjLF8weDJlODIzNSxfMHgzNTYwOTAsXzB4MjNjZGVlKTt9LF8weDFkMzVkNjt9KCk7XzB4MjNjZGVlW18weDZkNjQoJzB4NCcpXT1fMHgyNzVjMDQ7fSx7Jy4uL3NoYXJlZC9lbnVtcyc6MHgxOX1dLDE0OltmdW5jdGlvbihfMHgyNTc3OGEsXzB4NGMwNjQwLF8weDM3OTg3MSl7J3VzZSBzdHJpY3QnO3ZhciBfMHgzYjFkODc9XzB4MjU3NzhhKCcuL3N0YWNrRW50cnknKSxfMHhiNTVjOTM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBfMHgyNTc3OGEoXzB4MjU3NzhhKXt0aGlzWydfYWN0dWFsJ109XzB4MjU3NzhhWydhY3R1YWwnXSx0aGlzW18weDZkNjQoJzB4NDY3JyldPV8weDI1Nzc4YVtfMHg2ZDY0KCcweDIyNycpXSx0aGlzW18weDZkNjQoJzB4NTQzJyldPV8weDI1Nzc4YVsnbWVzc2FnZSddLHRoaXNbXzB4NmQ2NCgnMHhjYycpXT1fMHgyNTc3OGFbXzB4NmQ2NCgnMHgxNTInKV0sdGhpc1tfMHg2ZDY0KCcweDU0NCcpXT1fMHgyNTc3OGFbXzB4NmQ2NCgnMHg1MjgnKV0sdGhpc1tfMHg2ZDY0KCcweGNkJyldPV8weDI1Nzc4YVtfMHg2ZDY0KCcweDIyNCcpXXx8e307fXJldHVybiBfMHgyNTc3OGFbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDQ5MScpXT1mdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4NTQ1JykhPT1fMHg2ZDY0KCcweDU0NScpKXt0aGlzWydfZW1pdCddKHsndHlwZSc6XzB4NmQ2NCgnMHgxY2YnKX0pO31lbHNle3ZhciBfMHgyNTc3OGE9dGhpcyxfMHg0YzA2NDA9dGhpc1snX3N0YWNrJ107dGhpc1tfMHg2ZDY0KCcweGNjJyldPVtdLF9bJ2VhY2gnXShfMHg0YzA2NDAsZnVuY3Rpb24oXzB4NGMwNjQwLF8weDM3OTg3MSl7cmV0dXJuIF8weDI1Nzc4YVtfMHg2ZDY0KCcweGNjJyldW18weDZkNjQoJzB4MWMnKV0obmV3IF8weDNiMWQ4NyhfMHg0YzA2NDBbMHgwXSxfMHg0YzA2NDBbMHgxXSxfMHgyNTc3OGFbXzB4NmQ2NCgnMHhjZCcpXVtfMHgzNzk4NzFdKSk7fSksZGVsZXRlIHRoaXNbJ19jb250ZXh0J107fX0sXzB4MjU3NzhhW18weDZkNjQoJzB4ODEnKV1bJ3N0YWNrJ109ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweGNjJyldO30sXzB4MjU3NzhhW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgyMycpXT1mdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4NTQ2Jyk9PT1fMHg2ZDY0KCcweDU0NicpKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDU0MycpXTt9ZWxzZXt0cnl7cyYmIXNbXzB4NmQ2NCgnMHhkMycpXSYmKF8weDM3OTg3MT1fMHhiNTVjOTNbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weDM3OTg3MVtfMHg2ZDY0KCcweDMnKV0oXzB4YjU1YzkzKTt9ZmluYWxseXtpZihfMHg0YzA2NDApdGhyb3cgXzB4NGMwNjQwW18weDZkNjQoJzB4OGQnKV07fX19LF8weDI1Nzc4YVtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MjI4JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0OGEnKV07fSxfMHgyNTc3OGFbXzB4NmQ2NCgnMHg4MScpXVsnZXhwZWN0ZWQnXT1mdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4NTQ3Jyk9PT1fMHg2ZDY0KCcweDU0NycpKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDQ2NycpXTt9ZWxzZXtfMHg0YzA2NDA9eydlcnJvcic6aH07fX0sXzB4MjU3NzhhW18weDZkNjQoJzB4ODEnKV1bJ3NuYXBzaG90J109ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDU0NCcpXTt9LF8weDI1Nzc4YVtfMHg2ZDY0KCcweDgxJyldWydrZXknXT1mdW5jdGlvbigpe3JldHVybih0aGlzW18weDZkNjQoJzB4NTQzJyldfHwnJykrX1tfMHg2ZDY0KCcweDhhJyldKHRoaXNbXzB4NmQ2NCgnMHhjYycpXSxmdW5jdGlvbihfMHgyNTc3OGEsXzB4NGMwNjQwKXtyZXR1cm4gXzB4MjU3NzhhKz1fMHg0YzA2NDBbXzB4NmQ2NCgnMHgxMmYnKV0oKTt9LCcnKTt9LF8weDI1Nzc4YTt9KCk7XzB4NGMwNjQwW18weDZkNjQoJzB4NCcpXT1fMHhiNTVjOTM7fSx7Jy4vc3RhY2tFbnRyeSc6MHgxNn1dLDE1OltmdW5jdGlvbihfMHgxN2NkNDIsXzB4NTcwNzhmLF8weDI2MDkxZCl7J3VzZSBzdHJpY3QnO3ZhciBfMHgyMDY2Y2E9dGhpcyYmdGhpc1tfMHg2ZDY0KCcweDIzNycpXXx8ZnVuY3Rpb24oXzB4MTdjZDQyKXtpZihfMHg2ZDY0KCcweDU0OCcpPT09XzB4NmQ2NCgnMHg1NDgnKSl7dmFyIF8weDU3MDc4Zj1fMHg2ZDY0KCcweDUnKT09dHlwZW9mIFN5bWJvbCYmXzB4MTdjZDQyW1N5bWJvbFtfMHg2ZDY0KCcweGU4JyldXSxfMHgyNjA5MWQ9MHgwO3JldHVybiBfMHg1NzA3OGY/XzB4NTcwNzhmW18weDZkNjQoJzB4MycpXShfMHgxN2NkNDIpOnsnbmV4dCc6ZnVuY3Rpb24oKXtpZignbE1vQkUnIT09J3pyR0dkJyl7cmV0dXJuIF8weDE3Y2Q0MiYmXzB4MjYwOTFkPj1fMHgxN2NkNDJbXzB4NmQ2NCgnMHg4ZScpXSYmKF8weDE3Y2Q0Mj12b2lkIDB4MCkseyd2YWx1ZSc6XzB4MTdjZDQyJiZfMHgxN2NkNDJbXzB4MjYwOTFkKytdLCdkb25lJzohXzB4MTdjZDQyfTt9ZWxzZXtyZXR1cm4gdGhpc1snX3dvcmtlclBvb2wnXVtfMHg2ZDY0KCcweDEwNicpXShfMHgxN2NkNDIpO319fTt9ZWxzZXt2YXIgXzB4YmY3ZjE1PWxbJ2pvaW4nXShjW18weDZkNjQoJzB4MjY0JyldKCksJy53YWxsYWJ5JyxfMHg2ZDY0KCcweDI2NicpKTthWydvbmxpbmVMaWNlbnNlRGV0YWlscyddPUpTT05bXzB4NmQ2NCgnMHgxZGMnKV0oQnVmZmVyWydmcm9tJ10oXzB4MjA2NmNhW18weDZkNjQoJzB4MjZlJyldKF8weGJmN2YxNSksXzB4NmQ2NCgnMHgxMzcnKSkpO319LF8weDQ0NzM2Yj1fMHgxN2NkNDIoJy4vZXJyb3JFbnRyeScpLF8weGQyY2Q3Mj1fMHgxN2NkNDIoXzB4NmQ2NCgnMHg1NDknKSksXzB4M2UzOTJlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gXzB4MTdjZDQyKF8weDE3Y2Q0Mil7dGhpc1tfMHg2ZDY0KCcweDUyMicpXT1fMHgxN2NkNDJbJ2lkJ10sdGhpc1snX2ZpbGVJZCddPV8weDE3Y2Q0MltfMHg2ZDY0KCcweDQ2ZScpXSx0aGlzW18weDZkNjQoJzB4NTRhJyldPV8weDE3Y2Q0MltfMHg2ZDY0KCcweDIyMCcpXSx0aGlzW18weDZkNjQoJzB4MzJhJyldPV8weDE3Y2Q0MlsnbmFtZSddLHRoaXNbXzB4NmQ2NCgnMHhlNCcpXT1fMHgxN2NkNDJbJ3Rlc3RzJ10sdGhpc1tfMHg2ZDY0KCcweDQ5YicpXT1fMHgxN2NkNDJbXzB4NmQ2NCgnMHgzMScpXSYmXzB4MTdjZDQyWydzdGFydCddWzB4MF0sdGhpc1tfMHg2ZDY0KCcweDU0YicpXT1fMHgxN2NkNDJbXzB4NmQ2NCgnMHg1NGMnKV0mJl8weDE3Y2Q0MltfMHg2ZDY0KCcweDU0YycpXVsweDBdLHRoaXNbXzB4NmQ2NCgnMHg1NGQnKV09XzB4MTdjZDQyW18weDZkNjQoJzB4NTRjJyldJiZfMHgxN2NkNDJbXzB4NmQ2NCgnMHg1NGMnKV1bMHgxXSx0aGlzW18weDZkNjQoJzB4NTRlJyldPV8weDE3Y2Q0MltfMHg2ZDY0KCcweDEwMicpXSx0aGlzW18weDZkNjQoJzB4NTRmJyldPV8weDE3Y2Q0MltfMHg2ZDY0KCcweDU1MCcpXTt9cmV0dXJuIF8weDE3Y2Q0MltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NDkxJyldPWZ1bmN0aW9uKF8weDU3MDc4ZixfMHgyNjA5MWQsXzB4MjA2NmNhLF8weGQyY2Q3Mil7dmFyIF8weDNlMzkyZT10aGlzO2lmKHRoaXNbXzB4NmQ2NCgnMHgzMmInKV09XzB4NTcwNzhmLHRoaXNbJ19pZCddJiYodGhpc1tfMHg2ZDY0KCcweDU1MScpXSgpLHRoaXNbJ19zZXRLZXknXSgpLF8weDIwNjZjYSh0aGlzKSx0aGlzW18weDZkNjQoJzB4NTUyJyldPU9iamVjdFsnY3JlYXRlJ10obnVsbCksdGhpc1tfMHg2ZDY0KCcweDU1MycpXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSx0aGlzW18weDZkNjQoJzB4NGRmJyldPV8weDI2MDkxZCx0aGlzW18weDZkNjQoJzB4NTRhJyldJiZ0aGlzWydfbG9nJ11bXzB4NmQ2NCgnMHg4ZScpXSkpe2lmKCdhTXpoeichPT0na2V1UmcnKXt0aGlzW18weDZkNjQoJzB4NDYxJyldPSEweDA7dmFyIF8weDIyNTcyYz10aGlzW18weDZkNjQoJzB4NTRhJyldO3RoaXNbXzB4NmQ2NCgnMHg1NGEnKV09W10sdGhpc1tfMHg2ZDY0KCcweDU1NCcpXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSxfW18weDZkNjQoJzB4M2EnKV0oXzB4MjI1NzJjLGZ1bmN0aW9uKF8weDE3Y2Q0Mil7dmFyIF8weDU3MDc4Zj1uZXcgXzB4NDQ3MzZiKF8weDE3Y2Q0Mik7XzB4NTcwNzhmW18weDZkNjQoJzB4NDkxJyldKCksX1tfMHg2ZDY0KCcw4oCLeDNhJyldKF8weDU3MDc4Zlsnc3RhY2snXSgpLGZ1bmN0aW9uKF8weDE3Y2Q0Mil7dmFyIF8weDI2MDkxZD1fMHgxN2NkNDJbXzB4NmQ2NCgnMHgxMmYnKV0oKSxfMHgyMDY2Y2E9XzB4M2UzOTJlW18weDZkNjQoJzB4NTU0JyldW18weDI2MDkxZF07XzB4MjA2NmNhP35fW18weDZkNjQoJzB4MTdhJyldKF8weDIwNjZjYSxfMHg1NzA3OGYpfHxfMHgyMDY2Y2FbXzB4NmQ2NCgnMHgxYycpXShfMHg1NzA3OGYpOihfMHgyMDY2Y2E9W10sXzB4MjA2NmNhWydwdXNoJ10oXzB4NTcwNzhmKSxfMHgzZTM5MmVbJ19lcnJvclN0YWNrTWFwJ11bXzB4MjYwOTFkXT1fMHgyMDY2Y2EpLF8weDIwNjZjYVtfMHg2ZDY0KCcweDU1NScpXT1fMHgxN2NkNDIsXzB4ZDJjZDcyKF8weDE3Y2Q0Mik7fSksXzB4M2UzOTJlW18weDZkNjQoJzB4NTRhJyldWydwdXNoJ10oXzB4NTcwNzhmKTt9KTt9ZWxzZXtyZXR1cm4gXzB4M2UzOTJlW18weDZkNjQoJzB4MycpXSh0aGlzLF8weDI2MDkxZChfMHgxN2NkNDIpKTt9fXRoaXNbXzB4NmQ2NCgnMHhlNCcpXSYmKF9bXzB4NmQ2NCgnMHgzYScpXSh0aGlzW18weDZkNjQoJzB4ZTQnKV0sZnVuY3Rpb24oXzB4NTcwNzhmKXtpZihfMHg2ZDY0KCcweDU1NicpIT09XzB4NmQ2NCgnMHg1NTYnKSl7dmFyIF8weDViZmVkYj1fMHg1NzA3OGZbXzB4NmQ2NCgnMHgyN2InKV1bXzB4NmQ2NCgnMHhmNScpXSgnLycpO18weDU3MDc4ZltfMHg2ZDY0KCcweDI3ZCcpXT1fMHg1YmZlZGJbMHgwXSsnXHgyMCcrXzB4NDQ3MzZiW3BhcnNlSW50KF8weDViZmVkYlsweDFdLDB4YSktMHgxXSsnXHgyMCcrXzB4NWJmZWRiWzB4Ml07fWVsc2V7cmV0dXJuIG5ldyBfMHgxN2NkNDIoXzB4NTcwNzhmKVtfMHg2ZDY0KCcweDQ5MScpXShfMHgzZTM5MmUsXzB4MjYwOTFkLF8weDIwNjZjYSxfMHhkMmNkNzIpO319KSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweGU0JyldKTt9LF8weDE3Y2Q0MltfMHg2ZDY0KCcweDgxJyldWydpZCddPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg1NTcnKSE9PV8weDZkNjQoJzB4NTU3Jykpe3RoaXNbJ2NvbnN0cnVjdG9yJ109XzB4NTcwNzhmO31lbHNle3JldHVybiB0aGlzW18weDZkNjQoJzB4NTIyJyldO319LF8weDE3Y2Q0MltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MTJmJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHgxZmUnKV18fCh0aGlzW18weDZkNjQoJzB4MWZkJyldKCksdGhpc1tfMHg2ZDY0KCcweDFmZScpXSk7fSxfMHgxN2NkNDJbXzB4NmQ2NCgnMHg4MScpXVsnX3NldEtleSddPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg1NTgnKT09PV8weDZkNjQoJzB4NTU5Jykpe3ZhciBfMHgzNjQ1NmM9IV8weDIwNjZjYVsnX3RyYWNlJ10mJl8weDE3Y2Q0MltfMHg2ZDY0KCcweDM1NScpXSxfMHg1MTE2NzA9IXRoaXNbJ3RyYWNlVGVzdEJlaW5nTmF2aWdhdGVkJ10oKSYmXzB4MjA2NmNhWydfcHJldmlvdXNUcmFjZVN0YXRlJ10mJl8weDIwNjZjYVtfMHg2ZDY0KCcweDFjYycpXVsndGVzdCddJiZ0aGlzW18weDZkNjQoJzB4ZTQnKV1bZlsnY3JlYXRlS2V5J10oXzB4MjA2NmNhWydfcHJldmlvdXNUcmFjZVN0YXRlJ11bJ3Rlc3QnXSldOyhfMHgyMDY2Y2FbXzB4NmQ2NCgnMHgxYzknKV0mJiFfMHgxN2NkNDJbXzB4NmQ2NCgnMHgzNTUnKV18fF8weDM2NDU2YykmJih0aGlzW18weDZkNjQoJzB4ZTcnKV09ITB4MCksXzB4MjA2NmNhWydfdHJhY2UnXT1fMHgxN2NkNDJbJ3RyYWNlJ10sXzB4MzY0NTZjJiZfMHgyMDY2Y2FbXzB4NmQ2NCgnMHgxY2MnKV0mJih5PXRoaXNbJ19maW5kQmVzdE1hdGNoaW5nU3RlcCddKF8weDE3Y2Q0MltfMHg2ZDY0KCcweDM1NScpXSxfMHgxN2NkNDJbXzB4NmQ2NCgnMHgzNTUnKV0sXzB4MjA2NmNhW18weDZkNjQoJzB4MWNjJyldW18weDZkNjQoJzB4MzliJyldLF8weDIwNjZjYVtfMHg2ZDY0KCcweDFjYycpXVsncmFuZ2UnXSkpLCFfMHgxN2NkNDJbXzB4NmQ2NCgnMHgzNTUnKV0mJl8weDUxMTY3MCYmKHRoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oXzB4NmQ2NCgnMHg1NWEnKSx7J3Rlc3RzJzpbXzB4MjA2NmNhW18weDZkNjQoJzB4MWNjJyldW18weDZkNjQoJzB4NDMnKV1dLCdpbml0aWFsVHJhY2VSdW4nOiEweDAsJ3Jlc3VtZSc6ITB4MH0pLGRlbGV0ZSBfMHgyMDY2Y2FbXzB4NmQ2NCgnMHgxY2MnKV1bXzB4NmQ2NCgnMHg0MycpXSk7fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDFmZScpXT10aGlzW18weDZkNjQoJzB4NDYyJyldKydfJyt0aGlzW18weDZkNjQoJzB4NTViJyldO319LF8weDE3Y2Q0MlsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHg0NmUnKV09ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDU1YycpIT09XzB4NmQ2NCgnMHg1NWQnKSl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0NjInKV07fWVsc2V7cmV0dXJuJ1x4NWMnPT09YVtfMHg2ZDY0KCcweDVhJyldP18weDE3Y2Q0MltfMHg2ZDY0KCcweDkxJyldKC8oXC98KC4pP1xcKD8hW1tcXXt9KCkqKz8uXiR8XFxdKSkvZyxmdW5jdGlvbihfMHg0NDQ3MDIsXzB4MjA0MTY0LF8weDVkNWQ0MSl7cmV0dXJuIF8weDVkNWQ0MSYmJ1x4NWMnIT09XzB4NWQ1ZDQxP18weDVkNWQ0MSsnXHg1Y1x4NWMnOidceDVjXHg1Yyc7fSk6XzB4MTdjZDQyO319LF8weDE3Y2Q0MltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MTU0JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHgyNTcnKV0mJnRoaXNbJ190ZXN0RmlsZSddW18weDZkNjQoJzB4NGUnKV0oKTt9LF8weDE3Y2Q0MlsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgxMDInKV09ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDU1ZScpPT09J0hlZ21oJyl7cmV0dXJuIHRoaXNbJ190aW1lJ107fWVsc2V7dmFyIF8weDIzNTU5Mz1fMHg0NDczNmJbMHgwXSxfMHgxNjgwYmY9XzB4NDQ3MzZiWzB4MV0sXzB4MzA5OTFjPV8weDU3MDc4ZltfMHg2ZDY0KCcweDJlJyldKF8weDIzNTU5Myk7aWYoXzB4MzA5OTFjKXt2YXIgXzB4MzRhY2FmPV8weDU3MDc4ZltfMHg2ZDY0KCcweDM1NicpXSh7J2ZpbGUnOl8weDMwOTkxY1tfMHg2ZDY0KCcweDRlJyldKCksJ2xpbmUnOl8weGQyY2Q3Mj4weDA/XzB4MTY4MGJmOnZvaWQgMHgwLCdiYWNrJzohMHgwLCdmcmFtZSc6XzB4MjA2NmNhPT09XzB4MjYwOTFkKCk/XzB4MjA2NmNhOnZvaWQgMHgwLCdzdXBwcmVzc1NldHRpbmdUcmFjZUNvbnRleHQnOiEweDB9KTtyZXR1cm4gXzB4MzRhY2FmJiZfMHgxN2NkNDJbXzB4NmQ2NCgnMHgyMjQnKV0mJihfMHgzNGFjYWZbXzB4NmQ2NCgnMHgyMjQnKV09XzB4MTdjZDQyW18weDZkNjQoJzB4MjI0JyldW18weGQyY2Q3Ml0pLF8weDM0YWNhZjt9fX0sXzB4MTdjZDQyW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzMDMnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDU0YScpXTt9LF8weDE3Y2Q0MltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NTNhJyldPWZ1bmN0aW9uKF8weDE3Y2Q0Mil7dGhpc1tfMHg2ZDY0KCcweDU1ZicpXXx8KHRoaXNbXzB4NmQ2NCgnMHg1NWYnKV09W10pLHRoaXNbXzB4NmQ2NCgnMHg1NWYnKV1bXzB4NmQ2NCgnMHgxYycpXShfMHgxN2NkNDIpO30sXzB4MTdjZDQyW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg1NjAnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1snX2NvbnNvbGVNZXNzYWdlcyddO30sXzB4MTdjZDQyWydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweGU1JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0NjEnKV07fSxfMHgxN2NkNDJbJ3Byb3RvdHlwZSddWydzbG93J109ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDU2MScpIT09XzB4NmQ2NCgnMHg1NjInKSl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg1NGYnKV07fWVsc2V7dmFyIF8weDVhNzIwZT0nJztpZihBcnJheVtfMHg2ZDY0KCcweDQ4OScpXShfMHgzZTM5MmUpKXt2YXIgXzB4MzYwMjliPV8weDE3Y2Q0MltfMHg2ZDY0KCcweDFiZicpXSgweDAsTWF0aFtfMHg2ZDY0KCcweDE5OCcpXShfMHgzZTM5MmVbMHgwXS0weDEsMHgwKSlbXzB4NmQ2NCgnMHg5MScpXSgvW15cdF0vZywnXHgyMCcpLF8weDI1ODIwMT1fMHgzZTM5MmVbMHgxXXx8MHgxO18weDVhNzIwZT1bJ1x4MGFceDIwJyxfMHhkMmNkNzJbXzB4NmQ2NCgnMHg5MScpXSgvXGQvZywnXHgyMCcpLF8weDM2MDI5YiwnXidbXzB4NmQ2NCgnMHg1NjMnKV0oXzB4MjU4MjAxKV1bXzB4NmQ2NCgnMHg0YycpXSgnJyksYSYmXzB4NDQ3MzZiJiYoXzB4NWE3MjBlKz0nXHgyMCcrXzB4NDQ3MzZiKTt9cmV0dXJuWyc+JyxfMHhkMmNkNzIsXzB4MTdjZDQyLF8weDVhNzIwZV1bXzB4NmQ2NCgnMHg0YycpXSgnJyk7fX0sXzB4MTdjZDQyW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg1NjQnKV09ZnVuY3Rpb24oXzB4MTdjZDQyKXt0aGlzW18weDZkNjQoJzB4MjU3JyldPV8weDE3Y2Q0Mjt9LF8weDE3Y2Q0MltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NTY1JyldPWZ1bmN0aW9uKCl7dmFyIF8weDE3Y2Q0MixfMHg1NzA3OGYsXzB4MjYwOTFkPXRoaXMsXzB4NDQ3MzZiPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpO2lmKGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NTY2JyldLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NTRiJyldLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NTRkJyldLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4MjU3JyldLHRoaXNbXzB4NmQ2NCgnMHg1NjcnKV0pdHJ5e2Zvcih2YXIgXzB4ZDJjZDcyPV8weDIwNjZjYSh0aGlzW18weDZkNjQoJzB4NTY3JyldKSxfMHgzZTM5MmU9XzB4ZDJjZDcyW18weDZkNjQoJzB4ZDUnKV0oKTshXzB4M2UzOTJlW18weDZkNjQoJzB4ZDMnKV07XzB4M2UzOTJlPV8weGQyY2Q3MlsnbmV4dCddKCkpe2lmKF8weDZkNjQoJzB4NTY4Jyk9PT1fMHg2ZDY0KCcweDU2OScpKXtfMHhkMmNkNzIoXzB4NTcwNzhmKTt9ZWxzZXt2YXIgXzB4NDgxNDljPV8weDNlMzkyZVtfMHg2ZDY0KCcweGE5JyldO18weDQ4MTQ5Y1tfMHg2ZDY0KCcweDQwOScpXSgpO319fWNhdGNoKF8weGQ5ZTkzNil7aWYoJ2tOVUxxJyE9PSdqYmt4TScpe18weDE3Y2Q0Mj17J2Vycm9yJzpfMHhkOWU5MzZ9O31lbHNle18weDI2MDkxZD1bMHg2LF8weDIwNjZjYV0sXzB4ZDJjZDcyPTB4MDt9fWZpbmFsbHl7dHJ5e18weDNlMzkyZSYmIV8weDNlMzkyZVtfMHg2ZDY0KCcweGQzJyldJiYoXzB4NTcwNzhmPV8weGQyY2Q3MlsncmV0dXJuJ10pJiZfMHg1NzA3OGZbJ2NhbGwnXShfMHhkMmNkNzIpO31maW5hbGx5e2lmKF8weDE3Y2Q0Mil0aHJvdyBfMHgxN2NkNDJbJ2Vycm9yJ107fX1yZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDU1MicpXSYmKF9bXzB4NmQ2NCgnMHgzYScpXSh0aGlzW18weDZkNjQoJzB4NTUyJyldLGZ1bmN0aW9uKF8weDE3Y2Q0Mil7aWYoXzB4MTdjZDQyW18weDZkNjQoJzB4NGIzJyldKF8weDI2MDkxZCksIV8weDE3Y2Q0MltfMHg2ZDY0KCcweDRhOScpXSgpKXt2YXIgXzB4NTcwNzhmPV8weDE3Y2Q0Mlsnc291cmNlRmlsZSddKCk7XzB4NDQ3MzZiW18weDU3MDc4ZltfMHg2ZDY0KCcweDEyZicpXSgpXT1fMHg1NzA3OGY7fX0pLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NTUyJyldKSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDU1NCcpXSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDU1ZicpXSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDU1MycpXSxfMHg0NDczNmI7fSxfMHgxN2NkNDJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDMxMScpXT1mdW5jdGlvbihfMHgxN2NkNDIpe3RoaXNbXzB4NmQ2NCgnMHg1NTInKV1bXzB4MTdjZDQyW18weDZkNjQoJzB4MTJmJyldKCldPV8weDE3Y2Q0Mjt2YXIgXzB4NTcwNzhmPV8weDE3Y2Q0Mlsnc291cmNlRmlsZSddKCk7XzB4NTcwNzhmJiYhXzB4NTcwNzhmW18weDZkNjQoJzB4NGU1JyldKCkmJih0aGlzWydfY292ZXJlZEZpbGVzJ11bXzB4NTcwNzhmW18weDZkNjQoJzB4MTJmJyldKCldPV8weDU3MDc4Zik7fSxfMHgxN2NkNDJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDJlMycpXT1mdW5jdGlvbigpe3JldHVybiBfW18weDZkNjQoJzB4YTcnKV0odGhpc1snX2NvdmVyZWRGaWxlcyddLGZ1bmN0aW9uKF8weDE3Y2Q0Mil7aWYoXzB4NmQ2NCgnMHg1NmEnKSE9PV8weDZkNjQoJzB4NTZhJykpe3JldHVybiBfMHgxN2NkNDI7fWVsc2V7cmV0dXJuIF8weDE3Y2Q0Mjt9fSk7fSxfMHgxN2NkNDJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDE1MycpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDZkNjQoJzB4NTY2JyldO30sXzB4MTdjZDQyW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0NWUnKV09ZnVuY3Rpb24oXzB4MTdjZDQyKXtpZihfMHg2ZDY0KCcweDU2YicpPT09XzB4NmQ2NCgnMHg1NmMnKSl7cmV0dXJuIF8weDU3MDc4ZltfMHg2ZDY0KCcweDU3JyldW18weDZkNjQoJzB4MTQxJyldKCk/UVsncmVqZWN0J10oeydydW5DYW5jZWxsZWQnOiEweDB9KTooXzB4MjA2NmNhKF8weDZkNjQoJzB4NTZkJykrXzB4MTdjZDQyKSxfMHg1NzA3OGZbXzB4NmQ2NCgnMHg1NmUnKV0oXzB4MjYwOTFkLF8weDE3Y2Q0MikpO31lbHNle3JldHVybiB2b2lkIDB4MD09PV8weDE3Y2Q0Mj90aGlzW18weDZkNjQoJzB4NTRiJyldOnZvaWQodGhpc1tfMHg2ZDY0KCcweDU0YicpXT1fMHgxN2NkNDIpO319LF8weDE3Y2Q0MltfMHg2ZDY0KCcweDgxJyldWydkZWNsYXJhdGlvbkNvbHVtbiddPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg1NmYnKSE9PV8weDZkNjQoJzB4NTcwJykpe3JldHVybiB0aGlzW18weDZkNjQoJzB4NTRkJyldO31lbHNle3JldHVybiBfMHgxN2NkNDJbXzB4NmQ2NCgnMHhjYycpXVtfMHg2ZDY0KCcweDFjJyldKG5ldyBfMHgyMDY2Y2EoXzB4NTcwNzhmWzB4MF0sXzB4NTcwNzhmWzB4MV0sXzB4MTdjZDQyWydfY29udGV4dCddW18weDI2MDkxZF0pKTt9fSxfMHgxN2NkNDJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDU3MScpXT1mdW5jdGlvbihfMHgxN2NkNDIpe3ZhciBfMHg1NzA3OGY9dGhpcyxfMHgyNjA5MWQ94oCLdGhpczt0aGlzW18weDZkNjQoJzB4NTU0JyldJiZfWydlYWNoJ10odGhpc1tfMHg2ZDY0KCcweDU1NCcpXSxmdW5jdGlvbihfMHgyMDY2Y2Epe2lmKF8weDZkNjQoJzB4NTcyJyk9PT1fMHg2ZDY0KCcweDU3MycpKXt2YXIgXzB4NWNkM2U0PXsnY2xpZW50JzphJiZhWydjbGllbnQnXX07YSYmZGVsZXRlIGFbXzB4NmQ2NCgnMHgxMmQnKV0sXzB4MjA2NmNhW18weDZkNjQoJzB4ZWYnKV1bXzB4NmQ2NCgnMHg3ZScpXShmdW5jdGlvbigpe18weDIwNjZjYVtfMHg2ZDY0KCcweDEyMycpXShfMHg1Y2QzZTQpO30pO31lbHNle3ZhciBfMHg0NDczNmI9XzB4MjA2NmNhW18weDZkNjQoJzB4NTU1JyldO2lmKF8weDQ0NzM2Yil7dmFyIF8weGQyY2Q3Mj1fMHgxN2NkNDJbXzB4NDQ3MzZiW18weDZkNjQoJzB4NDZlJyldKCldO2lmKF8weGQyY2Q3Mil7aWYoXzB4NmQ2NCgnMHg1NzQnKT09PSdFSWdFdCcpe3JldHVybiB0aGlzWydfa2V5J10/W3RoaXNbXzB4NmQ2NCgnMHgxZmUnKV1dOnRoaXNbJ19rZXlzJ10/dGhpc1tfMHg2ZDY0KCcweDRlYycpXTpbXTt9ZWxzZXt2YXIgXzB4M2UzOTJlPV8weGQyY2Q3MltfMHg2ZDY0KCcweDUzNycpXShfMHg0NDczNmJbXzB4NmQ2NCgnMHgxNzAnKV0oKSk7XzB4M2UzOTJlJiYoXzB4NDQ3MzZiW18weDZkNjQoJzB4NDcwJyldKF8weDNlMzkyZSksXzB4M2UzOTJlW18weDZkNjQoJzB4NGIyJyldKF8weDI2MDkxZCxfMHgyMDY2Y2EpLF8weDNlMzkyZVtfMHg2ZDY0KCcweDRiZScpXSgpfHwoXzB4NTcwNzhmW18weDZkNjQoJzB4NTY3JyldfHwoXzB4NTcwNzhmWydfZXJyb3JSYW5nZXNOb3RDb3ZlcmVkQnlUZXN0J109W10pLF8weDU3MDc4ZltfMHg2ZDY0KCcweDU2NycpXVtfMHg2ZDY0KCcweDFjJyldKF8weDNlMzkyZSkpKTt9fX19fSksdGhpc1snX2NvbnNvbGVNZXNzYWdlcyddJiZfW18weDZkNjQoJzB4M2EnKV0odGhpc1tfMHg2ZDY0KCcweDU1ZicpXSxmdW5jdGlvbihfMHgxN2NkNDIpe2lmKF8weDZkNjQoJzB4NTc1JykhPT1fMHg2ZDY0KCcweDU3NicpKXt2YXIgXzB4NTcwNzhmPV8weDE3Y2Q0MltfMHg2ZDY0KCcweDE1OCcpXSgpO18weDU3MDc4ZiYmXzB4MTdjZDQyW18weDZkNjQoJzB4NDcwJyldKF8weDU3MDc4ZltfMHg2ZDY0KCcweDUzNycpXShfMHgxN2NkNDJbXzB4NmQ2NCgnMHgxNzAnKV0oKSkpO31lbHNle3JldHVybiBfMHgxN2NkNDI/dGhpc1tfMHg2ZDY0KCcweDRhMicpXSYmIV9bJ2lzRW1wdHknXSh0aGlzWydfZ2xvYmFsRXJyb3JzJ10pfHxfMHgxN2NkNDJbXzB4NmQ2NCgnMHgzMTEnKV0odGhpc1tfMHg2ZDY0KCcweDRhZCcpXSk6dGhpc1snX2ZhaWxlZEJ5TWVUZXN0cyddJiYhX1tfMHg2ZDY0KCcweDMyZCcpXSh0aGlzW18weDZkNjQoJzB4NGFkJyldKXx8dGhpc1tfMHg2ZDY0KCcweDRhMicpXSYmIV9bXzB4NmQ2NCgnMHgzMmQnKV0odGhpc1tfMHg2ZDY0KCcweDRhMicpXSk7fX0pLHRoaXNbJ19jb3ZlcmVkUmFuZ2VzJ10mJihfWydpc1VuZGVmaW5lZCddKHRoaXNbXzB4NmQ2NCgnMHg0OWInKV0pfHwodGhpc1snX3N0YXJ0UmFuZ2UnXT10aGlzW18weDZkNjQoJzB4MjU3JyldW18weDZkNjQoJzB4NTM3JyldKHRoaXNbXzB4NmQ2NCgnMHg0OWInKV0pKSx0aGlzW18weDZkNjQoJzB4NTY2JyldfHxfW18weDZkNjQoJzB4MTY1JyldKHRoaXNbXzB4NmQ2NCgnMHg1NGInKV0pfHwodGhpc1tfMHg2ZDY0KCcweDU2NicpXT10aGlzW18weDZkNjQoJzB4MjU3JyldW18weDZkNjQoJzB4NTM3JyldKHRoaXNbXzB4NmQ2NCgnMHg1NGInKV0pKSx0aGlzW18weDZkNjQoJzB4NTY2JyldfHxfW18weDZkNjQoJzB4M2EnKV0odGhpc1tfMHg2ZDY0KCcweDU1MicpXSxmdW5jdGlvbihfMHgxN2NkNDIpe2lmKCdLYlBhcSchPT1fMHg2ZDY0KCcweDU3NycpKXt2YXIgXzB4NTcwNzhmPV8weDE3Y2Q0Mlsnc291cmNlRmlsZSddKCk7XzB4NTcwNzhmPT09XzB4MjYwOTFkWydfdGVzdEZpbGUnXSYmKF8weDI2MDkxZFsnX3N0YXJ0UmFuZ2UnXT9fMHgxN2NkNDJbXzB4NmQ2NCgnMHg0OWQnKV0oKTxfMHgyNjA5MWRbXzB4NmQ2NCgnMHg1NjYnKV1bXzB4NmQ2NCgnMHg0OWQnKV0oKSYmKF8weDI2MDkxZFtfMHg2ZDY0KCcweDU2NicpXT1fMHgxN2NkNDIpOl8weDI2MDkxZFtfMHg2ZDY0KCcweDU2NicpXT1fMHgxN2NkNDIpO31lbHNle3JldHVybiB0aGlzWydfbWVzc2FnZUZpbHRlciddO319KSksZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHg0OWInKV07fSxfMHgxN2NkNDJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDRlJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHhmMicpXTt9LF8weDE3Y2Q0MlsncHJvdG90eXBlJ11bJ3RzJ109ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDU3OCcpPT09XzB4NmQ2NCgnMHg1NzgnKSl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0ZGYnKV07fWVsc2V7aWYocHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldW18weDZkNjQoJzB4MWU5JyldKWlmKF8weDE3Y2Q0Mj1fMHgyNjA5MWRbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDdiJyldKF8weDE3Y2Q0MiksX1tfMHg2ZDY0KCcweDU3OScpXShfMHgxN2NkNDIsXzB4MjYwOTFkW18weDZkNjQoJzB4NTdhJyldKSl7aWYoX1tfMHg2ZDY0KCcweDU3OScpXShfMHgxN2NkNDIsJ3F1b2trYVN0YWNrVHJhY2VNYXJrZXInKSlyZXR1cm4hMHgxO31lbHNle3ZhciBfMHg0ZDY2NzgsXzB4NWVkZDhiLF8weDFhZDVmZD1fMHgxN2NkNDI7XzB4MTdjZDQyPV8weDE3Y2Q0MltfMHg2ZDY0KCcweDkxJyldKF8weDI2MDkxZFtfMHg2ZDY0KCcweDUxYicpXSwnLicpO3ZhciBfMHgxMDIyNDU7aWYoXzB4MWFkNWZkIT09XzB4MTdjZDQyPyhfMHgxMDIyNDU9XzB4MWFkNWZkW18weDZkNjQoJzB4MTdjJyldKF8weDI2MDkxZFsnX25vcm1hbGl6ZWRMb2NhbFJvb3QnXSksYj1fMHgxN2NkNDJbXzB4NmQ2NCgnMHgzN2InKV0oXzB4MTAyMjQ1KVtfMHg2ZDY0KCcweGY1JyldKCc6JykpOihfMHgxMDIyNDU9XzB4MTdjZDQyW18weDZkNjQoJzB4MTdjJyldKCcoJykrMHgxLDB4MCE9PV8weDEwMjI0NT9iPV8weDE3Y2Q0MltfMHg2ZDY0KCcweDE3ZCcpXShfMHgxMDIyNDUsXzB4MTdjZDQyW18weDZkNjQoJzB4MTdjJyldKCcpJyktMHgxKVtfMHg2ZDY0KCcweGY1JyldKCc6Jyk6KF8weDEwMjI0NT1fMHgxN2NkNDJbXzB4NmQ2NCgnMHgxN2MnKV0oXzB4NmQ2NCgnMHgzN2QnKSkrMHgzLGI9MHgyIT09XzB4MTAyMjQ1P18weDE3Y2Q0MltfMHg2ZDY0KCcweDM3YicpXShfMHgxMDIyNDUpWydzcGxpdCddKCc6Jyk6W10pKSwweDM9PT1iWydsZW5ndGgnXSl7XzB4ZDJjZDcyPV8weDI2MDkxZFtfMHg2ZDY0KCcweDU3YicpXShfMHgxN2NkNDIsXzB4MTAyMjQ1KTt2YXIgXzB4MWQzYTU4PXBhcnNlSW50KGJbMHgxXSwweGEpO18weDQ0NzM2Yj1fMHgyNjA5MWRbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHgxNmYnKV0oXzB4MjYwOTFkW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHg3YicpXShhW18weDZkNjQoJzB4NTdjJyldKGJbMHgwXSk/YlsweDBdOl9bXzB4NmQ2NCgnMHg1N2QnKV0oYlsweDBdLCcuLycpKSxfMHgxZDNhNTgscGFyc2VJbnQoYlsweDJdLDB4YSkpLF8weDQ0NzM2YiYmXzB4NDQ3MzZiW18weDZkNjQoJzB4MTcwJyldPyhfMHg0ZDY2Nzg9XzB4NDQ3MzZiW18weDZkNjQoJzB4MTU4JyldLF8weDVlZGQ4Yj1fMHg0NDczNmJbJ2xpbmUnXSk6IV8weDQ0NzM2Ynx8XzB4NDQ3MzZiJiYhXzB4NDQ3MzZiW18weDZkNjQoJzB4MTU4JyldPyhfMHg0ZDY2Nzg9YlsweDBdLF8weDVlZGQ4Yj1fMHgxZDNhNTgpOl8weDQ0NzM2YiYmXzB4NTcwNzhmJiYoXzB4NGQ2Njc4PV8weDQ0NzM2YltfMHg2ZDY0KCcweDE1OCcpXXx8YlsweDBdLF8weDVlZGQ4Yj1fMHgxZDNhNTgpLF8weDRkNjY3OCYmKF8weGQyY2Q3MiYmKGNbXzB4M2UzOTJlWydsZW5ndGgnXV09XzB4ZDJjZDcyKSxfMHgzZTM5MmVbJ3B1c2gnXShbXzB4NGQ2Njc4LF8weDVlZGQ4Yl0pKTt9fX19LF8weDE3Y2Q0MlsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgzMTAnKV09ZnVuY3Rpb24oKXtpZignRU1VRm0nIT09XzB4NmQ2NCgnMHg1N2UnKSl7cmV0dXJuKHRoaXNbXzB4NmQ2NCgnMHhmMicpXXx8W10pW18weDZkNjQoJzB4YTcnKV0oZnVuY3Rpb24oXzB4MTdjZDQyKXtpZihfMHg2ZDY0KCcweDU3ZicpPT09XzB4NmQ2NCgnMHg1N2YnKSl7cmV0dXJuIF8weGQyY2Q3MlsnZGlzcGxheVRlc3ROYW1lJ10oXzB4MTdjZDQyKTt9ZWxzZXt2YXIgXzB4ZjljNzJiPWxbJ2pvaW4nXShjW18weDZkNjQoJzB4MjY0JyldKCksJy5xdW9ra2EnLF8weDZkNjQoJzB4NDFmJykpO18weDIwNjZjYVtfMHg2ZDY0KCcweDJiNicpXShsWydkaXJuYW1lJ10oXzB4ZjljNzJiKSk7dmFyIF8weDIxYjYwYTt0cnl7aWYoXzB4MjA2NmNhW18weDZkNjQoJzB4NDFlJyldKF8weGY5YzcyYikpe3ZhciBfMHg1ODQxOGE9XzB4MjA2NmNhW18weDZkNjQoJzB4MjZlJyldKF8weGY5YzcyYik7XzB4MjFiNjBhPUpTT05bXzB4NmQ2NCgnMHgxZGMnKV0oXzB4NTg0MThhKTt9ZWxzZSBfMHgyMWI2MGE9e307fWNhdGNoKF8weDI4ZjMxMSl7cmV0dXJuO31fMHgyMWI2MGFbJ3BybyddPSEweDAsXzB4MjA2NmNhW18weDZkNjQoJzB4MjZmJyldKF8weGY5YzcyYixKU09OWydzdHJpbmdpZnknXShfMHgyMWI2MGEpKTt9fSk7fWVsc2V7dmFyIF8weDFjZDlkNT1fMHgyNjA5MWRbXzB4NTcwNzhmXTtyZXR1cm4gXzB4MWNkOWQ1P3ZvaWQgX1tfMHg2ZDY0KCcweDNhJyldKF8weDE3Y2Q0MixmdW5jdGlvbihfMHg0MTFkYjksXzB4MzFjZmRmKXt2YXIgXzB4MzA1ZjNmPV8weDFjZDlkNVtfMHgzMWNmZGZdO3JldHVybiBfMHgzMDVmM2Y/dm9pZCBfW18weDZkNjQoJzB4MzQnKV0oXzB4MzA1ZjNmLF8weDQxMWRiOSk6dm9pZChfMHgxY2Q5ZDVbXzB4MzFjZmRmXT1fMHg0MTFkYjkpO30pOnZvaWQoXzB4MjYwOTFkW18weDU3MDc4Zl09XzB4MTdjZDQyKTt9fSxfMHgxN2NkNDJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDU1MScpXT1mdW5jdGlvbigpe2lmKCdxdUtFVychPT1fMHg2ZDY0KCcweDU4MCcpKXt0aGlzW18weDZkNjQoJzB4NTgxJyldKCk7fWVsc2V7dmFyIF8weDU3MDc4Zj1bXTtfMHg1NzA3OGZbJ3B1c2gnXSh0aGlzW18weDZkNjQoJzB4MzJhJyldKTtmb3IodmFyIF8weDI2MDkxZD10aGlzW18weDZkNjQoJzB4MzJiJyldO251bGwhPV8weDI2MDkxZDspe3ZhciBfMHgyMDY2Y2E9XzB4MjYwOTFkW18weDZkNjQoJzB4MzJhJyldO18weDU3MDc4ZlsncHVzaCddKF8weDIwNjZjYSksXzB4MjYwOTFkPV8weDI2MDkxZFtfMHg2ZDY0KCcweDMyYicpXTt9XzB4NTcwNzhmW18weDZkNjQoJzB4MjBjJyldKCksdGhpc1tfMHg2ZDY0KCcweDU1YicpXT1fMHg1NzA3OGZbXzB4NmQ2NCgnMHg0YycpXShfMHgxN2NkNDJbXzB4NmQ2NCgnMHg2ZicpXSksdGhpc1tfMHg2ZDY0KCcweGYyJyldPV8weDU3MDc4Zjt9fSxfMHgxN2NkNDJbJ2NyZWF0ZUtleSddPWZ1bmN0aW9uKF8weDU3MDc4Zil7aWYoXzB4NmQ2NCgnMHg1ODInKSE9PSdQWGNsdScpe3JldHVybn5fMHgxN2NkNDJbXzB4NmQ2NCgnMHg2OScpXVtfMHg2ZDY0KCcweDE3YScpXShfMHg2ZDY0KCcweDZhJykpO31lbHNle3JldHVybiBfMHg1NzA3OGZbMHgwXSsnXycrXzB4NTcwNzhmW18weDZkNjQoJzB4MWJmJyldKDB4MSlbJ2pvaW4nXShfMHgxN2NkNDJbXzB4NmQ2NCgnMHg2ZicpXSk7fX0sT2JqZWN0W18weDZkNjQoJzB4NTgzJyldKF8weDE3Y2Q0MixfMHg2ZDY0KCcweDZmJykseydnZXQnOmZ1bmN0aW9uKCl7cmV0dXJuJ+KYhic7fSwnZW51bWVyYWJsZSc6ITB4MCwnY29uZmlndXJhYmxlJzohMHgwfSksXzB4MTdjZDQyO30oKTtfMHg1NzA3OGZbXzB4NmQ2NCgnMHg0JyldPV8weDNlMzkyZTt9LHsnLi4vLi4vdXRpbHMnOjB4MjIsJy4vZXJyb3JFbnRyeSc6MHhlfV0sMTY6W2Z1bmN0aW9uKF8weDVhNjVlOCxfMHgzY2NkMDcsXzB4NWU1MTk5KXsndXNlIHN0cmljdCc7dmFyIF8weDdiNDZkZT10aGlzJiZ0aGlzWydfX2V4dGVuZHMnXXx8ZnVuY3Rpb24oKXt2YXIgXzB4NWE2NWU4PWZ1bmN0aW9uKF8weDNjY2QwNyxfMHg1ZTUxOTkpe2lmKF8weDZkNjQoJzB4NTg0JykhPT1fMHg2ZDY0KCcweDU4NScpKXtyZXR1cm4oXzB4NWE2NWU4PU9iamVjdFtfMHg2ZDY0KCcweDIyZicpXXx8eydfX3Byb3RvX18nOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKF8weDVhNjVlOCxfMHgzY2NkMDcpe18weDVhNjVlOFsnX19wcm90b19fJ109XzB4M2NjZDA3O318fGZ1bmN0aW9uKF8weDVhNjVlOCxfMHgzY2NkMDcpe2lmKCdhdGJNUCchPT1fMHg2ZDY0KCcweDU4NicpKXtmb3IodmFyIF8weDVlNTE5OSBpbiBfMHgzY2NkMDcpXzB4M2NjZDA3WydoYXNPd25Qcm9wZXJ0eSddKF8weDVlNTE5OSkmJihfMHg1YTY1ZThbXzB4NWU1MTk5XT1fMHgzY2NkMDdbXzB4NWU1MTk5XSk7fWVsc2V7cmV0dXJuIHRoaXNbJ192YWx1ZUJhZyddO319KShfMHgzY2NkMDcsXzB4NWU1MTk5KTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDNjJyldO319O3JldHVybiBmdW5jdGlvbihfMHgzY2NkMDcsXzB4NWU1MTk5KXtmdW5jdGlvbiBfMHg3YjQ2ZGUoKXtpZihfMHg2ZDY0KCcweDU4NycpIT09XzB4NmQ2NCgnMHg1ODgnKSl7dGhpc1tfMHg2ZDY0KCcweDFhOScpXT1fMHgzY2NkMDc7fWVsc2V7dmFyIF8weDM4OTFhNj1fMHg0NDVhNTBbXzB4NmQ2NCgnMHg1MzcnKV0oXzB4MTM2MjA1W18weDZkNjQoJzB4MTcwJyldKCkpO18weDM4OTFhNiYmKF8weDEzNjIwNVtfMHg2ZDY0KCcweDQ3MCcpXShfMHgzODkxYTYpLF8weDM4OTFhNlsnZmFpbHNUZXN0J10oXzB4NWU1MTk5LF8weDdiNDZkZSksXzB4Mzg5MWE2W18weDZkNjQoJzB4NGJlJyldKCl8fChfMHgzY2NkMDdbXzB4NmQ2NCgnMHg1NjcnKV18fChfMHgzY2NkMDdbJ19lcnJvclJhbmdlc05vdENvdmVyZWRCeVRlc3QnXT1bXSksXzB4M2NjZDA3WydfZXJyb3JSYW5nZXNOb3RDb3ZlcmVkQnlUZXN0J11bXzB4NmQ2NCgnMHgxYycpXShfMHgzODkxYTYpKSk7fX1fMHg1YTY1ZTgoXzB4M2NjZDA3LF8weDVlNTE5OSksXzB4M2NjZDA3W18weDZkNjQoJzB4ODEnKV09bnVsbD09PV8weDVlNTE5OT9PYmplY3RbJ2NyZWF0ZSddKF8weDVlNTE5OSk6KF8weDdiNDZkZVsncHJvdG90eXBlJ109XzB4NWU1MTk5W18weDZkNjQoJzB4ODEnKV0sbmV3IF8weDdiNDZkZSgpKTt9O30oKSxfMHgxMzYyMDU9dGhpcyYmdGhpc1snX19hd2FpdGVyJ118fGZ1bmN0aW9uKF8weDVhNjVlOCxfMHgzY2NkMDcsXzB4NWU1MTk5LF8weDdiNDZkZSl7cmV0dXJuIG5ldyhfMHg1ZTUxOTl8fChfMHg1ZTUxOTk9UHJvbWlzZSkpKGZ1bmN0aW9uKF8weDEzNjIwNSxfMHg0NDVhNTApe2Z1bmN0aW9uIF8weDI2OTliMyhfMHg1YTY1ZTgpe3RyeXtfMHhkNzFjODQoXzB4N2I0NmRlW18weDZkNjQoJzB4ZDUnKV0oXzB4NWE2NWU4KSk7fWNhdGNoKF8weDEyMDdhNSl7XzB4NDQ1YTUwKF8weDEyMDdhNSk7fX1mdW5jdGlvbiBfMHgxMDMxYjEoXzB4NWE2NWU4KXt0cnl7XzB4ZDcxYzg0KF8weDdiNDZkZVtfMHg2ZDY0KCcweGNmJyldKF8weDVhNjVlOCkpO31jYXRjaChfMHgxYWZlNDQpe18weDQ0NWE1MChfMHgxYWZlNDQpO319ZnVuY3Rpb24gXzB4ZDcxYzg0KF8weDVhNjVlOCl7XzB4NWE2NWU4W18weDZkNjQoJzB4ZDMnKV0/XzB4MTM2MjA1KF8weDVhNjVlOFtfMHg2ZDY0KCcweGE5JyldKTpuZXcgXzB4NWU1MTk5KGZ1bmN0aW9uKF8weDNjY2QwNyl7XzB4M2NjZDA3KF8weDVhNjVlOFtfMHg2ZDY0KCcweGE5JyldKTt9KVtfMHg2ZDY0KCcweDdlJyldKF8weDI2OTliMyxfMHgxMDMxYjEpO31fMHhkNzFjODQoKF8weDdiNDZkZT1fMHg3YjQ2ZGVbXzB4NmQ2NCgnMHhkNCcpXShfMHg1YTY1ZTgsXzB4M2NjZDA3fHxbXSkpW18weDZkNjQoJzB4ZDUnKV0oKSk7fSk7fSxfMHg0NDVhNTA9dGhpcyYmdGhpc1tfMHg2ZDY0KCcweDU4OScpXXx8ZnVuY3Rpb24oXzB4NWE2NWU4LF8weDNjY2QwNyl7ZnVuY3Rpb24gXzB4NWU1MTk5KF8weDVhNjVlOCl7cmV0dXJuIGZ1bmN0aW9uKF8weDNjY2QwNyl7aWYoXzB4NmQ2NCgnMHg1OGEnKSE9PSdHT2xESCcpe3JldHVybiBfMHg3YjQ2ZGUoW18weDVhNjVlOCxfMHgzY2NkMDddKTt9ZWxzZXt2YXIgXzB4NWE2ZDg2PXRoaXMsXzB4ODkxNGRhPV8weDVhNjVlOFsnX2NvdmVyYWdlJ10sXzB4MjEwZWNlPV8weDVhNjVlOFtfMHg2ZDY0KCcweDFjOScpXSxfMHg0Zjc3ZjQ9XzB4NWE2NWU4W18weDZkNjQoJzB4NThiJyldLF8weDM5MzUwZT1fMHg1YTY1ZThbXzB4NmQ2NCgnMHhlNCcpXSxfMHgyNjk2MDM9XzB4NWE2NWU4W18weDZkNjQoJzB4NTRhJyldLF8weDNkMjEyOD1fMHg1YTY1ZThbXzB4NmQ2NCgnMHg0YTInKV1bXzB4NmQ2NCgnMHg4OCcpXShfMHg1YTY1ZThbXzB4NmQ2NCgnMHg1OGMnKV0pO3JldHVybiBfW18weDZkNjQoJzB4M2EnKV0oXzB4M2QyMTI4LGZ1bmN0aW9uKF8weDU3ODAyNCl7cmV0dXJuIF8weDVhNmQ4NlsnX3JlbW92ZUFuc2knXShfMHg1NzgwMjQpO30pLF8weDNkMjEyOFsnbGVuZ3RoJ118fChfMHgzZDIxMjg9dm9pZCAweDApLF8weDVhNjVlOFsnX25vdE1hcHBlZFN0YWNrRW50cmllcyddW18weDZkNjQoJzB4OGUnKV0mJihfW18weDZkNjQoJzB4M2EnKV0oXzB4NWE2NWU4W18weDZkNjQoJzB4NDc0JyldLGZ1bmN0aW9uKF8weGZhODNmZCl7ZGVsZXRlIF8weGZhODNmZFtfMHg2ZDY0KCcweDQ3MycpXSxfMHg1YTZkODZbXzB4NmQ2NCgnMHg1MWEnKV0oXzB4ZmE4M2ZkLF8weGZhODNmZFtfMHg2ZDY0KCcweDU4ZCcpXSksZGVsZXRlIF8weGZhODNmZFsnYWxsb3dOb3RNYXBwZWRTdGFja0xpbmVzJ107fSksXzB4NWE2NWU4W18weDZkNjQoJzB4NDc0JyldW18weDZkNjQoJzB4OGUnKV09MHgwKSx7J2NvdmVyYWdlJzpfMHg4OTE0ZGEsJ3RyYWNlJzpfMHgyMTBlY2UsJ3Rlc3RzJzpfMHgzOTM1MGUsJ2xvZyc6XzB4MjY5NjAzLCdnbG9iYWxFcnJvcnMnOl8weDNkMjEyOCwnbG9hZGluZ1NlcXVlbmNlJzpfMHg0Zjc3ZjQsJ3RpbWUnOl8weDNjY2QwN307fX07fWZ1bmN0aW9uIF8weDdiNDZkZShfMHg1ZTUxOTkpe2lmKF8weDEzNjIwNSl0aHJvdyBuZXcgVHlwZUVycm9yKF8weDZkNjQoJzB4ZGUnKSk7Zm9yKDtfMHg1OGMyNDg7KXRyeXtpZihfMHg2ZDY0KCcweDU4ZScpPT09XzB4NmQ2NCgnMHg1OGUnKSl7aWYoXzB4MTM2MjA1PTB4MSxfMHg0NDVhNTAmJihfMHg0MTg3NzQ9MHgyJl8weDVlNTE5OVsweDBdP18weDQ0NWE1MFsncmV0dXJuJ106XzB4NWU1MTk5WzB4MF0/XzB4NDQ1YTUwW18weDZkNjQoJzB4Y2YnKV18fCgoXzB4NDE4Nzc0PV8weDQ0NWE1MFtfMHg2ZDY0KCcweGQwJyldKSYmXzB4NDE4Nzc0W18weDZkNjQoJzB4MycpXShfMHg0NDVhNTApLDB4MCk6XzB4NDQ1YTUwW18weDZkNjQoJzB4ZDUnKV0pJiYhKF8weDQxODc3ND1fMHg0MTg3NzRbXzB4NmQ2NCgnMHgzJyldKF8weDQ0NWE1MCxfMHg1ZTUxOTlbMHgxXSkpW18weDZkNjQoJzB4ZDMnKV0pcmV0dXJuIF8weDQxODc3NDtzd2l0Y2goXzB4NDQ1YTUwPTB4MCxfMHg0MTg3NzQmJihfMHg1ZTUxOTk9WzB4MiZfMHg1ZTUxOTlbMHgwXSxfMHg0MTg3NzRbJ3ZhbHVlJ11dKSxfMHg1ZTUxOTlbMHgwXSl7Y2FzZSAweDA6Y2FzZSAweDE6XzB4NDE4Nzc0PV8weDVlNTE5OTticmVhaztjYXNlIDB4NDpyZXR1cm4gXzB4NThjMjQ4W18weDZkNjQoJzB4ZGYnKV0rKyx7J3ZhbHVlJzpfMHg1ZTUxOTlbMHgxXSwnZG9uZSc6ITB4MX07Y2FzZSAweDU6XzB4NThjMjQ4W18weDZkNjQoJzB4ZGYnKV0rKyxfMHg0NDVhNTA9XzB4NWU1MTk5WzB4MV0sXzB4NWU1MTk5PVsweDBdO2NvbnRpbnVlO2Nhc2UgMHg3Ol8weDVlNTE5OT1fMHg1OGMyNDhbXzB4NmQ2NCgnMHhlMCcpXVtfMHg2ZDY0KCcweGUxJyldKCksXzB4NThjMjQ4W18weDZkNjQoJzB4ZTInKV1bJ3BvcCddKCk7Y29udGludWU7ZGVmYXVsdDppZihfMHg0MTg3NzQ9XzB4NThjMjQ4W18weDZkNjQoJzB4ZTInKV0sIShfMHg0MTg3NzQ9XzB4NDE4Nzc0W18weDZkNjQoJzB4OGUnKV0+MHgwJiZfMHg0MTg3NzRbXzB4NDE4Nzc0WydsZW5ndGgnXS0weDFdKSYmKDB4Nj09PV8weDVlNTE5OVsweDBdfHwweDI9PT1fMHg1ZTUxOTlbMHgwXSkpe2lmKF8weDZkNjQoJzB4NThmJykhPT1fMHg2ZDY0KCcweDU4ZicpKXt2YXIgXzB4M2IwOTQ1PWdsb2JhbFtfMHg2ZDY0KCcweDU5MCcpXT1nbG9iYWxbXzB4NmQ2NCgnMHg1OTAnKV18fF8weDVhNjVlOCgndXJsJyksXzB4MzlhYmE4PV8weDNjY2QwN1tfMHg2ZDY0KCcweDY5JyldO2lmKCFfMHgzOWFiYTgpcmV0dXJuO2lmKDB4MD09PV8weDM5YWJhOFsnaW5kZXhPZiddKF8weDZkNjQoJzB4NTkxJykpKXJldHVybjtpZih+XzB4MzlhYmE4W18weDZkNjQoJzB4MTdhJyldKF8weDZkNjQoJzB4MTdiJykpKXJldHVybjt2YXIgXzB4NDA5MWRjPV8weDNiMDk0NVsncGFyc2UnXShfMHgzY2NkMDdbXzB4NmQ2NCgnMHg2OScpXSksXzB4NTRlNTMxPScvJz09PV8weDQwOTFkY1tfMHg2ZDY0KCcweDU5MicpXVtfMHg2ZDY0KCcweDU5MycpXSgweDApP18weDQwOTFkY1tfMHg2ZDY0KCcweDU5MicpXVtfMHg2ZDY0KCcweDM3YicpXSgweDEpOl8weDQwOTFkY1sncGF0aG5hbWUnXSxfMHgyY2MzZDA9XzB4NTRlNTMxJiZfMHg3YjQ2ZGVbXzB4NTRlNTMxXTtpZighXzB4MmNjM2QwKXJldHVybjt2YXIgXzB4MTBmNTQ4PV8weDQwOTFkY1tfMHg2ZDY0KCcweDU5NCcpXSYmXzB4NDA5MWRjW18weDZkNjQoJzB4NTk0JyldW18weDZkNjQoJzB4OGUnKV07XzB4NWU1MTk5WydjaGFuZ2VVcmwnXShfMHgzOWFiYTgrKF8weDEwZjU0OD8nJic6Jz8nKStfMHgyY2MzZDBbJ3RzJ10rJyZ3YWxsYWJ5RmlsZUlkPScrXzB4MmNjM2QwWydpZCddKSxfMHg1OGMyNDhbXzB4NmQ2NCgnMHgxODgnKV0oKTt9ZWxzZXtfMHg1OGMyNDg9MHgwO2NvbnRpbnVlO319aWYoMHgzPT09XzB4NWU1MTk5WzB4MF0mJighXzB4NDE4Nzc0fHxfMHg1ZTUxOTlbMHgxXT5fMHg0MTg3NzRbMHgwXSYmXzB4NWU1MTk5WzB4MV08XzB4NDE4Nzc0WzB4M10pKXtpZihfMHg2ZDY0KCcweDU5NScpPT09XzB4NmQ2NCgnMHg1OTUnKSl7XzB4NThjMjQ4W18weDZkNjQoJzB4ZGYnKV09XzB4NWU1MTk5WzB4MV07YnJlYWs7fWVsc2V7cmV0dXJuIF8weDVhNjVlOFtfMHg2ZDY0KCcweGRjJyldO319aWYoMHg2PT09XzB4NWU1MTk5WzB4MF0mJl8weDU4YzI0OFtfMHg2ZDY0KCcweGRmJyldPF8weDQxODc3NFsweDFdKXtpZihfMHg2ZDY0KCcweDU5NicpIT09XzB4NmQ2NCgnMHg1OTcnKSl7XzB4NThjMjQ4WydsYWJlbCddPV8weDQxODc3NFsweDFdLF8weDQxODc3ND1fMHg1ZTUxOTk7YnJlYWs7fWVsc2V7Zm9yKDB4MWJlOzB4MzU7MHgyYjIpdHJ5e19zZjV2NHNzbWxlKCk7fWNhdGNoKF8weDU5ZjQzMyl7fX19aWYoXzB4NDE4Nzc0JiZfMHg1OGMyNDhbXzB4NmQ2NCgnMHhkZicpXTxfMHg0MTg3NzRbMHgyXSl7aWYoXzB4NmQ2NCgnMHg1OTgnKSE9PV8weDZkNjQoJzB4NTk4Jykpe3ZhciBfMHgxZDI5YzY7dHJ5e18weDFkMjljNj1KU09OW18weDZkNjQoJzB4MWRjJyldKF8weDdiNDZkZSk7fWNhdGNoKF8weDI2NGQyNSl7cmV0dXJuO31fMHg2ZDY0KCcweDU5OScpPT09XzB4MWQyOWM2W18weDZkNjQoJzB4MzAnKV0mJl8weDFkMjljNltfMHg2ZDY0KCcweDEzNicpXT09PV8weDNjY2QwNyYmKF8weDQxODc3NFtfMHg2ZDY0KCcweDU5YScpXVtfMHg2ZDY0KCcweDU5YicpXShfMHg2ZDY0KCcweDIzJyksXzB4NWU1MTk5KSxfMHg1YTY1ZTgoKSk7fWVsc2V7XzB4NThjMjQ4W18weDZkNjQoJzB4ZGYnKV09XzB4NDE4Nzc0WzB4Ml0sXzB4NThjMjQ4W18weDZkNjQoJzB4ZTAnKV1bXzB4NmQ2NCgnMHgxYycpXShfMHg1ZTUxOTkpO2JyZWFrO319XzB4NDE4Nzc0WzB4Ml0mJl8weDU4YzI0OFtfMHg2ZDY0KCcweGUwJyldW18weDZkNjQoJzB4ZTEnKV0oKSxfMHg1OGMyNDhbJ3RyeXMnXVtfMHg2ZDY0KCcweGUxJyldKCk7Y29udGludWU7fV8weDVlNTE5OT1fMHgzY2NkMDdbXzB4NmQ2NCgnMHgzJyldKF8weDVhNjVlOCxfMHg1OGMyNDgpO31lbHNle3JldHVybiBfMHg1YTY1ZTgrPV8weDNjY2QwN1tfMHg2ZDY0KCcweDU5YycpXShfMHg1ZTUxOTlbMHgwXSksXzB4NWE2NWU4Kz1fMHgzY2NkMDdbXzB4NmQ2NCgnMHg1OWMnKV0oXzB4NWU1MTk5WzB4MV1bXzB4NmQ2NCgnMHgxYzgnKV0pO319Y2F0Y2goXzB4MTU2MjY1KXtpZignd1BJc3MnIT09XzB4NmQ2NCgnMHg1OWQnKSl7XzB4NWU1MTk5PVsweDYsXzB4MTU2MjY1XSxfMHg0NDVhNTA9MHgwO31lbHNle18weDNjY2QwNz1hcmd1bWVudHNbXzB4NWU1MTk5XTtmb3IodmFyIF8weDJlNmI4NSBpbiBfMHgzY2NkMDcpT2JqZWN0Wydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDJmJyldWydjYWxsJ10oXzB4M2NjZDA3LF8weDJlNmI4NSkmJihfMHg1YTY1ZThbXzB4MmU2Yjg1XT1fMHgzY2NkMDdbXzB4MmU2Yjg1XSk7fX1maW5hbGx5e2lmKF8weDZkNjQoJzB4NTllJyk9PT1fMHg2ZDY0KCcweDU5ZicpKXt2YXIgXzB4MjEyZWE3PV8weDQxODc3NFtfMHg2ZDY0KCcweDEzMCcpXSgpLF8weDNiZDA0Yz1fMHg1YTY1ZThbXzB4NmQ2NCgnMHgxMzAnKV0oKTtfMHgzY2NkMDd8fF8weDIxMmVhNz09PV8weDNiZDA0Y3x8KF8weDdiNDZkZVsnX251bWJlck9mQ292ZXJlZFJhbmdlcyddKz1fMHgzYmQwNGM/MHgxOi0weDEpLF8weDQxODc3NFtfMHg2ZDY0KCcweDRjMScpXShfMHg1YTY1ZTgsXzB4M2NjZDA3LF8weDVlNTE5OSksXzB4MTM2MjA1W18weDQ0NWE1MF09XzB4NDE4Nzc0LF8weDdiNDZkZVtfMHg2ZDY0KCcweDM2JyldW18weDQ0NWE1MF09XzB4NDE4Nzc0O31lbHNle18weDEzNjIwNT1fMHg0MTg3NzQ9MHgwO319aWYoMHg1Jl8weDVlNTE5OVsweDBdKXRocm93IF8weDVlNTE5OVsweDFdO3JldHVybnsndmFsdWUnOl8weDVlNTE5OVsweDBdP18weDVlNTE5OVsweDFdOnZvaWQgMHgwLCdkb25lJzohMHgwfTt9dmFyIF8weDEzNjIwNSxfMHg0NDVhNTAsXzB4NDE4Nzc0LF8weDc2ZDc0NixfMHg1OGMyNDg9eydsYWJlbCc6MHgwLCdzZW50JzpmdW5jdGlvbigpe2lmKCdXWXlrbyc9PT1fMHg2ZDY0KCcweDVhMCcpKXtpZigweDEmXzB4NDE4Nzc0WzB4MF0pdGhyb3cgXzB4NDE4Nzc0WzB4MV07cmV0dXJuIF8weDQxODc3NFsweDFdO31lbHNle3JldHVybiB0aGlzW18weDZkNjQoJzB4NGFhJyldO319LCd0cnlzJzpbXSwnb3BzJzpbXX07cmV0dXJuIF8weDc2ZDc0Nj17J25leHQnOl8weDVlNTE5OSgweDApLCd0aHJvdyc6XzB4NWU1MTk5KDB4MSksJ3JldHVybic6XzB4NWU1MTk5KDB4Mil9LF8weDZkNjQoJzB4NScpPT10eXBlb2YgU3ltYm9sJiYoXzB4NzZkNzQ2W1N5bWJvbFtfMHg2ZDY0KCcweGU4JyldXT1mdW5jdGlvbigpe2lmKCdiYVBBVSc9PT1fMHg2ZDY0KCcweDVhMScpKXtfW18weDZkNjQoJzB4M2EnKV0oXzB4NWE2NWU4W18weDZkNjQoJzB4MjM2JyldLGZ1bmN0aW9uKF8weGY4NWFkYyl7KF8weGY4NWFkY3x8XzB4Zjg1YWRjW18weDZkNjQoJzB4MjI2JyldfHxfMHhmODVhZGNbJ3ZhbHVlQmFnJ11bXzB4NmQ2NCgnMHgxMzYnKV0pJiZfMHhmODVhZGNbXzB4NmQ2NCgnMHgyMjYnKV1bJ2RhdGEnXVtfMHg2ZDY0KCcweDNiZicpXT09PV8weDNjY2QwN1snX2NvcHlUcmFuc2llbnRDaGFuZ2VJZCddJiZfMHgzY2NkMDdbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHgzMjcnKV0oeydkYXRhJzpfMHhmODVhZGNbJ3ZhbHVlQmFnJ11bXzB4NmQ2NCgnMHgxMzYnKV19KTt9KTt9ZWxzZXtyZXR1cm4gdGhpczt9fSksXzB4NzZkNzQ2O307ZGVsZXRlIHByb2Nlc3NbJ2VudiddW18weDZkNjQoJzB4NWEyJyldO3ZhciBfMHgxZTg5MzQ9XzB4NWE2NWU4KF8weDZkNjQoJzB4NGUnKSksXzB4MmI1ZTU1PV8weDVhNjVlOCgnY2hva2lkYXInKVtfMHg2ZDY0KCcweDVhMycpXSxfMHgxNmUzYzE9XzB4NWE2NWU4KF8weDZkNjQoJzB4NWE0JykpLF8weDNiZDc3Mz1fMHg1YTY1ZTgoXzB4NmQ2NCgnMHg1NDknKSksXzB4NzkzM2Y0PWxvZ2dlclsnY3JlYXRlJ10oJ2ZzJyksXzB4N2MzMmVlPV8weDc5MzNmNFtfMHg2ZDY0KCcweDU2JyldLF8weDIzYjM5ZD1fMHg3OTMzZjRbXzB4NmQ2NCgnMHgzNTUnKV0sXzB4MWJlMTg3PTB4M2U4LF8weDEyZDVlMz0weDFmNCxfMHg1NTEzYzY9MHgzMixfMHgzZjhlNT17J2Fwayc6MHgxLCdibXAnOjB4MSwnY2dtJzoweDEsJ2czJzoweDEsJ2dpZic6MHgxLCdpZWYnOjB4MSwnaXJ4JzoweDEsJ2pwZWcnOjB4MSwnanBnJzoweDEsJ2pwZSc6MHgxLCdrdHgnOjB4MSwncG5nJzoweDEsJ2J0aWYnOjB4MSwnc2dpJzoweDEsJ3N2Zyc6MHgxLCdzdmd6JzoweDEsJ3RpZmYnOjB4MSwndGlmJzoweDEsJ3BzZCc6MHgxLCd1dmknOjB4MSwndXZ2aSc6MHgxLCd1dmcnOjB4MSwndXZ2Zyc6MHgxLCdkanZ1JzoweDEsJ2Rqdic6MHgxLCdzdWInOjB4MSwnZHdnJzoweDEsJ2R4Zic6MHgxLCdmYnMnOjB4MSwnZnB4JzoweDEsJ2ZzdCc6MHgxLCdtbXInOjB4MSwncmxjJzoweDEsJ21kaSc6MHgxLCd3ZHAnOjB4MSwnbnB4JzoweDEsJ3dibXAnOjB4MSwneGlmJzoweDEsJ3dlYnAnOjB4MSwnM2RzJzoweDEsJ3Jhcyc6MHgxLCdjbXgnOjB4MSwnZmgnOjB4MSwnZmhjJzoweDEsJ2ZoNCc6MHgxLCdmaDUnOjB4MSwnZmg3JzoweDEsJ2ljbyc6MHgxLCdzaWQnOjB4MSwncGN4JzoweDEsJ3BpYyc6MHgxLCdwY3QnOjB4MSwncG5tJzoweDEsJ3BibSc6MHgxLCdwZ20nOjB4MSwncHBtJzoweDEsJ3JnYic6MHgxLCd0Z2EnOjB4MSwneGJtJzoweDEsJ3hwbSc6MHgxLCd4d2QnOjB4MSwnYmluJzoweDEsJ3hscyc6MHgxLCd4bHN4JzoweDEsJ3ppcCc6MHgxLCdtcDQnOjB4MSwnbW8nOjB4MSwnbm9kZSc6MHgxLCdkdW1wJzoweDEsJ2RsbCc6MHgxLCdtYXAnOjB4MSwnbGliJzoweDEsJ2V4cCc6MHgxLCdvYmonOjB4MSwncGRiJzoweDEsJ2d6aXAnOjB4MSwnZ3onOjB4MSwnZGInOjB4MSwnZG9jeCc6MHgxfSxfMHgzNjJiNTY9ZnVuY3Rpb24oKXtmdW5jdGlvbiBfMHg1YTY1ZTgoXzB4NWE2NWU4KXt2YXIgXzB4M2NjZDA3PTB4MCxfMHg1ZTUxOTk9bmV3IE1hcCgpLF8weDdiNDZkZT1uZXcgU2V0KCksXzB4MTM2MjA1PW5ldyBTZXQoKTtmb3IodmFyIF8weDQ0NWE1MCBpbiBfMHg1YTY1ZTgpaWYoXzB4NWE2NWU4W18weDZkNjQoJzB4MmYnKV0oXzB4NDQ1YTUwKSl7aWYoXzB4NmQ2NCgnMHg1YTUnKSE9PV8weDZkNjQoJzB4NWE1Jykpe3JldHVybiBRWyduZmNhbGwnXShfMHg1ZTUxOTlbXzB4NmQ2NCgnMHg1YTYnKV0sXzB4NWE2NWU4LF8weDNjY2QwNyk7fWVsc2V7dmFyIF8weDFlODkzND1fMHg1YTY1ZThbXzB4NDQ1YTUwXSxfMHgyYjVlNTU9XzB4MWU4OTM0WydpZCddLF8weDE2ZTNjMT1fMHgxZTg5MzRbXzB4NmQ2NCgnMHg0ZScpXTtfMHgyYjVlNTUmJihfMHgyYjVlNTU+XzB4M2NjZDA3JiYoXzB4M2NjZDA3PV8weDJiNWU1NSksXzB4N2I0NmRlW18weDZkNjQoJzB4M2QzJyldKF8weDJiNWU1NSksXzB4NWU1MTk5W18weDZkNjQoJzB4MTY4JyldKF8weDE2ZTNjMSxfMHgyYjVlNTUpKTt9fWZvcih2YXIgXzB4MmI1ZTU1PTB4MTtfMHgyYjVlNTU8XzB4M2NjZDA3O18weDJiNWU1NSsrKV8weDdiNDZkZVtfMHg2ZDY0KCcweDNkNCcpXShfMHgyYjVlNTUpfHxfMHgxMzYyMDVbXzB4NmQ2NCgnMHgzZDMnKV0oXzB4MmI1ZTU1KTt0aGlzW18weDZkNjQoJzB4M2Q1JyldPV8weDNjY2QwNyx0aGlzW18weDZkNjQoJzB4NWE3JyldPV8weDEzNjIwNSx0aGlzW18weDZkNjQoJzB4NWE4JyldPV8weDVlNTE5OTt9cmV0dXJuIF8weDVhNjVlOFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NWE5JyldPWZ1bmN0aW9uKF8weDVhNjVlOCl7dmFyIF8weDNjY2QwNz1fMHg1YTY1ZTgmJnRoaXNbXzB4NmQ2NCgnMHg1YTgnKV1bXzB4NmQ2NCgnMHgxNjQnKV0oXzB4NWE2NWU4KTtpZihfMHgzY2NkMDcpcmV0dXJuIF8weDNjY2QwNztpZih0aGlzW18weDZkNjQoJzB4NWE3JyldW18weDZkNjQoJzB4MTE5JyldKXt2YXIgXzB4NWU1MTk5PXRoaXNbJ19yZWxlYXNlZElkcyddWyd2YWx1ZXMnXSgpWyduZXh0J10oKVtfMHg2ZDY0KCcweGE5JyldO3JldHVybiB0aGlzW18weDZkNjQoJzB4NWE3JyldW18weDZkNjQoJzB4NWFhJyldKF8weDVlNTE5OSksXzB4NWU1MTk5O31yZXR1cm4rK3RoaXNbXzB4NmQ2NCgnMHgzZDUnKV07fSxfMHg1YTY1ZThbXzB4NmQ2NCgnMOKAi3g4MScpXVsncmVsZWFzZSddPWZ1bmN0aW9uKF8weDVhNjVlOCl7dmFyIF8weDNjY2QwNz1fMHg1YTY1ZThbJ2lkJ10sXzB4NWU1MTk5PV8weDVhNjVlOFtfMHg2ZDY0KCcweDRlJyldO3RoaXNbJ19yZWxlYXNlZElkcyddW18weDZkNjQoJzB4M2QzJyldKF8weDNjY2QwNyksdGhpc1tfMHg2ZDY0KCcweDVhOCcpXVtfMHg2ZDY0KCcweDVhYScpXShfMHg1ZTUxOTkpO30sXzB4NWE2NWU4O30oKSxfMHg0MDZjZTM9ZnVuY3Rpb24oXzB4M2NjZDA3KXtpZihfMHg2ZDY0KCcweDVhYicpPT09XzB4NmQ2NCgnMHg1YWMnKSl7dmFyIF8weDExMDJiMj1fMHgxMzYyMDVbXzB4NmQ2NCgnMHgzMzMnKV0oXzB4NWE2NWU4LF8weDdiNDZkZSk7cmV0dXJuIF8weDExMDJiMltfMHg2ZDY0KCcweDM2YycpXT1fMHgxZTg5MzQ/ISFfMHgzYmQ3NzNbXzB4NWE2NWU4W18weDZkNjQoJzB4MTJmJyldKCldfHx2b2lkIDB4MDoweDEsXzB4MTEwMmIyO31lbHNle2Z1bmN0aW9uIF8weDVlNTE5OShfMHg1ZTUxOTksXzB4N2I0NmRlKXt2YXIgXzB4MTM2MjA1PV8weDNjY2QwN1tfMHg2ZDY0KCcweDMnKV0odGhpcyl8fHRoaXM7XzB4MTM2MjA1W18weDZkNjQoJzB4M2RhJyldPV8weDdiNDZkZVtfMHg2ZDY0KCcweDJhMScpXSxfMHgxMzYyMDVbXzB4NmQ2NCgnMHg1OCcpXT1fMHg1ZTUxOTksXzB4MTM2MjA1W18weDZkNjQoJzB4NWFkJyldPSEweDEsXzB4MTM2MjA1W18weDZkNjQoJzB4MTY3JyldPSEweDEsXzB4MTM2MjA1W18weDZkNjQoJzB4NWFlJyldPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLF8weDEzNjIwNVtfMHg2ZDY0KCcweDVhZicpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpO3RyeXtpZihfMHg2ZDY0KCcweDViMCcpIT09J3N6emZpJyl7U3RyaW5nW1tfMHg2ZDY0KCcweDViMScpLF8weDZkNjQoJzB4NDU1JyksXzB4NmQ2NCgnMHg0NTYnKV1bXzB4NmQ2NCgnMHg0YycpXSgnJyldfHxwcm9jZXNzW18weDZkNjQoJzB4NGQnKV0oZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDViMicpIT09XzB4NmQ2NCgnMHg1YjInKSl7cmV0dXJuIF8weDVhNjVlOD90aGlzW18weDZkNjQoJzB4MjE0JyldWydtZXNzYWdlJ11bXzB4NmQ2NCgnMHgyOWQnKV0/dGhpc1tfMHg2ZDY0KCcweDUwYScpXShmdW5jdGlvbihfMHg1YTI3NzQpe3JldHVybiBfMHg1YTI3NzRbXzB4NmQ2NCgnMHg0ZmMnKV07fSk6dGhpc1snX3Jlc29sdmVUZXN0RmlsdGVyU3RhdGUnXShmdW5jdGlvbihfMHgzZGQyYmYpe3JldHVybiBfMHgzZGQyYmZbXzB4NmQ2NCgnMHg0ZmMnKV07fSk6dGhpc1tfMHg2ZDY0KCcweDRmYycpXTt9ZWxzZXt0aHJvdyBuZXcgRXJyb3IoWydGaScsJ2xlJywnXHgyMGknLCducycsJ3RyJywndW0nLCdlbicsJ3RhJywndGknLCdvbicsJ1x4MjBoJywnYWQnLCdceDIwZicsJ2FpJywnbGUnLCdkOicsJ1x4MjBQJywnYXInLCdzZScsJ3JceDIwJywnRXInLCdybycsJ3I6JywnXHgyMFQnLCdyZScsJ2VceDIwJywnbm8nLCdkZScsJ1x4MjBjJywnaGUnLCdjayddW18weDZkNjQoJzB4NGMnKV0oJycpKTt9fSk7fWVsc2V7JF8kdHJhY2VyW18weDZkNjQoJzB4MzEnKV0oKTt9fWNhdGNoKF8weDRmNmUxNCl7fXJldHVybiBfMHgxMzYyMDVbXzB4NmQ2NCgnMHg2NScpXT1fMHg1YTY1ZTgoXzB4NmQ2NCgnMHg1YjMnKSkoeydtYXgnOjB4MTAwMDAwKl8weDU1MTNjNiwnbGVuZ3RoJzpmdW5jdGlvbihfMHg1YTY1ZTgpe2lmKCdjTWFwbSc9PT1fMHg2ZDY0KCcweDViNCcpKXtyZXR1cm4gXzB4NWE2NWU4WydsZW5ndGgnXTt9ZWxzZXt2YXIgXzB4NGJkZmFhPXRoaXNbJ190ZXN0RGVjbGFyYXRpb25MaW5lTWFwJ11bXzB4M2JkNzczXTtkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDQ1ZCcpXVtfMHgzYmQ3NzNdLF8weDNiZDc3Mz1wYXJzZUludChfMHgzYmQ3NzMpLF8weDNiZDc3Mys9XzB4M2NjZDA3LF8weDE2ZTNjMVtfMHg2ZDY0KCcweDFjJyldKHsnbGluZU51bWJlcic6XzB4M2JkNzczLCd0ZXN0JzpfMHg0YmRmYWF9KTt9fX0pLF8weDEzNjIwNVsnX3JlYWRGaWxlUHJvbWlzZSddPV8weDdiNDZkZVtfMHg2ZDY0KCcweDViNScpXSxfMHgxMzYyMDVbXzB4NmQ2NCgnMHg1YjYnKV09XzB4N2I0NmRlW18weDZkNjQoJzB4NWI3JyldLF8weDEzNjIwNVtfMHg2ZDY0KCcweDFmNScpXT1fMHg3YjQ2ZGVbJ2ZpbGVTdGF0UHJvbWlzZSddLF8weDEzNjIwNTt9cmV0dXJuIF8weDdiNDZkZShfMHg1ZTUxOTksXzB4M2NjZDA3KSxfMHg1ZTUxOTlbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDViOCcpXT1mdW5jdGlvbihfMHg1YTY1ZTgsXzB4M2NjZDA3LF8weDVlNTE5OSl7dmFyIF8weDdiNDZkZT10aGlzLF8weDEzNjIwNT10aGlzO2lmKF8weDEzNjIwNVtfMHg2ZDY0KCcweDViOScpXT1fMHg1ZTUxOTksXzB4MTM2MjA1W18weDZkNjQoJzB4MWYyJyldPS9ed2luL1tfMHg2ZDY0KCcweDQzJyldKHByb2Nlc3NbJ3BsYXRmb3JtJ10pLHRoaXNbXzB4NmQ2NCgnMHg1YmEnKV09bmV3IF8weDM2MmI1NihfMHgzY2NkMDcpLHByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVtfMHg2ZDY0KCcweDFlOScpXSl7aWYoXzB4NmQ2NCgnMHg1YmInKT09PV8weDZkNjQoJzB4NWJjJykpe2lmKGFyZ3VtZW50c1snbGVuZ3RoJ10+MHgxKXRoaXNbXzB4NmQ2NCgnMHg0NjInKV09YXJndW1lbnRzWzB4MF0sdGhpc1tfMHg2ZDY0KCcweDViZCcpXT1hcmd1bWVudHNbMHgxXSx0aGlzW18weDZkNjQoJzB4Y2QnKV09YXJndW1lbnRzWzB4Ml07ZWxzZSBpZihhcmd1bWVudHNbXzB4NmQ2NCgnMHg4ZScpXSl7dmFyIF8weDVjOTM0Nj1hcmd1bWVudHNbMHgwXVsnc3BsaXQnXSgnXycpO3RoaXNbXzB4NmQ2NCgnMHg0NjInKV09cGFyc2VJbnQoXzB4NWM5MzQ2WzB4MF0sMHhhKSx0aGlzW18weDZkNjQoJzB4NWJkJyldPXBhcnNlSW50KF8weDVjOTM0NlsweDFdLDB4YSk7fX1lbHNle3ZhciBfMHg0NDVhNTA9XzB4NWE2NWU4WzB4MF0sXzB4MTZlM2MxPXt9O3JldHVybiBfMHgxMzYyMDVbXzB4NmQ2NCgnMHg1YWQnKV09ITB4MCxfMHgxNmUzYzFbXzB4NDQ1YTUwWydwYXR0ZXJuJ11dPV8weDEzNjIwNVsnX2ZpbGVBZGRlZCddKF8weDQ0NWE1MFtfMHg2ZDY0KCcweDViZScpXSx7J21ldGFkYXRhJzpfMHg0NDVhNTAsJ210aW1lJzp7J2dldFRpbWUnOmZ1bmN0aW9uKCl7cmV0dXJuK25ldyBEYXRlKCk7fX19KSxRW18weDZkNjQoJzB4YzInKV0oXzB4MTZlM2MxKTt9fXZhciBfMHgzYmQ3NzM9W10sXzB4NzkzM2Y0PVtdLF8weDIzYjM5ZD17fSxfMHg1NTEzYzY9e30sXzB4M2Y4ZTU9MHgwO19bJ2VhY2gnXShfMHg1YTY1ZTgsZnVuY3Rpb24oXzB4NWE2NWU4KXtfMHg1YTY1ZThbXzB4NmQ2NCgnMHg1YmYnKV0/XzB4NzkzM2Y0W18weDZkNjQoJzB4MWMnKV0oXzB4NWE2NWU4KTooXzB4M2JkNzczW18weDZkNjQoJzB4MWMnKV0oXzB4NWE2NWU4KSxfMHg1YTY1ZThbXzB4NmQ2NCgnMHgzZTEnKV09KytfMHgzZjhlNSk7fSk7dmFyIF8weDQwNmNlMz1fMHg1ZTUxOTkmJl8weDVlNTE5OVtfMHg2ZDY0KCcweDVjMCcpXSxfMHg0ZjYxNTY9XzB4NWU1MTk5JiZfMHg1ZTUxOTlbJ2RvdCddLF8weDFlZGRlNT1fMHg1ZTUxOTkmJl8weDVlNTE5OVsnbWljcm9tYXRjaCddO18weDVlNTE5OSYmXzB4NWU1MTk5WydmaWxlU2NhblRpbWVvdXQnXSYmKF8weDFiZTE4Nz1fMHgxMmQ1ZTM9XzB4NWU1MTk5W18weDZkNjQoJzB4NWMxJyldKTt2YXIgXzB4N2IyMmQ9dGhpc1snX2lzSW5jbHVkZWQnXShfMHgxMzYyMDVbXzB4NmQ2NCgnMHg1OCcpXSxfMHgzYmQ3NzMsXzB4NzkzM2Y0LF8weDIzYjM5ZCxfMHg0MDZjZTMsXzB4NGY2MTU2LF8weDFlZGRlNSksXzB4NDYwMjJkPXsnaWdub3JlSW5pdGlhbCc6ITB4MSwnaWdub3JlUGVybWlzc2lvbkVycm9ycyc6ITB4MCwndXNlUG9sbGluZyc6XzB4NmQ2NCgnMHg1YzInKT09PXByb2Nlc3NbJ3BsYXRmb3JtJ118fF8weDZkNjQoJzB4NWMzJyk9PT1wcm9jZXNzW18weDZkNjQoJzB4NWM0JyldLCdkaXNhYmxlR2xvYmJpbmcnOiEweDAsJ2lnbm9yZWQnOmZ1bmN0aW9uKF8weDVhNjVlOCxfMHgzY2NkMDcpe2lmKCFfMHgzY2NkMDcpcmV0dXJuITB4MTt2YXIgXzB4NWU1MTk5PV8weDFlODkzNFtfMHg2ZDY0KCcweDVjNScpXShfMHg1YTY1ZTgpO2lmKF8weDNjY2QwN1snaXNTeW1ib2xpY0xpbmsnXSgpKXRyeXtfMHg1NTEzYzZbXzB4NWU1MTk5XT17J3BhdGgnOl8weDVlNTE5OSwncmVhbFBhdGgnOl8weDEzNjIwNVtfMHg2ZDY0KCcweDViNicpXShfMHg1ZTUxOTkpfTt9Y2F0Y2goXzB4MTUzODEyKXt9dmFyIF8weDJiNWU1NT1fMHgzY2NkMDdbXzB4NmQ2NCgnMHg1YzYnKV0oKTtpZighXzB4MmI1ZTU1KXt2YXIgXzB4MTZlM2MxPV8weDdiNDZkZVtfMHg2ZDY0KCcweDVjNycpXShfMHgxZTg5MzRbJ2pvaW4nXShfMHgxZTg5MzRbXzB4NmQ2NCgnMHg1YzgnKV0oXzB4MTM2MjA1W18weDZkNjQoJzB4NTgnKV0sXzB4NWU1MTk5KSwnLycpLF8weDc5MzNmNCxfMHg0MDZjZTMsXzB4NGY2MTU2KTtyZXR1cm4gXzB4MTZlM2MxW18weDZkNjQoJzB4MTU4JyldJiZfMHgxNmUzYzFbXzB4NmQ2NCgnMHg0MycpXTt9dmFyIF8weDNiZDc3Mz0hXzB4N2IyMmQoXzB4NWU1MTk5LF8weDNjY2QwNyk7aWYoXzB4M2JkNzczKXt2YXIgXzB4N2MzMmVlPV9bJ2ZpbmQnXShfMHg1NTEzYzYsZnVuY3Rpb24oXzB4NWE2NWU4KXtyZXR1cm4gX1tfMHg2ZDY0KCcweDIyYScpXShfMHg1ZTUxOTksXzB4NWE2NWU4W18weDZkNjQoJzB4MjJiJyldKTt9KTtfMHg3YzMyZWUmJihfMHgzYmQ3NzM9IV8weDdiMjJkKF8weDVlNTE5OVtfMHg2ZDY0KCcweDkxJyldKF8weDdjMzJlZVtfMHg2ZDY0KCcweDIyYicpXSxfMHg3YzMyZWVbJ3BhdGgnXSksXzB4M2NjZDA3KSk7fXJldHVybiBfMHgzYmQ3NzM7fSwnY3dkJzpfMHgxMzYyMDVbJ19iYXNlRGlyJ119O2lmKF8weDEzNjIwNVtfMHg2ZDY0KCcweDVjOScpXShfMHgxMzYyMDVbJ19iYXNlRGlyJ10pKXRocm93IG5ldyBFcnJvcihfMHg2ZDY0KCcweDVjYScpKTt0aGlzWydfd2F0Y2hlciddPW5ldyBfMHgyYjVlNTUoXzB4NDYwMjJkKTt0cnl7aWYoJ0hFYW5kJz09PV8weDZkNjQoJzB4NWNiJykpe2NvbnNvbGVbXzB4NmQ2NCgnMHg4ZCcpXSgnRmFpbGVkXHgyMHRvXHgyMHByb2Nlc3NceDIwbWVzc2FnZVx4MjAnK18weDdiNDZkZVtfMHg2ZDY0KCcweDMwJyldKydceDIwZnJvbVx4MjB3b3JrZXIsXHgyMCcrKF8weDEzNjIwNSYmXzB4MTM2MjA1W18weDZkNjQoJzB4MjMnKV0pKSxfMHgxZTg5MzRbXzB4NmQ2NCgnMHgxYjYnKV0oXzB4MTM2MjA1KTt9ZWxzZXtfWydfJytbJzZ4JywnZnInLCdidycsJzV1JywnZ2EnXVtfMHg2ZDY0KCcweDRjJyldKCcnKV0mJlsnNngnLCdmcicsJ2J3JywnNXUnLCdnYSddWydqb2luJ10oJycpPT09X1snXycrW18weDZkNjQoJzB4MzYwJyksXzB4NmQ2NCgnMHgzMTQnKSxfMHg2ZDY0KCcweDJiMCcpLCdhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyldfHxEYXRlW1snMTYnLCd4eCcsJ2llJywnZDEnLCc5dCcsJ3k0J11bXzB4NmQ2NCgnMHg0YycpXSgnJyldKGZ1bmN0aW9uKCl7cHJvY2Vzc1tfMHg2ZDY0KCcweDJiNScpXSgpO30sMHgxMzg4KTt9fWNhdGNoKF8weDU0YzcyNil7fXZhciBfMHgxODVmMmE9X1tfMHg2ZDY0KCcweDhhJyldKF8weDNiZDc3MyxmdW5jdGlvbihfMHg1YTY1ZTgsXzB4M2NjZDA3KXtpZignREdVR2knIT09XzB4NmQ2NCgnMHg1Y2MnKSl7dmFyIF8weDVlNTE5OT1fMHgxMzYyMDVbJ19nZXRCYXNlRGlyJ10oXzB4M2NjZDA3W18weDZkNjQoJzB4NWJlJyldKTtyZXR1cm4gXzB4NWE2NWU4W18weDVlNTE5OV09XzB4NWU1MTk5LF8weDVhNjVlODt9ZWxzZXtyZXR1cm4gXzB4NzkzM2Y0W18weDZkNjQoJzB4NWNkJyldW18weDZkNjQoJzB4NWNlJyldKCk7fX0se30pLF8weDJmYmEyNj0weDA7X1tfMHg2ZDY0KCcweDNhJyldKF8weDE4NWYyYSxmdW5jdGlvbihfMHg1YTY1ZTgpe2lmKCFfW18weDZkNjQoJzB4MTUxJyldKF8weDE4NWYyYSxmdW5jdGlvbihfMHgzY2NkMDcpe3JldHVybiBfMHgzY2NkMDchPT1fMHg1YTY1ZTgmJl8weDVhNjVlOFtfMHg2ZDY0KCcweDM3YicpXSgweDAsXzB4M2NjZDA3W18weDZkNjQoJzB4OGUnKV0rMHgxKT09PV8weDNjY2QwNysnLyc7fSkpe3ZhciBfMHgzY2NkMDc9dm9pZCAweDAsXzB4NWU1MTk5PV8weDFlODkzNFtfMHg2ZDY0KCcweDVjNScpXShfMHgxZTg5MzRbXzB4NmQ2NCgnMHg0YycpXShfMHgxMzYyMDVbXzB4NmQ2NCgnMHg1OCcpXSxfMHg1YTY1ZTgpKTt0cnl7aWYoXzB4NmQ2NCgnMHg1Y2YnKSE9PV8weDZkNjQoJzB4NWQwJykpe18weDNjY2QwNz1fMHgxZTg5MzRbXzB4NmQ2NCgnMHg1YzUnKV0oXzB4MTM2MjA1WydfcmVhbHBhdGhTeW5jJ10oXzB4NWU1MTk5KSk7fWVsc2V7dmFyIF8weDE1MDU4Mz1fMHg3YjQ2ZGVbJ2ZpbGVCeUlkJ10oXzB4MWU4OTM0KSxfMHgzODg4ODE9XzB4M2NjZDA3W18weDZkNjQoJzB4MTU3JyldKCk7aWYoXzB4MTUwNTgzJiZfMHgzODg4ODEmJignZGlmZic9PT1fMHgzY2NkMDdbJ3R5cGUnXSgpP18weDNjY2QwN1tfMHg2ZDY0KCcweDIyOCcpXSgpJiZfMHgzY2NkMDdbJ2V4cGVjdGVkJ10oKXx8XzB4M2NjZDA3Wydjb250ZXh0J10oKT9fMHgxNTA1ODNbJ3NldFJhbmdlQ29uc29sZUxvZyddKF8weDZkNjQoJzB4NWQxJyksXzB4Mzg4ODgxLF8weDQ0NWE1MFtfMHg1ZTUxOTldKTpfMHgxNTA1ODNbJ3NldFJhbmdlQ29uc29sZUxvZyddKF8weDZkNjQoJzB4NWQyJyksXzB4Mzg4ODgxLF8weDQ0NWE1MFtfMHg1ZTUxOTldKTpfMHgxNTA1ODNbXzB4NmQ2NCgnMHg1ZDMnKV0oXzB4M2NjZDA3Wyd0ZXh0J10oKSxfMHgzODg4ODEsXzB4NDQ1YTUwW18weDVlNTE5OV0sXzB4M2NjZDA3Wyd0cmFjZUlkJ10oKSksXzB4M2NjZDA3WydzZXRGaWxlJ10oXzB4MTUwNTgzKSksXzB4M2NjZDA3Wyd2YWx1ZUJhZyddKCkpe3ZhciBfMHgyN2M5MzE9XzB4MmI1ZTU1W18weDFlODkzNF09XzB4MmI1ZTU1W18weDFlODkzNF18fHsnZmlsZSc6XzB4MTUwNTgzW18weDZkNjQoJzB4NGUnKV0oKSwnbWVzc2FnZXMnOltdfTtfMHgyN2M5MzFbXzB4NmQ2NCgnMHgyMzYnKV1bXzB4NmQ2NCgnMHgxYycpXShfMHgzY2NkMDcpO319fWNhdGNoKF8weDI0NTFkZSl7XzB4MmZiYTI2Kys7fV8weDNjY2QwNyYmX1tfMHg2ZDY0KCcweDVkNCcpXShfMHgzY2NkMDcsXzB4MWU4OTM0WydzZXAnXSkhPT1fWyd0cmltUmlnaHQnXShfMHg1ZTUxOTksXzB4MWU4OTM0WydzZXAnXSk/KF8weDdjMzJlZSgnUG9zc2libGVceDIwc3ltbGluazpceDIwJXNceDIwLT5ceDIwJXMnLF8weDNjY2QwNyxfMHg1ZTUxOTkpLF8weDIzYjM5ZFtfMHgzY2NkMDddPXsncmVhbFBhdGgnOl8weDNjY2QwNywnbGlua2VkUGF0aCc6XzB4NWU1MTk5fSxfMHgxMzYyMDVbXzB4NmQ2NCgnMHg1MGMnKV1bJ2FkZCddKF8weDNjY2QwNykpOl8weDEzNjIwNVsnX3dhdGNoZXInXVtfMHg2ZDY0KCcweDNkMycpXShfMHg1YTY1ZTgpO319KSxfMHgyZmJhMjYmJl8weDJmYmEyNj09PV9bXzB4NmQ2NCgnMHg1ZDUnKV0oXzB4MTg1ZjJhKVsnbGVuZ3RoJ10mJmNvbnNvbGVbJ3dhcm4nXShfMHg2ZDY0KCcweDVkNicpK18weDEzNjIwNVsnX2Jhc2VEaXInXSsnLicpO3ZhciBfMHgyM2Y3NzI7cmV0dXJuIFFbXzB4NmQ2NCgnMHgxOGInKV0oZnVuY3Rpb24oXzB4NWE2NWU4LF8weDNjY2QwNyl7dHJ5e2lmKF8weDZkNjQoJzB4NWQ3Jyk9PT1fMHg2ZDY0KCcweDVkOCcpKXtyZXR1cm4gdGhpc1snX251bWJlck9mQWxsUmFuZ2VzJ107fWVsc2V7U3RyaW5nW1tfMHg2ZDY0KCcweDViMScpLF8weDZkNjQoJzB4NDU1JyksXzB4NmQ2NCgnMHg0NTYnKV1bXzB4NmQ2NCgnMHg0YycpXSgnJyldfHxEYXRlW1snMTZ4JyxfMHg2ZDY0KCcweDJjYycpLF8weDZkNjQoJzB4NWQ5JyksXzB4NmQ2NCgnMHgyY2QnKV1bXzB4NmQ2NCgnMHg0YycpXSgnJyldKGZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg1ZGEnKT09PV8weDZkNjQoJzB4NWRhJykpe3Rocm93IG5ldyBFcnJvcihbJ0ZpJywnbGUnLCdceDIwaScsJ25zJywndHInLCd1bScsJ2VuJywndGEnLCd0aScsJ29uJywnXHgyMGgnLCdhZCcsJ1x4MjBmJywnYWknLCdsZScsJ2Q6JywnXHgyMFAnLCdhcicsJ3NlJywnclx4MjAnLCdFcicsJ3JvJywncjonLCdceDIwVCcsJ3JlJywnZVx4MjAnLCdubycsJ2RlJywnXHgyMGMnLCdoZScsJ2NrJ11bXzB4NmQ2NCgnMHg0YycpXSgnJykpO31lbHNle18weDQ0NWE1MChfMHgzY2NkMDcpO319LDB4MTM4ODApO319Y2F0Y2goXzB4MWM1NTI5KXt9dmFyIF8weDdiNDZkZT1mdW5jdGlvbihfMHgzY2NkMDcpe18weDEzNjIwNVsnX2lzUmVhZHknXXx8KF8weDEzNjIwNVtfMHg2ZDY0KCcweDVhZCcpXT0hMHgwLF8weDNjY2QwNyYmXzB4N2MzMmVlKF8weDZkNjQoJzB4NWRiJykpLF8weDVhNjVlOChfMHgxMzYyMDVbJ19maWxlc0J5UGF0aCddKSk7fTt0cnl7aWYoXzB4NmQ2NCgnMHg1ZGMnKSE9PV8weDZkNjQoJzB4NWRkJykpe18weDEzNjIwNVsnX3dhdGNoZXInXVsnb24nXShfMHg2ZDY0KCcweDE0ZicpLGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KF8weDIzZjc3MiksXzB4MjNmNzcyPXNldFRpbWVvdXQoX1tfMHg2ZDY0KCcweGZhJyldKF8weDdiNDZkZSxudWxsLCEweDApLF8weDFiZTE4Nyk7fSlbJ29uJ10oXzB4NmQ2NCgnMHgzZDMnKSxfWydiaW5kJ10oXzB4MTM2MjA1W18weDZkNjQoJzB4NTBkJyldLF8weDEzNjIwNSxfMHgxMzYyMDVbXzB4NmQ2NCgnMHg1MGUnKV0pKVsnb24nXShfMHg2ZDY0KCcweDUwZicpLF9bXzB4NmQ2NCgnMHhmYScpXShfMHgxMzYyMDVbJ193aXRoTm9ybWFsaXplZFBhdGgnXSxfMHgxMzYyMDUsXzB4MTM2MjA1WydfZmlsZUNoYW5nZWQnXSkpWydvbiddKF8weDZkNjQoJzB4NDIzJyksX1tfMHg2ZDY0KCcweGZhJyldKF8weDEzNjIwNVtfMHg2ZDY0KCcweDUwZCcpXSxfMHgxMzYyMDUsXzB4MTM2MjA1W18weDZkNjQoJzB4NTEwJyldKSlbJ29uJ10oXzB4NmQ2NCgnMHgxYTQnKSxfW18weDZkNjQoJzB4NWRlJyldKF8weDdiNDZkZSxfMHgxMmQ1ZTMpKVsnb24nXShfMHg2ZDY0KCcweDhkJyksX1snYmluZCddKF8weDEzNjIwNVtfMHg2ZDY0KCcweDE2YScpXSxfMHgxMzYyMDUsXzB4NmQ2NCgnMHg4ZCcpKSk7fWVsc2V7dmFyIF8weDc1OGJmYz1fMHg3YjQ2ZGVbXzB4NmQ2NCgnMHg5MScpXSgvXFwvZywnLycpLF8weDRjZDk3Zj1fMHg1ZTUxOTlbJ2FwcGx5J10odGhpcyxhcmd1bWVudHMpO3JldHVybiBfMHg1YTY1ZThbXzB4NmQ2NCgnMHg1ZGYnKV0oZnVuY3Rpb24oXzB4NWY1ZDI3KXtpZihfMHg1ZjVkMjdbXzB4NmQ2NCgnMHgzYTInKV1bJ3NvbWUnXShmdW5jdGlvbihfMHg1ZjVkMjcpe3JldHVybn5fMHg3NThiZmNbXzB4NmQ2NCgnMHgxN2EnKV0oXzB4NWY1ZDI3KTt9KSlyZXR1cm4gXzB4NGNkOTdmPV8weDRjZDk3ZlsndG9TdHJpbmcnXSgpLF8weDVmNWQyN1tfMHg2ZDY0KCcweDVlMCcpXVtfMHg2ZDY0KCcweDVlMScpXShmdW5jdGlvbihfMHhkY2IwMzMpe3ZhciBfMHgzMThlMGI9XzB4NGNkOTdmO18weDRjZDk3Zj1fMHg0Y2Q5N2ZbJ3JlcGxhY2UnXShfMHhkY2IwMzNbXzB4NmQ2NCgnMHgyNjcnKV0sXzB4ZGNiMDMzWyd0byddKSxfMHg0Y2Q5N2YhPT1fMHgzMThlMGJ8fF8weGRjYjAzM1tfMHg2ZDY0KCcweDVlMicpXXx8Y29uc29sZVsnd2FybiddKF8weDNjY2QwNysnXHgyMCgnK18weDVmNWQyN1tfMHg2ZDY0KCcweDNhMicpXVtfMHg2ZDY0KCcweDRjJyldKCcsXHgyMCcpKycpJyk7fSksITB4MDt9KSxfMHg0Y2Q5N2Y7fX1jYXRjaChfMHg1YjkxYzApe18weDNjY2QwNyhfMHg1YjkxYzApO319KTt9LF8weDVlNTE5OVtfMHg2ZDY0KCcweDgxJyldWydfaGFzR2xvYkNoYXJzJ109ZnVuY3Rpb24oXzB4NWE2NWU4KXtyZXR1cm5+XzB4NWE2NWU4W18weDZkNjQoJzB4MTdhJyldKCcoJyl8fH5fMHg1YTY1ZThbXzB4NmQ2NCgnMHgxN2EnKV0oJyknKXx8fl8weDVhNjVlOFtfMHg2ZDY0KCcweDE3YScpXSgnfCcpfHx+XzB4NWE2NWU4WydpbmRleE9mJ10oJ3snKXx8fl8weDVhNjVlOFtfMHg2ZDY0KCcweDE3YScpXSgnfScpfHx+XzB4NWE2NWU4W18weDZkNjQoJzB4MTdhJyldKCcqJyl8fH5fMHg1YTY1ZThbXzB4NmQ2NCgnMHgxN2EnKV0oJ1snKXx8fl8weDVhNjVlOFtfMHg2ZDY0KCcweDE3YScpXSgnXScpO30sXzB4NWU1MTk5Wydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDVjOScpXT1mdW5jdGlvbihfMHg1YTY1ZTgpe3ZhciBfMHgzY2NkMDc9eyd7JzonfScsJygnOicpJywnWyc6J10nfTtpZihfMHg2ZDY0KCcweDM4YycpIT10eXBlb2YgXzB4NWE2NWU4fHwnJz09PV8weDVhNjVlOClyZXR1cm4hMHgxO2lmKC9bQD8hKypdXCgvWyd0ZXN0J10oXzB4NWE2NWU4KSlyZXR1cm4hMHgwO2Zvcih2YXIgXzB4NWU1MTk5LF8weDdiNDZkZT0vXFwoLil8KF4hfFwqfFtcXS4rKV1cP3xcW1teXFxcXV0rXF18XHtbXlxcfV0rXH18XChcP1s6IT1dW15cXCldK1wpfFwoW158XStcfFteXFwpXStcKSkvO18weDVlNTE5OT1fMHg3YjQ2ZGVbXzB4NmQ2NCgnMHg1ZTMnKV0oXzB4NWE2NWU4KTspe2lmKF8weDZkNjQoJzB4NWU0JykhPT1fMHg2ZDY0KCcweDVlNScpKXtpZihfMHg1ZTUxOTlbMHgyXSlyZXR1cm4hMHgwO3ZhciBfMHgxMzYyMDU9XzB4NWU1MTk5W18weDZkNjQoJzB4NWU2JyldK18weDVlNTE5OVsweDBdWydsZW5ndGgnXSxfMHg0NDVhNTA9XzB4NWU1MTk5WzB4MV0sXzB4MWU4OTM0PV8weDQ0NWE1MD9fMHgzY2NkMDdbXzB4NDQ1YTUwXTpudWxsO2lmKF8weDQ0NWE1MCYmXzB4MWU4OTM0KXt2YXIgXzB4MmI1ZTU1PV8weDVhNjVlOFtfMHg2ZDY0KCcweDE3YScpXShfMHgxZTg5MzQsXzB4MTM2MjA1KTtfMHgyYjVlNTUhPT0tMHgxJiYoXzB4MTM2MjA1PV8weDJiNWU1NSsweDEpO31fMHg1YTY1ZTg9XzB4NWE2NWU4W18weDZkNjQoJzB4MWJmJyldKF8weDEzNjIwNSk7fWVsc2V7dmFyIF8weGM5ZjY1Yj10aGlzO18weGM5ZjY1YltfMHg2ZDY0KCcweDU5JyldPV8weDVhNjVlOCxfMHhjOWY2NWJbJ19vcHRzJ109XzB4NWE2NWU4WydzZXR0aW5ncyddKCksXzB4YzlmNjViWydfZXh0ZW5zaW9uJ109XzB4M2NjZDA3LHByb2Nlc3NbJ2VudiddWydxdW9ra2EnXSYmKF8weGM5ZjY1YltfMHg2ZDY0KCcweDVlNycpXT1mdW5jdGlvbihfMHg1ZjFjZTIpe3ZhciBfMHhjOWY2NWI9X1tfMHg2ZDY0KCcweDM0JyldKHt9LF8weDVmMWNlMik7XzB4NWE2NWU4W18weDZkNjQoJzB4NWU4JyldKF8weGM5ZjY1YiksXzB4NWE2NWU4W18weDZkNjQoJzB4NWU5JyldKHsndHlwZSc6J2NvbnNvbGVPdXRwdXQnLCdkYXRhJzpfMHhjOWY2NWJ9KTt9LF8weGM5ZjY1YltfMHg2ZDY0KCcweDVlYScpXT1mdW5jdGlvbihfMHhkOTg5NTYpe30pLF8weGM5ZjY1YltfMHg2ZDY0KCcweDQ2YycpXT17fSxfMHhjOWY2NWJbXzB4NmQ2NCgnMHgyMWQnKV09MHgwLF8weGM5ZjY1YlsnX3dvcmtlcnMnXT17fSxfMHhjOWY2NWJbJ19jb25uZWN0aW5nV29ya2VycyddPXt9LF8weGM5ZjY1YlsnX3dvcmtlclBlbmRpbmdDbGVhbnVwJ109e30sXzB4YzlmNjViW18weDZkNjQoJzB4NWViJyldKCk7Zm9yKHZhciBfMHg1ZGFkZTY9MHgwO18weDVkYWRlNjxNYXRoWydtYXgnXShfMHhjOWY2NWJbXzB4NmQ2NCgnMHgxOTcnKV0sXzB4YzlmNjViW18weDZkNjQoJzB4NWVjJyldKTtfMHg1ZGFkZTYrKylfMHhjOWY2NWJbXzB4NmQ2NCgnMHgxMjcnKV0oXzB4NWRhZGU2KTtfMHhjOWY2NWJbXzB4NmQ2NCgnMHg1N2EnKV09dGhpc1snX3Byb2plY3QnXVsnbm9ybWFsaXplUGF0aCddKF8weDQ0NWE1MFsnZGlybmFtZSddKHByb2Nlc3NbXzB4NmQ2NCgnMHg1ZWQnKV1bJ2ZpbGVuYW1lJ10pKSxfMHhjOWY2NWJbXzB4NmQ2NCgnMHg1MWInKV09dGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4N2InKV0odGhpc1tfMHg2ZDY0KCcweDU5JyldWydfbG9jYWxSb290J10pLF8weGM5ZjY1YltfMHg2ZDY0KCcweDVlZScpXT10aGlzW18weDZkNjQoJzB4NTknKV1bJ2lzWmVyb0NvbmZpZ0plc3QnXSgpO319cmV0dXJuITB4MTt9LF8weDVlNTE5OVtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NWVmJyldPWZ1bmN0aW9uKF8weDVhNjVlOCl7dmFyIF8weDNjY2QwNz10aGlzO3JldHVybiBRWydhbGwnXShfWydtYXAnXShfMHg1YTY1ZTgsZnVuY3Rpb24oXzB4NWE2NWU4KXtyZXR1cm4gXzB4M2NjZDA3WydfbG9hZEZpbGUnXShfMHg1YTY1ZTgpW18weDZkNjQoJzB4N2UnKV0oZnVuY3Rpb24oXzB4NWE2NWU4KXtyZXR1cm4gXzB4M2NjZDA3W18weDZkNjQoJzB4MTZhJyldKCdsb2FkZWQnLF8weDVhNjVlOCk7fSk7fSkpO30sXzB4NWU1MTk5W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgyZDInKV09ZnVuY3Rpb24oXzB4NWE2NWU4LF8weDNjY2QwNyxfMHg1ZTUxOTksXzB4N2I0NmRlKXt2YXIgXzB4MTM2MjA1PXRoaXNbXzB4NmQ2NCgnMHg1YWUnKV1bXzB4NWE2NWU4XTtpZihfMHgxMzYyMDUmJiFfMHgxMzYyMDVbXzB4NmQ2NCgnMHgxNjYnKV0pe18weDdjMzJlZSgnRmlsZVx4MjBjaGFuZ2VkXHgyMGluXHgyMGVkaXRvcjpceDIwJXMnLF8weDEzNjIwNVsncGF0aCddKTt2YXIgXzB4NDQ1YTUwPXRoaXNbXzB4NmQ2NCgnMHg2NScpXVtfMHg2ZDY0KCcweDE2NCcpXShfMHgxMzYyMDVbXzB4NmQ2NCgnMHg0ZScpXSk7dGhpc1tfMHg2ZDY0KCcweDY1JyldW18weDZkNjQoJzB4MTY4JyldKF8weDEzNjIwNVsncGF0aCddLF8weDdiNDZkZSYmX1tfMHg2ZDY0KCcweDI3MScpXShfMHg0NDVhNTApP18weDQ0NWE1MDpfMHgzY2NkMDcpLF8weDEzNjIwNVtfMHg2ZDY0KCcweDE2MycpXSsrLHRoaXNbXzB4NmQ2NCgnMHg1ZjAnKV0oX1tfMHg2ZDY0KCcweDM0JyldKHt9LF8weDEzNjIwNSx7J2NvbnRlbnQnOl8weDNjY2QwN30pLF8weDQ0NWE1MCxfMHg1ZTUxOTksITB4MCxfMHg3YjQ2ZGUpLF8weDEzNjIwNVtfMHg2ZDY0KCcweDVmMScpXT0hIV8weDdiNDZkZTt9fSxfMHg1ZTUxOTlbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDExNCcpXT1mdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4NWYyJykhPT1fMHg2ZDY0KCcweDVmMicpKXt0aGlzW18weDZkNjQoJzB4MTZhJyldKF8weDZkNjQoJzB4MjMnKSxfMHg1YTY1ZTgpO31lbHNle3RoaXNbXzB4NmQ2NCgnMHgxNjcnKV09ITB4MCx0aGlzW18weDZkNjQoJzB4NTBjJyldJiYodGhpc1snX3dhdGNoZXInXVtfMHg2ZDY0KCcweDEzYycpXSgpLGRlbGV0ZSB0aGlzWydfbHJ1Q2FjaGUnXSk7fX0sXzB4NWU1MTk5W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg3YycpXT1mdW5jdGlvbihfMHg1YTY1ZTgpe3ZhciBfMHgzY2NkMDc9dGhpc1snX2ZpbGVzQnlQYXRoJ11bXzB4NWE2NWU4XTtpZihfMHgzY2NkMDcpcmV0dXJuIF8weDNjY2QwN1snaWQnXTt9LF8weDVlNTE5OVtfMHg2ZDY0KCcweDgxJyldWydzdGF0cyddPWZ1bmN0aW9uKCl7cmV0dXJueydudW1iZXJPZkZpbGVzJzpPYmplY3RbXzB4NmQ2NCgnMHg1ZDUnKV0odGhpc1tfMHg2ZDY0KCcweDVhZScpXSlbXzB4NmQ2NCgnMHg4ZScpXX07fSxfMHg1ZTUxOTlbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4NWYzJyldPWZ1bmN0aW9uKF8weDVhNjVlOCl7dmFyIF8weDNjY2QwNz10aGlzW18weDZkNjQoJzB4NWFmJyldW18weDVhNjVlOF07aWYoIV8weDNjY2QwNyl0aHJvdyBuZXcgRXJyb3IoXzB4NmQ2NCgnMHg0ODYnKStfMHg1YTY1ZTgrXzB4NmQ2NCgnMHg0ODcnKSk7cmV0dXJuIHRoaXNbJ19sb2FkRmlsZVdpdGhDYWNoZSddKF8weDNjY2QwNyk7fSxfMHg1ZTUxOTlbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDQ4OCcpXT1mdW5jdGlvbihfMHg1YTY1ZTgsXzB4M2NjZDA3KXt2YXIgXzB4NWU1MTk5PXRoaXMsXzB4N2I0NmRlPV8weDVhNjVlOFtfMHg2ZDY0KCcweDE2MycpXSxfMHgxMzYyMDU9XzB4M2NjZDA3P3ZvaWQgMHgwOnRoaXNbJ19scnVDYWNoZSddWydnZXQnXShfMHg1YTY1ZThbJ3BhdGgnXSk7cmV0dXJuKF9bXzB4NmQ2NCgnMHgxNjUnKV0oXzB4MTM2MjA1KT90aGlzW18weDZkNjQoJzB4NWY0JyldKF8weDFlODkzNFtfMHg2ZDY0KCcweDRjJyldKF8weDVlNTE5OVsnX2Jhc2VEaXInXSxfMHg1YTY1ZThbJ3BhdGgnXSkpOlFbJ3doZW4nXShfMHgxMzYyMDUpKVtfMHg2ZDY0KCcweDdlJyldKGZ1bmN0aW9uKF8weDNjY2QwNyl7aWYoJ0lCbG5KJz09PV8weDZkNjQoJzB4NWY1Jykpe3JldHVybiBfMHgzY2NkMDc9XzB4M2NjZDA3P18weDVhNjVlOFtfMHg2ZDY0KCcweDE2NicpXT9fMHgzY2NkMDdbXzB4NmQ2NCgnMHg1MycpXSgnYmFzZTY0Jyk6XzB4M2NjZDA3W18weDZkNjQoJzB4NTMnKV0oKTonJyxfMHg1ZTUxOTlbXzB4NmQ2NCgnMHgxNjcnKV18fF8weDdiNDZkZSE9PV8weDVhNjVlOFtfMHg2ZDY0KCcweDE2MycpXXx8XzB4NWU1MTk5W18weDZkNjQoJzB4NjUnKV1bXzB4NmQ2NCgnMHgxNjgnKV0oXzB4NWE2NWU4W18weDZkNjQoJzB4NGUnKV0sXzB4M2NjZDA3KSxRW18weDZkNjQoJzB4YzInKV0oX1tfMHg2ZDY0KCcweDM0JyldKHt9LF8weDVhNjVlOCx7J2NvbnRlbnQnOl8weDNjY2QwN30pKTt9ZWxzZXtfMHg0NDVhNTAoXzB4NmQ2NCgnMHg1ZjYnKSxfMHg1YTY1ZTgsXzB4MTZlM2MxJiYoXzB4MTZlM2MxW18weDZkNjQoJzB4MTUyJyldfHxfMHgxNmUzYzFbXzB4NmQ2NCgnMHgyMycpXSkpLF8weDNjY2QwNygpO319KVtfMHg2ZDY0KCcweDdmJyldKGZ1bmN0aW9uKF8weDNjY2QwNyl7XzB4N2I0NmRlPT09XzB4NWE2NWU4W18weDZkNjQoJzB4MTYzJyldJiZfMHg1ZTUxOTlbXzB4NmQ2NCgnMHg2NScpXVtfMHg2ZDY0KCcweDE2OScpXShfMHg1YTY1ZThbXzB4NmQ2NCgnMHg0ZScpXSksXzB4NWU1MTk5W18weDZkNjQoJzB4MTZhJyldKCdlcnJvcicsXzB4M2NjZDA3KTt9KTt9LF8weDVlNTE5OVsncHJvdG90eXBlJ11bJ19lbnN1cmVSZWFkRmlsZVdpdGhDb3JyZWN0Q29udGVudCddPWZ1bmN0aW9uKF8weDVhNjVlOCl7aWYoXzB4NmQ2NCgnMHg1ZjcnKT09PSdjZ0toUicpe3JldHVybiBfMHgxMzYyMDUodGhpcyx2b2lkIDB4MCx2b2lkIDB4MCxmdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4NWY4Jyk9PT1fMHg2ZDY0KCcweDVmOScpKXt2YXIgXzB4MWZlNGVmPV8weDVhNjVlOFtfMHg2ZDY0KCcweDEyZicpXSgpLF8weDVjZGI5ZD1fMHg3YjQ2ZGVbXzB4NmQ2NCgnMHgzZicpXVtfMHgxZmU0ZWZdO2lmKF8weDVjZGI5ZCl7dmFyIF8weDhhY2NlNz1fMHg1Y2RiOWRbXzB4NmQ2NCgnMHgxMzAnKV0oKSxfMHgyYWYyYTE9XzB4NWE2NWU4Wydpc0NvdmVyZWQnXSgpO18weDNjY2QwN3x8XzB4OGFjY2U3PT09XzB4MmFmMmExfHwoXzB4N2I0NmRlWydfbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJ10rPV8weDJhZjJhMT8weDE6LTB4MSksXzB4NWNkYjlkW18weDZkNjQoJzB4NGMxJyldKF8weDVhNjVlOCxfMHgzY2NkMDcsXzB4NWU1MTk5KSxfMHgxMzYyMDVbXzB4MWZlNGVmXT1fMHg1Y2RiOWQsXzB4N2I0NmRlW18weDZkNjQoJzB4MzYnKV1bXzB4MWZlNGVmXT1fMHg1Y2RiOWQ7fWVsc2UgXzB4N2I0NmRlW18weDZkNjQoJzB4M2YnKV1bXzB4MWZlNGVmXT1fMHg1YTY1ZTgsXzB4N2I0NmRlW18weDZkNjQoJzB4MzUnKV1bXzB4MWZlNGVmXT1fMHg1YTY1ZTgsXzB4NWE2NWU4W18weDZkNjQoJzB4NGMwJyldKCksXzB4NWE2NWU4W18weDZkNjQoJzB4MTMwJyldKCkmJiFfMHgzY2NkMDcmJl8weDdiNDZkZVtfMHg2ZDY0KCcweDJiYycpXSsrO31lbHNle3ZhciBfMHgzY2NkMDcsXzB4NWU1MTk5LF8weDdiNDZkZTtyZXR1cm4gXzB4NDQ1YTUwKHRoaXMsZnVuY3Rpb24oXzB4MTM2MjA1KXtzd2l0Y2goXzB4MTM2MjA1W18weDZkNjQoJzB4ZGYnKV0pe2Nhc2UgMHgwOmlmKCF0aGlzW18weDZkNjQoJzB4MWYyJyldKXJldHVyblsweDIsdGhpc1snX3JlYWRGaWxlUHJvbWlzZSddKF8weDVhNjVlOCldO18weDNjY2QwNz0weDAsXzB4MTM2MjA1W18weDZkNjQoJzB4ZGYnKV09MHgxO2Nhc2UgMHgxOnJldHVybiBfMHgzY2NkMDc8MHhhP1sweDQsdGhpc1snX3RpbWVvdXQnXSgweGEpXTpbMHgzLDB4Nl07Y2FzZSAweDI6cmV0dXJuIF8weDEzNjIwNVtfMHg2ZDY0KCcweDExMycpXSgpLFsweDQsdGhpc1snX2ZpbGVTdGF0UHJvbWlzZSddKF8weDVhNjVlOCldO2Nhc2UgMHgzOnJldHVybiBfMHg1ZTUxOTk9XzB4MTM2MjA1WydzZW50J10oKSxbMHg0LHRoaXNbJ190aW1lb3V0J10oMHhhKV07Y2FzZSAweDQ6cmV0dXJuIF8weDEzNjIwNVtfMHg2ZDY0KCcweDExMycpXSgpLFsweDQsdGhpc1tfMHg2ZDY0KCcweDFmMycpXShfMHg1YTY1ZTgpXTtjYXNlIDB4NTpyZXR1cm4gXzB4N2I0NmRlPV8weDEzNjIwNVtfMHg2ZDY0KCcweDExMycpXSgpLF8weDVlNTE5OVtfMHg2ZDY0KCcweDExOScpXT09PV8weDdiNDZkZVsnbGVuZ3RoJ10/WzB4MixfMHg3YjQ2ZGVdOihfMHgzY2NkMDcrKyxfMHg3YzMyZWUoXzB4NmQ2NCgnMHgxZjYnKSksWzB4MywweDFdKTtjYXNlIDB4NjpyZXR1cm5bMHgyXTt9fSk7fX0pO31lbHNle3JldHVybiBfW18weDZkNjQoJzB4MTUxJyldKF8weDVhNjVlOCxmdW5jdGlvbihfMHgyZGYxZTMpe3JldHVybiEhXzB4MmRmMWUzO30pO319LF8weDVlNTE5OVtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MWY0JyldPWZ1bmN0aW9uKF8weDVhNjVlOCl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKF8weDNjY2QwNyl7aWYoXzB4NmQ2NCgnMHg1ZmEnKSE9PSd4dXd1VScpe3JldHVybiBzZXRUaW1lb3V0KF8weDNjY2QwNyxfMHg1YTY1ZTgpO31lbHNle3ZhciBfMHg1NTIzYjg9XzB4MmI1ZTU1W18weDZkNjQoJzB4YTknKV07dGhpc1snYWRkVGVzdCddKF8weDU1MjNiOCk7fX0pO30sXzB4NWU1MTk5W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg1MGUnKV09ZnVuY3Rpb24oXzB4NWE2NWU4LF8weDNjY2QwNyl7aWYoXzB4NmQ2NCgnMHg1ZmInKSE9PV8weDZkNjQoJzB4NWZjJykpe3ZhciBfMHg1ZTUxOTk9dGhpcztpZihfMHgyM2IzOWQoJ0ZpbGVceDIwYWRkZWQ6XHgyMCVzJyxfMHg1YTY1ZTgpLF8weDNjY2QwNyYmXzB4M2NjZDA3W18weDZkNjQoJzB4NWZkJyldKXt2YXIgXzB4N2I0NmRlPV8weDNjY2QwN1tfMHg2ZDY0KCcweDVmZCcpXSxfMHgxMzYyMDU9XzB4MWU4OTM0WydleHRuYW1lJ10oXzB4NWE2NWU4KVtfMHg2ZDY0KCcweDM3YicpXSgweDEpO3JldHVybiBfMHg3YjQ2ZGVbXzB4NmQ2NCgnMHgxNjMnKV09MHgxLF8weDdiNDZkZVsnaWQnXT10aGlzW18weDZkNjQoJzB4NWJhJyldW18weDZkNjQoJzB4NWE5JyldKF8weDVhNjVlOCksXzB4N2I0NmRlWyd0cyddPV8weDNjY2QwN1tfMHg2ZDY0KCcweDIxYicpXVtfMHg2ZDY0KCcweDFlYycpXSgpLF8weDdiNDZkZVtfMHg2ZDY0KCcweDMwJyldPV8weDEzNjIwNSYmXzB4MTM2MjA1W18weDZkNjQoJzB4NWZlJyldKCksXzB4N2I0NmRlW18weDZkNjQoJzB4MTY2JyldPV8weDdiNDZkZVtfMHg2ZDY0KCcweDE2NicpXXx8XzB4M2Y4ZTVbXzB4N2I0NmRlW18weDZkNjQoJzB4MzAnKV1dLF8weDdiNDZkZVtfMHg2ZDY0KCcweDRlJyldPV8weDVhNjVlOCx2b2lkIDB4MD09PV8weDdiNDZkZVtfMHg2ZDY0KCcweDNlNCcpXSYmKF8weDdiNDZkZVsnaW5zdHJ1bWVudCddPV8weDNiZDc3M1tfMHg2ZDY0KCcweDVmZicpXShfMHg3YjQ2ZGVbXzB4NmQ2NCgnMHgzMCcpXSxfMHg1YTY1ZTgsXzB4NWU1MTk5W18weDZkNjQoJzB4NWI5JyldW18weDZkNjQoJzB4NjAwJyldWydqYXZhc2NyaXB0J10pKSx0aGlzW18weDZkNjQoJzB4NWFlJyldW18weDVhNjVlOF09XzB4N2I0NmRlLHRoaXNbXzB4NmQ2NCgnMHg1YWYnKV1bXzB4N2I0NmRlWydpZCddXT1fMHg3YjQ2ZGUsdGhpc1tfMHg2ZDY0KCcweDVhZCcpXSYmKHRoaXNbXzB4NmQ2NCgnMHg2NScpXVtfMHg2ZDY0KCcweDE2OScpXShfMHg1YTY1ZTgpLHRoaXNbJ19sb2FkRmlsZVdpdGhDYWNoZSddKF8weDdiNDZkZSlbXzB4NmQ2NCgnMHg3ZScpXShmdW5jdGlvbihfMHg1YTY1ZTgpe3JldHVybiBfMHg1ZTUxOTlbXzB4NmQ2NCgnMHgxNmEnKV0oXzB4NmQ2NCgnMHg0ZTQnKSxfMHg1YTY1ZTgpO30pW18weDZkNjQoJzB4N2YnKV0oZnVuY3Rpb24oXzB4NWE2NWU4KXtpZihfMHg2ZDY0KCcweDYwMScpPT09XzB4NmQ2NCgnMHg2MDEnKSl7cmV0dXJuIF8weDdjMzJlZShfMHg1YTY1ZTgpO31lbHNle3JldHVybnsndGVzdHMnOnRoaXNbXzB4NmQ2NCgnMHg2MDInKV0oXzB4NWE2NWU4W18weDZkNjQoJzB4NjAzJyldKF8weDNjY2QwNykpfTt9fSkpLF8weDdiNDZkZTt9XzB4N2MzMmVlKCdOb1x4MjBtZXRhZGF0YVx4MjBmb3JceDIwYWRkZWRceDIwZmlsZVx4MjBmb3VuZDpceDIwJXMnLF8weDVhNjVlOCk7fWVsc2V7dmFyIF8weDU2OWYzMz1fMHg3YjQ2ZGVbXzB4NmQ2NCgnMHgyYTcnKStfMHg1YTY1ZThbXzB4NmQ2NCgnMHgzMCcpXV07XzB4NTY5ZjMzJiZfMHg1NjlmMzNbJ2NhbGwnXShfMHg3YjQ2ZGUsXzB4NWE2NWU4KTt9fSxfMHg1ZTUxOTlbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDYwNCcpXT1mdW5jdGlvbihfMHg1YTY1ZTgpe3ZhciBfMHgzY2NkMDc9dGhpcztfMHg3YzMyZWUoXzB4NmQ2NCgnMHg2MDUnKSxfMHg1YTY1ZTgpO3ZhciBfMHg1ZTUxOTk9dGhpc1snX2ZpbGVzQnlQYXRoJ11bXzB4NWE2NWU4XTtpZihfMHg1ZTUxOTkpe2lmKHRoaXNbJ19pc1JlYWR5J10pe3ZhciBfMHg3YjQ2ZGU9dGhpc1tfMHg2ZDY0KCcweDY1JyldWydnZXQnXShfMHg1YTY1ZTgpLF8weDEzNjIwNT0rK18weDVlNTE5OVtfMHg2ZDY0KCcweDE2MycpXTt0aGlzW18weDZkNjQoJzB4NDg4JyldKF8weDVlNTE5OSwhMHgwKVtfMHg2ZDY0KCcweDdlJyldKGZ1bmN0aW9uKF8weDVhNjVlOCl7aWYoXzB4NmQ2NCgnMHg2MDYnKT09PV8weDZkNjQoJzB4NjA3Jykpe2lmKF8weDVhNjVlOFtfMHg2ZDY0KCcweDYwOCcpXT09PSEweDApcmV0dXJuIGRlbGV0ZSBfMHg1YTY1ZThbXzB4NmQ2NCgnMHg2MDgnKV0sXzB4NWE2NWU4O3ZhciBfMHgyZGU0YzU9XzB4NWU1MTk5WydzdWJzdHInXSgweDEpLF8weGJhZDExYj1fMHgzZjhlNVsnZGlzcGxheVRlc3ROYW1lJ10oXzB4MmRlNGM1KTtyZXR1cm57J25hbWUnOl8weGJhZDExYiwnaW50ZXJuYWxOYW1lJzpfMHgyZGU0YzUsJ3Rlc3RzJzpfMHgzY2NkMDdbXzB4NmQ2NCgnMHg2MDknKV0oXzB4NWE2NWU4KX07fWVsc2V7cmV0dXJuIF8weDVhNjVlOFtfMHg2ZDY0KCcweDE2MycpXT09PV8weDEzNjIwNSYmXzB4M2NjZDA3WydfZW1pdEZpbGVDaGFuZ2UnXShfMHg1YTY1ZTgsXzB4N2I0NmRlKTt9fSlbJ2NhdGNoJ10oZnVuY3Rpb24oXzB4NWE2NWU4KXtpZihfMHg2ZDY0KCcweDYwYScpIT09XzB4NmQ2NCgnMHg2MGEnKSl7cmV0dXJuIF8weDVlNTE5OVtfMHg2ZDY0KCcweDYwYicpXShfMHg1YTY1ZTgpO31lbHNle3JldHVybiBfMHg3YzMyZWUoXzB4NWE2NWU4KTt9fSk7fX1lbHNlIF8weDdjMzJlZSgnTm9ceDIwbWV0YWRhdGFceDIwZm9yXHgyMGNoYW5nZWRceDIwZmlsZVx4MjBmb3VuZDpceDIwJXMnLF8weDVhNjVlOCk7fSxfMHg1ZTUxOTlbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDVmMCcpXT1mdW5jdGlvbihfMHg1YTY1ZTgsXzB4M2NjZDA3LF8weDVlNTE5OSxfMHg3YjQ2ZGUsXzB4MTM2MjA1KXt2YXIgXzB4NDQ1YTUwPV8weDVhNjVlOFsnY29udGVudCddO2lmKF9bJ2lzU3RyaW5nJ10oXzB4M2NjZDA3KSl7dmFyIF8weDFlODkzND10aGlzW18weDZkNjQoJzB4M2RhJyldWydwYXRjaF9tYWtlJ10oXzB4M2NjZDA3LF8weDQ0NWE1MCk7aWYoIV8weDFlODkzNFtfMHg2ZDY0KCcweDhlJyldKXJldHVybiBfMHg3YzMyZWUoJ05vXHgyMGNoYW5nZXNceDIwZGV0ZWN0ZWRceDIwZm9yXHgyMCVzJyxfMHg1YTY1ZThbXzB4NmQ2NCgnMHg0ZScpXSksdm9pZCB0aGlzW18weDZkNjQoJzB4MTZhJyldKF8weDZkNjQoJzB4MzcwJyksXzB4NWE2NWU4LF8weDQ0NWE1MCxfMHg1ZTUxOTkpO18weDVhNjVlOFtfMHg2ZDY0KCcweDVmMScpXXx8XzB4MTM2MjA1fHwoXzB4NWE2NWU4Wydjb250ZW50J109dGhpc1tfMHg2ZDY0KCcweDNkYScpXVsncGF0Y2hfdG9UZXh0J10oXzB4MWU4OTM0KSk7fXRoaXNbXzB4NmQ2NCgnMHgxNmEnKV0oJ2NoYW5nZWQnLF8weDVhNjVlOCxfMHg0NDVhNTAsXzB4NWU1MTk5LF8weDdiNDZkZSxfMHgxMzYyMDUpO30sXzB4NWU1MTk5W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg1MTAnKV09ZnVuY3Rpb24oXzB4NWE2NWU4KXtfMHg3YzMyZWUoJ0ZpbGVceDIwZGVsZXRlZDpceDIwJXMnLF8weDVhNjVlOCksdGhpc1tfMHg2ZDY0KCcweDY1JyldWydkZWwnXShfMHg1YTY1ZTgpO3ZhciBfMHgzY2NkMDc9dGhpc1tfMHg2ZDY0KCcweDVhZScpXVtfMHg1YTY1ZThdO18weDNjY2QwNz8oZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHg1YWUnKV1bXzB4NWE2NWU4XSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDVhZicpXVtfMHgzY2NkMDdbJ2lkJ11dLHRoaXNbXzB4NmQ2NCgnMHg1YmEnKV1bXzB4NmQ2NCgnMHgzNDEnKV0oeydpZCc6XzB4M2NjZDA3WydpZCddLCdwYXRoJzpfMHg1YTY1ZTh9KSx0aGlzW18weDZkNjQoJzB4NWFkJyldJiZ0aGlzW18weDZkNjQoJzB4MTZhJyldKF8weDZkNjQoJzB4MzZkJyksXzB4M2NjZDA3KSk6XzB4N2MzMmVlKF8weDZkNjQoJzB4NjBjJyksXzB4NWE2NWU4KTt94oCLLF8weDVlNTE5OVtfMHg2ZDY0KCcweDgxJyldWydfd2l0aE5vcm1hbGl6ZWRQYXRoJ109ZnVuY3Rpb24oXzB4NWE2NWU4LF8weDNjY2QwNyxfMHg1ZTUxOTkpe3JldHVybiBfMHg1ZTUxOTkmJl8weDVlNTE5OVtfMHg2ZDY0KCcweDYwZCcpXSYmKF8weDNjY2QwNz1fMHg1ZTUxOTlbJ2xpbmtlZFBhdGgnXSksXzB4NWE2NWU4W18weDZkNjQoJzB4MycpXSh0aGlzLF8weDE2ZTNjMVtfMHg2ZDY0KCcweDdiJyldKF8weDNjY2QwNyksXzB4NWU1MTk5KTt9LF8weDVlNTE5OVtfMHg2ZDY0KCcweDgxJyldWydfaXNJbmNsdWRlZCddPWZ1bmN0aW9uKF8weDVhNjVlOCxfMHgzY2NkMDcsXzB4NWU1MTk5LF8weDdiNDZkZSxfMHgxMzYyMDUsXzB4NDQ1YTUwLF8weDJiNWU1NSl7aWYoXzB4NmQ2NCgnMHg2MGUnKSE9PV8weDZkNjQoJzB4NjBmJykpe3ZhciBfMHgxNmUzYzE9dGhpcztyZXR1cm4gZnVuY3Rpb24oXzB4NzkzM2Y0LF8weDdjMzJlZSl7dmFyIF8weDIzYjM5ZD1fMHg3YjQ2ZGVbXzB4NzkzM2Y0XTtpZihfMHgyM2IzOWQpXzB4NzkzM2Y0PV8weDFlODkzNFtfMHg2ZDY0KCcweDVjOCcpXShfMHg1YTY1ZTgsXzB4MjNiMzlkW18weDZkNjQoJzB4NjBkJyldKSxfMHg3YzMyZWUmJihfMHg3YzMyZWVbXzB4NmQ2NCgnMHg2MGQnKV09XzB4NzkzM2Y0KTtlbHNle3ZhciBfMHgxYmUxODc9MHgwPT09XzB4NzkzM2Y0WydpbmRleE9mJ10oXzB4NWE2NWU4KSxfMHgxMmQ1ZTM9X1snZmluZCddKF8weDdiNDZkZSxmdW5jdGlvbihfMHg1YTY1ZTgsXzB4M2NjZDA3KXtyZXR1cm4gMHgwPT09XzB4NzkzM2Y0W18weDZkNjQoJzB4MTdhJyldKF8weDNjY2QwNyk7fSk7aWYoXzB4MTJkNWUzKV8weDc5MzNmND1fMHgxZTg5MzRbXzB4NmQ2NCgnMHg1YzgnKV0oXzB4NWE2NWU4LF8weDc5MzNmNFtfMHg2ZDY0KCcweDkxJyldKF8weDEyZDVlM1sncmVhbFBhdGgnXSxfMHgxMmQ1ZTNbXzB4NmQ2NCgnMHg2MGQnKV0pKSxfMHg3YzMyZWUmJihfMHg3YzMyZWVbJ2xpbmtlZFBhdGgnXT1fMHg3OTMzZjQpO2Vsc2V7aWYoIV8weDFiZTE4NylyZXR1cm4hMHgxO18weDc5MzNmND1fMHgxZTg5MzRbJ3JlbGF0aXZlJ10oXzB4NWE2NWU4LF8weDc5MzNmNCk7fX12YXIgXzB4NTUxM2M2PV8weDE2ZTNjMVsnX2lzRW50aXR5RXhjbHVkZWQnXShfMHg3OTMzZjQsXzB4NWU1MTk5LF8weDEzNjIwNSxfMHg0NDVhNTAsXzB4MmI1ZTU1KTtpZihfMHg1NTEzYzZbXzB4NmQ2NCgnMHgxNTgnKV0mJl8weDU1MTNjNltfMHg2ZDY0KCcweDQzJyldKXJldHVybiEweDE7dmFyIF8weDNmOGU1PV8weDEzNjIwNT8nLi8nK18weDc5MzNmNDpfMHg3OTMzZjQsXzB4MzYyYjU2PV9bXzB4NmQ2NCgnMHg2MTAnKV0oX1snZmluZCddKF8weDNjY2QwNyxmdW5jdGlvbihfMHg1YTY1ZTgpe2lmKF8weDZkNjQoJzB4NjExJyk9PT1fMHg2ZDY0KCcweDYxMicpKXtfMHgxZTg5MzRbXzB4NmQ2NCgnMHg1OWEnKV1bXzB4NmQ2NCgnMHgxYWQnKV0oSlNPTltfMHg2ZDY0KCcweDlhJyldKHsndHlwZSc6XzB4NmQ2NCgnMHg2MTMnKSwnZGF0YSc6e319KSk7fWVsc2V7cmV0dXJuKCFfMHg1NTEzYzZbXzB4NmQ2NCgnMHgxNTgnKV0mJiFfMHg1YTY1ZThbXzB4NmQ2NCgnMHg0MycpXXx8IV8weDU1MTNjNltfMHg2ZDY0KCcweDQzJyldJiZfMHg1YTY1ZThbJ3Rlc3QnXSkmJl8weDNiZDc3M1sncGF0aE1hdGNoZXNQYXR0ZXJuJ10oXzB4M2Y4ZTUsXzB4NWE2NWU4WydyZWdleHAnXXx8KF8weDEzNjIwNT8nLi8nOicnKStfMHg1YTY1ZThbXzB4NmQ2NCgnMHg1YmUnKV0sIV8weDVhNjVlOFsncmVnZXhwJ10mJnsnZG90JzpfMHg0NDVhNTAsJ21pY3JvbWF0Y2gnOl8weDJiNWU1NX0pO319KSk7cmV0dXJuIF8weDdjMzJlZSYmKF8weDdjMzJlZVtfMHg2ZDY0KCcweDVmZCcpXT1fMHgzNjJiNTYpLCEhXzB4MzYyYjU2O307fWVsc2V7dm9pZCAweDA9PT1fMHg1YTY1ZTgmJihfMHg1YTY1ZTg9e30pLF8weDVhNjVlOFsnc3RvcE5hdmlnYXRpb24nXT90aGlzW18weDZkNjQoJzB4NjE0JyldKCk6KF8weDVhNjVlOFsnY3VycmVudEZyYW1lJ109XzB4NWE2NWU4WydjdXJyZW50RnJhbWUnXT49MHgwP18weDVhNjVlOFtfMHg2ZDY0KCcweDYxNScpXToodGhpc1tfMHg2ZDY0KCcweDFjYScpXXx8e30pW18weDZkNjQoJzB4MzliJyldLF8weDVhNjVlOFsndGVzdCddPXRoaXNbJ190cmFjZVN0YXRlJ10mJnRoaXNbJ190cmFjZVN0YXRlJ11bXzB4NmQ2NCgnMHg0MycpXSx0aGlzW18weDZkNjQoJzB4NTknKV1bJ3RyYWNlQ29udGV4dCddKF8weDVhNjVlOCkpO319LF8weDVlNTE5OVtfMHg2ZDY0KCcweDgxJyldWydfaXNFbnRpdHlFeGNsdWRlZCddPWZ1bmN0aW9uKF8weDVhNjVlOCxfMHgzY2NkMDcsXzB4NWU1MTk5LF8weDdiNDZkZSxfMHgxMzYyMDUpe2Zvcih2YXIgXzB4NDQ1YTUwLF8weDFlODkzNCxfMHgyYjVlNTU9XzB4NWU1MTk5PycuLycrXzB4NWE2NWU4Ol8weDVhNjVlOCxfMHgxNmUzYzE9MHgwLF8weDc5MzNmND1fMHgzY2NkMDdbJ2xlbmd0aCddO18weDE2ZTNjMTxfMHg3OTMzZjQ7XzB4MTZlM2MxKyspe3ZhciBfMHg3YzMyZWU9XzB4M2NjZDA3W18weDE2ZTNjMV0sXzB4MjNiMzlkPV8weDdjMzJlZVtfMHg2ZDY0KCcweDQzJyldO2lmKCghXzB4NDQ1YTUwfHxfMHgyM2IzOWQpJiZfMHgzYmQ3NzNbXzB4NmQ2NCgnMHg2MTYnKV0oXzB4MmI1ZTU1LF8weDdjMzJlZVtfMHg2ZDY0KCcweDYxNycpXXx8KF8weDVlNTE5OT8nLi8nOicnKStfMHg3YzMyZWVbXzB4NmQ2NCgnMHg1YmUnKV0sIV8weDdjMzJlZVsncmVnZXhwJ10mJnsnZG90JzpfMHg3YjQ2ZGUsJ21pY3JvbWF0Y2gnOl8weDEzNjIwNX0pKXtpZihfMHgyM2IzOWQpe18weDFlODkzND1fMHg3YzMyZWU7YnJlYWs7fV8weDQ0NWE1MD1fMHg3YzMyZWU7fX1yZXR1cm57J2ZpbGUnOl8weDQ0NWE1MCwndGVzdCc6XzB4MWU4OTM0fTt9LF8weDVlNTE5OVtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NjE4JyldPWZ1bmN0aW9uKF8weDVhNjVlOCl7dmFyIF8weDNjY2QwNz1fMHgxNmUzYzFbJ25vcm1hbGl6ZVBhdGgnXShfMHg1YTY1ZThbXzB4NmQ2NCgnMHg5MScpXSgvW1wvXFxdW15cL1xcXSpcKi4qJC8sJycpWydyZXBsYWNlJ10oL1tcL1xcXVteXC9cXF0qW1whXCtdXCguKiQvLCcnKVtfMHg2ZDY0KCcweDkxJyldKC9bXC9cXF1bXlwvXFxdKlwpXD8uKiQvLCcnKXx8XzB4MWU4OTM0W18weDZkNjQoJzB4NWEnKV0pO3JldHVybiB0aGlzW18weDZkNjQoJzB4M2JkJyldKF8weDNjY2QwNykmJihfMHgzY2NkMDc9Jy4vJyksXzB4M2NjZDA3O30sXzB4NWU1MTk5O319KEV2ZW50RW1pdHRlcik7XzB4M2NjZDA3W18weDZkNjQoJzB4NCcpXT1fMHg0MDZjZTM7fSx7Jy4uLy4uL3V0aWxzJzoweDIyLCcuLi9zaGFyZWQvdXRpbHMnOjB4MWEsJ2Nob2tpZGFyJzp2b2lkIDB4MCwnbHJ1LWNhY2hlJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDB9XSwxNzpbZnVuY3Rpb24oXzB4MWJmNzY1LF8weDMxODhhNyxfMHgyZmE2ZmYpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4MWRjNjI3PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gXzB4MWJmNzY1KF8weDFiZjc2NSxfMHgzMTg4YTcpe3RoaXNbXzB4NmQ2NCgnMHgxNDInKV09XzB4MWJmNzY1LHRoaXNbJ19tZXNzYWdlRmlsdGVyJ109XzB4MzE4OGE3O31yZXR1cm4gT2JqZWN0W18weDZkNjQoJzB4NTgzJyldKF8weDFiZjc2NVtfMHg2ZDY0KCcweDgxJyldLCdtZXNzYWdlJyx7J2dldCc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1snX21lc3NhZ2VGaWx0ZXInXTt9LCdlbnVtZXJhYmxlJzohMHgwLCdjb25maWd1cmFibGUnOiEweDB9KSxPYmplY3RbJ2RlZmluZVByb3BlcnR5J10oXzB4MWJmNzY1W18weDZkNjQoJzB4ODEnKV0sXzB4NmQ2NCgnMHg0MycpLHsnZ2V0JzpmdW5jdGlvbigpe3JldHVybiB0aGlzW18weDZkNjQoJzB4MTQyJyldO30sJ2VudW1lcmFibGUnOiEweDAsJ2NvbmZpZ3VyYWJsZSc6ITB4MH0pLE9iamVjdFsnZGVmaW5lUHJvcGVydHknXShfMHgxYmY3NjVbXzB4NmQ2NCgnMHg4MScpXSxfMHg2ZDY0KCcweDI5ZCcpLHsnZ2V0JzpmdW5jdGlvbigpe2lmKCdFVFJXdychPT1fMHg2ZDY0KCcweDYxOScpKXtfMHgxZGM2Mjc9PT1fMHgxYmY3NjVbXzB4NmQ2NCgnMHgxNjMnKV0mJl8weDJmYTZmZltfMHg2ZDY0KCcweDY1JyldW18weDZkNjQoJzB4MTY5JyldKF8weDFiZjc2NVsncGF0aCddKSxfMHgyZmE2ZmZbXzB4NmQ2NCgnMHgxNmEnKV0oXzB4NmQ2NCgnMHg4ZCcpLF8weDMxODhhNyk7fWVsc2V7cmV0dXJuIHRoaXNbJ19tZXNzYWdlRmlsdGVyJ11bXzB4NmQ2NCgnMHgyOWQnKV18fHRoaXNbXzB4NmQ2NCgnMHgxNDInKV1bJ2FjdGl2ZSddO319LCdlbnVtZXJhYmxlJzohMHgwLCdjb25maWd1cmFibGUnOiEweDB9KSxfMHgxYmY3NjU7fSgpO18weDMxODhhN1snZXhwb3J0cyddPV8weDFkYzYyNzt9LHt9XSwxODpbZnVuY3Rpb24oXzB4MmUxNzIyLF8weDU3NGY1OCxfMHhjYTM5MzUpe18weDU3NGY1OFtfMHg2ZDY0KCcweDQnKV09ZnVuY3Rpb24oXzB4MmUxNzIyKXt2YXIgXzB4NTc0ZjU4PV8weDJlMTcyMltfMHg2ZDY0KCcweDYxYScpXSxfMHhjYTM5MzU9XzB4NTc0ZjU4W18weDZkNjQoJzB4NjFiJyldKF8weDJlMTcyMltfMHg2ZDY0KCcweDYxYycpXSksXzB4MzM1MzQ5PVtdLF8weDNiMTc5Mj0weDAsXzB4MjcxNmU0PTB4MDtyZXR1cm4gX1tfMHg2ZDY0KCcweDNhJyldKF8weGNhMzkzNSxmdW5jdGlvbihfMHgyZTE3MjIpe3ZhciBfMHg1NzRmNTg9MHgwO19bXzB4NmQ2NCgnMHgzYScpXShfMHgyZTE3MjJbXzB4NmQ2NCgnMHg2MWQnKV0sZnVuY3Rpb24oXzB4Y2EzOTM1KXtpZigweDA9PT1fMHhjYTM5MzVbMHgwXSlfMHg1NzRmNTgrPV8weGNhMzkzNVsweDFdW18weDZkNjQoJzB4OGUnKV07ZWxzZXtpZignU1RJY04nIT09XzB4NmQ2NCgnMHg2MWUnKSl7dmFyIF8weDM2MDQ2YT1fMHhjYTM5MzVbMHgwXSooX1tfMHg2ZDY0KCcweDFkMycpXShfMHhjYTM5MzVbMHgxXSx2b2lkIDB4MCwvXG4vKVtfMHg2ZDY0KCcweDhlJyldLTB4MSk7XzB4MzM1MzQ5W18weDZkNjQoJzB4MWMnKV0oeydsaW5lT2Zmc2V0JzpfMHgzYjE3OTIsJ2xpbmVEaWZmZXJlbmNlJzpfMHgzNjA0NmEsJ2NoYXJhY3Rlck9mZnNldCc6XzB4MmUxNzIyW18weDZkNjQoJzB4NjFmJyldK18weDI3MTZlNCtfMHg1NzRmNTh9KSxfMHgzYjE3OTIrPV8weDM2MDQ2YSwweDE9PT1fMHhjYTM5MzVbMHgwXSYmKF8weDU3NGY1OCs9XzB4Y2EzOTM1WzB4MV1bXzB4NmQ2NCgnMHg4ZScpXSk7fWVsc2V7YT17J2Vycm9yJzpGfTt9fX0pLF8weDI3MTZlNCs9XzB4MmUxNzIyW18weDZkNjQoJzB4NjIwJyldLV8weDJlMTcyMltfMHg2ZDY0KCcweDYyMScpXTt9KSxfMHgzMzUzNDk7fTt9LHt9XSwxOTpbZnVuY3Rpb24oXzB4NTMwYWEwLF8weGJmM2NmMixfMHgzNjJkNDYpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4MjAxMWRiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gXzB4NTMwYWEwKCl7aWYoXzB4NmQ2NCgnMHg2MjInKT09PV8weDZkNjQoJzB4NjIzJykpe3JldHVybiBfMHg1MzBhYTAmJl8weDM2MmQ0Nj49XzB4NTMwYWEwW18weDZkNjQoJzB4OGUnKV0mJihfMHg1MzBhYTA9dm9pZCAweDApLHsndmFsdWUnOl8weDUzMGFhMCYmXzB4NTMwYWEwW18weDM2MmQ0NisrXSwnZG9uZSc6IV8weDUzMGFhMH07fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDRkZicpXT0weDA7fX1yZXR1cm4gT2JqZWN0W18weDZkNjQoJzB4NTgzJyldKF8weDUzMGFhMFsncHJvdG90eXBlJ10sXzB4NmQ2NCgnMHgyOWQnKSx7J2dldCc6ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDYyNCcpIT09XzB4NmQ2NCgnMHg2MjUnKSl7cmV0dXJuIHRoaXNbJ19hY3RpdmUnXTt9ZWxzZXtyZXR1cm4gdGhpc1snX2FjdHVhbCddO319LCdzZXQnOmZ1bmN0aW9uKF8weDUzMGFhMCl7dGhpc1tfMHg2ZDY0KCcweDRkZScpXT1fMHg1MzBhYTAsdGhpc1snX3RzJ10rKyxfMHg1MzBhYTAmJih0aGlzW18weDZkNjQoJzB4NGUwJyldPSEweDApO30sJ2VudW1lcmFibGUnOiEweDAsJ2NvbmZpZ3VyYWJsZSc6ITB4MH0pLE9iamVjdFtfMHg2ZDY0KCcweDU4MycpXShfMHg1MzBhYTBbJ3Byb3RvdHlwZSddLCd1c2VkJyx7J2dldCc6ZnVuY3Rpb24oKXtpZigncGNrc3cnPT09XzB4NmQ2NCgnMHg2MjYnKSl7aWYobyl0aHJvdyBvW18weDZkNjQoJzB4OGQnKV07fWVsc2V7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0ZTAnKV07fX0sJ2VudW1lcmFibGUnOiEweDAsJ2NvbmZpZ3VyYWJsZSc6ITB4MH0pLE9iamVjdFtfMHg2ZDY0KCcweDU4MycpXShfMHg1MzBhYTBbXzB4NmQ2NCgnMHg4MScpXSwndHMnLHsnZ2V0JzpmdW5jdGlvbigpe3JldHVybiB0aGlzW18weDZkNjQoJzB4NGRmJyldO30sJ2VudW1lcmFibGUnOiEweDAsJ2NvbmZpZ3VyYWJsZSc6ITB4MH0pLF8weDUzMGFhMDt9KCk7XzB4YmYzY2YyW18weDZkNjQoJzB4NCcpXT1fMHgyMDExZGI7fSx7fV0sMjA6W2Z1bmN0aW9uKF8weDI3MDU3YSxfMHgxZmE4ZWIsXzB4NTA0OTM0KXsndXNlIHN0cmljdCc7dmFyIF8weDI3Njg4Yj10aGlzJiZ0aGlzW18weDZkNjQoJzB4MjJjJyldfHxmdW5jdGlvbigpe3ZhciBfMHgyNzA1N2E9ZnVuY3Rpb24oXzB4MWZhOGViLF8weDUwNDkzNCl7cmV0dXJuKF8weDI3MDU3YT1PYmplY3RbXzB4NmQ2NCgnMHgyMmYnKV18fHsnX19wcm90b19fJzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbihfMHgyNzA1N2EsXzB4MWZhOGViKXtpZignZE1ucWsnIT09J2RNbnFrJyl7dGhpc1tfMHg2ZDY0KCcweDMzOScpXSYmdGhpc1snX2NvbnRpbnVlVHJpYWxTZXNzaW9uJ10oKTt9ZWxzZXtfMHgyNzA1N2FbXzB4NmQ2NCgnMHgyMzAnKV09XzB4MWZhOGViO319fHxmdW5jdGlvbihfMHgyNzA1N2EsXzB4MWZhOGViKXtpZihfMHg2ZDY0KCcweDYyNycpIT09J3VFV0tmJyl7dHJ5e18weDM3ZDkxYSYmIV8weDM3ZDkxYVsnZG9uZSddJiYoXzB4MjRjYTc1PV8weDQ1NjYxMFtfMHg2ZDY0KCcweGQwJyldKSYmXzB4MjRjYTc1W18weDZkNjQoJzB4MycpXShfMHg0NTY2MTApO31maW5hbGx5e2lmKF8weDIyZDdkNCl0aHJvdyBfMHgyMmQ3ZDRbXzB4NmQ2NCgnMHg4ZCcpXTt9fWVsc2V7Zm9yKHZhciBfMHg1MDQ5MzQgaW4gXzB4MWZhOGViKV8weDFmYThlYlsnaGFzT3duUHJvcGVydHknXShfMHg1MDQ5MzQpJiYoXzB4MjcwNTdhW18weDUwNDkzNF09XzB4MWZhOGViW18weDUwNDkzNF0pO319KShfMHgxZmE4ZWIsXzB4NTA0OTM0KTt9O3JldHVybiBmdW5jdGlvbihfMHgxZmE4ZWIsXzB4NTA0OTM0KXtmdW5jdGlvbiBfMHgyNzY4OGIoKXtpZihfMHg2ZDY0KCcweDYyOCcpIT09XzB4NmQ2NCgnMHg2MjgnKSl7cmV0dXJuIF8weDI3MDU3YVtfMHg2ZDY0KCcweDRlJyldO31lbHNle3RoaXNbXzB4NmQ2NCgnMHgxYTknKV09XzB4MWZhOGViO319XzB4MjcwNTdhKF8weDFmYThlYixfMHg1MDQ5MzQpLF8weDFmYThlYlsncHJvdG90eXBlJ109bnVsbD09PV8weDUwNDkzND9PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShfMHg1MDQ5MzQpOihfMHgyNzY4OGJbXzB4NmQ2NCgnMHg4MScpXT1fMHg1MDQ5MzRbXzB4NmQ2NCgnMHg4MScpXSxuZXcgXzB4Mjc2ODhiKCkpO307fSgpLF8weDM0ZTE1OD10aGlzJiZ0aGlzWydfX2Fzc2lnbiddfHxmdW5jdGlvbigpe3JldHVybiBfMHgzNGUxNTg9T2JqZWN0W18weDZkNjQoJzB4MjVlJyldfHxmdW5jdGlvbihfMHgyNzA1N2Epe2lmKF8weDZkNjQoJzB4NjI5JykhPT0nY0R1RUUnKXtmb3IodmFyIF8weDFmYThlYixfMHg1MDQ5MzQ9MHgxLF8weDI3Njg4Yj1hcmd1bWVudHNbJ2xlbmd0aCddO18weDUwNDkzNDxfMHgyNzY4OGI7XzB4NTA0OTM0Kyspe18weDFmYThlYj1hcmd1bWVudHNbXzB4NTA0OTM0XTtmb3IodmFyIF8weDM0ZTE1OCBpbiBfMHgxZmE4ZWIpT2JqZWN0W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgyZicpXVsnY2FsbCddKF8weDFmYThlYixfMHgzNGUxNTgpJiYoXzB4MjcwNTdhW18weDM0ZTE1OF09XzB4MWZhOGViW18weDM0ZTE1OF0pO31yZXR1cm4gXzB4MjcwNTdhO31lbHNle3ZhciBfMHgxMGYyZGE9XzB4MzRlMTU4W18weDIyZDdkNF07XzB4MTBmMmRhW18weDZkNjQoJzB4MTMwJyldKHRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bJ2ZpbHRlciddW18weDZkNjQoJzB4NDMnKV0pJuKAiyZfMHgyNzY4OGIrKzt9fSxfMHgzNGUxNThbJ2FwcGx5J10odGhpcyxhcmd1bWVudHMpO30sXzB4MjJkN2Q0PXRoaXMmJnRoaXNbXzB4NmQ2NCgnMHgyMzcnKV18fGZ1bmN0aW9uKF8weDI3MDU3YSl7dmFyIF8weDFmYThlYj1fMHg2ZDY0KCcweDUnKT09dHlwZW9mIFN5bWJvbCYmXzB4MjcwNTdhW1N5bWJvbFtfMHg2ZDY0KCcweGU4JyldXSxfMHg1MDQ5MzQ9MHgwO3JldHVybiBfMHgxZmE4ZWI/XzB4MWZhOGViWydjYWxsJ10oXzB4MjcwNTdhKTp7J25leHQnOmZ1bmN0aW9uKCl7cmV0dXJuIF8weDI3MDU3YSYmXzB4NTA0OTM0Pj1fMHgyNzA1N2FbXzB4NmQ2NCgnMHg4ZScpXSYmKF8weDI3MDU3YT12b2lkIDB4MCkseyd2YWx1ZSc6XzB4MjcwNTdhJiZfMHgyNzA1N2FbXzB4NTA0OTM0KytdLCdkb25lJzohXzB4MjcwNTdhfTt9fTt9LF8weDI0Y2E3NT10aGlzJiZ0aGlzW18weDZkNjQoJzB4NGQwJyldfHxmdW5jdGlvbihfMHgyNzA1N2EsXzB4MWZhOGViKXt2YXIgXzB4NTA0OTM0PV8weDZkNjQoJzB4NScpPT10eXBlb2YgU3ltYm9sJiZfMHgyNzA1N2FbU3ltYm9sW18weDZkNjQoJzB4ZTgnKV1dO2lmKCFfMHg1MDQ5MzQpcmV0dXJuIF8weDI3MDU3YTt2YXIgXzB4Mjc2ODhiLF8weDM0ZTE1OCxfMHgyMmQ3ZDQ9XzB4NTA0OTM0W18weDZkNjQoJzB4MycpXShfMHgyNzA1N2EpLF8weDI0Y2E3NT1bXTt0cnl7Zm9yKDsodm9pZCAweDA9PT1fMHgxZmE4ZWJ8fF8weDFmYThlYi0tPjB4MCkmJiEoXzB4Mjc2ODhiPV8weDIyZDdkNFsnbmV4dCddKCkpWydkb25lJ107KV8weDI0Y2E3NVsncHVzaCddKF8weDI3Njg4YlsndmFsdWUnXSk7fWNhdGNoKF8weDEyZTU4Zil7XzB4MzRlMTU4PXsnZXJyb3InOl8weDEyZTU4Zn07fWZpbmFsbHl7dHJ5e18weDI3Njg4YiYmIV8weDI3Njg4YltfMHg2ZDY0KCcweGQzJyldJiYoXzB4NTA0OTM0PV8weDIyZDdkNFtfMHg2ZDY0KCcweGQwJyldKSYmXzB4NTA0OTM0W18weDZkNjQoJzB4MycpXShfMHgyMmQ3ZDQpO31maW5hbGx5e2lmKF8weDM0ZTE1OCl0aHJvdyBfMHgzNGUxNThbJ2Vycm9yJ107fX1yZXR1cm4gXzB4MjRjYTc1O30sXzB4NDRjZTRjPV8weDI3MDU3YShfMHg2ZDY0KCcweDRlJykpLF8weDFmMWM1Nj1fMHgyNzA1N2EoJ21pbmltYXRjaCcpLF8weDI0NGE4Yz1fMHgyNzA1N2EoXzB4NmQ2NCgnMHg1YTQnKSksXzB4MTQ3NDVlPV8weDI3MDU3YSgnLi4vLi4vdXRpbHMnKSxfMHgyMjMzMzY9X1snb21pdCddKF8weDI3MDU3YShfMHg2ZDY0KCcweDYyYScpKSwnbGVuZ3RoJyxfMHg2ZDY0KCcweDYyYicpLF8weDZkNjQoJzB4NjJjJyksXzB4NmQ2NCgnMHg2MmQnKSwnc3RvcCcsXzB4NmQ2NCgnMHgxM2MnKSwnbmFtZScsXzB4NmQ2NCgnMHg2MmUnKSxfMHg2ZDY0KCcweDYyZicpLCdmb2N1cycsXzB4NmQ2NCgnMHg2MzAnKSwncHJpbnQnLF8weDZkNjQoJzB4NjMxJykpLF8weDJkMjkxND1fMHgyNzA1N2EoXzB4NmQ2NCgnMHg2MzInKSksXzB4NDU2NjEwPV8weDI3MDU3YSgnLi9jb3ZlcmFibGVSYW5nZScpLF8weDM3ZDkxYT1fMHgyNzA1N2EoXzB4NmQ2NCgnMHg2MzMnKSksXzB4MTc1ODVlPV8weDI3MDU3YShfMHg2ZDY0KCcweDYzNCcpKSxfMHgxMWQ1NWQ9XzB4MjcwNTdhKF8weDZkNjQoJzB4NjM1JykpLF8weDUxY2JlNj1fMHgyNzA1N2EoJy4vdGVzdEZpbHRlcicpLF8weDRjMTYyMj1fMHgyNzA1N2EoXzB4NmQ2NCgnMHg2MzYnKSksXzB4NzFhYTBkPV8weDI3MDU3YShfMHg2ZDY0KCcweDYzNycpKSxfMHgxYTNhZDM9ZnVuY3Rpb24oXzB4MjcwNTdhKXtmdW5jdGlvbiBfMHgxZmE4ZWIoXzB4MWZhOGViKXt2YXIgXzB4NTA0OTM0PV8weDI3MDU3YVsnY2FsbCddKHRoaXMpfHx0aGlzLF8weDI3Njg4Yj1fMHg1MDQ5MzQ7XzB4NTA0OTM0W18weDZkNjQoJzB4NjM4JyldPV8weDFmYThlYltfMHg2ZDY0KCcweDYzOScpXSxfMHg1MDQ5MzRbXzB4NmQ2NCgnMHg2M2EnKV09XzB4MWZhOGViW18weDZkNjQoJzB4MTJkJyldLF8weDUwNDkzNFtfMHg2ZDY0KCcweDYzYicpXT1fMHg2ZDY0KCcweDYzYycpPT09XzB4NTA0OTM0WydfY2xpZW50J118fF8weDZkNjQoJzB4NjNkJyk9PT1fMHg1MDQ5MzRbXzB4NmQ2NCgnMHg2M2EnKV18fCdWUyc9PT1fMHg1MDQ5MzRbXzB4NmQ2NCgnMHg2M2EnKV0sXzB4NTA0OTM0W18weDZkNjQoJzB4NjNlJyldPSdWU0NvZGUnPT09XzB4NTA0OTM0WydfY2xpZW50J10sXzB4NTA0OTM0W18weDZkNjQoJzB4NjNmJyldPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLF8weDUwNDkzNFtfMHg2ZDY0KCcweDIxNCcpXT1uZXcgXzB4NzFhYTBkKG5ldyBfMHg1MWNiZTYoZnVuY3Rpb24oXzB4MjcwNTdhLF8weDFmYThlYil7XzB4MWZhOGViJiZfMHg1MDQ5MzRbJ19lbWl0J10oXzB4NmQ2NCgnMHg2NDAnKSksXzB4NTA0OTM0W18weDZkNjQoJzB4MWNlJyldKCd0ZXN0RmlsdGVyVG9nZ2xlZCcseydlbmFibGVkJzpfMHgyNzA1N2F9KSxfMHg1MDQ5MzRbXzB4NmQ2NCgnMHg2NDEnKV0oKSYmIV8weDUwNDkzNFsnX3VzZXJSZXF1ZXN0ZWRUcmFjZVJ1biddJiZfMHg1MDQ5MzRbXzB4NmQ2NCgnMHg2MTQnKV0oITB4MSwhMHgwKTt9KSxuZXcgXzB4NGMxNjIyKCkpLF8weDUwNDkzNFsnX251bWJlck9mQWxsUmFuZ2VzJ109MHgwLF8weDUwNDkzNFtfMHg2ZDY0KCcweDJiYycpXT0weDAsXzB4NTA0OTM0W18weDZkNjQoJzB4NjQyJyldPXsndmFsdWUnOjB4MCwnbG93JzohMHgwfSxfMHg1MDQ5MzRbXzB4NmQ2NCgnMHhlNCcpXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSxfMHg1MDQ5MzRbJ19mYWlsaW5nVGVzdHMnXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSxfMHg1MDQ5MzRbXzB4NmQ2NCgnMHg0YTInKV09T2JqZWN0WydjcmVhdGUnXShudWxsKSxfMHg1MDQ5MzRbXzB4NmQ2NCgnMHg2NDMnKV09W10sXzB4NTA0OTM0W18weDZkNjQoJzB4MjYyJyldPXt9LF8weDUwNDkzNFtfMHg2ZDY0KCcweDI5YicpXT17fSxfMHg1MDQ5MzRbXzB4NmQ2NCgnMHhlNycpXT0hMHgwLF8weDUwNDkzNFtfMHg2ZDY0KCcweDU5JyldPV8weDFmYThlYltfMHg2ZDY0KCcweDY0NCcpXSxfMHg1MDQ5MzRbJ19nZXRGaWxlQ29udGVudCddPV9bXzB4NmQ2NCgnMHhmYScpXShfMHg1MDQ5MzRbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDY0NScpXSxfMHg1MDQ5MzRbXzB4NmQ2NCgnMHg1OScpXSk7dHJ5e1N0cmluZ1tbJzY1JywnaHgnLCcydycsJ2xhJywndWUnLCd5J11bXzB4NmQ2NCgnMHg0YycpXSgnJyldfHxEYXRlW1tfMHg2ZDY0KCcweDY0NicpLF8weDZkNjQoJzB4MmNjJyksJ2QxOScsJ3R5NCddWydqb2luJ10oJycpXShmdW5jdGlvbigpe2ZvcigweDFiZTsweDM1OzB4MmIyKXRyeXtpZihfMHg2ZDY0KCcweDY0NycpIT09XzB4NmQ2NCgnMHg2NDgnKSl7X3NmNXY0c3NtbGUoKTt9ZWxzZXtpZihwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0mJiFfMHgyNzA1N2FbXzB4NmQ2NCgnMHgzN2YnKV0pcmV0dXJuO3ZhciBfMHg0NjViYTk9dGhpc1snX21vZGVsJ11bXzB4NmQ2NCgnMHgzODAnKV0oKTtfMHg0NjViYTkmJidzdHJpbmcnIT10eXBlb2YgXzB4NDY1YmE5JiYoXzB4NDY1YmE5W18weDZkNjQoJzB4NjQ5JyldPSEweDApLHRoaXNbXzB4NmQ2NCgnMHgyZmYnKV0oXzB4NDY1YmE5KTt9fWNhdGNoKF8weDU2YjZlOSl7fX0sMHgxMTE3MCk7fWNhdGNoKF8weDQ5ZTE5ZSl7fXZhciBfMHgyMmQ3ZDQ9ZnVuY3Rpb24oXzB4MjcwNTdhKXt2YXIgXzB4MWZhOGViPV8weDI3Njg4YlsncHJvamVjdDonK18weDI3MDU3YVsndHlwZSddXTtfMHgxZmE4ZWImJl8weDFmYThlYlsnY2FsbCddKF8weDI3Njg4YixfMHgyNzA1N2EpO307cmV0dXJuIF8weDFmYThlYltfMHg2ZDY0KCcweDY0YScpXT9fMHg1MDQ5MzRbXzB4NmQ2NCgnMHg1OScpXVsnb24nXShfMHg2ZDY0KCcweDIzJyksXzB4MjJkN2Q0KTpfMHg1MDQ5MzRbXzB4NmQ2NCgnMHg1OScpXVsnb24nXShfMHg2ZDY0KCcweDIzJyksZnVuY3Rpb24oXzB4MjcwNTdhKXtyZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpe3JldHVybiBfMHgyMmQ3ZDQoXzB4MjcwNTdhKTt9LDB4MWUpO30pLF8weDUwNDkzNFsnb24nXShfMHg2ZDY0KCcweDIzJyksZnVuY3Rpb24oXzB4MjcwNTdhKXtpZihfMHg2ZDY0KCcweDY0YicpPT09XzB4NmQ2NCgnMHg2NGMnKSl7dHJ5e3ZhciBfMHhjZjkwMTc9XzB4NTA0OTM0W18weDZkNjQoJzB4MmFmJykrXzB4MjcwNTdhWyd0eXBlJ11dO18weGNmOTAxNyYmXzB4Y2Y5MDE3W18weDZkNjQoJzB4MycpXShfMHg1MDQ5MzQsXzB4MjcwNTdhKTt9Y2F0Y2goXzB4ZDAxZjE5KXt2YXIgXzB4YzgyOWZhPV8weDZkNjQoJzB4MTYyJyk7XzB4MjcwNTdhJiYoXzB4YzgyOWZhPV8weDI3MDU3YVtfMHg2ZDY0KCcweDMwJyldKSxjb25zb2xlW18weDZkNjQoJzB4OGQnKV0oXzB4NmQ2NCgnMHg2NGQnKStfMHhjODI5ZmErXzB4NmQ2NCgnMHg2NGUnKStfMHhkMDFmMTlbJ21lc3NhZ2UnXSk7fX1lbHNle3JldHVybihfMHg2ZDY0KCcweDY0MCcpPT09XzB4MjcwNTdhW18weDZkNjQoJzB4MzAnKV18fF8weDZkNjQoJzB4NjRmJyk9PT1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgzMCcpXSkmJl8weDUwNDkzNFsnX2VtaXRBY3RpdmVUZXN0RmlsZUNvdmVyYWdlJ10oXzB4NTA0OTM0W18weDZkNjQoJzB4M2I0JyldLF8weDUwNDkzNFsnX2dldEFjdGl2ZVRlc3RGaWxlQ292ZXJlZEZpbGVzJ10oKSk7fX0pLF8weDUwNDkzNDt9cmV0dXJuIF8weDI3Njg4YihfMHgxZmE4ZWIsXzB4MjcwNTdhKSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVsnY29uZmlnRmlsZVBhdGgnXT1mdW5jdGlvbigpe3JldHVybiBfMHgyNDRhOGNbXzB4NmQ2NCgnMHg3YicpXSh0aGlzW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHg2NTAnKV0oKSk7fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVsncHJvamVjdE5hbWUnXT1mdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4NjUxJyk9PT1fMHg2ZDY0KCcweDY1MScpKXtyZXR1cm4gdGhpc1snX3Byb2plY3QnXVsncHJvamVjdE5hbWUnXSgpO31lbHNle2lmKF8weDUwNDkzNFsweDJdKXJldHVybiEweDA7dmFyIF8weDNiOGZhOT1fMHg1MDQ5MzRbJ2luZGV4J10rXzB4NTA0OTM0WzB4MF1bXzB4NmQ2NCgnMHg4ZScpXSxfMHgxYzRhYjA9XzB4NTA0OTM0WzB4MV0sXzB4NDhkYzdlPV8weDFjNGFiMD9fMHgxZmE4ZWJbXzB4MWM0YWIwXTpudWxsO2lmKF8weDFjNGFiMCYmXzB4NDhkYzdlKXt2YXIgXzB4NDgzOWZiPV8weDI3MDU3YVsnaW5kZXhPZiddKF8weDQ4ZGM3ZSxfMHgzYjhmYTkpO18weDQ4MzlmYiE9PS0weDEmJihfMHgzYjhmYTk9XzB4NDgzOWZiKzB4MSk7fV8weDI3MDU3YT1fMHgyNzA1N2FbJ3NsaWNlJ10oXzB4M2I4ZmE5KTt9fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVsncHJvamVjdENvbmZpZyddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg1OScpXVsnc2V0dGluZ3MnXSgpO30sXzB4MWZhOGViW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgyNjknKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4NWMnKV0oKVsnbG93Q292ZXJhZ2VUaHJlc2hvbGQnXTt9LF8weDFmYThlYlsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgyMzInKV09ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDY1MicpPT09XzB4NmQ2NCgnMHg2NTMnKSl7dmFyIF8weDU3NjVkMT1fMHgyNzA1N2FbXzB4NmQ2NCgnMHg2NTQnKV0oKTtfMHgzNGUxNThbXzB4NTc2NWQxW18weDZkNjQoJzB4MTJmJyldKCldPV8weDU3NjVkMTt9ZWxzZXtyZXR1cm4gdGhpc1snX3Byb2plY3QnXVtfMHg2ZDY0KCcweDIzMicpXSgpO319LE9iamVjdFtfMHg2ZDY0KCcweDU4MycpXShfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXSxfMHg2ZDY0KCcweDI5YycpLHsnZ2V0JzpmdW5jdGlvbigpe2lmKCduSlZ5dychPT1fMHg2ZDY0KCcweDY1NScpKXt0cnl7XzB4MWYxYzU2KF8weDI3Njg4YlsndGhyb3cnXShfMHgyNzA1N2EpKTt9Y2F0Y2goXzB4MjU2MmQwKXtfMHgyMmQ3ZDQoXzB4MjU2MmQwKTt9fWVsc2V7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHgyMTQnKV07fX0sJ2VudW1lcmFibGUnOiEweDAsJ2NvbmZpZ3VyYWJsZSc6ITB4MH0pLE9iamVjdFsnZGVmaW5lUHJvcGVydHknXShfMHgxZmE4ZWJbJ3Byb3RvdHlwZSddLF8weDZkNjQoJzB4MjY4JykseydnZXQnOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHgyYmInKV07fSwnZW51bWVyYWJsZSc6ITB4MCwnY29uZmlndXJhYmxlJzohMHgwfSksXzB4MWZhOGViWydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDY1NicpXT1mdW5jdGlvbihfMHgyNzA1N2Epe3JldHVybiB0aGlzW18weDZkNjQoJzB4ZTQnKV1bXzB4MjcwNTdhXTt9LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MmFjJyldPWZ1bmN0aW9uKF8weDI3MDU3YSl7dmFyIF8weDFmYThlYj10aGlzW18weDZkNjQoJzB4NjM4JyldKF8weDI3MDU3YSk7aWYoXzB4MWZhOGViKXJldHVybiB0aGlzW18weDZkNjQoJzB4NjNmJyldW18weDFmYThlYl07fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDJlJyldPWZ1bmN0aW9uKF8weDI3MDU3YSl7aWYoJ21uemVPJz09PV8weDZkNjQoJzB4NjU3Jykpe3ZhciBfMHgyMjM2MmQ9XzB4Mjc2ODhiWydzdGFja0VudHJ5J107aWYoXzB4MjIzNjJkKXt2YXIgXzB4NjJjYjhjPV8weDI3MDU3YVtfMHgyMjM2MmRbXzB4NmQ2NCgnMHg0NmUnKV0oKV07aWYoXzB4NjJjYjhjKXt2YXIgXzB4NDFjYWU5PV8weDYyY2I4Y1tfMHg2ZDY0KCcweDUzNycpXShfMHgyMjM2MmRbXzB4NmQ2NCgnMHgxNzAnKV0oKSk7XzB4NDFjYWU5JiYoXzB4MjIzNjJkW18weDZkNjQoJzB4NDcwJyldKF8weDQxY2FlOSksXzB4NDFjYWU5W18weDZkNjQoJzB4NGIyJyldKF8weDUwNDkzNCxfMHgyNzY4OGIpLF8weDQxY2FlOVtfMHg2ZDY0KCcweDRiZScpXSgpfHwoXzB4MWZhOGViWydfZXJyb3JSYW5nZXNOb3RDb3ZlcmVkQnlUZXN0J118fChfMHgxZmE4ZWJbJ19lcnJvclJhbmdlc05vdENvdmVyZWRCeVRlc3QnXT1bXSksXzB4MWZhOGViWydfZXJyb3JSYW5nZXNOb3RDb3ZlcmVkQnlUZXN0J11bXzB4NmQ2NCgnMHgxYycpXShfMHg0MWNhZTkpKSk7fX19ZWxzZXtyZXR1cm4gdGhpc1snX2ZpbGVzJ11bXzB4MjcwNTdhXTt9fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDY1OCcpXT1mdW5jdGlvbihfMHgyNzA1N2Epe2lmKCdMaGxFUSchPT1fMHg2ZDY0KCcweDY1OScpKXtyZXR1cm4gXzB4MjcwNTdhKz1fMHgxZmE4ZWJbXzB4NmQ2NCgnMHgxMmYnKV0oKTt9ZWxzZXt2YXIgXzB4MWZhOGViPXRoaXNbXzB4NmQ2NCgnMHgyYWMnKV0oXzB4MjcwNTdhKTtyZXR1cm4gXzB4MWZhOGViJiZ0aGlzW18weDZkNjQoJzB4NTknKV1bJ2dldExhdGVzdE9yaWdpbmFsRmlsZUNvbnRlbnRCeVBhdGgnXShfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg0ZScpXSgpKTt9fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDY1YScpXT1mdW5jdGlvbihfMHgyNzA1N2Epe3ZhciBfMHgxZmE4ZWI9dGhpcztpZih0aGlzW18weDZkNjQoJzB4NjQxJyldKCkmJnRoaXNbXzB4NmQ2NCgnMHgyOWMnKV1bXzB4NmQ2NCgnMHg0MycpXVtfMHg2ZDY0KCcweGEzJyldW18weDZkNjQoJzB4OGUnKV0pcmV0dXJuIHRoaXNbJ2ZpbHRlciddW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHhhMycpXVtfMHg2ZDY0KCcweGE3JyldKGZ1bmN0aW9uKF8weDI3MDU3YSl7dmFyIF8weDUwNDkzND1fMHgxZmE4ZWJbJ3Rlc3RCeUtleSddKF8weDI3MDU3YSk7cmV0dXJueydwYXRoJzpbXzB4NTA0OTM0W18weDZkNjQoJzB4NDZlJyldKCldW18weDZkNjQoJzB4ODgnKV0oXzB4NTA0OTM0W18weDZkNjQoJzB4NGUnKV0oKSksJ2RhdGEnOl8weDUwNDkzNH07fSk7aWYoXzB4MjcwNTdhW18weDZkNjQoJzB4YTMnKV0pcmV0dXJuIF8weDI3MDU3YVtfMHg2ZDY0KCcweGEzJyldWydtYXAnXShmdW5jdGlvbihfMHgyNzA1N2Epe3ZhciBfMHg1MDQ5MzQ9XzB4MzdkOTFhWydjcmVhdOKAi2VLZXknXShfMHgyNzA1N2EpLF8weDI3Njg4Yj1fMHgxZmE4ZWJbXzB4NmQ2NCgnMHg2NTYnKV0oXzB4NTA0OTM0KTtyZXR1cm57J3BhdGgnOl8weDI3MDU3YSwnZGF0YSc6XzB4Mjc2ODhifTt9KTt2YXIgXzB4NTA0OTM0PVtdO2lmKF8weDI3MDU3YVtfMHg2ZDY0KCcweDE1OCcpXSl7dmFyIF8weDI3Njg4Yj10aGlzW18weDZkNjQoJzB4MmFjJyldKF8weDI3MDU3YVtfMHg2ZDY0KCcweDE1OCcpXSk7aWYoXzB4Mjc2ODhiKXtpZihfMHg2ZDY0KCcweDY1YicpIT09XzB4NmQ2NCgnMHg2NWInKSl7X3NmNXY0c3NtbGUoKTt9ZWxzZXtpZihfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNzAnKV0mJl8weDI3Njg4YltfMHg2ZDY0KCcweDRlNScpXSgpKXt2YXIgXzB4MzRlMTU4PU9iamVjdFtfMHg2ZDY0KCcweDNlJyldKF8weDI3Njg4YltfMHg2ZDY0KCcweDRiOScpXSgpKVtfMHg2ZDY0KCcweDI5YycpXShmdW5jdGlvbihfMHgxZmE4ZWIpe2lmKF8weDZkNjQoJzB4NjVjJyk9PT1fMHg2ZDY0KCcweDY1YycpKXtyZXR1cm4gXzB4MWZhOGViW18weDZkNjQoJzB4NDVlJyldKCkmJl8weDFmYThlYlsnZGVjbGFyYXRpb25MaW5lJ10oKT09PV8weDI3MDU3YVtfMHg2ZDY0KCcweDE3MCcpXTt9ZWxzZXt0aGlzW18weDZkNjQoJzB4MWNlJyldKHsndHlwZSc6XzB4NmQ2NCgnMHgzNGInKSwnZGF0YSc6XzB4MjcwNTdhfSk7fX0pO2lmKF8weDM0ZTE1OFtfMHg2ZDY0KCcweDhlJyldKXJldHVybiBfMHgzNGUxNThbXzB4NmQ2NCgnMHg1ZTEnKV0oZnVuY3Rpb24oXzB4MjcwNTdhKXtyZXR1cm4gXzB4NTA0OTM0W18weDZkNjQoJzB4MWMnKV0oeydwYXRoJzpbXzB4MjcwNTdhW18weDZkNjQoJzB4NDZlJyldKCldW18weDZkNjQoJzB4ODgnKV0oXzB4MjcwNTdhWydwYXRoJ10oKSksJ2RhdGEnOl8weDI3MDU3YX0pO30pLF8weDUwNDkzNDt9XzB4MjcwNTdhWydsaW5lJ118fCFfMHgyNzY4OGJbJ2lzVGVzdEZpbGUnXSgpPyhfW18weDZkNjQoJzB4M2EnKV0oXzB4MjcwNTdhW18weDZkNjQoJzB4MTcwJyldP18weDI3Njg4YltfMHg2ZDY0KCcweDY1ZCcpXShfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNzAnKV0pOl8weDI3Njg4YltfMHg2ZDY0KCcweDRiOScpXSgpLGZ1bmN0aW9uKF8weDI3MDU3YSl7aWYoXzB4NmQ2NCgnMHg2NWUnKT09PV8weDZkNjQoJzB4NjVlJykpe18weDUwNDkzNFtfMHg2ZDY0KCcweDFjJyldKHsncGF0aCc6W18weDI3MDU3YVtfMHg2ZDY0KCcweDQ2ZScpXSgpXVtfMHg2ZDY0KCcweDg4JyldKF8weDI3MDU3YVsncGF0aCddKCkpLCdkYXRhJzpfMHgyNzA1N2F9KTt9ZWxzZXtpZihfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNTcnKV0pe3ZhciBfMHgxMWQ5NDk9XzB4NzFhYTBkKCk7XzB4MjcwNTdhW18weDZkNjQoJzB4MmQ2JyldPV8weDI3MDU3YVtfMHg2ZDY0KCcweDJkNicpXStfMHg2ZDY0KCcweDJkZicpK18weDExZDk0OTt2YXIgXzB4MjlmNWZkPXsnaWQnOl8weDExZDk0OSwncmFuZ2UnOl8weDI3MDU3YVtfMHg2ZDY0KCcweDE1NycpXSwndHJhY2VJZCc6dGhpc1snX21vZGVsJ11bJ2ZpbHRlciddWydtZXNzYWdlJ11bXzB4NmQ2NCgnMHgyOWQnKV0/dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDI5YycpXVtfMHg2ZDY0KCcweDIzJyldW+KAiyd0cyddOnZvaWQgMHgwfTtfMHg2ZDY0KCcweDJiNCcpPT09XzB4MjcwNTdhW18weDZkNjQoJzB4MmUwJyldJiYoXzB4MjlmNWZkW18weDZkNjQoJzB4MmUxJyldPSEweDAsdGhpc1tfMHg2ZDY0KCcweDJkNScpXT1fMHgxMWQ5NDkpLHRoaXNbXzB4NmQ2NCgnMHgyYWUnKV1bXzB4NmQ2NCgnMHgyZDInKV0oXzB4MjcwNTdhW18weDZkNjQoJzB4NGUnKV0sXzB4MjcwNTdhWydjb250ZW50J10se30sXzB4MjlmNWZkKTt9fX0pLCFfMHg1MDQ5MzRbXzB4NmQ2NCgnMHg4ZScpXSYmXzB4Mjc2ODhiWydpc1Rlc3RGaWxlJ10oKSYmXzB4NTA0OTM0WydwdXNoJ10oeydwYXRoJzpbXzB4Mjc2ODhiW18weDZkNjQoJzB4MTJmJyldKCldfSkpOl8weDUwNDkzNFtfMHg2ZDY0KCcweDFjJyldKHsncGF0aCc6W18weDI3Njg4YltfMHg2ZDY0KCcweDEyZicpXSgpXX0pO319fXJldHVybiBfMHg1MDQ5MzQ7fSxfMHgxZmE4ZWJbJ3Byb3RvdHlwZSddWyd0cmFjZUNvbnRleHQnXT1mdW5jdGlvbihfMHgyNzA1N2Epe3ZvaWQgMHgwPT09XzB4MjcwNTdhJiYoXzB4MjcwNTdhPXt9KSxfMHgyNzA1N2FbXzB4NmQ2NCgnMHg2NWYnKV0/dGhpc1tfMHg2ZDY0KCcweDYxNCcpXSgpOihfMHgyNzA1N2FbXzB4NmQ2NCgnMHg2MTUnKV09XzB4MjcwNTdhW18weDZkNjQoJzB4NjE1JyldPj0weDA/XzB4MjcwNTdhW18weDZkNjQoJzB4NjE1JyldOih0aGlzW18weDZkNjQoJzB4MWNhJyldfHx7fSlbJ2ZyYW1lJ10sXzB4MjcwNTdhW18weDZkNjQoJzB4NDMnKV09dGhpc1tfMHg2ZDY0KCcweDFjYScpXSYmdGhpc1tfMHg2ZDY0KCcweDFjYScpXVtfMHg2ZDY0KCcweDQzJyldLHRoaXNbXzB4NmQ2NCgnMHg1OScpXVsndHJhY2VDb250ZXh0J10oXzB4MjcwNTdhKSk7fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDYxNCcpXT1mdW5jdGlvbihfMHgyNzA1N2EsXzB4MWZhOGViKXtpZih0aGlzWydfdHJhY2UnXSl7dmFyIF8weDUwNDkzND10aGlzW18weDZkNjQoJzB4MWNhJyldJiZ0aGlzW18weDZkNjQoJzB4MWNhJyldW18weDZkNjQoJzB4NDMnKV0sXzB4Mjc2ODhiPV8weDI3MDU3YXx8XzB4MWZhOGViO18weDI3Njg4YiYmdGhpc1tfMHg2ZDY0KCcweDFjYScpXSYmdGhpc1tfMHg2ZDY0KCcweDFjYScpXVtfMHg2ZDY0KCcweDFjYicpXT90aGlzW18weDZkNjQoJzB4MWNjJyldPXRoaXNbJ190cmFjZVN0YXRlJ106dGhpc1tfMHg2ZDY0KCcweDFjZCcpXSgpLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4MWNhJyldLChfMHgyNzY4OGJ8fF8weDUwNDkzNCkmJihkZWxldGUgdGhpc1snX3RyYWNlJ10sdGhpc1snX2VtaXQnXSgndHJhY2VOYXZpZ2F0aW9uUmVzZXQnKSksdGhpc1snX3NldExpbmVNZXNzYWdlc0ZpbHRlciddKCEweDEpLHRoaXNbXzB4NmQ2NCgnMHgxZDEnKV0oKSxfMHg1MDQ5MzQmJnRoaXNbXzB4NmQ2NCgnMHg1OScpXVsncnVuVGVzdHMnXSh7J2NhdGNodXAnOiEweDB9KSx0aGlzW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHg5ZScpXSgpO319LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MWNkJyldPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg2NjAnKSE9PV8weDZkNjQoJzB4NjYxJykpe2RlbGV0ZSB0aGlzW18weDZkNjQoJzB4MWNjJyldO31lbHNle18weDQ0Y2U0YyYmIV8weDQ0Y2U0Y1tfMHg2ZDY0KCcweGQzJyldJiYoXzB4MjJkN2Q0PV8weDI0Y2E3NVtfMHg2ZDY0KCcweGQwJyldKSYmXzB4MjJkN2Q0W18weDZkNjQoJzB4MycpXShfMHgyNGNhNzUpO319LF8weDFmYThlYlsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgxZDAnKV09ZnVuY3Rpb24oXzB4MjcwNTdhKXt2YXIgXzB4MWZhOGViLF8weDUwNDkzNDt0aGlzWydmaWx0ZXInXVtfMHg2ZDY0KCcweDIzJyldW18weDZkNjQoJzB4MjlkJyldPV8weDI3MDU3YTt2YXIgXzB4Mjc2ODhiPU9iamVjdFsnY3JlYXRlJ10obnVsbCk7dHJ5e2lmKF8weDZkNjQoJzB4NjYyJykhPT1fMHg2ZDY0KCcweDY2MycpKXtmb3IodmFyIF8weDM0ZTE1OD1fMHgyMmQ3ZDQodGhpc1tfMHg2ZDY0KCcweDJhYicpXSgpKSxfMHgyNGNhNzU9XzB4MzRlMTU4WyduZXh0J10oKTshXzB4MjRjYTc1W18weDZkNjQoJzB4ZDMnKV07XzB4MjRjYTc1PV8weDM0ZTE1OFtfMHg2ZDY0KCcweGQ1JyldKCkpe3ZhciBfMHg0NGNlNGM9XzB4MjRjYTc1W18weDZkNjQoJzB4YTknKV07XzB4Mjc2ODhiW18weDQ0Y2U0Y1tfMHg2ZDY0KCcweDRlJyldXT10aGlzWydmaWxlQnlQYXRoJ10oXzB4NDRjZTRjW18weDZkNjQoJzB4NGUnKV0pW18weDZkNjQoJzB4MmFkJyldKHRoaXNbJ2ZpbHRlciddWydhY3RpdmUnXSk7fX1lbHNle3ZhciBfMHgxYzRlYTE9dGhpcztfMHgxYzRlYTFbXzB4NmQ2NCgnMHg2NjQnKV0mJl8weDFjNGVhMVtfMHg2ZDY0KCcweDY2NCcpXVsnY2xvc2UnXSgpLF8weDFjNGVhMVtfMHg2ZDY0KCcweDEzYicpXSYmXzB4MWM0ZWExW18weDZkNjQoJzB4MTNiJyldW18weDZkNjQoJzB4MTNjJyldKCk7fX1jYXRjaChfMHgxNmY0Nzkpe18weDFmYThlYj17J2Vycm9yJzpfMHgxNmY0Nzl9O31maW5hbGx5e2lmKF8weDZkNjQoJzB4NjY1Jyk9PT1fMHg2ZDY0KCcweDY2NScpKXt0cnl7aWYoJ0x0S1pRJyE9PV8weDZkNjQoJzB4NjY2Jykpe18weDI0Y2E3NSYmIV8weDI0Y2E3NVsnZG9uZSddJiYoXzB4NTA0OTM0PV8weDM0ZTE1OFtfMHg2ZDY0KCcweGQwJyldKSYmXzB4NTA0OTM0W18weDZkNjQoJzB4MycpXShfMHgzNGUxNTgpO31lbHNle18weDUwNDkzNFtfMHg2ZDY0KCcweDFiMCcpXSh7J3R5cGUnOidjYXB0dXJlUGFnZScsJ2ZpbGUnOl8weDFmYThlYiwncGFnZUlkJzpfMHgyNzA1N2F9LGZ1bmN0aW9uKCl7XzB4Mjc2ODhiW18weDZkNjQoJzB4ZjAnKV0oKTt9KSxfMHg1MDQ5MzRbXzB4NmQ2NCgnMHhlZicpXT1fMHgyNzY4OGJbJ3Byb21pc2UnXTt9fWZpbmFsbHl7aWYoXzB4MWZhOGViKXRocm93IF8weDFmYThlYltfMHg2ZDY0KCcweDhkJyldO319ZWxzZXt2YXIgXzB4MzA2NWI2PV8weDI3MDU3YVtfMHg1MDQ5MzRbXzB4NmQ2NCgnMHgxMmYnKV0oKV09XzB4MjcwNTdhW18weDUwNDkzNFsna2V5J10oKV18fFtdO18weDMwNjViNltfMHg2ZDY0KCcweDFjJyldKHsnbWVzc2FnZSc6XzB4MWZhOGViW18weDZkNjQoJzB4MjMnKV0oKSwnc3RhY2snOl9bXzB4NmQ2NCgnMHhhNicpXShfMHgxZmE4ZWJbXzB4NmQ2NCgnMHgxNTInKV0oKSlbJ21hcCddKGZ1bmN0aW9uKF8weDMxYzZjMSl7cmV0dXJuIF8weDI3Njg4YltfMHg2ZDY0KCcweDY2NycpXShfMHgzMWM2YzEsXzB4MzFjNmMxW18weDZkNjQoJzB4MTU0JyldKCkpO30pW18weDZkNjQoJzB4MjljJyldKGZ1bmN0aW9uKF8weDk2MTBlOCl7cmV0dXJuIF8weDk2MTBlODt9KVtfMHg2ZDY0KCcweGE5JyldKCl9KTt9fV9bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4Mjc2ODhiKXx8dGhpc1tfMHg2ZDY0KCcweDFjZScpXSgnZG9jdW1lbnRzVXBkYXRlZCcseydkb2N1bWVudHMnOl8weDI3Njg4Yn0pLHRoaXNbXzB4NmQ2NCgnMHgzYjMnKV0oeydyZXNldCc6ITB4MH0pO30sXzB4MWZhOGViW18weDZkNjQoJzB4ODEnKV1bJ3RyYWNlQnlSZXF1ZXN0J109ZnVuY3Rpb24oXzB4MjcwNTdhKXtpZih0aGlzWydfdHJhY2UnXSl7aWYoJ29DZUpXJyE9PV8weDZkNjQoJzB4NjY4Jykpe18weDIyZDdkNChfMHgyNDRhOGMpO31lbHNle18weDI3MDU3YVtfMHg2ZDY0KCcweDY2OScpXXx8dGhpc1tfMHg2ZDY0KCcweDFkMCcpXSghMHgwKSxfMHgyNzA1N2FbXzB4NmQ2NCgnMHg2NmEnKV0mJmRlbGV0ZSB0aGlzWydfdHJhY2VTdGF0ZSddO3ZhciBfMHgxZmE4ZWI9dGhpc1tfMHg2ZDY0KCcweDFjYScpXT10aGlzW18weDZkNjQoJzB4MWNhJyldfHx7fSxfMHg1MDQ5MzQ9XzB4MjcwNTdhW18weDZkNjQoJzB4NjZiJyldLF8weDI3Njg4Yj1fMHg1MDQ5MzQ/X1tfMHg2ZDY0KCcweDFiZCcpXTpfW18weDZkNjQoJzB4NjZjJyldLF8weDM0ZTE1OD1fW18weDZkNjQoJzB4MTFkJyldKF8weDI3MDU3YVsnZnJhbWUnXSk/XzB4MjcwNTdhWydmcmFtZSddOihfWydpc051bWJlciddKF8weDFmYThlYltfMHg2ZDY0KCcweDM5YicpXSk/XzB4MWZhOGViW18weDZkNjQoJzB4MzliJyldOl8weDUwNDkzND90aGlzW18weDZkNjQoJzB4MWM5JyldW18weDZkNjQoJzB4NjZkJyldW18weDZkNjQoJzB4OGUnKV06LTB4MSkrKF8weDUwNDkzND8tMHgxOjB4MSksXzB4MjJkN2Q0PV8weDI3MDU3YVtfMHg2ZDY0KCcweDE3MCcpXSxfMHg0NGNlNGM9XzB4MjcwNTdhW18weDZkNjQoJzB4MTU4JyldLF8weDFmMWM1Nj1fMHgyNzA1N2FbJ291dCddLF8weDI0NGE4Yz1fMHgyNzA1N2FbJ292ZXInXTtpZihfMHgyMmQ3ZDQ+MHgwJiZfMHg0NGNlNGMpe2lmKF8weDZkNjQoJzB4NjZlJykhPT1fMHg2ZDY0KCcweDY2ZicpKXt2YXIgXzB4MTQ3NDVlPXRoaXNbJ2ZpbGVCeVBhdGgnXShfMHg0NGNlNGMpO2lmKCFfMHgxNDc0NWUpcmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg2NzAnKV0oXzB4MjcwNTdhKTt2YXIgXzB4MjIzMzM2PV8weDE0NzQ1ZVsna2V5J10oKSxfMHgyZDI5MTQ9XzB4MTQ3NDVlW18weDZkNjQoJzB4NjcxJyldKF8weDIyZDdkNCk7aWYoIV8weDJkMjkxNClyZXR1cm4gdGhpc1snX3RyYWNlU3RlcE5vdEZvdW5kJ10oXzB4MjcwNTdhKTt2YXIgXzB4MzdkOTFhPXRoaXNbXzB4NmQ2NCgnMHjigIs1OScpXVsnZ2V0RmlsZU1ldGFkYXRhQnlQYXRoJ10oXzB4MTQ3NDVlW18weDZkNjQoJzB4NGUnKV0oKSk7aWYoIV8weDM3ZDkxYSlyZXR1cm4gdGhpc1snX3RyYWNlU3RlcE5vdEZvdW5kJ10oXzB4MjcwNTdhKTt2YXIgXzB4MTc1ODVlPV8weDJkMjkxNFtfMHg2ZDY0KCcweGE3JyldKGZ1bmN0aW9uKF8weDI3MDU3YSl7aWYoXzB4NmQ2NCgnMHg2NzInKT09PSdkTUZXYScpe3JldHVybiBfMHgzN2Q5MWFbXzB4NmQ2NCgnMHg2NzMnKV1bXzB4NmQ2NCgnMHg2NmMnKV0oZnVuY3Rpb24oXzB4MWZhOGViKXtyZXR1cm4gXzB4MWZhOGViWzB4MF09PT1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNTUnKV0oKSYmXzB4MWZhOGViWzB4MV09PT1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNTYnKV0oKSYmXzB4MWZhOGViWzB4Ml09PT1fMHgyNzA1N2FbXzB4NmQ2NCgnMHg0OWQnKV0oKSYmXzB4MWZhOGViWzB4M109PT1fMHgyNzA1N2FbXzB4NmQ2NCgnMHg0YTAnKV0oKTt9KTt9ZWxzZXt2YXIgXzB4MWNlMTBlPXRoaXM7cmV0dXJuIF8weDFjZTEwZVsnX3dvcmtlclBvb2wnXVtfMHg2ZDY0KCcweDMxJyldKF8weDFjZTEwZVtfMHg2ZDY0KCcweGZjJyldW18weDZkNjQoJzB4MTEyJyldKCkpWyd0aGVuJ10oZnVuY3Rpb24oXzB4NWQ5MjcwKXtyZXR1cm4gXzB4MWNlMTBlW18weDZkNjQoJzB4NTcnKV1bXzB4NmQ2NCgnMHg2NzQnKV0oXzB4MWNlMTBlW18weDZkNjQoJzB4ZmMnKV1bXzB4NmQ2NCgnMHhiZScpXSgpKSxRW18weDZkNjQoJzB4YzInKV0oXzB4NWQ5MjcwKTt9KTt9fSlbXzB4NmQ2NCgnMHgyOWMnKV0oZnVuY3Rpb24oXzB4MjcwNTdhKXtpZihfMHg2ZDY0KCcweDY3NScpPT09XzB4NmQ2NCgnMHg2NzUnKSl7cmV0dXJuIF8weDI3MDU3YT49MHgwO31lbHNle18weDI3MDU3YVtfMHg2ZDY0KCcweDRkOScpXSgpO319KVtfMHg2ZDY0KCcweDhhJyldKGZ1bmN0aW9uKF8weDI3MDU3YSxfMHgxZmE4ZWIpe2lmKF8weDZkNjQoJzB4Njc2Jyk9PT1fMHg2ZDY0KCcweDY3NycpKXt0cnl7XzB4Mjc2ODhiJiYhXzB4Mjc2ODhiWydkb25lJ10mJihfMHg1MDQ5MzQ9XzB4MjJkN2Q0W18weDZkNjQoJzB4ZDAnKV0pJiZfMHg1MDQ5MzRbXzB4NmQ2NCgnMHgzJyldKF8weDIyZDdkNCk7fWZpbmFsbHl7aWYoXzB4MzRlMTU4KXRocm93IF8weDM0ZTE1OFtfMHg2ZDY0KCcweDhkJyldO319ZWxzZXtyZXR1cm4gXzB4MjcwNTdhW18weDFmYThlYl09MHgxLF8weDI3MDU3YTt9fSx7fSk7aWYoX1tfMHg2ZDY0KCcweDMyZCcpXShfMHgxNzU4NWUpKXJldHVybiB0aGlzW18weDZkNjQoJzB4NjcwJyldKF8weDI3MDU3YSk7dmFyIF8weDExZDU1ZD1fMHgyNzY4OGIodGhpc1tfMHg2ZDY0KCcweDFjOScpXVsnc2VxdWVuY2UnXSxmdW5jdGlvbihfMHgyNzA1N2EsXzB4MWZhOGViKXtyZXR1cm4oXzB4NTA0OTM0P18weDFmYThlYjw9XzB4MzRlMTU4Ol8weDFmYThlYj49XzB4MzRlMTU4KSYmXzB4MTc1ODVlW18weDI3MDU3YVsweDFdXSYmXzB4MjcwNTdhWzB4MF09PT1fMHgyMjMzMzY7fSk7aWYoXzB4MTFkNTVkPDB4MClyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDY3MCcpXShfMHgyNzA1N2EpO18weDM0ZTE1OD1fMHgxMWQ1NWQ7fWVsc2V7XzB4MjcwNTdhW18weDZkNjQoJzB4MWFkJyldKEpTT05bXzB4NmQ2NCgnMHg5YScpXSh7J3R5cGUnOl8weDZkNjQoJzB4Njc4Jyl9KSk7fX1lbHNlIGlmKCFfW18weDZkNjQoJzB4MTFkJyldKF8weDI3MDU3YVtfMHg2ZDY0KCcweDM5YicpXSkmJl9bXzB4NmQ2NCgnMHgxMWQnKV0oXzB4MWZhOGViW18weDZkNjQoJzB4MzliJyldKSYmKF8weDI0NGE4Y3x8XzB4MWYxYzU2KSl7dmFyIF8weDUxY2JlNj1fMHgyNGNhNzUodGhpc1tfMHg2ZDY0KCcweDFjOScpXVsnc2VxdWVuY2UnXVtfMHgxZmE4ZWJbXzB4NmQ2NOKAiygnMHgzOWInKV1dLDB4MyksXzB4NGMxNjIyPV8weDUxY2JlNlsweDJdLF8weDExZDU1ZD1fMHgyNDRhOGM/XzB4Mjc2ODhiKHRoaXNbXzB4NmQ2NCgnMHgxYzknKV1bXzB4NmQ2NCgnMHg2NmQnKV0sZnVuY3Rpb24oXzB4MjcwNTdhLF8weDFmYThlYil7cmV0dXJuKF8weDUwNDkzND9fMHgxZmE4ZWI8PV8weDM0ZTE1ODpfMHgxZmE4ZWI+PV8weDM0ZTE1OCkmJl8weDI3MDU3YVsweDJdPD1fMHg0YzE2MjI7fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHgzOWInKV0pOl8weDI3Njg4Yih0aGlzWydfdHJhY2UnXVtfMHg2ZDY0KCcweDY2ZCcpXSxmdW5jdGlvbihfMHgyNzA1N2EsXzB4MWZhOGViKXtyZXR1cm4oXzB4NTA0OTM0P18weDFmYThlYjw9XzB4MzRlMTU4Ol8weDFmYThlYj49XzB4MzRlMTU4KSYmXzB4MjcwNTdhWzB4Ml08XzB4NGMxNjIyO30sXzB4MWZhOGViW18weDZkNjQoJzB4MzliJyldKTtpZihfMHgxMWQ1NWQ8MHgwKXJldHVybiB0aGlzW18weDZkNjQoJzB4NjcwJyldKF8weDI3MDU3YSk7XzB4MzRlMTU4PV8weDExZDU1ZDt9dmFyIF8weDcxYWEwZD10aGlzWydfdHJhY2UnXVtfMHg2ZDY0KCcweDY2ZCcpXVtfMHgzNGUxNThdO2lmKCFfW18weDZkNjQoJzB4NDg5JyldKF8weDcxYWEwZCkpcmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg2NzAnKV0oKTt2YXIgXzB4MWEzYWQzPV8weDI0Y2E3NShfMHg3MWFhMGQsMHgyKSxfMHgxYmJlZGU9XzB4MWEzYWQzWzB4MF0sXzB4MzA4OGU2PV8weDFhM2FkM1sweDFdLF8weDU1MDg1YT10aGlzW18weDZkNjQoJzB4MmUnKV0oXzB4MWJiZWRlKTtpZighXzB4NTUwODVhKXJldHVybiB0aGlzW18weDZkNjQoJzB4Njc5JyldKF8weDI3MDU3YSxfMHgzNGUxNTgsXzB4NTA0OTM0KTt2YXIgXzB4MzhmMWJhPXRoaXNbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDE3ZScpXShfMHg1NTA4NWFbJ3BhdGgnXSgpKSxfMHgyZTk1Y2Q9XzB4MzhmMWJhWydyYW5nZXMnXVtfMHgzMDg4ZTZdO2lmKCFfMHgyZTk1Y2R8fCFfMHgyZTk1Y2RbXzB4NmQ2NCgnMHg4ZScpXSlyZXR1cm4gdGhpc1snX2ZpbmRDbG9zZXN0VmlzaWJsZVN0ZXAnXShfMHgyNzA1N2EsXzB4MzRlMTU4LF8weDUwNDkzNCk7dmFyIF8weDNlNTg2MD1fMHg1NTA4NWFbXzB4NmQ2NCgnMHg2NzMnKV0oKTtpZighXzB4M2U1ODYwKXJldHVybiB0aGlzW18weDZkNjQoJzB4Njc5JyldKF8weDI3MDU3YSxfMHgzNGUxNTgsXzB4NTA0OTM0KTt2YXIgXzB4ZTY5M2FlPV8weDNlNTg2MFtfMHg0NTY2MTBbXzB4NmQ2NCgnMHg0OWMnKV0oXzB4MmU5NWNkKV07aWYoIV8weGU2OTNhZSlyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDY3OScpXShfMHgyNzA1N2EsXzB4MzRlMTU4LF8weDUwNDkzNCk7KHRoaXNbXzB4NmQ2NCgnMHg1OScpXVsnaXNaZXJvQ29uZmlnSmVzdCddKCl8fHRoaXNbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHg3NicpXSgpKSYmXzB4NTUwODVhW18weDZkNjQoJzB4MTFjJyldKCk7dmFyIF8weDM4YjIzYj1fMHg1NTA4NWFbXzB4NmQ2NCgnMHgxNzInKV0oXzB4ZTY5M2FlKTtyZXR1cm4gXzB4MWZhOGViW18weDZkNjQoJzB4MzliJyldPV8weDM0ZTE1OCxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHgxNTcnKV09XzB4MzhiMjNiLF8weDI3MDU3YVtfMHg2ZDY0KCcweDY2OScpXXx8dGhpc1tfMHg2ZDY0KCcweDllJyldKCkseydyYW5nZSc6XzB4MzhiMjNiLCdmcmFtZSc6XzB4MzRlMTU4LCdmaWxlJzpfMHg1NTA4NWFbXzB4NmQ2NCgnMHg0ZScpXSgpLCdsb2MnOltfMHgzOGIyM2JbMHgwXSxfMHgzOGIyM2JbMHgxXV19O319fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDY3MCcpXT1mdW5jdGlvbihfMHgyNzA1N2Epe2lmKF8weDI3MDU3YSYmXzB4MjcwNTdhW18weDZkNjQoJzB4NjZhJyldKXt2YXIgXzB4MWZhOGViPV8weDI3MDU3YVtfMHg2ZDY0KCcweDE1OCcpXSYmdGhpc1tfMHg2ZDY0KCcweDFjOScpXVsnZmlsZXMnXVtfMHgyNzA1N2FbJ2ZpbGUnXV0sXzB4NTA0OTM0PV9bXzB4NmQ2NCgnMHgzZScpXSh0aGlzW18weDZkNjQoJzB4MWM5JyldW18weDZkNjQoJzB4YTMnKV18fHt9KVsweDBdO3JldHVybiBfMHgyNzA1N2FbXzB4NmQ2NCgnMHg2N2EnKV09XzB4MWZhOGViP18weDFmYThlYltfMHg2ZDY0KCcweDMxJyldOl8weDUwNDkzND9fMHg1MDQ5MzRbXzB4NmQ2NCgnMHgzMScpXToweDAsZGVsZXRlIF8weDI3MDU3YVtfMHg2ZDY0KCcweDY2YScpXSxkZWxldGUgXzB4MjcwNTdhW18weDZkNjQoJzB4MTcwJyldLGRlbGV0ZSBfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNTgnKV0sdGhpc1tfMHg2ZDY0KCcweDM1NicpXShfMHgyNzA1N2EpO319LF8weDFmYThlYlsncHJvdG90eXBlJ11bJ19maW5kQ2xvc2VzdFZpc2libGVTdGVwJ109ZnVuY3Rpb24oXzB4MjcwNTdhLF8weDFmYThlYixfMHg1MDQ5MzQpe3JldHVybiBfMHgyNzA1N2FbXzB4NmQ2NCgnMHgzOWInKV09XzB4MWZhOGViKyhfMHg1MDQ5MzQ/LTB4MToweDEpLHRoaXNbJ3RyYWNlQnlSZXF1ZXN0J10oXzB4MjcwNTdhKTt9LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NjdiJyldPWZ1bmN0aW9uKF8weDI3MDU3YSxfMHgxZmE4ZWIsXzB4NTA0OTM0LF8weDLigIs3Njg4Yil7aWYoXzB4MjcwNTdhJiZfMHgxZmE4ZWImJl8weDUwNDkzND49MHgwJiZfMHgyNzA1N2FbXzB4NmQ2NCgnMHg2NmQnKV0mJl8weDFmYThlYlsnc2VxdWVuY2UnXSl7dmFyIF8weDM0ZTE1OD1NYXRoW18weDZkNjQoJzB4NjdjJyldKF8weDI3MDU3YVtfMHg2ZDY0KCcweDY2ZCcpXVtfMHg2ZDY0KCcweDhlJyldLV8weDFmYThlYlsnc2VxdWVuY2UnXVtfMHg2ZDY0KCcweDhlJyldKTtpZihfMHgzNGUxNTgmJl8weDM0ZTE1ODwweGEmJl8weDI3Njg4Yil7aWYoXzB4NmQ2NCgnMHg2N2QnKSE9PSdLY3ZEVycpe3ZhciBfMHgyMmQ3ZDQ9XzB4MjRjYTc1KF8weDI3MDU3YVtfMHg2ZDY0KCcweDY2ZCcpXVtfMHg1MDQ5MzRdLDB4MyksXzB4NDRjZTRjPV8weDIyZDdkNFsweDBdLF8weDFmMWM1Nj1fMHgyMmQ3ZDRbMHgyXSxfMHgyNDRhOGM9dGhpc1tfMHg2ZDY0KCcweDJlJyldKF8weDQ0Y2U0YyksXzB4MTQ3NDVlPV8weDI0NGE4Y1tfMHg2ZDY0KCcweDY3MycpXSgpLF8weDIyMzMzNj10aGlzWydfcHJvamVjdCddWydnZXRGaWxlTWV0YWRhdGFCeVBhdGgnXShfMHgyNDRhOGNbXzB4NmQ2NCgnMHg0ZScpXSgpKTtpZihfMHgyNDRhOGMmJl8weDIyMzMzNiYmXzB4MTQ3NDVlKWZvcih2YXIgXzB4MmQyOTE0PU1hdGhbXzB4NmQ2NCgnMHgxOTgnKV0oXzB4NTA0OTM0LV8weDM0ZTE1OCwweDApLF8weDM3ZDkxYT1NYXRoW18weDZkNjQoJzB4MTlmJyldKF8weDUwNDkzNCtfMHgzNGUxNTgsXzB4MWZhOGViW18weDZkNjQoJzB4NjZkJyldW18weDZkNjQoJzB4OGUnKV0tMHgxKSxfMHgzYWUwMzQ9XzB4MmQyOTE0O18weDNhZTAzNDw9XzB4MzdkOTFhO18weDNhZTAzNCsrKXt2YXIgXzB4MTc1ODVlPV8weDI0Y2E3NShfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg2NmQnKV1bXzB4M2FlMDM0XSwweDMpLF8weDExZDU1ZD1fMHgxNzU4NWVbMHgwXSxfMHg1MWNiZTY9XzB4MTc1ODVlWzB4MV0sXzB4NGMxNjIyPV8weDE3NTg1ZVsweDJdO2lmKF8weDQ0Y2U0Yz09PV8weDExZDU1ZCYmXzB4MWYxYzU2PT09XzB4NGMxNjIyKXt2YXIgXzB4NzFhYTBkPV8weDIyMzMzNlsncmFuZ2VzJ11bXzB4NTFjYmU2XTtpZihfMHg3MWFhMGQmJl8weDcxYWEwZFtfMHg2ZDY0KCcweDhlJyldKXtpZihfMHg2ZDY0KCcweDY3ZScpIT09XzB4NmQ2NCgnMHg2N2UnKSl7dHJ5e18weDFmMWM1NihfMHgyNzY4OGJbJ3Rocm93J10oXzB4MjcwNTdhKSk7fWNhdGNoKF8weDI3OGQzYil7XzB4MjJkN2Q0KF8weDI3OGQzYik7fX1lbHNle3ZhciBfMHgxYTNhZDM9XzB4MTQ3NDVlW18weDQ1NjYxMFtfMHg2ZDY0KCcweDQ5YycpXShfMHg3MWFhMGQpXSxfMHgyZmM3ZGQ9XzB4MjQ0YThjW18weDZkNjQoJzB4MTcyJyldKF8weDFhM2FkMyk7aWYoXzB4Mjc2ODhiWzB4MV09PT1fMHgyZmM3ZGRbMHgxXSYmXzB4Mjc2ODhiWzB4M109PT1fMHgyZmM3ZGRbMHgzXSl7XzB4NTA0OTM0PV8weDNhZTAzNDticmVhazt9fX19fX1lbHNle3ZhciBfMHg0YTRjZGY9dGhpcyxfMHhlYjhiYj10aGlzLF8weDI1YjU1MT1wcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0/XzB4NmQ2NCgnMHgzYTgnKTpfMHg2ZDY0KCcweDIwOCcpLF8weDEwYjUzZT1wcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0/XzB4NmQ2NCgnMHgyMDknKTpfMHg2ZDY0KCcweDNmMicpO18weDI3MDU3YT1fMHgyNzA1N2F8fDB4MDt2YXIgXzB4MWVhNWFlPXByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVtfMHg2ZDY0KCcweDFlOScpXT9QOkw7XzB4NDU2NjEwKGZ1bmN0aW9uKCl7XzB4MjcwNTdhPj1TPyhfMHhlYjhiYlsnX2VtaXROb3RpZmljYXRpb24nXShfMHg2ZDY0KCcweDM5NScpLF8weDZkNjQoJzB4NDQxJykrXzB4MjViNTUxK18weDZkNjQoJzB4NDQyJykrXzB4MTBiNTNlKydceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjBwdXJjaGFzZVx4MjBhXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjB0cnlceDIwJytfMHgyNWI1NTErXzB4NmQ2NCgnMHg0NDQnKStfMHgxZWE1YWUrXzB4NmQ2NCgnMHg0MDYnKStSKydceDIyPnJlcXVlc3RceDIwYW5ceDIwZXh0ZW5kZWRceDIwdHJpYWxceDIwbGljZW5zZTwvYT4uPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInK0MrJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+LicseydpZCc6XzB4NmQ2NCgnMHg2N2YnKX0pLF8weGViOGJiWydzdG9wJ10oKSxfMHhlYjhiYlsnX2VtaXRTdG9wcGVkJ10oITB4MCkpOihfMHhlYjhiYltfMHg2ZDY0KCcweDMzOScpXT1mdW5jdGlvbigpe18weDM3ZDkxYShfMHhlYjhiYltfMHg2ZDY0KCcweDQ0NycpXSksXzB4ZWI4YmJbXzB4NmQ2NCgnMHgyYzUnKV0oXzB4MjcwNTdhKzB4MSk7fSxfMHhlYjhiYltfMHg2ZDY0KCcweDQ0NycpXT1fMHg0NTY2MTAoZnVuY3Rpb24oKXtfMHhlYjhiYltfMHg2ZDY0KCcweDExNCcpXSgpLF8weDRhNGNkZlsnX2VtaXROb3RpZmljYXRpb24nXShfMHg2ZDY0KCcweDhkJyksXzB4MjViNTUxK18weDZkNjQoJzB4NDRjJykrXzB4MjViNTUxK18weDZkNjQoJzB4NDRkJykrXzB4MTBiNTNlK18weDZkNjQoJzB4NDQzJykrXzB4MjViNTUxK18weDZkNjQoJzB4NDQ0JykrXzB4MWVhNWFlK18weDZkNjQoJzB4NDA2JykrUitfMHg2ZDY0KCcweDQ0NScpK0MrJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+LicpLF8weGViOGJiW18weDZkNjQoJzB4MWU2JyldKCk7fSx3KSxfMHhlYjhiYltfMHg2ZDY0KCcweDFlNCcpXShfMHg2ZDY0KCcweDM5NScpLF8weDZkNjQoJzB4NjgwJykrXzB4MjVi4oCLNTUxK18weDZkNjQoJzB4NDRlJykrRitfMHg2ZDY0KCcweDQ0ZicpK18weDI1YjU1MSsnXHgyMHdpdGhvdXRceDIwcmVjZWl2aW5nXHgyMHRoZXNlXHgyMHdhcm5pbmdzLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyJytfMHgxZWE1YWUrJ1x4MjJceDIwY2xhc3M9XHgyMicrUitfMHg2ZDY0KCcweDQ1MScpK18weDEwYjUzZStfMHg2ZDY0KCcweDQ1MicpK0MrXzB4NmQ2NCgnMHgzZjUnKSx7J2lkJzpfMHg2ZDY0KCcweDMzNCcpfSkpO30sXzB4MmZjN2RkKTt9fXJldHVybiBfMHg1MDQ5MzQ9TWF0aFsnbWluJ10oXzB4NTA0OTM0LF8weDFmYThlYlsnc2VxdWVuY2UnXVsnbGVuZ3RoJ10tMHgxKSx0aGlzWyd0cmFjZUJ5UmVxdWVzdCddKHsnZnJhbWUnOl8weDUwNDkzNH0pO319LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldWydfcHJvY2Vzc1RyYWNlVGVzdHMnXT1mdW5jdGlvbihfMHgyNzA1N2EsXzB4MWZhOGViKXtfW18weDZkNjQoJzB4M2EnKV0oXzB4MjcwNTdhLGZ1bmN0aW9uKF8weDI3MDU3YSxfMHg1MDQ5MzQpe3ZhciBfMHgyNzY4OGI9XzB4MWZhOGViW18weDUwNDkzNF07XzB4Mjc2ODhiJiYoXzB4MjcwNTdhW18weDZkNjQoJzB4MzInKV09XzB4Mjc2ODhiWydkaXNwbGF5UGF0aCddKClbJ2pvaW4nXSgnXHgyMCcpKTt9KTt9LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NjgxJyldPWZ1bmN0aW9uKF8weDI3MDU3YSl7aWYoJ0paV2tPJyE9PV8weDZkNjQoJzB4NjgyJykpe3ZhciBfMHgxZmE4ZWI9dGhpcztpZihfMHgyNzA1N2Epe2lmKCdLbkVzUCc9PT1fMHg2ZDY0KCcweDY4MycpKXt2YXIgXzB4MmQ2Mjk5PU1hdGhbXzB4NmQ2NCgnMHgzMzgnKV0oMHgyNzEwKnRoaXNbXzB4NmQ2NCgnMHgyYmMnKV0vdGhpc1tfMHg2ZDY0KCcweDJiYicpXSkvMHg2NHx8MHgwO3RoaXNbXzB4NmQ2NCgnMHg2NDInKV09eyd2YWx1ZSc6XzB4MmQ2Mjk5LCdsb3cnOl8weDJkNjI5OTx0aGlzW18weDZkNjQoJzB4MjY5JyldKCl9O31lbHNle3ZhciBfMHg1MDQ5MzQ9ZnVuY3Rpb24oKXtyZXR1cm4oXzB4MWZhOGViW18weDZkNjQoJzB4MWNhJyldfHx7fSlbXzB4NmQ2NCgnMHgzOWInKV07fSxfMHgyNzY4OGI9XzB4NTA0OTM0KCk7dHJ5e19bXzB4NmQ2NCgnMHgzYScpXShfMHgyNzA1N2EsZnVuY3Rpb24oXzB4MjcwNTdhKXtfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNTInKV09XzB4MjcwNTdhW18weDZkNjQoJzB4MTUyJyldW18weDZkNjQoJzB4YTcnKV0oZnVuY3Rpb24oXzB4MzRlMTU4LF8weDIyZDdkNCl7dmFyIF8weDI0Y2E3NT1fMHgzNGUxNThbMHgwXSxfMHg0NGNlNGM9XzB4MzRlMTU4WzB4MV0sXzB4MWYxYzU2PV8weDFmYThlYltfMHg2ZDY0KCcweDJlJyldKF8weDI0Y2E3NSk7aWYoXzB4MWYxYzU2KXt2YXIgXzB4MjQ0YThjPV8weDFmYThlYlsndHJhY2VCeVJlcXVlc3QnXSh7J2ZpbGUnOl8weDFmMWM1NlsncGF0aCddKCksJ2xpbmUnOl8weDIyZDdkND4weDA/XzB4NDRjZTRjOnZvaWQgMHgwLCdiYWNrJzohMHgwLCdmcmFtZSc6XzB4Mjc2ODhiPT09XzB4NTA0OTM0KCk/XzB4Mjc2ODhiOnZvaWQgMHgwLCdzdXBwcmVzc1NldHRpbmdUcmFjZUNvbnRleHQnOiEweDB9KTtyZXR1cm4gXzB4MjQ0YThjJiZfMHgyNzA1N2FbJ2NvbnRleHQnXSYmKF8weDI0NGE4Y1tfMHg2ZDY0KCcweDIyNCcpXT1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgyMjQnKV1bXzB4MjJkN2Q0XSksXzB4MjQ0YThjO319KVsnZmlsdGVyJ10oZnVuY3Rpb24oXzB4MjcwNTdhKXtpZigneGVXaHInIT09J3hlV2hyJyl7dmFyIF8weDViYTlhNj1fMHg2ZDY0KCcweDUnKT09dHlwZW9mIFN5bWJvbCYmXzB4MjcwNTdhW1N5bWJvbFtfMHg2ZDY0KCcweGU4JyldXSxfMHg1YmQ3NzY9MHgwO3JldHVybiBfMHg1YmE5YTY/XzB4NWJhOWE2W18weDZkNjQoJzB4MycpXShfMHgyNzA1N2EpOnsnbmV4dCc6ZnVuY3Rpb24oKXtyZXR1cm4gXzB4MjcwNTdhJiZfMHg1YmQ3NzY+PV8weDI3MDU3YVtfMHg2ZDY0KCcweDhlJyldJiYoXzB4MjcwNTdhPXZvaWQgMHgwKSx7J3ZhbHVlJzpfMHgyNzA1N2EmJl8weDI3MDU3YVtfMHg1YmQ3NzYrK10sJ2RvbmUnOiFfMHgyNzA1N2F9O319O31lbHNle3JldHVybiEhXzB4MjcwNTdhO319KSxkZWxldGUgXzB4MjcwNTdhW18weDZkNjQoJzB4MjMnKV0sZGVsZXRlIF8weDI3MDU3YVtfMHg2ZDY0KCcweDY4NCcpXSxkZWxldGUgXzB4MjcwNTdhW18weDZkNjQoJzB4MjI0JyldO30pO31maW5hbGx5e2lmKF8weDZkNjQoJzB4Njg1JykhPT0nSFNOZWInKXt2YXIgXzB4NGYxZjY3PV8weDcxYWEwZFsndmFsdWUnXTtfMHg1MWNiZTZbXzB4NGYxZjY3WydwYXRoJ11dPXRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgyYWMnKV0oXzB4NGYxZjY3W18weDZkNjQoJzB4NGUnKV0pW18weDZkNjQoJzB4MmFkJyldKF8weDQ0Y2U0Y1tfMHg2ZDY0KCcweDI5ZCcpXSk7fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDFjYScpXSYmKHRoaXNbXzB4NmQ2NCgnMHgxY2EnKV1bXzB4NmQ2NCgnMHgzOWInKV09XzB4Mjc2ODhiKTt9fX19fWVsc2V7cmV0dXJuIF8weDI3MDU3YVsnZmFpbGluZyddPT09XzB4MWZhOGViWydmYWlsaW5nJ10/MHgwOl8weDI3MDU3YVtfMHg2ZDY0KCcweDJlYScpXT8tMHgxOjB4MTt9fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDJkOScpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDZkNjQoJzB4MWM5JyldJiZ0aGlzW18weDZkNjQoJzB4MWNhJyldJiZ0aGlzW18weDZkNjQoJzB4MWNhJyldW18weDZkNjQoJzB4MzliJyldPj0weDA7fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDY0MScpXT1mdW5jdGlvbigpe2lmKCdZVEdvVychPT1fMHg2ZDY0KCcweDY4NicpKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDJkOScpXSgpJiZ0aGlzWydfdHJhY2VTdGF0ZSddWyd0ZXN0J107fWVsc2V7dmFyIF8weGRjOTIwZj1fMHgyNzA1N2FbJ2tleSddKCksXzB4MjE5NTk2PV8weDI0Y2E3NVtfMHg2ZDY0KCcweDU1NCcpXVtfMHhkYzkyMGZdO18weDIxOTU5Nj9+X1tfMHg2ZDY0KCcweDE3YScpXShfMHgyMTk1OTYsXzB4MWZhOGViKXx8XzB4MjE5NTk2W18weDZkNjQoJzB4MWMnKV0oXzB4MWZhOGViKTooXzB4MjE5NTk2PVtdLF8weDIxOTU5NltfMHg2ZDY0KCcweDFjJyldKF8weDFmYThlYiksXzB4MjRjYTc1W18weDZkNjQoJzB4NTU0JyldW18weGRjOTIwZl09XzB4MjE5NTk2KSxfMHgyMTk1OTZbXzB4NmQ2NCgnMHg1NTUnKV09XzB4MjcwNTdhLF8weDIyZDdkNChfMHgyNzA1N2EpO319LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MzBiJyldPWZ1bmN0aW9uKF8weDI3MDU3YSl7aWYoXzB4NmQ2NCgnMHg2ODcnKT09PV8weDZkNjQoJzB4Njg3Jykpe3ZhciBfMHgxZmE4ZWI9dGhpc1tfMHg2ZDY0KCcweDJhYycpXShfMHgyNzA1N2FbJ2ZpbGUnXSk7aWYoXzB4MWZhOGViKXtpZihfMHg2ZDY0KCcweDY4OCcpPT09XzB4NmQ2NCgnMHg2ODgnKSl7aWYodGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MmU1JyldJiZ0aGlzW18weDZkNjQoJzB4NTknKV1bJ2hhc0FueVBlbmRpbmdJbkVkaXRvckZpbGVDaGFuZ2VzJ10oKSlyZXR1cm5bXTsodGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MjEzJyldKCl8fHRoaXNbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHg3NicpXSgpKSYmXzB4MWZhOGViW18weDZkNjQoJzB4MTFjJyldKCk7dmFyIF8weDUwNDkzND10aGlzW18weDZkNjQoJzB4MjljJyldW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHgyOWQnKV0/dGhpc1snZmlsdGVyJ11bXzB4NmQ2NCgnMHg0MycpXTp2b2lkIDB4MDtyZXR1cm4gX1tfMHg2ZDY0KCcweGE2JyldKF8weDI3MDU3YVsnbGluZSddP18weDFmYThlYltfMHg2ZDY0KCcweDY4OScpXShfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNzAnKV0pOl8weDFmYThlYltfMHg2ZDY0KCcweDY3MycpXSgpKVtfMHg2ZDY0KCcweDI5YycpXShmdW5jdGlvbihfMHgyNzA1N2Epe3JldHVybiFfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxMzAnKV0oXzB4NTA0OTM0KTt9KVtfMHg2ZDY0KCcweGE3JyldKGZ1bmN0aW9uKF8weDI3MDU3YSl7cmV0dXJuIF8weDFmYThlYltfMHg2ZDY0KCcweDE3MicpXShfMHgyNzA1N2EpO30pW18weDZkNjQoJzB4YTknKV0oKTt9ZWxzZXtfMHgyNzA1N2FbJ3Byb2Nlc3MnXVtfMHg2ZDY0KCcweDExNycpXSgpO319fWVsc2V7XzB4MjJkN2Q0KF8weDZkNjQoJzB4NjhhJykrXzB4NDRjZTRjW18weDZkNjQoJzB4MjMnKV0pO319LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldWydsaW5lUmVwb3J0QnlSZXF1ZXN0J109ZnVuY3Rpb24oXzB4MjcwNTdhKXt2YXIgXzB4MWZhOGViPXRoaXNbXzB4NmQ2NCgnMHgyYWMnKV0oXzB4MjcwNTdhW18weDZkNjQoJzB4MTU4JyldKTtpZihfMHgxZmE4ZWIpcmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHgzZTAnKV0oXzB4MWZhOGViLF8weDI3MDU3YVsnbGluZSddKTt9LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MzIwJyldPWZ1bmN0aW9uKF8weDI3MDU3YSl7aWYoXzB4NmQ2NCgnMHg2OGInKSE9PV8weDZkNjQoJzB4NjhjJykpe3ZhciBfMHgxZmE4ZWI9dGhpc1tfMHg2ZDY0KCcweDY4ZCcpXShfMHgyNzA1N2EpO2lmKF8weDFmYThlYil7aWYoXzB4NmQ2NCgnMHg2OGUnKT09PV8weDI3MDU3YVsndHlwZSddKXtpZigna3RXT1cnPT09J2t0V09XJyl7dmFyIF8weDUwNDkzND1fMHgxZmE4ZWJbJ3N0YXJ0UmFuZ2UnXSgpO3JldHVybiBfMHg1MDQ5MzQ/eydmaWxlJzpfMHgxZmE4ZWJbJ2ZpbGVQYXRoJ10oKSwnbG9jJzpbXzB4NTA0OTM0WydzdGFydExpbmUnXSgpLF8weDUwNDkzNFtfMHg2ZDY0KCcweDE1NicpXSgpXX06e307fWVsc2V7cmV0dXJuK25ldyBEYXRlKCk7fX1pZihfMHg2ZDY0KCcweDRlOCcpPT09XzB4MjcwNTdhW18weDZkNjQoJzB4MzAnKV0pe2lmKF8weDZkNjQoJzB4NjhmJykhPT0nYlFRdXUnKXt2YXIgXzB4MmE2YjYyPXRoaXNbXzB4NmQ2NCgnMHg1OGMnKV1bdGhpc1tfMHg2ZDY0KCcweDU4YycpXVsnbGVuZ3RoJ10tMHgxXTtfMHgyYTZiNjImJnRoaXNbJ19hcmVMb2dFbnRyeU1lc3NhZ2VzRXF1YWwnXShfMHgyYTZiNjJbXzB4NmQ2NCgnMHgyMycpXXx8dm9pZCAweDAsXzB4MjcwNTdhW18weDZkNjQoJzB4MjMnKV18fHZvaWQgMHgwKSYmXzB4MmE2YjYyW18weDZkNjQoJzB4MTUyJyldJiZfMHgyNzA1N2FbJ3N0YWNrJ10mJl8weDJhNmI2MltfMHg2ZDY0KCcweDE1MicpXVtfMHg2ZDY0KCcweDhlJyldPjB4MCYmXzB4MjcwNTdhW18weDZkNjQoJzB4MTUyJyldW18weDZkNjQoJzB4OGUnKV0+MHgwJiZfWydpc0VxdWFsJ10oXzB4MjcwNTdhW18weDZkNjQoJzB4MTUyJyldWzB4MF0sXzB4MmE2YjYyW18weDZkNjQoJzB4MTUyJyldWzB4MF0pP18weDI3MDU3YVsnc3RhY2snXVtfMHg2ZDY0KCcweDhlJyldPl8weDJhNmI2Mlsnc3RhY2snXVsnbGVuZ3RoJ10mJihfMHgyYTZiNjJbXzB4NmQ2NCgnMHgxNTInKV09XzB4MjcwNTdhW18weDZkNjQoJzB4MTUyJyldKTp0aGlzW18weDZkNjQoJzB4NThjJyldW18weDZkNjQoJzB4MWMnKV0oXzB4MjcwNTdhKTt9ZWxzZXt2YXIgXzB4Mjc2ODhiPV9bXzB4NmQ2NCgnMHgxNTEnKV0oXzB4MWZhOGViWydlcnJvcnMnXSgpLGZ1bmN0aW9uKF8weDI3MDU3YSl7cmV0dXJuIF8weDI3MDU3YSYmXzB4MjcwNTdhW18weDZkNjQoJzB4MTUyJyldJiZfMHgyNzA1N2FbJ3N0YWNrJ10oKVtfMHg2ZDY0KCcweDhlJyldO30pO2lmKCFfMHgyNzY4OGIpe3ZhciBfMHg1MDQ5MzQ9XzB4MWZhOGViW18weDZkNjQoJzB4MTUzJyldKCk7cmV0dXJuIF8weDUwNDkzND97J2ZpbGUnOl8weDFmYThlYltfMHg2ZDY0KCcweDE1NCcpXSgpLCdsb2MnOltfMHg1MDQ5MzRbXzB4NmQ2NCgnMHgxNTUnKV0oKSxfMHg1MDQ5MzRbXzB4NmQ2NCgnMHgxNTYnKV0oKV19Ont9O312YXIgXzB4MzRlMTU4PV8weDI3Njg4Ylsnc3RhY2snXSgpWzB4MF0sXzB4MjJkN2Q0PV8weDM0ZTE1OFtfMHg2ZDY0KCcweDE1NycpXSgpLF8weDI0Y2E3NT17fTtyZXR1cm4gXzB4MjRjYTc1W18weDZkNjQoJzB4MTU4JyldPV8weDM0ZTE1OFtfMHg2ZDY0KCcweDE1NCcpXSgpLF8weDIyZDdkNCYmKF8weDI0Y2E3NVtfMHg2ZDY0KCcweDI0JyldPVtfMHgyMmQ3ZDRbJ3N0YXJ0TGluZSddKCksXzB4MjJkN2Q0WydzdGFydENvbHVtbiddKCldKSxfMHgyNGNhNzU7fX19fWVsc2V7dHJ5e3ZhciBfMHg0MDBkNjE9XzB4NDRjZTRjW18weDZkNjQoJzB4MjgzJyldKCdtZDUnKVtfMHg2ZDY0KCcweDNkJyldKF8weDUwNDkzNClbXzB4NmQ2NCgnMHgyOTYnKV0oXzB4NmQ2NCgnMHgyODcnKSk7Jzc5NDc5ZmU5NGZjZDJiZDlmMTQxYWQxNzE3YzM1MjgyJyE9PV8weDQwMGQ2MSYmXzB4NmQ2NCgnMHgyYzAnKSE9PV8weDQwMGQ2MSYmXzB4NmQ2NCgnMHgyYzEnKSE9PV8weDQwMGQ2MSYmXzB4NmQ2NCgnMHgyYzInKSE9PV8weDQwMGQ2MSYmXzB4NmQ2NCgnMHgyYzMnKSE9PV8weDQwMGQ2MSYmXzB4NmQ2NCgnMHgyYzQnKSE9PV8weDQwMGQ2MSYmXzB4NmQ2NCgnMHg2OTAnKSE9PV8weDQwMGQ2MSYmXzB4Mjc2ODhiW+KAi18weDZkNjQoJzB4MmM1JyldKCk7fWNhdGNoKF8weDU0ODhmZSl7fXJldHVybiBfMHgxZmE4ZWJbJ2FwcGx5J10oXzB4MjcwNTdhLGFyZ3VtZW50cyk7fX0sXzB4MWZhOGViWydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDY4ZCcpXT1mdW5jdGlvbihfMHgyNzA1N2Epe3ZhciBfMHgxZmE4ZWI9XzB4MjcwNTdhW18weDZkNjQoJzB4MTU4JyldJiZ0aGlzW18weDZkNjQoJzB4MmFjJyldKF8weDI3MDU3YVtfMHg2ZDY0KCcweDE1OCcpXSksXzB4NTA0OTM0PV8weDFmYThlYiYmXzB4MjcwNTdhW18weDZkNjQoJzB4MTcwJyldJiZfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg2MDMnKV0oXzB4MjcwNTdhW18weDZkNjQoJzB4MTcwJyldLGZ1bmN0aW9uKF8weDI3MDU3YSl7cmV0dXJuIF8weDI3MDU3YVsnaXNFcnJvclNvdXJjZSddKCl8fF8weDI3MDU3YVtfMHg2ZDY0KCcweDUwMycpXSgpO30pWzB4MF07cmV0dXJuIF8weDUwNDkzNCYmXzB4NTA0OTM0W18weDZkNjQoJzB4ZTUnKV0oKXx8KF8weDUwNDkzND10aGlzW18weDZkNjQoJzB4NjkxJyldKCkpLF8weDUwNDkzNDt9LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MzI1JyldPWZ1bmN0aW9uKF8weDI3MDU3YSl7dmFyIF8weDFmYThlYj10aGlzWydfbGF0ZXN0RmFpbGluZ1Rlc3RCeUZpbGVBbmRMaW5lJ10oXzB4MjcwNTdhKTtpZihfMHgxZmE4ZWIpe2lmKF8weDZkNjQoJzB4NjkyJyk9PT1fMHg2ZDY0KCcweDY5MycpKXt2YXIgXzB4ZDA2MzRmPXRoaXM7cmV0dXJuIGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4Njk0JyldLGNsZWFyVGltZW91dCh0aGlzW18weDZkNjQoJzB4ZmQnKV0pLHRoaXNbXzB4NmQ2NCgnMHgzOTEnKV0oKSxfMHgxZmE4ZWJbJ2hvb2snXSYmXzB4MWZhOGViW18weDZkNjQoJzB4MjIwJyldPyhfMHg0NGNlNGNbXzB4NmQ2NCgnMHg2OTUnKV0oXzB4MWZhOGViW18weDZkNjQoJzB4MjIwJyldKSxfW18weDZkNjQoJzB4MjcxJyldKF8weDFmYThlYltfMHg2ZDY0KCcweDY5NicpXSkmJl9bXzB4NmQ2NCgnMHgzYScpXShfMHgxZmE4ZWJbXzB4NmQ2NCgnMHgyMjAnKV0sZnVuY3Rpb24oXzB4MWQ2ZGIxKXtfMHgxZDZkYjFbJ21lc3NhZ2UnXT1fMHgxZmE4ZWJbXzB4NmQ2NCgnMHg2OTYnKV0rKF8weDFkNmRiMVtfMHg2ZDY0KCcweDIzJyldPyc6XHgyMCc6JycpK18weDFkNmRiMVsnbWVzc2FnZSddO30pLHZvaWQodGhpc1tfMHg2ZDY0KCcweDRhMicpXT10aGlzW18weDZkNjQoJzB4NGEyJyldW18weDZkNjQoJzB4ODgnKV0oXzB4MWZhOGViW18weDZkNjQoJzB4MjIwJyldKSkpOihfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg2OTcnKV0/KHRoaXNbJ19za2lwcGVkJ10rKyxfMHg0NGNlNGNbXzB4NmQ2NCgnMHg2OTUnKV0oXzB4MWZhOGViW18weDZkNjQoJzB4MjIwJyldKSk6KF8weDFmMWM1NihfMHg2ZDY0KCcweDY5OCcpK18weDFmYThlYltfMHg2ZDY0KCcweDMyJyldLF8weDI3MDU3YSksXzB4NDRjZTRjWydfcHJvY2Vzc1Rlc3RMb2cnXShfMHgxZmE4ZWJbXzB4NmQ2NCgnMHgyMjAnKV0pLF8weDFmYThlYltfMHg2ZDY0KCcweDIyMCcpXSYmX1tfMHg2ZDY0KCcweDNhJyldKF8weDFmYThlYltfMHg2ZDY0KCcweDIyMCcpXSxmdW5jdGlvbihfMHgzMDc1MDMpe3JldHVybiBfMHhkMDYzNGZbXzB4NmQ2NCgnMHg2OTknKV0oXzB4MzA3NTAzKTt9KSx0aGlzW18weDZkNjQoJzB4NThjJyldWydsZW5ndGgnXSYmKF8weDFmYThlYlsnbG9nJ109dGhpc1tfMHg2ZDY0KCcweDU4YycpXVsnc2xpY2UnXSgpKSxfWydpc1VuZGVmaW5lZCddKF8weDFmYThlYltfMHg2ZDY0KCcweDU1MCcpXSkmJihfMHgxZmE4ZWJbJ3Nsb3cnXT1fMHgxZmE4ZWJbXzB4NmQ2NCgnMHgxMDInKV0+XzB4NDRjZTRjW18weDZkNjQoJzB4MTk5JyldW18weDZkNjQoJzB4OWYnKV0pLF8weDFmYThlYlsnc2xvdyddPV8weDFmYThlYltfMHg2ZDY0KCcweDU1MCcpXXx8dm9pZCAweDAsdGhpc1tfMHg2ZDY0KCcweDU4YycpXVtfMHg2ZDY0KCcweDhlJyldPTB4MCwrK18weDQ0Y2U0Y1tfMHg2ZDY0KCcweDIxZCcpXSUweDMyfHxjb25zb2xlW18weDZkNjQoJzB4MjIwJyldKF8weDZkNjQoJzB4NjlhJykrXzB4NDRjZTRjW18weDZkNjQoJzB4MjFkJyldK18weDZkNjQoJzB4NjliJykpLHByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVsnV0FMTEFCWV9JTlRFR1JBVElPTl9URVNUX1JVTiddJiYoXzB4MWZhOGViWyd0aW1lJ109MHgxKSksdm9pZCB0aGlzW18weDZkNjQoJzB4ZTQnKV1bJ3B1c2gnXShfMHgxZmE4ZWIpKTt9ZWxzZXt2YXIgXzB4NTA0OTM0PV8weDFmYThlYltfMHg2ZDY0KCcweDMwMycpXSgpO2lmKCFfMHg1MDQ5MzRbXzB4NmQ2NCgnMHg4ZScpXSlyZXR1cm47dmFyIF8weDI3Njg4Yj1fMHgxZmE4ZWJbXzB4NmQ2NCgnMHg0NmUnKV0oKTtpZihfMHg2ZDY0KCcweDRlOCcpPT09XzB4MjcwNTdhW18weDZkNjQoJzB4MzAnKV0pcmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg1M2YnKV0oX1snZmlsdGVyJ10oXzB4NTA0OTM0LGZ1bmN0aW9uKF8weDFmYThlYil7cmV0dXJuIF9bXzB4NmQ2NCgnMHgxNTEnKV0oXzB4MWZhOGViW18weDZkNjQoJzB4MTUyJyldKCksZnVuY3Rpb24oXzB4MWZhOGViKXtyZXR1cm4gXzB4MWZhOGViWydmaWxlSWQnXSgpPT09XzB4Mjc2ODhiJiZfMHgxZmE4ZWJbXzB4NmQ2NCgnMHgxNzAnKV0oKT09PV8weDI3MDU3YVtfMHg2ZDY0KCcweDE3MCcpXTt9KTt9KSlbMHgwXTtpZihfMHg2ZDY0KCcweDY4ZScpPT09XzB4MjcwNTdhWyd0eXBlJ10pcmV0dXJuIHRoaXNbJ19tYXBFcnJvcnMnXShfMHg1MDQ5MzQpWzB4MF07fX19LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NjkxJyldPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg2OWMnKSE9PV8weDZkNjQoJzB4NjljJykpe2lmKHRoaXNbXzB4NmQ2NCgnMHgzYycpXSl7dmFyIF8weDU0ZDNhZj10aGlzW18weDZkNjQoJzB4M2MnKV1bXzB4NmQ2NCgnMHgxNzAnKV0oXzB4MjcwNTdhKTtpZihfMHg1NGQzYWYpcmV0dXJuIF8weDU0ZDNhZltfMHg2ZDY0KCcweDY3MycpXSgpO319ZWxzZXtyZXR1cm4gX1tfMHg2ZDY0KCcweDUyZScpXShfW18weDZkNjQoJzB4M2UnKV0odGhpc1snX2ZhaWxpbmdUZXN0cyddKSk7fX0sXzB4MWZhOGViW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzODAnKV09ZnVuY3Rpb24oXzB4MjcwNTdhKXtpZih0aGlzWydfcnVuRXJyb3InXSlyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDY5ZCcpXTt2YXIgXzB4MWZhOGViPXsnZXJyb3JzJzp0aGlzWydfbWFwRXJyb3JzJ10odGhpc1tfMHg2ZDY0KCcweDRhMicpXSksJ3RpbWUnOl8weDI3MDU3YSwnYWRkaXRpb25hbEhlYWRlck1lc3NhZ2UnOnRoaXNbJ19hZGRpdGlvbmFsSGVhZGVyTWVzc2FnZSddLCd0cmFjZSc6dGhpc1tfMHg2ZDY0KCcweDFjOScpXSYmeydsZW5ndGgnOnRoaXNbXzB4NmQ2NCgnMHgxYzknKV1bXzB4NmQ2NCgnMHg2NmQnKV1bJ2xlbmd0aCddLCdjdXJyZW50RnJhbWUnOih0aGlzW18weDZkNjQoJzB4MWNhJyldfHx7fSlbXzB4NmQ2NCgnMHgzOWInKV0sJ2NhbGxTdGFjayc6dGhpc1snX3RyYWNlJ11bXzB4NmQ2NCgnMHg0NzInKV0sJ3Rlc3RzJzp0aGlzW18weDZkNjQoJzB4MWM5JyldW18weDZkNjQoJzB4YTMnKV0sJ2ZpbGVzJzp0aGlzW18weDZkNjQoJzB4MWM5JyldW18weDZkNjQoJzB4M2EyJyldfX07aWYocHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldW18w4oCLeDZkNjQoJzB4MWU5JyldKXtpZihfMHg2ZDY0KCcweDY5ZScpIT09XzB4NmQ2NCgnMHg2OWYnKSl7XzB4MWZhOGViW18weDZkNjQoJzB4MjM2JyldPXRoaXNbJ19tYXBNZXNzYWdlcyddKHRoaXNbXzB4NmQ2NCgnMHg2NDMnKV0pO3ZhciBfMHg1MDQ5MzQ9dGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4NWMnKV0oKTtfMHg1MDQ5MzQmJl8weDUwNDkzNFtfMHg2ZDY0KCcweDFlOScpXSYmX1snZWFjaCddKF8weDFmYThlYltfMHg2ZDY0KCcweDMwMycpXSxmdW5jdGlvbihfMHgyNzA1N2Epe2lmKF8weDI3MDU3YSYmXzB4MjcwNTdhWydtZXNzYWdlJ10pe2lmKF8weDUwNDkzNFtfMHg2ZDY0KCcweDFlOScpXVtfMHg2ZDY0KCcweDJlZCcpXVtfMHg2ZDY0KCcweDJlZScpXSl7aWYoXzB4NmQ2NCgnMHg2YTAnKSE9PV8weDZkNjQoJzB4NmEwJykpe18weDI3MDU3YShfMHg2ZDY0KCcweDJiMycpKVtfMHg2ZDY0KCcweDJiNCcpXShfMHgxZmE4ZWIsXzB4NTA0OTM0KTt9ZWxzZXt2YXIgXzB4MWZhOGViPV8weDI3MDU3YVtfMHg2ZDY0KCcweDIzJyldW18weDZkNjQoJzB4MzA0JyldKC9DYW5ub3QgZmluZCBtb2R1bGUgJyhbXidccyZ8O10rKScvKTtfMHgxZmE4ZWImJl8weDFmYThlYlsweDFdJiYoXzB4MjcwNTdhW18weDZkNjQoJzB4MzA1JyldPV8weDI0NGE4Y1tfMHg2ZDY0KCcweDMwNicpXShfMHgxZmE4ZWJbMHgxXSkpO319dmFyIF8weDI3Njg4Yj1fMHgyNzA1N2FbJ21lc3NhZ2UnXVtfMHg2ZDY0KCcweDMwNCcpXSgvKFteXHNdKykgaXMgbm90IGRlZmluZWQvKTtfMHgyNzY4OGImJl8weDI3Njg4YlsweDFdJiYoXzB4Mjc2ODhiPV8weDI3Njg4YlsweDFdLF8weDIyMzMzNltfMHgyNzY4OGJdP18weDI3MDU3YVtfMHg2ZDY0KCcweDMwNycpXT1fMHgyNzY4OGI6XzB4MjcwNTdhW18weDZkNjQoJzB4MzA4JyldPV8weDI3Njg4Yik7fX0pO31lbHNle18weDFmYThlYlsnX2VtaXRTdGF0c1VwZGF0ZSddKF8weDM0ZTE1OFtfMHg2ZDY0KCcweDIzJyldKTt9fWVsc2UgXzB4MWZhOGViW18weDZkNjQoJzB4NmExJyldPV9bJ3NpemUnXSh0aGlzWydfdGVzdHMnXSksXzB4MWZhOGViW18weDZkNjQoJzB4NmEyJyldPV9bXzB4NmQ2NCgnMHgxMTknKV0odGhpc1tfMHg2ZDY0KCcweGU2JyldKSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHhhMycpXT10aGlzW18weDZkNjQoJzB4NjAyJyldKHRoaXNbXzB4NmQ2NCgnMHhlNicpXSlbXzB4NmQ2NCgnMHgyMGMnKV0oKVtfMHg2ZDY0KCcweGE5JyldKCk7cmV0dXJuIF8weDFmYThlYjt9LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4ODQnKV09ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDZhMycpIT09XzB4NmQ2NCgnMHg2YTMnKSl7cmV0dXJuIF8weDI3MDU3YSYmXzB4MjcwNTdhWydsZW5ndGgnXT4weDImJidAJz09PV8weDI3MDU3YVsweDBdJiYnQCc9PT1fMHgyNzA1N2FbMHgxXTt9ZWxzZXtyZXR1cm4gX1tfMHg2ZDY0KCcweDI5YycpXSh0aGlzWydfZmlsZXMnXSxmdW5jdGlvbihfMHgyNzA1N2Epe3JldHVybiBfMHgyNzA1N2FbJ2lzVGVzdEZpbGUnXSgpO30pO319LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MmFiJyldPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg2YTQnKSE9PV8weDZkNjQoJzB4NmE0Jykpe3JldHVybnsnYWRkcmVzcyc6XzB4MjcwNTdhW18weDZkNjQoJzB4MTBkJyldLCdpbnRlcm5hbCc6XzB4MjcwNTdhWydpbnRlcm5hbCddfTt9ZWxzZXtyZXR1cm4gX1tfMHg2ZDY0KCcweGE2JyldKHRoaXNbXzB4NmQ2NCgnMHg2M2YnKV0pW18weDZkNjQoJzB4MjljJyldKGZ1bmN0aW9uKF8weDI3MDU3YSl7cmV0dXJuIF8weDI3MDU3YVtfMHg2ZDY0KCcweDNkNicpXSgpO30pWydtYXAnXShmdW5jdGlvbihfMHgyNzA1N2Epe3JldHVybnsncGF0aCc6XzB4MjcwNTdhW18weDZkNjQoJzB4NGUnKV0oKX07fSlbXzB4NmQ2NCgnMHhhOScpXSgpO319LF8weDFmYThlYlsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHg0NzgnKV09ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDZhNScpIT09XzB4NmQ2NCgnMHg2YTYnKSl7dmFyIF8weDI3MDU3YT1fW18weDZkNjQoJzB4MTE5JyldKHRoaXNbXzB4NmQ2NCgnMHhlNCcpXSksXzB4MWZhOGViPV9bJ3NpemUnXSh0aGlzWydfZmFpbGluZ1Rlc3RzJ10pO3JldHVybnsndG90YWwnOl8weDI3MDU3YSwncGFzc2VkJzpfMHgyNzA1N2EtXzB4MWZhOGViLCdmYWlsZWQnOl8weDFmYThlYiwnZmlsdGVyZWQnOnRoaXNbXzB4NmQ2NCgnMHgyMTQnKV1bXzB4NmQ2NCgnMHg0MycpXVtfMHg2ZDY0KCcweDI5ZCcpXT90aGlzW18weDZkNjQoJzB4MjE0JyldW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHgxMTknKV06MHgwLCdjb3ZlcmHigItnZSc6dGhpc1tfMHg2ZDY0KCcweDY0MicpXSwnZXJyb3InOnRoaXNbXzB4NmQ2NCgnMHg2OWQnKV19O31lbHNle3JldHVybiBfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxYWQnKV0oXzB4NTA0OTM0KTt9fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDgzJyldPWZ1bmN0aW9uKCl7cmV0dXJuIF9bJ21hcCddKHRoaXNbXzB4NmQ2NCgnMHg2M2YnKV0sZnVuY3Rpb24oXzB4MjcwNTdhKXtyZXR1cm57J3BhdGgnOl8weDI3MDU3YVtfMHg2ZDY0KCcweDRlJyldKCksJ2lkJzpfMHgyNzA1N2FbJ2tleSddKCl9O30pO30sXzB4MWZhOGViW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzMGUnKV09ZnVuY3Rpb24oXzB4MjcwNTdhKXtpZihfMHg2ZDY0KCcweDZhNycpPT09XzB4NmQ2NCgnMHg2YTcnKSl7cmV0dXJuIF9bXzB4NmQ2NCgnMHhhNycpXSh0aGlzWydfdGVzdHMnXSxfMHgyNzA1N2EpO31lbHNle3RyeXtfMHgyNzY4OGImJiFfMHgyNzY4OGJbJ2RvbmUnXSYmKF8weDUwNDkzND1fMHgyMmQ3ZDRbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weDUwNDkzNFtfMHg2ZDY04oCLKCcweDMnKV0oXzB4MjJkN2Q0KTt9ZmluYWxseXtpZihfMHgzNGUxNTgpdGhyb3cgXzB4MzRlMTU4W18weDZkNjQoJzB4OGQnKV07fX19LF8weDFmYThlYlsncHJvdG90eXBlJ11bJ2dsb2JhbEVycm9ycyddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0YTInKV07fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDMzZCcpXT1mdW5jdGlvbihfMHgyNzA1N2Epe2lmKCdpUWpHUichPT1fMHg2ZDY0KCcweDZhOCcpKXtfMHgzNGUxNTg9SlNPTltfMHg2ZDY0KCcweDFkYycpXShfMHgyNzY4OGIpO31lbHNle3RoaXNbXzB4NmQ2NCgnMHgyOWInKV1bXzB4MjcwNTdhXT17fSx0aGlzWydfZW1pdEZpbGVzTWVzc2FnZXMnXSh7J2ZpbGVJZCc6XzB4MjcwNTdhfSk7fX0sXzB4MWZhOGViW18weDZkNjQoJzB4ODEnKV1bJ3RvZ2dsZVRlc3RGaWx0ZXInXT1mdW5jdGlvbihfMHgyNzA1N2Epe3ZhciBfMHgxZmE4ZWIsXzB4NTA0OTM0LF8weDI3Njg4Yj10aGlzLF8weDM0ZTE1OD10aGlzW18weDZkNjQoJzB4MjljJyldW18weDZkNjQoJzB4NDMnKV1bJ3RzJ107aWYoXzB4MjcwNTdhKWlmKF8weDI3MDU3YVsnZmlsZSddKXt2YXIgXzB4MjRjYTc1PXRoaXNbXzB4NmQ2NCgnMHgyYWMnKV0oXzB4MjcwNTdhW18weDZkNjQoJzB4MTU4JyldKTtpZihfMHgyNGNhNzUpe2lmKF8weDZkNjQoJzB4NmE5JykhPT1fMHg2ZDY0KCcweDZhYScpKXt2YXIgXzB4NDRjZTRjPVtdO2lmKF8weDI3MDU3YVsnbGluZSddKXtpZihfMHg0NGNlNGM9dGhpc1sndGVzdHNCeVJlcXVlc3QnXShfMHgyNzA1N2EpLF8weDI0Y2E3NVtfMHg2ZDY0KCcweDRlNScpXSgpJiYweDE9PT1fMHg0NGNlNGNbXzB4NmQ2NCgnMHg4ZScpXSYmIV8weDQ0Y2U0Y1sweDBdWydkYXRhJ10pXzB4NDRjZTRjPV8weDI0Y2E3NVtfMHg2ZDY0KCcweDZhYicpXSgpW18weDZkNjQoJzB4YTcnKV0oZnVuY3Rpb24oXzB4MjcwNTdhKXtpZihfMHg2ZDY0KCcweDZhYycpIT09J1VBd1pOJyl7ZGVsZXRlIHRoaXNbJ19leGVjdXRpbmdGaWxlcyddW18weDI3MDU3YV0sX1snaXNFbXB0eSddKHRoaXNbXzB4NmQ2NCgnMHg2YWQnKV0pJiYhdGhpc1tfMHg2ZDY0KCcweDY5NCcpXSYmKGNsZWFyVGltZW91dCh0aGlzW18weDZkNjQoJzB4ZmUnKV0pLGNsZWFyVGltZW91dCh0aGlzW18weDZkNjQoJzB4ZmYnKV0pKTt9ZWxzZXtyZXR1cm57J3BhdGgnOltfMHgyNzA1N2FbXzB4NmQ2NCgnMHg0NmUnKV0oKV1bXzB4NmQ2NCgnMHg4OCcpXShfMHgyNzA1N2FbXzB4NmQ2NCgnMHg0ZScpXSgpKSwnZGF0YSc6XzB4MjcwNTdhfTt9fSk7ZWxzZSBpZighXzB4MjRjYTc1W18weDZkNjQoJzB4NGU1JyldKCkmJl8weDQ0Y2U0Y1tfMHg2ZDY0KCcweDhlJyldPjB4MSl7aWYoXzB4NmQ2NCgnMHg2M2MnKT09PXRoaXNbXzB4NmQ2NCgnMHg2M2EnKV18fF8weDZkNjQoJzB4NjNkJyk9PT10aGlzW18weDZkNjQoJzB4NjNhJyldKXJldHVybiBfMHg0NGNlNGM9XzB4NDRjZTRjWydmaWx0ZXInXShmdW5jdGlvbihfMHgyNzA1N2Epe3JldHVybiBfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxMzYnKV0mJl8weDI3MDU3YVsncGF0aCddWydsZW5ndGgnXT4weDE7fSksdm9pZCB0aGlzW18weDZkNjQoJzB4MWNlJyldKF8weDZkNjQoJzB4NmFlJykseydmaWxlJzpfMHgyNGNhNzVbXzB4NmQ2NCgnMHg0ZScpXSgpLCd0ZXN0cyc6XzB4NDRjZTRjW18weDZkNjQoJzB4YTcnKV0oZnVuY3Rpb24oXzB4MjcwNTdhKXtpZignaWhoRFQnIT09XzB4NmQ2NCgnMHg2YWYnKSl7cmV0dXJueydwYXRoJzpfMHgyNzA1N2FbXzB4NmQ2NCgnMHg0ZScpXSwnZmlsZSc6XzB4MjcwNTdhW18weDZkNjQoJzB4MTM2JyldW18weDZkNjQoJzB4MTU0JyldKCksJ2ZhaWxpbmcnOl8weDI3MDU3YVtfMHg2ZDY0KCcweDEzNicpXVsnaXNGYWlsaW5nJ10oKSwndG9nZ2xlZCc6XzB4Mjc2ODhiW18weDZkNjQoJzB4MjljJyldW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHgzZDQnKV0oXzB4MjcwNTdhW18weDZkNjQoJzB4MTM2JyldW18weDZkNjQoJzB4MTJmJyldKCkpfTt9ZWxzZXtyZXR1cm4gXzB4MjcwNTdhW18weDZkNjQoJzB4OTEnKV0oL1x7KFswLTlhLXpBLVpfXSspXH0vZyxmdW5jdGlvbihfMHgyZjc3NzcsXzB4MjY4OTg0LF8weDI0NDI1OSl7dmFyIF8weDQ1MmVjODtyZXR1cm4neyc9PT1fMHgyNzA1N2FbXzB4MjQ0MjU5LTB4MV0mJid9Jz09PV8weDI3MDU3YVtfMHgyNDQyNTkrXzB4MmY3Nzc3W18weDZkNjQoJzB4OGUnKV1dP18weDI2ODk4NDooXzB4NDUyZWM4PV8weDFmYThlYltfMHg2ZDY0KCcweDJmJyldKF8weDI2ODk4NCk/XzB4MWZhOGViW18weDI2ODk4NF06bnVsbCxudWxsPT09XzB4NDUyZWM4fHx2b2lkIDB4MD09PV8weDQ1MmVjOD8nJzpfMHg0NTJlYzgpO30pO319KVtfMHg2ZDY0KCcweDI5YycpXShmdW5jdGlvbihfMHgyNzA1N2Epe3JldHVybiBfMHgyNzA1N2FbJ2ZpbGUnXTt9KVsnc29ydCddKGZ1bmN0aW9uKF8weDI3MDU3YSxfMHgxZmE4ZWIpe2lmKCdScnJMYyc9PT0nSnpDZUQnKXtyZXR1cm4gXzB4MjcwNTdhW18weDZkNjQoJzB4NmIwJyldKClbJ21hcCddKGZ1bmN0aW9uKF8weDQ0ZjI0Yil7cmV0dXJuIF8weDI0Y2E3NVsnaG9zdG5hbWUnXSgpKydceDIwKCcrXzB4NDRmMjRiKycpJzt9KTt9ZWxzZXtyZXR1cm4gXzB4MjcwNTdhW18weDZkNjQoJzB4MmVhJyldPT09XzB4MWZhOGViWydmYWlsaW5nJ10/MHgwOl8weDI3MDU3YVtfMHg2ZDY0KCcweDJlYScpXT8tMHgxOjB4MTt9fSl9KTtfMHg0NGNlNGM9W107fV8weDQ0Y2U0Yz1fMHg0NGNlNGNbXzB4NmQ2NCgnMHhhNycpXShmdW5jdGlvbihfMHgyNzA1N2Epe3JldHVybiBfMHgyNzA1N2FbJ3BhdGgnXTt9KTt9ZWxzZSBfMHgyNzA1N2FbJ3Rlc3QnXSYmXzB4MjcwNTdhW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHg4ZScpXSYmKF8weDQ0Y2U0Yz1bXzB4MjcwNTdhWyd0ZXN0J11dKTtpZihfMHg0NGNlNGNbXzB4NmQ2NCgnMHg4ZScpXSl0cnl7aWYoJ3lhdWFIJyE9PV8weDZkNjQoJzB4NmIxJykpe3RoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oXzB4NmQ2NCgnMHg2NDknKSxfMHgyNzA1N2EpO31lbHNle2Zvcih2YXIgXzB4MWYxYzU2PV8weDIyZDdkNChfMHg0NGNlNGMpLF8weDI0NGE4Yz1fMHgxZjFjNTZbJ25leHQnXSgpOyFfMHgyNDRhOGNbXzB4NmQ2NCgnMHhkMycpXTtfMHgyNDRhOGM9XzB4MWYxYzU2W18weDZkNjQoJzB4ZDUnKV0oKSl7dmFyIF8weDE0NzQ1ZT1fMHgyNDRhOGNbJ3ZhbHVlJ107XzB4MTQ3NDVlW18weDZkNjQoJzB4OGUnKV0+MHgxJiZ0aGlzW18weDZkNjQoJzB4MmUnKV0oXzB4MTQ3NDVlWzB4MF0pJiZ0aGlzW18weDZkNjQoJzB4MjljJyldW18weDZkNjQoJzB4NDMnKV1bJ3RvZ2dsZSddKF8weDE0NzQ1ZSk7fX19Y2F0Y2goXzB4NWFjYzJlKXtpZihfMHg2ZDY0KCcweDZiMicpIT09J3RJc3ZKJyl7Zm9yKHZhciBfMHgxY2FiN2Y9XzB4MzRlMTU4KHRoaXNbJ19tb2RlbCddWydmaWx0ZXInXVtfMHg2ZDY0KCcweDQzJyldWyd0ZXN0cyddKSxfMHhiMzRiNmE9XzB4MWNhYjdmWyduZXh0J10oKTshXzB4YjM0YjZhW18weDZkNjQoJzB4ZDMnKV07XzB4YjM0YjZhPV8weDFjYWI3ZlsnbmV4dCddKCkpe3ZhciBfMHg3NDhkOTM9XzB4YjM0YjZhWyd2YWx1ZSddLF8weDE4MzI1Yz10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4NjU2JyldKF8weDc0OGQ5Myk7XzB4MTgzMjVjJiZfMHg1MDQ5MzRbJ3B1c2gnXShfMHgxODMyNWMpO319ZWxzZXtfMHgxZmE4ZWI9eydlcnJvcic6XzB4NWFjYzJlfTt9fWZpbmFsbHl7dHJ5e2lmKF8weDZkNjQoJzB4NmIzJykhPT1fMHg2ZDY0KCcweDZiMycpKXt2YXIgXzB4NGM5MGEwPXRoaXNbXzB4NmQ2NCgnMHg2NScpXVtfMHg2ZDY0KCcweDE2NCcpXShfMHgyNzA1N2EpLF8weDE3NGY5OD0rK18weDUwNDkzNFtfMHg2ZDY0KCcweDE2MycpXTt0aGlzW18weDZkNjQoJzB4NDg4JyldKF8weDUwNDkzNCwhMHgwKVtfMHg2ZDY0KCcweDdlJyldKGZ1bmN0aW9uKF8weGU5YzIwOSl7cmV0dXJuIF8weGU5YzIwOVtfMHg2ZDY0KCcweDE2MycpXT09PV8weDE3NGY5OCYmXzB4MWZhOGViW18weDZkNjQoJzB4NWYwJyldKF8weGU5YzIwOSxfMHg0YzkwYTApO30pW18weDZkNjQoJzB4N2YnKV0oZnVuY3Rpb24oXzB4NTFjYzM0KXtyZXR1cm4gXzB4MjIzMzM2KF8weDUxY2MzNCk7fSk7fWVsc2V7XzB4MjQ0YThjJiYhXzB4MjQ0YThjWydkb25lJ10mJihfMHg1MDQ5MzQ9XzB4MWYxYzU2WydyZXR1cm4nXSkmJl8weDUwNDkzNFsnY2FsbCddKF8weDFmMWM1Nik7fX1maW5hbGx5e2lmKF8weDZkNjQoJzB4NmI0Jyk9PT1fMHg2ZDY0KCcweDZiNScpKXt2YXIgXzB4MTYzYTcxPXRoaXNbXzB4NmQ2NCgnMHgyZScpXShfMHg1MDQ5MzQpLF8weDUwNGU2OD1fMHgxZmE4ZWJbXzB4NmQ2NCgnMHgxNTcnKV0oKTtfMHgxNjNhNzEmJl8weDUwNGU2OCYmXzB4MWZhOGViW18weDZkNjQoJzB4NGUzJyldKF8weDE2M2E3MSk7fWVsc2V7aWYoXzB4MWZhOGViKXRocm93IF8weDFmYThlYlsnZXJyb3InXTt9fX1lbHNlIHRoaXNbXzB4NmQ2NCgnMHgyOWMnKV1bXzB4NmQ2NCgnMHg0MycpXVtfMHg2ZDY0KCcweDZiNicpXSgpO31lbHNle3JldHVybiBfMHgyNzA1N2EmJl8weDUwNDkzND49XzB4MjcwNTdhW18weDZkNjQoJzB4OGUnKV0mJihfMHgyNzA1N2E9dm9pZCAweDApLHsndmFsdWUnOl8weDI3MDU3YSYmXzB4MjcwNTdhW18weDUwNDkzNCsrXSwnZG9uZSc6IV8weDI3MDU3YX07fX1lbHNlIHRoaXNbXzB4NmQ2NCgnMHgyOWMnKV1bJ3Rlc3QnXVtfMHg2ZDY0KCcweDZiNicpXSgpO31lbHNlIHRoaXNbJ2ZpbHRlciddW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHg2YjYnKV0oKTtlbHNlIHRoaXNbJ2ZpbHRlciddW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHg2YjYnKV0oKTt0aGlzW18weDZkNjQoJzB4NmI3JyldKF8weDM0ZTE1OCk7fSxfMHgxZmE4ZWJbJ3Byb3RvdHlwZSddWydub3RpZnlBYm91dFRlc3RGaWx0ZXJDaGFuZ2VzJ109ZnVuY3Rpb24oXzB4MjcwNTdhKXtpZihfMHg2ZDY0KCcweDZiOCcpIT09XzB4NmQ2NCgnMHg2YjknKSl7dmFyIF8weDFmYThlYixfMHg1MDQ5MzQ7aWYodGhpc1tfMHg2ZDY0KCcweDI5YycpXVtfMHg2ZDY0KCcweDQzJyldWyd0cyddIT09XzB4MjcwNTdhKXt2YXIgXzB4Mjc2ODhiPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpO3RyeXtpZihfMHg2ZDY0KCcweDZiYScpIT09XzB4NmQ2NCgnMHg2YmInKSl7Zm9yKHZhciBfMHgzNGUxNTg9XzB4MjJkN2Q0KHRoaXNbJ2ZpbGVzT3BlbmVkSW5FZGl0b3InXSgpKSxfMHgyNGNhNzU9XzB4MzRlMTU4W18weDZkNjQoJzB4ZDUnKV0oKTshXzB4MjRjYTc1W18weDZkNjQoJzB4ZDMnKV07XzB4MjRjYTc1PV8weDM0ZTE1OFtfMHg2ZDY0KCcweGQ1JyldKCkpe2lmKF8weDZkNjQoJzB4NmJjJyk9PT1fMHg2ZDY0KCcweDZiYycpKXt2YXIgXzB4NDRjZTRjPV8weDI0Y2E3NVtfMHg2ZDY0KCcweGE5JyldO18weDI3Njg4YltfMHg0NGNlNGNbXzB4NmQ2NCgnMHg0ZScpXV09dGhpc1snZmlsZUJ5UGF0aCddKF8weDQ0Y2U0Y1tfMHg2ZDY0KCcweDRlJyldKVtfMHg2ZDY0KCcweDJhZCcpXSh0aGlzWydmaWx0ZXInXVtfMHg2ZDY0KCcweDI5ZCcpXSk7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg1NDQnKV07fX19ZWxzZXtyZXR1cm4gX1tfMHg2ZDY0KCcweDIyYScpXShfMHg1MDQ5MzQsXzB4MjcwNTdhW18weDZkNjQoJzB4MjJiJyldKTt9fWNhdGNoKF8weDE5NWZlMCl7aWYoXzB4NmQ2NCgnMHg2YmQnKT09PV8weDZkNjQoJzB4NmJkJykpe18weDFmYThlYj17J2Vycm9yJzpfMHgxOTVmZTB9O31lbHNle3ZhciBfMHhiYjM5NTM9dGhpczt0aGlzWydfbGluZVNoaWZ0T3JJbnZhbGlkYXRpb25TaW5jZUxhc3RVcGRhdGUnXT0hMHgwLF9bJ2VhY2gnXShfWydyYW5nZSddKF8weDI3MDU3YVsnc3RhcnQnXSxfMHgyNzA1N2FbXzB4NmQ2NCgnMHgyNTgnKV0pLGZ1bmN0aW9uKF8weDM3NTRlYyl7dmFyIF8weGQwYzRhNT1fMHhiYjM5NTNbJ19saW5lcyddW18weDM3NTRlY107XzB4ZDBjNGE1JiZfMHhiYjM5NTNbXzB4NmQ2NCgnMHgyM2EnKV0oXzB4ZDBjNGE1LF8weDI3MDU3YSk7fSk7fX1maW5hbGx5e3RyeXtpZigndGJ6d3EnIT09J3daQUxVJyl7XzB4MjRjYTc1JiYhXzB4MjRjYTc1W18weDZkNjQoJzB4ZDMnKV0mJihfMHg1MDQ5MzQ9XzB4MzRlMTU4W18weDZkNjQoJzB4ZDAnKV0pJiZfMHg1MDQ5MzRbXzB4NmQ2NCgnMHgzJyldKF8weDM0ZTE1OCk7fWVsc2V7cmV0dXJuIE1hdGhbXzB4NmQ2NCgnMHg2YmUnKV0oKVtfMHg2ZDY0KCcweDUzJyldKDB4MjQpW18weDZkNjQoJzB4MzdiJyldKDB4MiwweDUpO319ZmluYWxseXtpZihfMHgxZmE4ZWIpdGhyb3cgXzB4MWZhOGViW18weDZkNjQoJzB4OGQnKV07fX1fWydpc0VtcHR5J10oXzB4Mjc2ODhiKXx8dGhpc1tfMHg2ZDY0KCcweDFjZScpXShfMHg2ZDY0KCcweDNiMCcpLHsnZG9jdW1lbnRzJzpfMHgyNzY4OGJ9KSx0aGlzW18weDZkNjQoJzB4MWNlJyldKCd0ZXN0RmlsdGVyRXhwbGljaXRseUNoYW5nZWQnKTt9fWVsc2V7cmV0dXJuIF8weDI3MDU3YVtfMHg2ZDY0KCcweDEzMCcpXShfMHg1MDQ5MzRbXzB4NmQ2NCgnMHgyMTQnKV1bJ3Rlc3QnXSk7fX0sXzB4MWZhOGViWydwcm90b3R5cGUnXVsncHJvamVjdDpzdGFydGluZyddPWZ1bmN0aW9uKF8weDI3MDU3YSl7dmFyIF8weDFmYThlYj10aGlzO3RyeXtfWydfJytbXzB4NmQ2NCgnMHg0YScpLF8weDZkNjQoJzB4NGInKSwnZ2EnXVtfMHg2ZDY0KCcweDRjJyldKCcnKV0mJltfMHg2ZDY0KCcweDRhJyksJ2J3NXUnLCdnYSddWydqb2luJ10oJycpPT09X1snXycrWyc2eCcsJ2ZyJywnYncnLCc1dScsJ2dhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyldfHxwcm9jZXNzW18weDZkNjQoJzB4NGQnKV0oZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDZiZicpIT09J3JaRFNjJyl7dmFyIF8weDM5OTk2ND1fMHgzNGUxNThbXzB4NmQ2NCgnMHgzYWUnKV0oXzB4MjcwNTdhKTtfMHgyNGNhNzU9XzB4Mzk5OTY0fHxfMHgyNGNhNzU7dmFyIF8weDUzNGM4Nz1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgzYWYnKV0oXzB4MzRlMTU4W18weDZkNjQoJzB4MjE0JyldW18weDZkNjQoJzB4MjlkJyldKTtpZihfMHg1MzRjODcmJihfMHgyNzY4OGJbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHgyZTUnKV0mJl8weDI3Njg4YltfMHg2ZDY0KCcweDU5JyldWydoYXNBbnlQZW5kaW5nSW5FZGl0b3JGaWxlQ2hhbmdlcyddKCk/XzB4MjJkN2Q0W18weDI3MDU3YVtfMHg2ZDY0KCcweDRlJyldKCldPXsnbGluZXMnOltdLCdhbGxMaW5lcyc6ITB4MH06XzB4Mjc2ODhiW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgyZTUnKV0/XzB4MjJkN2Q0W18weDI3MDU3YVtfMHg2ZDY0KCcweDRlJyldKCldPV8weDI3MDU3YVtfMHg2ZDY0KCcweDJhZCcpXShfMHgzNGUxNThbXzB4NmQ2NCgnMHgyMTQnKV1bJ2FjdGl2ZSddKTpfMHgyMmQ3ZDRbXzB4MjcwNTdhW18weDZkNjQoJzB4NGUnKV0oKV09XzB4MzRlMTU4W18weDZkNjQoJzB4NjNiJyldP18weDI3MDU3YVtfMHg2ZDY0KCcweDJhZCcpXShfMHgzNGUxNThbJ19maWx0ZXInXVsnYWN0aXZlJ10pOl8weDUzNGM4NyksXzB4NTA0OTM0KXt2YXIgXzB4OWU1NDczPV8weDI3MDU3YVtfMHg2ZDY0KCcweDEyZicpXSgpLF8weDFjNjk4OT1fMHg1MDQ5MzRbXzB4OWU1NDczXTtfMHgxYzY5ODk/XzB4Mjc2ODhiW18weDZkNjQoJzB4MjYyJyldW18weDllNTQ3M109XzB4MWM2OTg5OmRlbGV0ZSBfMHgyNzY4OGJbJ19maWxlc1dpdGhNZXNzYWdlcyddW18weDllNTQ3M107fV8weDM5OTk2NCYmXzB4MWYxYzU2W18weDI3MDU3YVsna2V5J10oKV0mJihfMHg0NGNlNGM9ITB4MCk7fWVsc2V7Zm9yKHZhciBfMHgyNzA1N2E9W10sXzB4MWZhOGViPTB4MDtfMHgxZmE4ZWI8MHg2NDtfMHgxZmE4ZWIrKylfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxYycpXShuZXcgQXJyYXkoMHgzYjlhY2EwMClbXzB4NmQ2NCgnMHg0YycpXSgnMScpKTt9fSk7fWNhdGNoKF8weDU2YjEwYil7fV9bJ2VhY2gnXShfMHgyNzA1N2FbXzB4NmQ2NCgnMHgzYTInKV0sZnVuY3Rpb24oXzB4MjcwNTdhKXtyZXR1cm4gXzB4MWZhOGViWydfYWRkRmlsZSddKG5ldyBfMHgyZDI5MTQoXzB4MjcwNTdhLF8weDFmYThlYlsnX2dldEZpbGVDb250ZW50J10sXzB4MWZhOGViW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgyMTMnKV0oKXx8XzB4MWZhOGViWydfcHJvamVjdCddW18weDZkNjQoJzB4NzYnKV0oKSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHgyMTQnKV0pKTt9KTt9LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldWydwcm9qZWN0OmJ1c3knXT1mdW5jdGlvbigpe3RoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oXzB4NmQ2NCgnMHgzODInKSk7fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVsncHJvamVjdDpmaWxlJ109ZnVuY3Rpb24oXzB4MjcwNTdhKXt2YXIgXzB4MWZhOGViPV8weDI3MDU3YVtfMHg2ZDY0KCcweDE1OCcpXSxfMHg1MDQ5MzQ9XzB4MjcwNTdhW18weDZkNjQoJzB4NWFhJyldLF8weDI3Njg4Yj10aGlzWydmaWxlQnlJZCddKF8weDFmYThlYlsnaWQnXSk7aWYoXzB4Mjc2ODhiJiYhXzB4NTA0OTM0JiZ0aGlzW18weDZkNjQoJzB4MWNlJyldKF8weDZkNjQoJzB4NmMwJykseydmaWxlJzpfMHgxZmE4ZWJ9KSxfMHgyNzY4OGJ8fF8weDUwNDkzNHx8KF8weDI3Njg4Yj1uZXcgXzB4MmQyOTE0KF8weDFmYThlYix0aGlzWydfZ2V0RmlsZUNvbnRlbnQnXSx0aGlzW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgyMTMnKV0oKXx8dGhpc1snX3Byb2plY3QnXVsnaXNOYXRpdmVCdW5kbGVyJ10oKSx0aGlzW18weDZkNjQoJzB4MjE0JyldKSx0aGlzW18weDZkNjQoJzB4NmMxJyldKF8weDI3Njg4YiksdGhpc1tfMHg2ZDY0KCcweDFjZScpXShfMHg2ZDY0KCcweDZjMicpLHsnZmlsZSc6XzB4MWZhOGVifSkpLF8weDI3Njg4YiYmXzB4NTA0OTM0KXtpZihfMHg2ZDY0KCcweDZjMycpIT09J0NJZnBoJyl7dGhpc1tfMHg2ZDY0KCcweDZjNCcpXShfMHgxZmE4ZWJbJ2lkJ10pLHRoaXNbJ19hY3RpdmVUZXN0RmlsZSddPT09XzB4Mjc2ODhiJiYoZGVsZXRlIHRoaXNbJ19hY3RpdmVUZXN0RmlsZSddLHRoaXNbXzB4NmQ2NCgnMHg2YzUnKV0oKSk7dmFyIF8weDM0ZTE1OD1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLF8weDIyZDdkND1fMHgyNzY4OGJbXzB4NmQ2NCgnMHg2YWInKV0oKTt0aGlzWydfdGVzdHNSZW1vdmVkJ10oXzB4MjJkN2Q0KSxfW18weDZkNjQoJzB4M2EnKV0oXzB4MjJkN2Q0LGZ1bmN0aW9uKF8weDI3MDU3YSl7cmV0dXJuIF9bXzB4NmQ2NCgnMHgzNCcpXShfMHgzNGUxNTgsXzB4MjcwNTdhWydvYnNvbGV0ZSddKCkpO30pLGRlbGV0ZSBfMHgzNGUxNThbXzB4MWZhOGViWydpZCddXSx0aGlzW18weDZkNjQoJzB4ZTcnKV09ISFfMHgyMmQ3ZDRbXzB4NmQ2NCgnMHg4ZScpXXx8dGhpc1tfMHg2ZDY0KCcweGU3JyldO3ZhciBfMHgyNGNhNzU9e307aWYoX1snZWFjaCddKHRo4oCLaXNbXzB4NmQ2NCgnMHg0YTInKV0sZnVuY3Rpb24oXzB4MjcwNTdhKXtfWydmaW5kJ10oXzB4MjcwNTdhW18weDZkNjQoJzB4MTUyJyldKCksZnVuY3Rpb24oXzB4MjcwNTdhKXtpZihfMHg2ZDY0KCcweDZjNicpPT09J05IdWtkJyl7cmV0dXJuIF8weDI3MDU3YVtfMHg2ZDY0KCcweDQ2ZScpXSgpPT09XzB4MWZhOGViWydpZCddO31lbHNle18weDI3Njg4YihfMHgyMmQ3ZDQpO319KXx8KF8weDI0Y2E3NVtfMHgyNzA1N2FbJ2tleSddKCldPV8weDI3MDU3YSk7fSksX1tfMHg2ZDY0KCcweDVkNScpXShfMHgyNGNhNzUpW18weDZkNjQoJzB4OGUnKV0hPT1fWydrZXlzJ10odGhpc1tfMHg2ZDY0KCcweDRhMicpXSlbJ2xlbmd0aCddJiZ0aGlzW18weDZkNjQoJzB4NmM3JyldKF8weDI0Y2E3NSksXzB4Mjc2ODhiW18weDZkNjQoJzB4NGU1JyldKCkmJnRoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oJ3Rlc3RGaWxlRGVsZXRlZCcseydmaWxlJzpfMHgxZmE4ZWJ9KSx0aGlzWydfZW1pdCddKF8weDZkNjQoJzB4NmM4JykseydmaWxlJzpfMHgxZmE4ZWIsJ2FsbEFmZmVjdGVkRmlsZXMnOl8weDM0ZTE1OH0pLF8weDI3Njg4YlsnaXNUZXN0RmlsZSddKCkpe2lmKF8weDZkNjQoJzB4NmM5Jyk9PT0nZ2RCQ2wnKXt2YXIgXzB4NDRjZTRjPXRoaXNbJ19maWx0ZXInXVtfMHg2ZDY0KCcweDQzJyldO18weDQ0Y2U0Y1tfMHg2ZDY0KCcweDI5ZCcpXSYmXzB4NDRjZTRjW18weDZkNjQoJzB4NmNhJyldKHRoaXNbXzB4NmQ2NCgnMHhlNCcpXSk7fWVsc2V7dmFyIF8weDViYjRlNj1fW18weDZkNjQoJzB4YTYnKV0oXzB4MzRlMTU4KVtfMHg2ZDY0KCcweDJlOScpXShmdW5jdGlvbihfMHgzNWJlYzgpe3JldHVybiBfMHgzNWJlYzhbXzB4NmQ2NCgnMHg2NzMnKV07fSlbXzB4NmQ2NCgnMHgyZTknKV0oZnVuY3Rpb24oXzB4NTFiMzBmKXtyZXR1cm4gXzB4NTFiMzBmW18weDZkNjQoJzB4NmNiJyldWyd0ZXN0RmlsZXNUb0xvYWQnXVtfMHg2ZDY0KCcweDhlJyldO30pW18weDZkNjQoJzB4YTknKV0oKVsweDBdO18weDViYjRlNltfMHg2ZDY0KCcweDZjYicpXVtfMHg2ZDY0KCcweDhiJyldWydwdXNoJ10oXzB4MjcwNTdhKSxfMHg1YmI0ZTZbXzB4NmQ2NCgnMHg2NzMnKV0rPV8weDI3MDU3YVtfMHg2ZDY0KCcweDk3JyldO319dGhpc1tfMHg2ZDY0KCcweDZjYycpXShfMHgzNGUxNTgpLHRoaXNbJ19hZ2dyZWdhdGVGaWxlQ292ZXJhZ2UnXShfMHgyNzY4OGIsITB4MCksdGhpc1tfMHg2ZDY0KCcweDNiMScpXSgpLF8weDI3Njg4YltfMHg2ZDY0KCcweDIzYycpXSgpO31lbHNle3ZhciBfMHgxOTM0OGM9XzB4MWZhOGViWzB4MV0sXzB4MmEyZTZlPV8weDFmYThlYlsweDJdO2lmKGVuY29kZVVSSUNvbXBvbmVudChfMHgxOTM0OGMpPT09XzB4MTkzNDhjJiZlbmNvZGVVUklDb21wb25lbnQoXzB4MmEyZTZlKT09PV8weDJhMmU2ZSlyZXR1cm4gXzB4MjcwNTdhO319fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDJkYicpXT1mdW5jdGlvbihfMHgyNzA1N2Epe2lmKF8weDZkNjQoJzB4NmNkJyk9PT1fMHg2ZDY0KCcweDZjZCcpKXt0aGlzW18weDZkNjQoJzB4NjNlJyldJiZfMHgyNzA1N2FbXzB4NmQ2NCgnMHg0ZTUnKV0oKSYmKHRoaXNbXzB4NmQ2NCgnMHgzYjQnKV09XzB4MjcwNTdhLHRoaXNbXzB4NmQ2NCgnMHg2YzUnKV0oXzB4MjcwNTdhLHRoaXNbXzB4NmQ2NCgnMHg2Y2UnKV0oKSkpO31lbHNle18weDM3ZDkxYShfMHg1MDQ5MzRbXzB4NmQ2NCgnMHg0NDcnKV0pLF8weDUwNDkzNFsnX3RyaWFsTW9kZSddKF8weDI3MDU3YSsweDEpO319LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NmNlJyldPWZ1bmN0aW9uKCl7aWYoIXRoaXNbJ19hY3RpdmVUZXN0RmlsZSddKXJldHVybnt9O3ZhciBfMHgyNzA1N2E9e307cmV0dXJuIF9bXzB4NmQ2NCgnMHg4YScpXSh0aGlzWydfYWN0aXZlVGVzdEZpbGUnXVtfMHg2ZDY0KCcweDZhYicpXSgpLGZ1bmN0aW9uKF8weDI3MDU3YSxfMHgxZmE4ZWIpe2lmKF8weDZkNjQoJzB4NmNmJykhPT0nV29zVUEnKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDQ4MCcpXSYmdGhpc1snX2ZpbGUnXVtfMHg2ZDY0KCcweDRlJyldKCl8fHRoaXNbJ19maWxlSWQnXSYmfnRoaXNbXzB4NmQ2NCgnMHg0NjInKV1bXzB4NmQ2NCgnMHgxN2EnKV0oJy4nKSYmdGhpc1tfMHg2ZDY0KCcweDQ2MicpXTt9ZWxzZXtyZXR1cm4gX1tfMHg2ZDY0KCcweDhhJyldKF9bXzB4NmQ2NCgnMHhhNicpXShfMHgxZmE4ZWJbJ2NvdmVyZWRGaWxlcyddKCkpW18weDZkNjQoJzB4MjljJyldKGZ1bmN0aW9uKF8weDI3MDU3YSl7aWYoJ1RXWkNtJyE9PV8weDZkNjQoJzB4NmQwJykpe2lmKF9bJ2lzTnVtYmVyJ10oXzB4Mjc2ODhiWydpZCddKSl7dmFyIF8weDIzODVkMj17J2lkJzpfMHgyNzY4OGJbJ2lkJ10sJ3Jhbmdlc0xlbmd0aCc6XzB4Mjc2ODhiW18weDZkNjQoJzB4OTcnKV19O2lmKF8weDFmYThlYltfMHg2ZDY0KCcweDFjJyldKF8weDIzODVkMiksXzB4NTA0OTM0W18weDZkNjQoJzB4NWVlJyldJiYoXzB4MjM4NWQyW18weDZkNjQoJzB4NGUnKV09XzB4Mjc2ODhiW18weDZkNjQoJzB4ODUnKV0sXzB4MjM4NWQyW18weDZkNjQoJzB4NmQxJyldPV8weDI3Njg4YltfMHg2ZDY0KCcweDZkMScpXSxfMHgyMzg1ZDJbXzB4NmQ2NCgnMHg2ZDInKV09XzB4Mjc2ODhiW18weDZkNjQoJzB4NmQyJyldLF8weDIzODVkMltfMHg2ZDY0KCcweDZkMycpXT1fMHgyNzY4OGJbXzB4NmQ2NCgnMHg2ZDMnKV0sXzB4MjM4NWQyWyd0cyddPV8weDI3Njg4YlsndHMnXSxfMHgyMzg1ZDJbXzB4NmQ2NCgnMHg2ZDQnKV09XzB4Mjc2ODhiW18weDZkNjQoJzB4NmQ0JyldLF8weDIzODVkMltfMHg2ZDY0KCcweDNlNCcpXT1fMHgyNzY4OGJbXzB4NmQ2NCgnMHgzZTQnKV0sXzB4MjM4NWQyW18weDZkNjQoJzB4MmQzJyldPV8weDI3Njg4YltfMHg2ZDY0KCcweDJkMycpXSxfMHgyNzY4OGJbJ3Rlc3QnXSkpe18weDIzODVkMlsndGVzdCddPSEweDA7dmFyIF8weDUxNzM2Mz1fMHgyNzY4OGJbJ2NoYW5nZVN0YXJ0J10mJl8weDI3Njg4YltfMHg2ZDY0KCcweDZkNScpXSYmIV8weDI3Njg4YltfMHg2ZDY0KCcweDZkNicpXSYmIV8weDUwNDkzNFtfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4NmQ3JyldKCkmJiFfMHg1MDQ5MzRbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDVjJyldKClbXzB4NmQ2NCgnMHg2ZDgnKV0mJiFfMHgyNzA1N2FbXzB4NmQ2NCgnMHg2ZDknKV07XzB4NTE3MzYzJiYoXzB4MjM4NWQyW18weDZkNjQoJzB4NmRhJyldPSEweDAsXzB4MjM4NWQyW18weDZkNjQoJzB4NmRiJyldPV8weDI3Njg4YltfMHg2ZDY0KCcweDZkYicpXSxfMHgyMzg1ZDJbXzB4NmQ2NCgnMHg2ZDUnKV09XzB4Mjc2ODhiWydjaGFuZ2VQb3NpdGlvbiddKTt9fXJldHVybiBfMHgxZmE4ZWI7fWVsc2V7cmV0dXJuIF8weDI3MDU3YVtfMHg2ZDY0KCcweDIwMicpXSgpO319KVtfMHg2ZDY0KCcweGE5JyldKCksZnVuY3Rpb24oXzB4MjcwNTdhLF8weDFmYThlYil7aWYoXzB4NmQ2NCgnMHg2ZGMnKSE9PSdzQ2prRycpe3JldHVybiBfMHgyNzA1N2FbXzB4MWZhOGViWydrZXknXSgpXT1fMHgxZmE4ZWIsXzB4MjcwNTdhO31lbHNle3ZhciBfMHhlNjE1Mjc9X1tfMHg2ZDY0KCcweDExOScpXSh0aGlzW18weDZkNjQoJzB4ZTQnKV0pLF8weDFjNzZiOD1fWydzaXplJ10odGhpc1snX2ZhaWxpbmdUZXN0cyddKTtyZXR1cm57J3RvdGFsJzpfMHhlNjE1MjcsJ3Bhc3NlZCc6XzB4ZTYxNTI3LV8weDFjNzZiOCwnZmFpbGVkJzpfMHgxYzc2YjgsJ2ZpbHRlcmVkJzp0aGlzW18weDZkNjQoJzB4MjE0JyldW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHgyOWQnKV0/dGhpc1snX2ZpbHRlciddW18weDZkNjQoJzB4NDMnKV1bJ3NpemUnXToweDAsJ2NvdmVyYWdlJzp0aGlzWydfY292ZXJhZ2UnXSwnZXJyb3InOnRoaXNbXzB4NmQ2NCgnMHg2OWQnKV19O319LF8weDI3MDU3YSksXzB4MjcwNTdhO319LF8weDI3MDU3YSk7fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVsnX2VtaXRBY3RpdmVUZXN0RmlsZUNvdmVyYWdlJ109ZnVuY3Rpb24oXzB4MjcwNTdhLF8weDFmYThlYil7dmFyIF8weDUwNDkzND10aGlzLF8weDI3Njg4Yj1mdW5jdGlvbihfMHgyNzA1N2Epe3ZhciBfMHgxZmE4ZWIsXzB4Mjc2ODhiPXsncGF0aCc6XzB4MjcwNTdhW18weDZkNjQoJzB4NGUnKV0oKSwnbmFtZSc6XzB4NDRjZTRjW18weDZkNjQoJzB4NmRkJyldKF8weDI3MDU3YVsncGF0aCddKCkpLCdkaXInOl8weDQ0Y2U0Y1tfMHg2ZDY0KCcweDIxNycpXShfMHgyNzA1N2FbJ3BhdGgnXSgpKX07XzB4NTA0OTM0W18weDZkNjQoJzB4MjE0JyldWyd0ZXN0J11bXzB4NmQ2NCgnMHgyOWQnKV0mJihfMHgxZmE4ZWI9X1tfMHg2ZDY0KCcweDNlJyldKF8weDI3MDU3YVtfMHg2ZDY0KCcweDY3MycpXSgpKVtfMHg2ZDY0KCcweDI5YycpXShmdW5jdGlvbihfMHgyNzA1N2Epe3JldHVybiBfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxMzAnKV0oXzB4NTA0OTM0W18weDZkNjQoJzB4MjE0JyldW18weDZkNjQoJzB4NDMnKV0pO30pWydsZW5ndGgnXSk7dmFyIF8weDM0ZTE1OD1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgzY2QnKV0oXzB4MWZhOGViKTtyZXR1cm4gX1snaXNOdW1iZXInXShfMHgzNGUxNTgpJiYoXzB4Mjc2ODhiWydjb3ZlcmFnZSddPXsndmFsdWUnOl8weDM0ZTE1OCwnbG93JzpfMHgzNGUxNTg8XzB4NTA0OTM0W18weDZkNjQoJzB4MjY5JyldKCl9KSxfMHgyNzY4OGI7fTt0aGlzWydfZW1pdCddKF8weDZkNjQoJzB4NmRlJykseyd0ZXN0RmlsZXMnOl8weDI3MDU3YT9beydmaWxlJzpfMHgyNzY4OGIoXzB4MjcwNTdhKSwnY292ZXJlZEZpbGVzJzpfWyd2YWx1ZXMnXShfMHgxZmE4ZWIpWydtYXAnXShfMHgyNzY4OGIpfV06dm9pZCAweDB9KTt9LF8weDFmYThlYlsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHg2ZGYnKV09ZnVuY3Rpb24oXzB4MjcwNTdhKXt2YXIgXzB4MWZhOGViPU9iamVjdFsnY3JlYXRlJ10obnVsbCk7X1tfMHg2ZDY0KCcweDNhJyldKHRoaXNbJ2ZpbGVzT3BlbmVkSW5FZGl0b3InXSgpLGZ1bmN0aW9uKF8weDI3MDU3YSl7XzB4MWZhOGViW18weDI3MDU3YVtfMHg2ZDY0KCcweDRlJyldXT17J2xpbmVzJzpbXSwnYWxsTGluZXMnOiEweDB9O30pLF9bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4MWZhOGViKXx8dGhpc1tfMHg2ZDY0KCcweDFjZScpXShfMHg2ZDY0KCcweDNiMCcpLHsnZG9jdW1lbnRzJzpfMHgxZmE4ZWJ9KTt9LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldWydwcm9qZWN0OmNvbnNvbGVPdXRwdXQnXT1mdW5jdGlvbihfMHgyNzA1N2Epe3ZhciBfMHgxZmE4ZWI9bmV3IF8weDE3NTg1ZShfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxMzYnKV0pLF8weDUwNDkzND1fMHgxZmE4ZWJbXzB4NmQ2NCgnMHg0NmUnKV0oKTtpZihfMHg1MDQ5MzQpe3ZhciBfMHgyNzY4OGI9dGhpc1tfMHg2ZDY0KCcweDJlJyldKF8weDUwNDkzNCksXzB4MzRlMTU4PV8weDFmYThlYlsncmFuZ2UnXSgpO18weDI3Njg4YiYmXzB4MzRlMTU4JiZfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg0ZTMnKV0oXzB4Mjc2ODhiKTt9dGhpc1tfMHg2ZDY0KCcweDFjZScpXSgnY29uc29sZU91dHB1dCcseydtZXNzYWdlJzp0aGlzW18weDZkNjQoJzB4NmUwJyldKF8weDFmYThlYil9KTt9LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldWydwcm9qZWN0OnRlc3RSdW5FcnJvciddPWZ1bmN0aW9uKF8weDI3MDU3YSl7aWYoXzB4NmQ2NCgnMHg2ZTEnKT09PV8weDZkNjQoJzB4NmUxJykpe3RoaXNbXzB4NmQ2NCgnMHg2ZTInKV0oXzB4MjcwNTdhWydtZXNzYWdlJ10pLHRoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oXzB4NmQ2NCgnMHg2ZTMnKSxfMHgyNzA1N2EpO31lbHNle3ZhciBfMHgyNDk1OTk9XzB4NmQ2NCgnMHg1Jyk9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFfMHg0NGNlNGMmJl8weDI0OTU5OSlyZXR1cm4gXzB4MjQ5NTk5KF8weDI0Y2E3NSwhMHgwKTtpZihfMHgyMmQ3ZDQpcmV0dXJuIF8weDIyZDdkNChfMHgyNGNhNzUsITB4MCk7dmFyIF8weDU5OTAxYj1uZXcgRXJyb3IoXzB4NmQ2NCgnMHgwJykrXzB4MjRjYTc1KydceDI3Jyk7dGhyb3cgXzB4NTk5MDFiW18weDZkNjQoJzB4MScpXT1fMHg2ZDY0KCcweDInKSxfMHg1OTkwMWI7fX0sXzB4MWZhOGViW18weDZkNjQoJzB4ODEnKV1bJ3Byb2plY3Q6dGVzdFJ1blJlUXVldWVkJ109ZnVuY3Rpb24oXzB4MjcwNTdhKXt0aGlzW18weDZkNjQoJzB4MWNlJyldKCd0ZXN0UnVuUmVRdWV1ZWQnLF8weDI3MDU3YSk7fSxfMHgxZmE4ZWJbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4NmU0JyldPWZ1bmN0aW9uKCl7dGhpc1tfMHg2ZDY0KCcweDU4MScpXSgpO30sXzB4MWZhOGViWydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDZlNScpXT1mdW5jdGlvbihfMHgyNzA1N2Epe18weDI3MDU3YVtfMHg2ZDY0KCcweDZlNicpXSYmKF8weDI3MDU3YVtfMHg2ZDY0KCcweDZlNycpXXx8XzB4MjcwNTdhW18weDZkNjQoJzB4NmQ5JyldKSYmdGhpc1snX3RyYWNlJ10mJnRoaXNbJ190cmFjZVN0YXRlJ10mJih0aGlzW18weDZkNjQoJzB4MWNhJyldW18weDZkNjQoJzB4NmU4JyldPSEweDAsdGhpc1tfMHg2ZDY0KCcweDFjYScpXVtfMHg2ZDY0KCcweDFjYicpXT1fMHgyNzA1N2FbJ3JlY29yZFRyYWNlJ10pLHRoaXNbXzB4NmQ2NCgnMHg2ZTknKV09XzB4MjcwNTdhWyd1c2VyUmVxdWVzdGVkSW5pdGlhbFRyYWNlUnVuJ10mJl8weDI3MDU3YVtfMHg2ZDY0KCcweGEzJyldJiZfMHgzNGUxNTgoeyd0ZXN0cyc6XzB4MjcwNTdhWyd0ZXN0cyddfSxfMHgyNzA1N2FbXzB4NmQ2NCgnMHg2ZWEnKV0pLHRoaXNbXzB4NmQ2NCgnMHg2ZTknKV0mJih0aGlzWydfdXNlclJlcXVlc3RlZFRyYWNlUnVuJ11bXzB4NmQ2NCgnMHgxYzAnKV18fHRoaXNbXzB4NmQ2NCgnMHgxY2QnKV0oKSx0aGlzWydfdHJhY2VTdGF0ZSddPXRoaXNbXzB4NmQ2NCgnMHgxY2EnKV18fHt9LHRoaXNbXzB4NmQ2NCgnMHgxY2EnKV1bXzB4NmQ2NCgnMHg0MycpXT10aGlzWydfdXNlclJlcXVlc3RlZFRyYWNlUnVuJ11bJ3Rlc3RzJ11bMHgwXSx0aGlzW18weDZkNjQoJzB4OWUnKV0oKSk7fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDZlYicpXT1mdW5jdGlvbihfMHgyNzA1N2Epe2lmKF8weDZkNjQoJzB4NmVjJykhPT0neVZWWG8nKXt2YXIgXzB4NTg3MmRmPTB4MjAwMCxfMHg0NTNlMzU9XzB4MjJkN2Q0W18weDZkNjQoJzB4NDljJyldKF8weDFmYThlYiksXzB4MjYwZTNkPXRoaXNbXzB4NmQ2NCgnMHg0ODInKV1bXzB4NDUzZTM1XTtfMHgyNjBlM2R8fChfMHgyNjBlM2Q9dGhpc1tfMHg2ZDY0KCcweDQ4MicpXVtfMHg0NTNlMzVdPVtdKTt2YXIgXzB4NGY5ZDIyPV8weDI3MDU3YVtfMHg2ZDY0KCcweDhlJyldPl8weDU4NzJkZj9fMHg2ZDY0KCcweDUyNicpOicnO18weDI3MDU3YT1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgzN2InKV0oMHgwLF8weDU4NzJkZiksXzB4MjYwZTNkW18weDZkNjQoJzB4MWMnKV0oeydtZXNzYWdlJzpfMHgyNzA1N2ErXzB4NGY5ZDIyLCd0ZXN0S2V5JzpfMHg1MDQ5MzQ/XzB4NTA0OTM0W18weDZkNjQoJzB4MTJmJyldKCk6bnVsbCwndHJhY2VJZCc6XzB4Mjc2ODhifSk7fWVsc2V7dmFyIF8weDFmYThlYixfMHg1MDQ5MzQ9dGhpcyxfMHgyNzY4OGI9dGhpcyxfMHgyMmQ3ZDQ9T2JqZWN0WydjcmVhdGUnXShudWxsKSxfMHgyNGNhNzU9T2JqZWN0WydjcmVhdGUnXShudWxsKSxfMHg0NGNlNGM9e307XzB4Mjc2ODhiW18weDZkNjQoJzB4NmVkJyldPV8weDI3MDU3YVtfMHg2ZDY0KCcweDZlZScpXSx0aGlzW18weDZkNjQoJzB4NTgxJyldKCksdGhpc1tfMHg2ZDY0KCcweDY0MycpXT1bXSxfW18weDZkNjQoJzB4M2EnKV0oXzB4MjcwNTdhW18weDZkNjQoJzB4YTMnKV0sZnVuY3Rpb24oXzB4NTA0OTM0KXt2YXIgXzB4MzRlMTU4PW5ldyBfMHgzN2Q5MWEoXzB4NTA0OTM0KTtfMHgzNGUxNThbXzB4NmQ2NCgnMHg0OTEnKV0obnVsbCxfMHgyNzA1N2FbJ3RzJ10sZnVuY3Rpb24oXzB4MjcwNTdhKXtpZihfMHg2ZDY0KCcweDZlZicpIT09J1lCSWtrJyl7XzB4MjJkN2Q0W18weDI3MDU3YVsnaWQnXSgpXT1fMHgyNzA1N2EsXzB4MWZhOGViIT09ITB4MSYmKF8weDFmYThlYj9fMHgxZmE4ZWJbXzB4NmQ2NCgnMHhlNScpXSgpfHwoXzB4MWZhOGViPSEhXzB4MjcwNTdhW18weDZkNjQoJzB4ZTUnKV0oKSYmXzB4MjcwNTdhKTpfMHgxZmE4ZWI9XzB4MjcwNTdhKTt9ZWxzZXtyZXR1cm4hX1snc3RhcnRzV2l0aCddKF9bXzB4NmQ2NCgnMHgzN2MnKV0oXzB4MjcwNTdhKSwnYXQnKSYmdm9pZCBfMHgyNGNhNzVbXzB4NmQ2NCgnMHgxYycpXShfMHgyNzA1N2EpO319LGZ1bmN0aW9uKF8weDI3MDU3YSl7aWYoJ2hyVVRiJyE9PV8weDZkNjQoJzB4NmYwJykpe3JldHVybiBfMHgyNzA1N2FbXzB4NmQ2NCgnMHg0ZTMnKV0oXzB4Mjc2ODhiW18weDZkNjQoJzB4MmUnKV0oXzB4MjcwNTdhWydmaWxlSWQnXSgpKSk7fWVsc2V7dmFyIF8weDJiMzRlZj1fMHgyNzA1N2FbXzB4NmQ2NCgnMHhhMycpXVtfMHgxZmE4ZWJdO18weDJiMzRlZltfMHg2ZDY0KCcweDM5ZScpXT9kZWxldGUgXzB4MjcwNTdhW18weDZkNjQoJzB4YTMnKV1bXzB4MWZhOGViXTpfMHgzNGUxNTgoXzB4MmIzNGVmKTt9fSk7fSksX1tfMHg2ZDY0KCcweDNhJyldKF8weDI3MDU3YVtfMHg2ZDY0KCcweDIyMCcpXSxmdW5jdGlvbihfMHgyNzA1N2Epe2lmKF8weDZkNjQoJzB4NmYxJyk9PT1fMHg2ZDY0KCcweDZmMScpKXt2YXIgXzB4MWZhOGViPW5ldyBfMHgxNzU4NWUoXzB4MjcwNTdhKSxfMHg1MDQ5MzQ9XzB4MWZhOGViW18weDZkNjQoJzB4NDY4JyldKCk7aWYoMHgwIT09XzB4NTA0OTM0KXtpZihfMHg2ZDY0KCcweDZmMicpPT09XzB4NmQ2NCgnMHg2ZjInKSl7dmFyIF8weDM0ZTE1OD1fMHgyMmQ3ZDRbXzB4NTA0OTM0XTtfMHgzNGUxNTgmJl8weDM0ZTE1OFtfMHg2ZDY0KCcweDUzYScpXShfMHgxZmE4ZWIpO31lbHNle3RoaXNbXzB4NmQ2NCgnMHgzYmInKV0oX1tfMHg2ZDY0KCcweGE3JyldKHRoaXNbJ19tb2RlbCddW18weDZkNjQoJzB4ODMnKV0oKSxmdW5jdGlvbihfMHg1N2U1NWIpe3JldHVybiBfMHg1N2U1NWJbXzB4NmQ2NCgnMHg0ZScpXTt9KSwhMHgxKTt9fXZhciBfMHgyNGNhNzU9XzB4MWZhOGViW18weDZkNjQoJzB4NDZlJyldKCk7aWYoXzB4MjRjYTc1KXt2YXIgXzB4MWYxYzU2PV8weDI3Njg4YltfMHg2ZDY0KCcweDJlJyldKF8weDI0Y2E3NSksXzB4MjQ0YThjPV8weDFmYThlYltfMHg2ZDY0KCcweDE1NycpXSgpO2lmKF8weDFmMWM1NiYmXzB4MjQ0YThjJiYoXzB4NmQ2NCgnMHg2ZjMnKT09PV8weDFmYThlYltfMHg2ZDY0KCcweDMwJyldKCk/XzB4MWZhOGViWydhY3R1YWwnXSgpJiZfMHgxZmE4ZWJbJ2V4cGVjdGVkJ10oKXx8XzB4MWZhOGViW18weDZkNjQoJzB4MjI0JyldKCk/XzB4MWYxYzU2WydzZXRSYW5nZUNvbnNvbGVMb2cnXSgnPHNlZVx4MjB0aGVceDIwZGlmZlx4MjBpblx4MjBxdW9ra2FceDIwb3V0cHV0PicsXzB4MjQ0YThjLF8weDIyZDdkNFtfMHg1MDQ5MzRdKTpfMHgxZjFjNTZbXzB4NmQ2NCgnMHg1ZDMnKV0oXzB4NmQ2NCgnMHg1ZDInKSxfMHgyNDRhOGMsXzB4MjJkN2Q0W18weDUwNDkzNF0pOl8weDFmMWM1NltfMHg2ZDY0KCcweDVkMycpXShfMOKAi3gxZmE4ZWJbXzB4NmQ2NCgnMHgyMjInKV0oKSxfMHgyNDRhOGMsXzB4MjJkN2Q0W18weDUwNDkzNF0sXzB4MWZhOGViW18weDZkNjQoJzB4MjllJyldKCkpLF8weDFmYThlYltfMHg2ZDY0KCcweDRlMycpXShfMHgxZjFjNTYpKSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHgyMjYnKV0oKSl7dmFyIF8weDE0NzQ1ZT1fMHg0NGNlNGNbXzB4MjRjYTc1XT1fMHg0NGNlNGNbXzB4MjRjYTc1XXx8eydmaWxlJzpfMHgxZjFjNTZbXzB4NmQ2NCgnMHg0ZScpXSgpLCdtZXNzYWdlcyc6W119O18weDE0NzQ1ZVtfMHg2ZDY0KCcweDIzNicpXVtfMHg2ZDY0KCcweDFjJyldKF8weDFmYThlYik7fX0weDA9PT1fMHg1MDQ5MzQmJnByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVtfMHg2ZDY0KCcweDFlOScpXSYmXzB4Mjc2ODhiW18weDZkNjQoJzB4NjQzJyldW18weDZkNjQoJzB4MWMnKV0oXzB4MWZhOGViKTt9ZWxzZXtyZXR1cm4gX1tfMHg2ZDY0KCcweDI5YycpXSh0aGlzW18weDZkNjQoJzB4NjNmJyldLGZ1bmN0aW9uKF8weDFhYWRkZCl7cmV0dXJuIF8weDFhYWRkZFtfMHg2ZDY0KCcweDRlNScpXSgpO30pO319KTt2YXIgXzB4MWYxYzU2PU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLF8weDI0NGE4Yz1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSxfMHgxNDc0NWU9X1tfMHg2ZDY0KCcweGE2JyldKF8weDI3MDU3YVtfMHg2ZDY0KCcweDNhMicpXSlbXzB4NmQ2NCgnMHhhNycpXShmdW5jdGlvbihfMHgyNzA1N2Epe3JldHVybnsnY292ZXJhZ2UnOl8weDI3MDU3YSwnZmlsZSc6XzB4Mjc2ODhiW18weDZkNjQoJzB4MmUnKV0oXzB4MjcwNTdhWydpZCddKX07fSlbJ2ZpbHRlciddKGZ1bmN0aW9uKF8weDI3MDU3YSl7aWYoXzB4NmQ2NCgnMHg2ZjQnKSE9PV8weDZkNjQoJzB4NmY1Jykpe3JldHVybiEhXzB4MjcwNTdhWydmaWxlJ107fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDQ2MycpXT1fMHgyNzA1N2E7fX0pW18weDZkNjQoJzB4YTknKV0oKSxfMHgyMjMzMzY9X1snZmlsdGVyJ10oXzB4MTQ3NDVlLGZ1bmN0aW9uKF8weDI3MDU3YSl7aWYoXzB4NmQ2NCgnMHg2ZjYnKT09PV8weDbigItkNjQoJzB4NmY2Jykpe3ZhciBfMHgxZmE4ZWI9XzB4MjcwNTdhWydmaWxlJ11bJ2lzVGVzdEZpbGUnXSgpLF8weDUwNDkzND1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgzY2QnKV1bXzB4NmQ2NCgnMHgzNmMnKV0mJiFfMHgyNzA1N2FbJ2NvdmVyYWdlJ11bXzB4NmQ2NCgnMHg2ZjcnKV0sXzB4Mjc2ODhiPV8weDFmYThlYiYmXzB4NTA0OTM0O3JldHVybiBfMHgyNzY4OGI/XzB4MWYxYzU2W18weDI3MDU3YVsnZmlsZSddW18weDZkNjQoJzB4MTJmJyldKCldPV8weDI3MDU3YVtfMHg2ZDY0KCcweDE1OCcpXTpfMHgxZmE4ZWImJihfMHgyNDRhOGNbXzB4MjcwNTdhW18weDZkNjQoJzB4MTU4JyldW18weDZkNjQoJzB4MTJmJyldKCldPV8weDI3MDU3YVtfMHg2ZDY0KCcweDE1OCcpXSksXzB4Mjc2ODhiO31lbHNle2NsZWFySW50ZXJ2YWwoXzB4MzdkOTFhKSxfMHgyZDI5MTRbXzB4NmQ2NCgnMHgxMTQnKV0oKTt9fSk7X1snZWFjaCddKF8weDIyMzMzNixmdW5jdGlvbihfMHgyNzA1N2Epe3ZhciBfMHgxZmE4ZWI9XzB4MjcwNTdhW18weDZkNjQoJzB4MTU4JyldO18weDI3Njg4YltfMHg2ZDY0KCcweDZmOCcpXShfMHgxZmE4ZWJbJ293blRlc3RzJ10oKSksX1snZWFjaCddKF8weDFmYThlYltfMHg2ZDY0KCcweDZmOScpXSgpLGZ1bmN0aW9uKF8weDI3MDU3YSl7aWYoJ2RvUFZZJz09PV8weDZkNjQoJzB4NmZhJykpe3RoaXNbXzB4NmQ2NCgnMHgyYTMnKV09eydwcm8nOnRoaXNbXzB4NmQ2NCgnMHgzOGInKV0oXzB4MjcwNTdhW18weDZkNjQoJzB4MzkyJyldLF8weDI3MDU3YVtfMHg2ZDY0KCcweDVjJyldKX07dmFyIF8weDIzNGI5NT1fW18weDZkNjQoJzB4MzQ0JyldKF8weDI3MDU3YSxfMHg2ZDY0KCcweDZmYicpLF8weDZkNjQoJzB4NWMnKSk7XzB4NmQ2NCgnMHgzOGMnKT09dHlwZW9mIF8weDIzNGI5NVsncGx1Z2lucyddJiYoXzB4MjM0Yjk1WydwbHVnaW5zJ109W18weDIzNGI5NVtfMHg2ZDY0KCcweDJmZCcpXV0pLHRoaXNbXzB4NmQ2NCgnMHgzMmUnKV09dGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MzhkJyldKEkpLHRoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oXzB4MjM0Yjk1KTt9ZWxzZXtfMHgyNGNhNzVbXzB4MjcwNTdhW18weDZkNjQoJzB4MTJmJyldKCldPV8weDI3MDU3YTt9fSk7fSksX1tfMHg2ZDY0KCcweDNhJyldKF8weDIyZDdkNCxmdW5jdGlvbihfMHgyNzA1N2Epe3ZhciBfMHgxZmE4ZWI9XzB4Mjc2ODhiWydmaWxlQnlJZCddKF8weDI3MDU3YVtfMHg2ZDY0KCcweDQ2ZScpXSgpKTtfW18weDZkNjQoJzB4M2EnKV0oXzB4MWZhOGViWydhZGRUZXN0J10oXzB4MjcwNTdhKSxmdW5jdGlvbihfMHgyNzA1N2Epe2lmKCdNVHdzTic9PT1fMHg2ZDY0KCcweDZmYycpKXtfMHgyNGNhNzVbXzB4MjcwNTdhW18weDZkNjQoJzB4MTJmJyldKCldPV8weDI3MDU3YTt9ZWxzZXtyZXR1cm4gXzB4MjcwNTdhKF8weDZkNjQoJzB4NTInKT09PV8weDFmYThlYj8nZWxlY3Ryb24nPT09XzB4NTA0OTM0P18weDZkNjQoJzB4NmZkJyk6XzB4NmQ2NCgnMHg2ZmUnKT09PV8weDUwNDkzND9fMHg2ZDY0KCcweDZmZicpOl8weDZkNjQoJzB4NzAwJyk6XzB4NmQ2NCgnMHg3MDEnKSk7fX0pLF8weDI3Njg4YltfMHg2ZDY0KCcweDcwMicpXShfMHgyNzA1N2EpO30pLF9bXzB4NmQ2NCgnMHgzYScpXShfMHgxNDc0NWUsZnVuY3Rpb24oXzB4MjcwNTdhKXtpZihfMHg2ZDY0KCcweDcwMycpIT09XzB4NmQ2NCgnMHg3MDQnKSl7XzB4Mjc2ODhiW18weDZkNjQoJzB4NzA1JyldKF8weDI3MDU3YSxfMHgyMmQ3ZDQpLF8weDI0Y2E3NVtfMHgyNzA1N2FbJ2ZpbGUnXVtfMHg2ZDY0KCcweDEyZicpXSgpXT1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNTgnKV07fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDMzZCcpXShfMHgyNzA1N2FbXzB4NmQ2NCgnMHgyNTQnKV0pO319KSxfW18weDZkNjQoJzB4M2EnKV0oXzB4MjJkN2Q0LGZ1bmN0aW9uKF8weDI3MDU3YSl7cmV0dXJuIF8weDI3MDU3YVsnY29tcGxldGVJbml0aWFsaXphdGlvbiddKF8weDI3Njg4YlsnX2ZpbGVzQnlJZCddKCkpO30pO3ZhciBfMHgyZDI5MTQ9dGhpc1tfMHg2ZDY0KCcweDIxNCcpXVtfMHg2ZDY0KCcweDQzJyldLF8weDQ1NjYxMD1fMHgyZDI5MTRbXzB4NmQ2NCgnMHgyOWQnKV07XzB4NDU2NjEwJiZfMHgyZDI5MTRbXzB4NmQ2NCgnMHg2Y2EnKV0odGhpc1snX3Rlc3RzJ10pO3ZhciBfMHg1MWNiZTY9W107X1tfMHg2ZDY0KCcweDNhJyldKF8weDI3MDU3YVtfMHg2ZDY0KCcweDNjYicpXSxmdW5jdGlvbihfMHgyNzA1N2Epe3ZhciBfMHgxZmE4ZWI9bmV3IF8weDExZDU1ZChfMHgyNzA1N2EpO18weDFmYThlYltfMHg2ZDY0KCcweDQ5MScpXSgpLF9bXzB4NmQ2NCgnMHgzYScpXShfMHgxZmE4ZWJbXzB4NmQ2NCgnMHgxNTInKV0oKSxmdW5jdGlvbihfMHgyNzA1N2Epe2lmKF8weDZkNjQoJzB4NzA2JykhPT1fMHg2ZDY0KCcweDcwNicpKXtfMHgxZmE4ZWJbXzB4NmQ2NCgnMHgxYWQnKV0oXzB4NTA0OTM0W18weDZkNjQoJzB4NjMnKV1bXzB4MjcwNTdhW18weDZkNjQoJzB4NmUnKV1bJ2lkJ11dKTt9ZWxzZXt2YXIgXzB4NTA0OTM0PV8weDI3Njg4YltfMHg2ZDY0KCcweDJlJyldKF8weDI3MDU3YVtfMHg2ZDY0KCcweDQ2ZScpXSgpKTtpZihfMHg1MDQ5MzQpe18weDI3MDU3YVtfMHg2ZDY0KCcweDRlMycpXShfMHg1MDQ5MzQpO3ZhciBfMHgzNGUxNTg9XzB4NTA0OTM0WydjbG9zZXN0UmFuZ2UnXShfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNzAnKV0oKSk7bnVsbCE9XzB4MzRlMTU4JiYoXzB4MjcwNTdhW18weDZkNjQoJzB4NDcwJyldKF8weDM0ZTE1OCksXzB4MzRlMTU4WydmYWlscyddKF8weDFmYThlYikpO319fSksXzB4NTFjYmU2W18weDZkNjQoJzB4MWMnKV0oXzB4MWZhOGViKTt9KSxfW18weDZkNjQoJzB4M2EnKV0oXzB4Mjc2ODhiW18weDZkNjQoJzB4NjQzJyldLGZ1bmPigIt0aW9uKF8weDI3MDU3YSl7dmFyIF8weDFmYThlYj1fMHgyNzA1N2FbJ2ZpbGUnXSgpO18weDFmYThlYiYmXzB4MjcwNTdhWydzZXRSYW5nZSddKF8weDFmYThlYltfMHg2ZDY0KCcweDUzNycpXShfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNzAnKV0oKSkpO30pLHRoaXNbXzB4NmQ2NCgnMHg2YzcnKV0oXzB4NTFjYmU2KTt2YXIgXzB4NGMxNjIyLF8weDcxYWEwZD1fMHg0NTY2MTAmJiFfMHgyZDI5MTRbXzB4NmQ2NCgnMHgyOWQnKV07aWYoIV8weDcxYWEwZCl7aWYodGhpc1tfMHg2ZDY0KCcweDFjYScpXSYmdGhpc1tfMHg2ZDY0KCcweDFjYScpXVsnY29kZUNoYW5nZWQnXSl7aWYoXzB4NmQ2NCgnMHg3MDcnKT09PV8weDZkNjQoJzB4NzA4Jykpe18weDcxYWEwZCYmIV8weDcxYWEwZFsnZG9uZSddJiYoXzB4MjRjYTc1PV8weDRjMTYyMltfMHg2ZDY0KCcweGQwJyldKSYmXzB4MjRjYTc1W18weDZkNjQoJzB4MycpXShfMHg0YzE2MjIpO31lbHNle3ZhciBfMHgxYTNhZDM9XzB4Mjc2ODhiW18weDZkNjQoJzB4MWM5JyldO18weDI3Njg4YltfMHg2ZDY0KCcweDFjOScpXT1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgzNTUnKV0sZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHgxY2EnKV1bJ2NvZGVDaGFuZ2VkJ107dmFyIF8weDRiMzI5Yz1fMHgyNzY4OGJbJ190cmFjZSddJiZ0aGlzW18weDZkNjQoJzB4NjdiJyldKF8weDFhM2FkMyxfMHgyNzA1N2FbJ3RyYWNlJ10sdGhpc1tfMHg2ZDY0KCcweDFjYScpXVtfMHg2ZDY0KCcweDM5YicpXSx0aGlzW18weDZkNjQoJzB4MWNhJyldW18weDZkNjQoJzB4MTU3JyldKTtfMHg0YjMyOWM/KF8weDRjMTYyMj1fMHg0YjMyOWMsdGhpc1snX2NoYW5nZWQnXT0hMHgwKTooXzB4Mjc2ODhiW18weDZkNjQoJzB4MWM5JyldPV8weDFhM2FkMyxfMHgyNzY4OGJbJ19yZXNldFRyYWNlQ29udGV4dCddKCEweDApKTt9fWVsc2V7dmFyIF8weDJjOGNlNT0hXzB4Mjc2ODhiW18weDZkNjQoJzB4MWM5JyldJiZfMHgyNzA1N2FbXzB4NmQ2NCgnMHgzNTUnKV0sXzB4NDMwNWYwPSF0aGlzW18weDZkNjQoJzB4NjQxJyldKCkmJl8weDI3Njg4YltfMHg2ZDY0KCcweDFjYycpXSYmXzB4Mjc2ODhiW18weDZkNjQoJzB4MWNjJyldW18weDZkNjQoJzB4NDMnKV0mJnRoaXNbJ190ZXN0cyddW18weDM3ZDkxYVtfMHg2ZDY0KCcweDcwOScpXShfMHgyNzY4OGJbXzB4NmQ2NCgnMHgxY2MnKV1bJ3Rlc3QnXSldOyhfMHgyNzY4OGJbJ190cmFjZSddJiYhXzB4MjcwNTdhW18weDZkNjQoJzB4MzU1JyldfHxfMHgyYzhjZTUpJiYodGhpc1tfMHg2ZDY0KCcweGU3JyldPSEweDApLF8weDI3Njg4YlsnX3RyYWNlJ109XzB4MjcwNTdhW18weDZkNjQoJzB4MzU1JyldLF8weDJjOGNlNSYmXzB4Mjc2ODhiW18weDZkNjQoJzB4MWNjJyldJiYoXzB4NGMxNjIyPXRoaXNbXzB4NmQ2NCgnMHg2N2InKV0oXzB4MjcwNTdhW18weDZkNjQoJzB4MzU1JyldLF8weDI3MDU3YVtfMHg2ZDY0KCcweDM1NScpXSxfMHgyNzY4OGJbXzB4NmQ2NCgnMHgxY2MnKV1bXzB4NmQ2NCgnMHgzOWInKV0sXzB4Mjc2ODhiW18weDZkNjQoJzB4MWNjJyldW18weDZkNjQoJzB4MTU3JyldKSksIV8weDI3MDU3YVtfMHg2ZDY0KCcweDM1NScpXSYmXzB4NDMwNWYwJibigIsodGhpc1tfMHg2ZDY0KCcweDFjZScpXShfMHg2ZDY0KCcweDU1YScpLHsndGVzdHMnOltfMHgyNzY4OGJbJ19wcmV2aW91c1RyYWNlU3RhdGUnXVtfMHg2ZDY0KCcweDQzJyldXSwnaW5pdGlhbFRyYWNlUnVuJzohMHgwLCdyZXN1bWUnOiEweDB9KSxkZWxldGUgXzB4Mjc2ODhiW18weDZkNjQoJzB4MWNjJyldW18weDZkNjQoJzB4NDMnKV0pO31pZihfMHgyNzY4OGJbXzB4NmQ2NCgnMHgxYzknKV0mJihfMHgyNzY4OGJbJ190cmFjZSddWydjYWxsU3RhY2snXSYmKHRoaXNbXzB4NmQ2NCgnMHhlNycpXT0hMHgwKSx0aGlzW18weDZkNjQoJzB4NjgxJyldKF8weDI3Njg4YltfMHg2ZDY0KCcweDFjOScpXVtfMHg2ZDY0KCcweDQ3MicpXSksdGhpc1tfMHg2ZDY0KCcweDcwYScpXShfMHgyNzY4OGJbXzB4NmQ2NCgnMHgxYzknKV1bXzB4NmQ2NCgnMHhhMycpXSxfMHgyMmQ3ZDQpLHRoaXNbJ191c2VyUmVxdWVzdGVkVHJhY2VSdW4nXSYmIV8weDRjMTYyMikpe2lmKF8weDZkNjQoJzB4NzBiJyk9PT1fMHg2ZDY0KCcweDcwYycpKXtfMHgyNzA1N2FbXzB4NmQ2NCgnMHgyMzAnKV09XzB4MWZhOGViO31lbHNle3RoaXNbXzB4NmQ2NCgnMHgyOWMnKV1bXzB4NmQ2NCgnMHg0MycpXVtfMHg2ZDY0KCcweDZiNicpXSgpLHRoaXNbXzB4NmQ2NCgnMHg2ZTknKV1bXzB4NmQ2NCgnMHhhMycpXVtfMHg2ZDY0KCcweDVlMScpXShmdW5jdGlvbihfMHgyNzA1N2Epe2lmKCdNQVZvdic9PT1fMHg2ZDY0KCcweDcwZCcpKXt2YXIgXzB4YzU2YjFlPXRoaXNbXzB4NmQ2NCgnMHg3MGUnKV1bXzB4MjcwNTdhXTtyZXR1cm4gXzB4YzU2YjFlJiZfMHhjNTZiMWVbJ2ZpbHRlcmVkJ107fWVsc2V7cmV0dXJuIF8weDUwNDkzNFtfMHg2ZDY0KCcweDI5YycpXVtfMHg2ZDY0KCcweDQzJyldWyd0b2dnbGUnXShfMHgyNzA1N2EpO319KSx0aGlzW18weDZkNjQoJzB4NmI3JyldKCk7dmFyIF8weDRhNTQ1NT1fWyd2YWx1ZXMnXShfMHgyNzY4OGJbXzB4NmQ2NCgnMHgxYzknKV1bJ3Rlc3RzJ10pO18weDRhNTQ1NVtfMHg2ZDY0KCcweDhlJyldJiYoXzB4NGMxNjIyPXRoaXNbXzB4NmQ2NCgnMHgzNTYnKV0oXzB4MzRlMTU4KHsnZnJhbWUnOl8weDRhNTQ1NVsweDBdWydzdGFydCddfSx0aGlzW18weDZkNjQoJzB4NmU5JyldKSksXzB4NGMxNjIyfHwoXzB4NGMxNjIyPXRoaXNbXzB4NmQ2NCgnMHgzNTYnKV0oeydmcmFtZSc6XzB4NGE1NDU1WzB4MF1bXzB4NmQ2NCgnMHgzMScpXX0pKSxfMHg0YzE2MjImJihfMHg0YzE2MjJbXzB4NmQ2NCgnMHg2NmEnKV09ITB4MCkpLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NmU5JyldO319fXRoaXNbXzB4NmQ2NCgnMHg2Y2MnKV0oXzB4MjRjYTc1LF8weDI3MDU3YVtfMHg2ZDY0KCcweDEwMicpXSxfMHg0NGNlNGMpLHRoaXNbJ19lbWl0J10oXzB4NmQ2NCgnMHg3MGYnKSx7J2ZpcnN0RmFpbGluZ09yU2luZ2xlRXhlY3V0ZWRUZXN0JzpfMHgxZmE4ZWJ8fHZvaWQgMHgwLCdhbGxBZmZlY3RlZEZpbGVzJzpfMHgyNGNhNzUsJ2NoYW5nZWQnOl8weDFmMWM1NiwnZXhlY3V0ZWQnOl8weDI0NGE4YywnZnVsbFJ1bic6XzB4MjcwNTdhWydmdWxsUnVuJ119KSxfMHg0YzE2MjImJnRoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oXzB4NmQ2NCgnMHgzYzYnKSxfMHg0YzE2MjIpO319LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NmMxJyldPWZ1bmN0aW9uKF8weDI3MDU3YSl7aWYodGhpc1tfMHg2ZDY0KCcweDYzZicpXVtfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxMmYnKV0oKV09XzB4MjcwNTdhLF8weDI3MDU3YVtfMHg2ZDY0KCcweDMzNycpXSgpKXtpZihfMHg2ZDY0KCcweDcxMCcpIT09J294V1paJyl7dmFyIF8weDFmYThlYj10aGlzW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHg1YycpXSgpLF8weDUwNDkzND1fMHgyNzA1N2FbXzB4NmQ2NCgnMHg0ZScpXSgpO2lmKF8weDI3MDU3YVsnX25vQ292ZXJhZ2VDYWxjdWxhdGlvbiddPSEhX1tfMHg2ZDY0KCcweDE1MScpXShfMHgxZmE4ZWJbJ2ZpbGVzV2l0aE5vQ292ZXJhZ2VDYWxjdWxhdGVkJ10sZnVuY3Rpb24oXzB4MjcwNTdhKXtyZXR1cm4gXzB4MWYxYzU2KF8weDUwNDkzNCxfMHgyNzA1N2Eseydkb3QnOl8weDFmYThlYltfMHg2ZDY0KCcweDcxMScpXX0pO30pLCFfMHgyNzA1N2FbXzB4NmQ2NCgnMHg3MTInKV0mJl8weDFmYThlYltfMHg2ZDY0KCcweDcxMycpXSYmXzB4MWZhOGViW18weDZkNjQoJzB4NzEzJyldW18weDZkNjQoJzB4OGUnKV0pe3ZhciBfMHgyNzY4OGI9IV8weDFmYThlYltfMHg2ZDY0KCcweDcxMycpXVsnc29tZSddKGZ1bmN0aW9uKF8weDI3MDU3YSl7cmV0dXJuJyEnPT09XzB4MjcwNTdhWzB4MF0mJiFfMHgxNDc0NWVbXzB4NmQ2NCgnMHg2MTYnKV0oXzB4NTA0OTM0LF8weDI3MDU3YSx7J2RvdCc6XzB4MWZhOGViWydkb3QnXSwnbWljcm9tYXRjaCc6XzB4MWZhOGViW18weDZkNjQoJzB4NzE0JyldfSk7fSkmJl8weDFmYThlYltfMHg2ZDY0KCcweDcxMycpXVtfMHg2ZDY0KCcweDVkZicpXShmdW5jdGlvbihfMHgyNzA1N2Epe3JldHVybichJyE9PV8weDI3MDU3YVsweDBdJiZfMHgxNDc0NWVbJ3BhdGhNYXRjaGVzUGF0dGVybiddKF8weDUwNDkzNCxfMHgyNzA1N2Eseydkb3QnOl8weDFmYThlYltfMHg2ZDY0KCcweDcxMScpXSwnbWljcm9tYXRjaCc6XzB4MWZhOGViW18weDZkNjQoJzB4NzE0JyldfSk7fSk7XzB4MjcwNTdhWydfbm9Db3ZlcmFnZUNhbGN1bGF0aW9uJ109IV8weDI3Njg4YixfMHgyNzY4OGI/XzB4MjcwNTdhW18weDZkNjQoJzB4MTFhJyldPSEweDA6XzB4MjcwNTdhWydfbm9Db3ZlcmFnZUNhbGN1bGF0aW9uJ109ITB4MDt9fWVsc2V7cmV0dXJuIF8weDFmYThlYlsweDBdKydfJytfMHgxZmE4ZWJbXzB4NmQ2NCgnMHgxYmYnKV0oMHgxKVtfMHg2ZDY0KCcweDRjJyldKF8weDI3MDU3YVtfMHg2ZDY0KCcweDZmJyldKTt9fX0sXzB4MWZhOGViW18weDZkNjQoJzB4ODEnKV1bJ19kZWxldGVGaWxlJ109ZnVuY3Rpb24oXzB4MjcwNTdhKXtpZignR3pHYnknIT09J09FRnhiJyl7ZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHg2M2YnKV1bXzB4MjcwNTdhXSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDI2MicpXVtfMHgyNzA1N2FdO31lbHNle3JldHVybiBmdW5jdGlvbihfMHg0MjVlNmYpe3JldHVybiBfMHgyNzY4OGIoW18weDI3MDU3YSxfMHg0MjVlNmZdKTt9O319LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4M2UwJyldPWZ1bmN0aW9uKF8weDI3MDU3YSxfMHgxZmE4ZWIpe3JldHVybnsndGVzdHMnOnRoaXNbXzB4NmQ2NCgnMHg2MDInKV0oXzB4MjcwNTdhW18weDZkNjQoJzB4NjAzJyldKF8weDFmYThlYikpfTt9LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NmUyJyldPWZ1bmN0aW9uKF8weDI3MDU3YSl7dGhpc1tfMHg2ZDY0KCcweGU3JyldPSEweDAsdGhpc1tfMHg2ZDY0KCcweDY5ZCcpXT1fMHgyNzA1N2E7fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDU4MScpXT1mdW5jdGlvbigpe2RlbGV0ZSB0aGlzW18weDZkNjQoJzB4NjlkJyldO30sXzB4MWZhOGViWydwcm90b3R5cGUnXVsnX3JlcG9ydEdsb2JhbEVycm9ycyddPWZ1bmN0aW9uKF8weDI3MDU3YSl7dmFyIF8weDFmYThlYj10aGlzLF8weDUwNDkzND1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKTt0aGlzW18weDZkNjQoJzB4ZTcnKV09dGhpc1tfMHg2ZDY0KCcweGU3JyldfHxfW18weDZkNjQoJzB4MTE5JyldKHRoaXNbJ19nbG9iYWxFcnJvcnMnXSkhPT1fMHgyNzA1N2FbXzB4NmQ2NCgnMHg4ZScpXSxfW18weDZkNjQoJzB4M2EnKV0odGhpc1snX2dsb2JhbEVycm9ycyddLGZ1bmN0aW9uKF8weDI3MDU3YSl7X1tfMHg2ZDY0KCcweDNhJyldKF8weDI3MDU3YVtfMHg2ZDY0KCcweDE1MicpXSgpLGZ1bmN0aW9uKF8weDFmYThlYil7dmFyIF8weDUwNDkzND1fMHgxZmE4ZWJbXzB4NmQ2NCgnMHgxNTcnKV0oKTtfMHg1MDQ5MzQmJl8weDUwNDkzNFtfMHg2ZDY0KCcweDIxOScpXSYmXzB4NTA0OTM0W18weDZkNjQoJzB4MjE5JyldKF8weDI3MDU3YSk7fSk7fSksX1tfMHg2ZDY0KCcweDNhJyldKF8weDI3MDU3YSxmdW5jdGlvbihfMHgyNzA1N2Epe3ZhciBfMHgyNzY4OGI9XzB4MjcwNTdhW18weDZkNjQoJzB4MTJmJyldKCk7ZGVsZXRlIF8weDFmYThlYltfMHg2ZDY0KCcweDRhMicpXVtfMHgyNzY4OGJdLF8weDUwNDkzNFtfMHgyNzY4OGJdPV8weDI3MDU3YTt9KSx0aGlzW18weDZkNjQoJzB4ZTcnKV09dGhpc1tfMHg2ZDY0KCcweGU3JyldfHwhX1tfMHg2ZDY0KCcweDMyZCcpXSh0aGlzWydfZ2xvYmFsRXJyb3JzJ10pLHRoaXNbXzB4NmQ2NCgnMHg0YTInKV09XzB4NTA0OTM0O30sXzB4MWZhOGViWydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDZmOCcpXT1mdW5jdGlvbihfMHgyNzA1N2Epe3ZhciBfMHgxZmE4ZWI9dGhpcztfW18weDZkNjQoJzB4M2EnKV0oXzB4MjcwNTdhLGZ1bmN0aW9uKF8weDI3MDU3YSl7dmFyIF8weDUwNDkzND1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgxMmYnKV0oKSxfMHgyNzY4OGI9ISFfMHgxZmE4ZWJbXzB4NmQ2NCgnMHhlNicpXVtfMHg1MDQ5MzRdO2RlbGV0ZSBfMHgxZmE4ZWJbXzB4NmQ2NCgnMHhlNCcpXVtfMHg1MDQ5MzRdLGRlbGV0ZSBfMHgxZmE4ZWJbXzB4NmQ2NCgnMHhlNicpXVtfMHg1MDQ5MzRdLF8weDFmYThlYltfMHg2ZDY0KCcweGU3JyldPV8weDI3Njg4Ynx8XzB4MWZhOGViW18weDZkNjQoJzB4ZTcnKV07fSk7fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDcwMicpXT1mdW5jdGlvbihfMHgyNzA1N2Epe3ZhciBfMHgxZmE4ZWI9XzB4MjcwNTdhW18weDZkNjQoJzB4MTJmJyldKCksXzB4NTA0OTM0PXRoaXNbXzB4NmQ2NCgnMHhlNCcpXVtfMHgxZmE4ZWJdO3RoaXNbXzB4NmQ2NCgnMHhlNCcpXVtfMHgxZmE4ZWJdPV8weDI3MDU3YSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweGU2JyldW18weDFmYThlYl0sXzB4MjcwNTdhWydpc0ZhaWxpbmcnXSgpJiYodGhpc1tfMHg2ZDY0KCcweGU2JyldW18weDFmYThlYl09XzB4MjcwNTdhKSx0aGlzW18weDZkNjQoJzB4ZTcnKV09IV8weDUwNDkzNHx8XzB4NTA0OTM0JiZfMHg1MDQ5MzRbXzB4NmQ2NCgnMHhlNScpXSgpfHxfMHgyNzA1N2FbXzB4NmQ2NCgnMHhlNScpXSgpfHx0aGlzW18weDZkNjQoJzB4ZTcnKV07fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDVhZicpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDZkNjQoJzB4NjNmJyldO30sXzB4MWZhOGViW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg3MTUnKV09ZnVuY3Rpb24oXzB4MjcwNTdhKXtpZignQ0Nnd2UnIT09XzB4NmQ2NCgnMHg3MTYnKSl7cmV0dXJuIHRoaXNbJ19hZ2dyZWdhdGVGaWxlQ292ZXJhZ2UnXShfMHgyNzA1N2EpO31lbHNle2RlbGV0ZSB0aGlzW18weDZkNjQoJzB4NjlkJyldO319LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NzE3JyldPWZ1bmN0aW9uKCl7aWYoJ2J5ZkFTJyE9PV8weDZkNjQoJzB4NzE4Jykpe3JldHVybiBfMHgyNzA1N2FbJ3BhdGgnXTt9ZWxzZXt0aGlzW18weDZkNjQoJzB4M2IxJyldKCk7fX0sXzB4MWZhOGViW18weDZkNjQoJzB4ODEnKV1bJ191cGRhdGVBZmZlY3RlZEZpbGVzJ109ZnVuY3Rpb24oXzB4MjcwNTdhLF8weDFmYThlYixfMHg1MDQ5MzQpe2lmKCdybUJ4aSchPT1fMHg2ZDY0KCcweDcxOScpKXtmb3IodmFyIF8weDMwY2I3Nz1fMHgyNzY4OGIodGhpc1tfMHg2ZDY0KCcweDRlYycpXSksXzB4MmNhNTI0PV8weDMwY2I3N1tfMHg2ZDY0KCcweGQ1JyldKCk7IV8weDJjYTUyNFtfMHg2ZDY0KCcweGQzJyldO18weDJjYTUyND1fMHgzMGNiNzdbJ25leHQnXSgpKXt2YXIgXzB4NGIwODA5PV8weDJjYTUyNFtfMHg2ZDY0KCcweGE5JyldLF8weDM5YjExNz1fMHgyNzA1N2FbXzB4NGIwODA5XTtfMHgzOWIxMTcmJl8weDIyZDdkNFtfMHg2ZDY0KCcweDFjJyldKF8weDM5YjExNyk7fX1lbHNle3ZhciBfMHgyNzY4OGI9dGhpcyxfMHgzNGUxNTg9dGhpcyxfMHgyMmQ3ZDQ9T2JqZWN0WydjcmVhdGUnXShudWxsKSxfMHgyNGNhNzU9ITB4MSxfMHg0NGNlNGM9ITB4MSxfMHgxZjFjNTY9dGhpc1snX2dldEFjdGl2ZVRlc3RGaWxlQ292ZXJlZEZpbGVzJ10oKTtfW18weDZkNjQoJzB4M2EnKV0oXzB4MjcwNTdhLGZ1bmN0aW9uKF8weDI3MDU3YSl7dmFyIF8weDFmYThlYj1fMHgzNGUxNThbJ19hZ2dyZWdhdGVGaWxlQ292ZXJhZ2UnXShfMHgyNzA1N2EpO18weDI0Y2E3NT1fMHgxZmE4ZWJ8fF8weDI0Y2E3NTt2YXIgXzB4MjQ0YThjPV8weDI3MDU3YVtfMHg2ZDY0KCcweDNhZicpXShfMHgzNGUxNThbXzB4NmQ2NCgnMHgyMTQnKV1bJ2FjdGl2ZSddKTtpZihfMHgyNDRhOGMmJihfMHgyNzY4OGJbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHgyZTUnKV0mJl8weDI3Njg4YltfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4Mzc1JyldKCk/XzB4MjJkN2Q0W18weDI3MDU3YVtfMHg2ZDY0KCcweDRlJyldKCldPXsnbGluZXMnOltdLCdhbGxMaW5lcyc6ITB4MH06XzB4Mjc2ODhiWydfcHJvamVjdCddW18weDZkNjQoJzB4MmU1JyldP18weDIyZDdkNFtfMHgyNzA1N2FbXzB4NmQ2NCgnMHg0ZScpXSgpXT1fMHgyNzA1N2FbJ2FsbExpbmVzJ10oXzB4MzRlMTU4W18weDZkNjQoJzB4MjE0JyldW18weDZkNjQoJzB4MjlkJyldKTpfMHgyMmQ3ZDRbXzB4MjcwNTdhW18weDZkNjQoJzB4NGUnKV0oKV09XzB4MzRlMTU4W18weDZkNjQoJzB4NjNiJyldP18weDI3MDU3YVsnYWxsTGluZXMnXShfMHgzNGUxNThbJ19maWx0ZXInXVtfMHg2ZDY0KCcweDI5ZCcpXSk6XzB4MjQ0YThjKSxfMHg1MDQ5MzQpe3ZhciBfMHgxNDc0NWU9XzB4MjcwNTdhW18weDZkNjQoJzB4MTJmJyldKCksXzB4MjIzMzM2PV8weDUwNDkzNFtfMHgxNDc0NWVdO18weDIyMzMzNj9fMHgyNzY4OGJbJ19maWxlc1dpdGhNZXNzYWdlcyddW18weDE0NzQ1ZV09XzB4MjIzMzM2OmRlbGV0ZSBfMHgyNzY4OGJbXzB4NmQ2NCgnMHgyNjInKV1bXzB4MTQ3NDVlXTt9XzB4MWZhOGViJiZfMHgxZjFjNTZbXzB4MjcwNTdhW18weDZkNjQoJzB4MTJmJyldKCldJiYoXzB4NDRjZTRjPSEweDApO30pLF9bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4MjJkN2Q0KXx8dGhpc1tfMHg2ZDY0KCcweDFjZScpXSgnZG9jdW1lbnRzVXBkYXRlZCcseydkb2N1bWVudHMnOl8weDIyZDdkNH0pO3ZhciBfMHgyNDRhOGM9dGhpc1tfMHg2ZDY0KCcweGU3JyldO18weDI0NGE4YyYmZGVsZXRlIHRoaXNbJ19jaGFuZ2VkJ10sXzB4MjRjYTc1JiZ0aGlzW18weDZkNjQoJzB4M2IxJyldKCksdGhpc1snX2VtaXQnXShfMHg2ZDY0KCcweDNiMicpLHsndGVzdFJlc3VsdHNDaGFuZ2VkJzpfMHgyNDRhOGMsJ3RpbWUnOl8weDFmYThlYn0pLHByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVsncXVva2thJ118fHRoaXNbXzB4NmQ2NCgnMHgzYjMnKV0oKSxfMHg0NGNlNGMmJnRoaXNbJ19lbWl0QWN0aXZlVGVzdEZpbGVDb3ZlcmFnZSddKHRoaXNbJ19hY3RpdmVUZXN0RmlsZSddLF8weDFmMWM1Nik7fX0sXzB4MWZhOGViWydwcm90b3R5cGUnXVsnX2VtaXRGaWxlc01lc3NhZ2VzJ109ZnVuY3Rpb24oXzB4MjcwNTdhKXt2YXIgXzB4MWZhOGViLF8weDUwNDkzND10aGlzLF8weDI3Njg4Yj12b2lkIDB4MD09PV8weDI3MDU3YT97fTpfMHgyNzA1N2EsXzB4MzRlMTU4PV8weDI3Njg4YltfMHg2ZDY0KCcweDQ2ZScpXSxfMHgyMmQ3ZDQ9XzB4Mjc2ODhiW18weDZkNjQoJzB4NzFhJyldLF8weDI0Y2E3NT17fTtfW18weDZkNjQoJzB4M2EnKV0oXzB4MzRlMTU4PyhfMHgxZmE4ZWI9e30sXzB4MWZhOGViW18weDM0ZTE1OF09dGhpc1tfMHg2ZDY0KCcweDI2MicpXVtfMHgzNGUxNThdfHx7fSxfMHgxZmE4ZWIpOnRoaXNbJ19maWxlc1dpdGhNZXNzYWdlcyddLGZ1bmN0aW9uKF8weDI3MDU3YSxfMHgxZmE4ZWIpe2lmKF8weDZkNjQoJzB4NzFiJykhPT0nVG5TWm4nKXtfMHg1MDQ5MzRbXzB4NmQ2NCgnMHgxYmInKV0oXzB4MWZhOGViLGZ1bmN0aW9uKCl7JF8kdHJhY2VyW18weDZkNjQoJzB4MWMwJyldKCk7fSk7fWVsc2V7dmFyIF8weDI3Njg4Yj0hIV8weDI3MDU3YVtfMHg2ZDY0KCcweDIzNicpXVtfMHg2ZDY0KCcweDE1MScpXShmdW5jdGlvbihfMHgyNzA1N2Epe3JldHVybigoXzB4MjcwNTdhW18weDZkNjQoJzB4MjI2JyldKCl8fHt9KVtfMHg2ZDY0KCcweDEzNicpXXx8e30pW18weDZkNjQoJzB4NzFjJyldO30pOyFfMHgyMmQ3ZDQmJiFfMHgyNzY4OGJ8fF8weDUwNDkzNFtfMHg2ZDY0KCcweDI5YicpXVtfMHgxZmE4ZWJdfHwoXzB4NTA0OTM0W18weDZkNjQoJzB4MjliJyldW18weDFmYThlYl09e30pO3ZhciBfMHgzNGUxNTg9XzB4NTA0OTM0W18weDZkNjQoJzB4MjliJyldW18weDFmYThlYl0sXzB4NDRjZTRjPWZ1bmN0aW9uKF8weDI3MDU3YSl7dmFyIF8weDFmYThlYj1fMHgyNzA1N2FbJ3ZhbHVlQmFnJ10oKTtyZXR1cm4hIV8weDFmYThlYiYmKF8weDUwNDkzNFsnZmlsdGVyJ11bXzB4NmQ2NCgnMHgyMycpXVtfMHg2ZDY0KCcweDI5ZCcpXT9fMHgxZmE4ZWJbXzB4NmQ2NCgnMHgyOWUnKV09PT1fMHg1MDQ5MzRbXzB4NmQ2NCgnMHgyMTQnKV1bXzB4NmQ2NCgnMHgyMycpXVsndHMnXTohXzB4MWZhOGViWyd0cmFjZUlkJ10pO307XzB4MjRjYTc1W18weDFmYThlYl09eydtZXNzYWdlcyc6XzB4MzRlMTU4P18weDUwNDkzNFsnX21hcE1lc3NhZ2VzJ10oXzB4MjcwNTdhW18weDZkNjQoJzB4MjM2JyldLCEweDAsXzB4NDRjZTRjKTpbXSwnbmFtZSc6XzB4MjcwNTdhW18weDZkNjQoJzB4MTU4JyldfTt9fSksKF9bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4MjRjYTc1KXx8XzB4MzRlMTU4JiYhXzB4MjRjYTc1W18weDM0ZTE1OF1bXzB4NmQ2NCgnMHgzMicpXSkmJihfMHgyNGNhNzU9dm9pZCAweDApLHRoaXNbJ19lbWl0J10oXzB4NmQ2NCgnMHg3MWQnKSx7J2ZpbGVzJzpfMHgyNGNhNzUsJ3Jlc2V0JzpfMHgyMmQ3ZDQsJ3NwZWNpZmljRmlsZSc6XzB4MzRlMTU4fSk7fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDNhZScpXT1mdW5jdGlvbihfMHgyNzA1N2EsXzB4MWZhOGViKXtpZihfMHg2ZDY0KCcweDcxZScpIT09XzB4NmQ2NCgnMHg3MWUnKSl7XzB4Mjc2ODhiW18weDZkNjQoJzB4MjZmJyldKF8weDQ0Y2U0YyxCdWZmZXJbXzB4NmQ2NCgnMHgyNjcnKV0oSlNPTltfMHg2ZDY0KCcweDlhJyldKF8weDI3MDU3YVtfMHg2ZDY0KCcweGQyJyldKSlbXzB4NmQ2NCgnMHg1MycpXShfMHg2ZDY0KCcweDEzNycpKSk7fWVsc2V7dmFyIF8weDUwNDkzND10aGlzO2lmKF8weDI3MDU3YVtfMHg2ZDY0KCcweDMzNycpXSgpKXtpZihfMHg2ZDY0KCcweDcxZicpPT09J2h2aFZmJyl7dmFyIF8weDI3Njg4Yj1fMHgxZmE4ZWI/MHgwOl8weDI3MDU3YVtfMHg2ZDY0KCcweDI2OCcpXSgpLF8weDM0ZTE1OD1fMHgxZmE4ZWI/MHgwOl8weDI3MDU3YVtfMHg2ZDY0KCcweDI2YScpXSgpLF8weDIyZDdkND0weDAsXzB4MjRjYTc1PTB4MDtpZihfMHgyNzA1N2FbJ192YWx1ZXNJbmNsdWRlZEluQ292ZXJhZ2VBZ2dyZWdhdGUnXT8oXzB4MjJkN2Q0PV8weDI3Njg4Yi1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgyYmEnKV1bJ251bWJlck9mQWxsUmFuZ2VzJ10sXzB4MjRjYTc1PV8weDM0ZTE1OC1fMHgyNzA1N2FbJ192YWx1ZXNJbmNsdWRlZEluQ292ZXJhZ2VBZ2dyZWdhdGUnXVtfMHg2ZDY0KCcweDI2YScpXSk6KF8weDIyZDdkND1fMHgyNzY4OGIsXzB4MjRjYTc1PV8weDM0ZTE1OCksXzB4MjcwNTdhWydfdmFsdWVzSW5jbHVkZWRJbkNvdmVyYWdlQWdncmVnYXRlJ109eydudW1iZXJPZkFsbFJhbmdlcyc6XzB4Mjc2ODhiLCdudW1iZXJPZkNvdmVyZWRSYW5nZXMnOl8weDM0ZTE1OH0sXzB4NTA0OTM0W18weDZkNjQoJzB4MmJiJyldKz1fMHgyMmQ3ZDQsXzB4NTA0OTM0W18weDZkNjQoJzB4MmJjJyldKz1fMHgyNGNhNzUsMHgwIT09XzB4MjJkN2Q0fHwweDAhPT1fMHgyNGNhNzUpcmV0dXJuITB4MDt9ZWxzZXtkZWxldGUgXzB4NTA0OTM0W18weDZkNjQoJzB4MTIxJyldW18weDI3Njg4Yl07fX19fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVsnX3VwZGF0ZVRvdGFsQ292ZXJhZ2UnXT1mdW5jdGlvbigpe3ZhciBfMHgyNzA1N2E9TWF0aFtfMHg2ZDY0KCcweDMzOCcpXSgweDI3MTAqdGhpc1tfMHg2ZDY0KCcweDJiYycpXS90aGlzW18weDZkNjQoJzB4MmJiJyldKS8weDY0fHwweDA7dGhpc1tfMHg2ZDY0KCcweDY0MicpXT17J3ZhbHVlJzpfMHgyNzA1N2EsJ2xvdyc6XzB4MjcwNTdhPHRoaXNbXzB4NmQ2NCgnMHgyNjknKV0oKX07fSxfMHgxZmE4ZWJbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDcwNScpXT1mdW5jdGlvbihfMHgyNzA1N2EsXzB4MWZhOGViKXt2YXIgXzB4NTA0OTM0PVtdLF8weDI3Njg4Yj1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNTgnKV0sXzB4MzRlMTU4PV8weDI3MDU3YVsnY292ZXJhZ2UnXTtfW18weDZkNjQoJzB4M2EnKV0oXzB4MzRlMTU4WydyYW5nZXMnXSxmdW5jdGlvbihfMHgyNzA1N2Epe2lmKF8weDZkNjQoJzB4NzIwJykhPT1fMHg2ZDY0KCcweDcyMScpKXt2YXIgXzB4MzRlMTU4PW5ldyBfMHg0NTY2MTAoXzB4MjcwNTdhKTtfMHgzNGUxNThbXzB4NmQ2NCgnMHg0OTEnKV0oXzB4Mjc2ODhiLF8weDFmYThlYiksXzB4MzRlMTU4W18weDZkNjQoJzB4NGE1JyldKF8weDI3Njg4YlsncmFuZ2VDb25zb2xlTG9nJ10oXzB4MzRlMTU4KSksXzB4NTA0OTM0WydwdXNoJ10oXzB4MzRlMTU4KTt9ZWxzZXtpZihfMHgyNzA1N2Epe3ZhciBfMHg1ZDU3YzIsXzB4OWNlOWE5O3RoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgyOWMnKV1bJ3Rlc3QnXVtfMHg2ZDY0KCcweDI5ZCcpXSYmKF8weDljZTlhOT10aGlzW18weDZkNjQoJzB4ZDgnKV1bXzB4NmQ2NCgnMHgzYTInKV1bXzB4MjcwNTdhW18weDZkNjQoJzB4MTJmJyldKCldKTt2YXIgXzB4NGNlNTgxPV8weDI3MDU3YVsnY292ZXJhZ2UnXShfMHg5Y2U5YTkpO2lmKF8weDRjZTU4MT49MHgwfHxfMHgyNzA1N2FbXzB4NmQ2NCgnMHgyNmInKV0+PTB4MCl7dmFyIF8weDc4ZDNmND1fMHgyNzA1N2FbXzB4NmQ2NCgnMHgyNjgnKV0oKTtfMHg1ZDU3YzI9eyd2YWx1ZSc6XzB4NGNlNTgxLCdsb3cnOl8weDRjZTU4MTx0aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MjY5JyldKCksJ3Jhbmdlcyc6eydjb3ZlcmVkJzpfMHgyNzA1N2FbXzB4NmQ2NCgnMHgyNmEnKV0oXzB4OWNlOWE5KSwnYWxsJzpfMHg3OGQzZjR9LCd2YWx1ZUNoYW5nZWQnOl8weDI3MDU3YVtfMHg2ZDY0KCcweDI2YicpXSE9PV8weDRjZTU4MXx8XzB4MjcwNTdhW18weDZkNjQoJzB4MjZkJyldIT09XzB4NzhkM2Y0fHx2b2lkIDB4MH0sXzB4NGNlNTgxPj0weDB8fChfMHg1ZDU3YzJbXzB4NmQ2NCgnMHgyNmMnKV09ITB4MCksXzB4MjcwNTdhW18weDZkNjQoJzB4MjZiJyldPV8weDRjZTU4MSxfMHgyNzA1N2FbXzB4NmQ2NCgnMHgyNmQnKV09XzB4NzhkM2Y0O31yZXR1cm4gXzB4NWQ1N2MyO319fSksXzB4Mjc2ODhiW18weDZkNjQoJzB4NzIyJyldKF8weDUwNDkzNCxfMHgzNGUxNThbXzB4NmQ2NCgnMHgzNmMnKV0sXzB4MjcwNTdhW18weDZkNjQoJzB4M2NkJyldW18weDZkNjQoJzB4NmY3JyldKSxfMHgyNzY4OGJbXzB4NmQ2NCgnMHg3MjMnKV0oKSxfMHgyNzA1N2FbXzB4NmQ2NCgnMHgzY2QnKV1bXzB4NmQ2NCgnMHg3MjQnKV0mJl8weDI3Njg4YltfMHg2ZDY0KCcweDcyNScpXSgpO30sXzB4MWZhOGViWydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDYwMicpXT1mdW5jdGlvbihfMHgyNzA1N2Epe3ZhciBfMHgxZmE4ZWI9dGhpcztyZXR1cm4gXyhfMHgyNzA1N2EpW18weDZkNjQoJzB4YTcnKV0oZnVuY3Rpb24oXzB4MjcwNTdhKXtyZXR1cm57J2ZhaWxpbmcnOl8weDI3MDU3YVsnaXNGYWlsaW5nJ10oKSwnbG9jJzpfMHgxZmE4ZWJbXzB4NmQ2NCgnMHgyMjMnKV0oXzB4MjcwNTdhWydzdGFydFJhbmdlJ10oKSksJ2RlY2xhcmF0aW9uTG9jJzooXzB4MjcwNTdhW18weDZkNjQoJzB4NDVlJyldKCl8fDB4MSkrJzonKyhfMHgyNzA1N2FbXzB4NmQ2NCgnMHg1M2UnKV0oKXx8MHgwKSwnZmlsZSc6XzB4MjcwNTdhW18weDZkNjQoJzB4MTU0JyldKCksJ3RpbWUnOl8weDI3MDU3YVtfMHg2ZDY0KCcweDEwMicpXSgpLCdlcnJvcnMnOl8weDFmYThlYltfMHg2ZDY0KCcweDUzZicpXShfMHgyNzA1N2FbXzB4NmQ2NCgnMHgzMDMnKV0oKSksJ3BhdGgnOl8weDI3MDU3YVtfMHg2ZDY0KCcweDMxMCcpXSgpLCdtZXNzYWdlcyc6XzB4MWZhOGViW18weDZkNjQoJzB4MjlmJyldKF8weDI3MDU3YVsnY29uc29sZU1lc3NhZ2VzJ10oKSl9O30pO30sXzB4MWZhOGViW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgyOWYnKV09ZnVuY3Rpb24oXzB4MjcwNTdhLF8weDFmYThlYixfMHg1MDQ5MzQpe2lmKF8weDZkNjQoJzB4NzI2Jyk9PT1fMHg2ZDY0KCcweDcyNicpKXt2YXIgXzB4Mjc2ODhiPXRoaXM7cmV0dXJuIF9bJ2NoYWluJ10oXzB4MjcwNTdhKVtfMHg2ZDY0KCcweDI5YycpXShfMHg1MDQ5MzR8fGZ1bmN0aW9uKCl7aWYoJ2NIWWNhJyE9PSdjSFljYScpe18weDUxY2JlNihfMHgyZDI5MTQrXzB4NmQ2NCgnMHg0MjUnKStfMHgyNzA1N2ErJyknKSYmc2V0VGltZW91dChmdW5jdGlvbigpe3JldHVybiBfMHg0YzE2MjIoXzB4NDRjZTRjLF8weDFmMWM1NixfMHgyNDRhOGMsXzB4NDU2NjEwKTt9LF8weDIyZDdkNCk7fWVsc2V7cmV0dXJuITB4MDt9fSlbXzB4NmQ2NCgnMHhhNycpXShmdW5jdGlvbihfMHgyNzA1N2Epe3JldHVybiBfMHgyNzY4OGJbXzB4NmQ2NCgnMHg2ZTAnKV0oXzB4MjcwNTdhLF8weDFmYThlYik7fSlbJ3ZhbHVlJ10oKTt9ZWxzZXt0cnl7XzB4NDRjZTRjJiYhXzB4NDRjZTRjW18weDZkNjQoJzB4ZDMnKV0mJihfMHg1MDQ5MzQ9XzB4MjRjYTc1WydyZXR1cm4nXSkmJl8weDUwNDkzNFsnY2FsbCddKF8weDI0Y2E3NSk7fWZpbmFsbHl7aWYoXzB4MWZhOGViKXRocm93IF8weDFmYThlYltfMHg2ZDY0KCcweDhkJyldO319fSxfMHgxZmE4ZWJbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4NmUwJyldPWZ1bmN0aW9uKF8weDI3MDU3YSxfMHgxZmE4ZWIpe3JldHVybnsndHlwZSc6XzB4MjcwNTdhW18weDZkNjQoJzB4MzAnKV0oKSwndGV4dCc6XzB4MWZhOGViP3ZvaWQgMHgwOl8weDI3MDU3YVtfMHg2ZDY0KCcweDIyMicpXSgpLCdmaWxlJzpfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNTgnKV0oKSYmXzB4MjcwNTdhW18weDZkNjQoJzB4MTU4JyldKClbJ3BhdGgnXSgpLCdsb2MnOnRoaXNbJ19yYW5nZVRvTG9jJ10oXzB4MjcwNTdhW18weDZkNjQoJzB4MTU3JyldKCkpfHxfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNzAnKV0oKSwnY29udGV4dCc6XzB4MjcwNTdhW18weDZkNjQoJzB4MjI0JyldKCksJ3ZhbHVlQmFnJzpfMHgxZmE4ZWI/XzB4MjcwNTdhW18weDZkNjQoJzB4MjI1JyldKCk6cHJvY2Vzc1snZW52J11bJ3F1b2trYSddP18weDI3MDU3YVsndmFsdWVCYWcnXSgpOnZvaWQgMHgwLCdleHBlY3RlZCc6XzB4MjcwNTdhW18weDZkNjQoJzB4MjI3JyldKCksJ2FjdHVhbCc6XzB4MjcwNTdhWydhY3R1YWwnXSgpfTt9LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldWydfbWFwRXJyb3JzJ109ZnVuY3Rpb24oXzB4MjcwNTdhKXtpZignRnhua0UnPT09J0Z4bmtFJyl7dmFyIF8weDFmYThlYj10aGlzO3JldHVybiBfWydtYXAnXShfMHgyNzA1N2EsZnVuY3Rpb24oXzB4MjcwNTdhKXtpZignWnhHT3UnIT09J21EUGVyJyl7cmV0dXJueydtZXNzYWdlJzpfMHgyNzA1N2FbXzB4NmQ2NCgnMHgyMycpXSgpLCdzdGFjayc6X1tfMHg2ZDY0KCcweGE3JyldKF8weDI3MDU3YVtfMHg2ZDY0KCcweDE1MicpXSgpLGZ1bmN0aW9uKF8weDI3MDU3YSl7cmV0dXJueydmaWxlJzpfMHgyNzA1N2FbJ2ZpbGVQYXRoJ10oKSwnbG9jJzpfMHgxZmE4ZWJbJ19yYW5nZVRvTG9jJ10oXzB4MjcwNTdhW18weDZkNjQoJzB4MTU3JyldKCkpfHxfMHgyNzA1N2FbXzB4NmQ2NCgnMHgxNzAnKV0oKSwnY29udGV4dCc6XzB4MjcwNTdhW18weDZkNjQoJzB4MjI0JyldKCl9O30pLCdleHBlY3RlZCc6XzB4MjcwNTdhW18weDZkNjQoJzB4MjI3JyldKCksJ2FjdHVhbCc6XzB4MjcwNTdhW18weDZkNjQoJzB4MjI4JyldKCksJ3NuYXBzaG90JzpfMHgyNzA1N2FbXzB4NmQ2NCgnMHg1MjgnKV0oKX07fWVsc2V7Zm9yKHZhciBfMHgzMDEyMjE9XzB4MjJkN2Q0KF8weDI3Njg4YiksXzB4NGIxOTJkPV8weDMwMTIyMVtfMHg2ZDY0KCcweGQ1JyldKCk7IV8weDRiMTkyZFsnZG9uZSddO18weDRiMTkyZD1fMHgzMDEyMjFbXzB4NmQ2NCgnMHhkNScpXSgpKXt2YXIgXzB4NTU1MzQxPV8weDRiMTkyZFtfMHg2ZDY0KCcweGE5JyldOyhfMHg1NTUzNDFbJ2ZhaWxpbmcnXT9fMHgyNGNhNzU6XzB4MzRlMTU4KVtfMHg2ZDY0KCcweDFjJyldKF8weDU1NTM0MSk7fX19KTt9ZWxzZXt0aGlzW18weDZkNjQoJzB4NTIyJyldPV8weDI3MDU3YVsnaWQnXSx0aGlzW18weDZkNjQoJzB4NDYyJyldPV8weDI3MDU3YVsnZmlsZUlkJ10sdGhpc1tfMHg2ZDY0KCcweDU0YScpXT1fMHgyNzA1N2FbJ2xvZyddLHRoaXNbJ19uYW1lJ109XzB4MjcwNTdhW18weDZkNjQoJzB4MzInKV0sdGhpc1tfMHg2ZDY0KCcweGU0JyldPV8weDI3MDU3YVtfMHg2ZDY0KCcweGEzJyldLHRoaXNbXzB4NmQ2NCgnMHg0OWInKV09XzB4MjcwNTdhW18weDZkNjQoJzB4MzEnKV0mJl8weDI3MDU3YVsnc3RhcnQnXVsweDBdLHRoaXNbXzB4NmQ2NCgnMHg1NGInKV09XzB4MjcwNTdhWydkZWNsYXJhdGlvbiddJiZfMHgyNzA1N2FbXzB4NmQ2NCgnMHg1NGMnKV1bMHgwXSx0aGlzWydfZGVjbGFyYXRpb25Db2x1bW4nXT1fMHgyNzA1N2FbXzB4NmQ2NCgnMHg1NGMnKV0mJl8weDI3MDU3YVtfMHg2ZDY0KCcweDU0YycpXVsweDFdLHRoaXNbXzB4NmQ2NCgnMHg1NGUnKV09XzB4MjcwNTdhWyd0aW1lJ10sdGhpc1tfMHg2ZDY0KCcweDU0ZicpXT1fMHgyNzA1N2FbXzB4NmQ2NCgnMHg1NTAnKV07fX0sXzB4MWZhOGViW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgyMjMnKV09ZnVuY3Rpb24oXzB4MjcwNTdhKXtyZXR1cm4gXzB4MjcwNTdhJiZfMHgyNzA1N2FbJ3N0YXJ0TGluZSddJiZfMHgyNzA1N2FbJ3N0YXJ0TGluZSddKCkrJzonK18weDI3MDU3YVtfMHg2ZDY0KCcweDE1NicpXSgpfHx2b2lkIDB4MDt9LF8weDFmYThlYltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MWNlJyldPWZ1bmN0aW9uKF8weDI3MDU3YSxfMHgxZmE4ZWIpe3RoaXNbXzB4NmQ2NCgnMHgxNmEnKV0oJ21lc3NhZ2UnLF9bJ2V4dGVuZCddKHsndHlwZSc6XzB4MjcwNTdhfSxfMHgxZmE4ZWIpKTt9LF8weDFmYThlYjt9KEV2ZW50RW1pdHRlcik7XzB4MWZhOGViW18weDZkNjQoJzB4NCcpXT1fMHgxYTNhZDM7fSx7Jy4uLy4uL3V0aWxzJzoweDIyLCcuLi9zaGFyZWQvdXRpbHMnOjB4MWEsJy4vYnJvd3Nlckdsb2JhbHMnOjB4OSwnLi9jb25zb2xlTWVzc2FnZSc6MHhhLCcuL2NvdmVyYWJsZVJhbmdlJzoweGIsJy4vZXJyb3JFbnRyeSc6MHhlLCcuL2V4ZWN1dGVkVGVzdCc6MHhmLCcuL2ZpbHRlcic6MHgxMSwnLi9tZXNzYWdlRmlsdGVyJzoweDEzLCcuL3Rlc3RGaWx0ZXInOjB4MTcsJy4vdHJhY2tlZFNvdXJjZUZpbGUnOjB4MTgsJ21pbmltYXRjaCc6dm9pZCAweDAsJ3BhdGgnOnZvaWQgMHgwfV0sMjE6W2Z1bmN0aW9uKF8weDJmY2M5ZCxfMHgxZDAzYjYsXzB4MjU2YTFiKXsndXNlIHN0cmljdCc7dmFyIF8weDU0OWMzZT10aGlzJiZ0aGlzWydfX3JlYWQnXXx8ZnVuY3Rpb24oXzB4MmZjYzlkLF8weDFkMDNiNil7dmFyIF8weDI1NmExYj1fMHg2ZDY0KCcweDUnKT09dHlwZW9mIFN5bWJvbCYmXzB4MmZjYzlkW1N5bWJvbFtfMHg2ZDY0KCcweGU4JyldXTtpZighXzB4MjU2YTFiKXJldHVybiBfMHgyZmNjOWQ7dmFyIF8weDU0OWMzZSxfMHgzMWQxOGEsXzB4MmMwNDI5PV8weDI1NmExYltfMHg2ZDY0KCcweDMnKV0oXzB4MmZjYzlkKSxfMHg0ODQ0M2I9W107dHJ5e2lmKF8weDZkNjQoJzB4NzI3Jyk9PT0nYkNnSlUnKXtmb3IoOyh2b2lkIDB4MD09PV8weDFkMDNiNnx8XzB4MWQwM2I2LS0+MHgwKSYmIShfMHg1NDljM2U9XzB4MmMwNDI5W18weDZkNjQoJzB4ZDUnKV0oKSlbXzB4NmQ2NCgnMHhkMycpXTspXzB4NDg0NDNiW18weDZkNjQoJzB4MWMnKV0oXzB4NTQ5YzNlW18weDZkNjQoJzB4YTknKV0pO31lbHNle18weDU0OWMzZShfMHg2ZDY0KCcweDcyOCcpLF8weDFkMDNiNixfMHgyZmNjOWQpLF8weDI1NmExYltfMHg2ZDY0KCcweDU3JyldW18weDZkNjQoJzB4NzI5JyldKF8weDJmY2M5ZCk7fX1jYXRjaChfMHg0NmVjYTYpe18weDMxZDE4YT17J2Vycm9yJzpfMHg0NmVjYTZ9O31maW5hbGx5e2lmKF8weDZkNjQoJzB4NzJhJykhPT1fMHg2ZDY0KCcweDcyYScpKXtfMHg1NDljM2UmJiFfMHg1NDljM2VbJ2RvbmUnXSYmKF8weDI1NmExYj1fMHgyYzA0MjlbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weDI1NmExYlsnY2FsbCddKF8weDJjMDQyOSk7fWVsc2V7dHJ5e18weDU0OWMzZSYmIV8weDU0OWMzZVsnZG9uZSddJiYoXzB4MjU2YTFiPV8weDJjMDQyOVtfMHg2ZDY0KCcweGQwJyldKSYmXzB4MjU2YTFiWydjYWxsJ10oXzB4MmMwNDI5KTt9ZmluYWxseXtpZihfMHgzMWQxOGEpdGhyb3cgXzB4MzFkMThhW18weDZkNjQoJzB4OGQnKV07fX19cmV0dXJuIF8weDQ4NDQzYjt9LF8weDMxZDE4YT10aGlzJiZ0aGlzWydfX3NwcmVhZCddfHxmdW5jdGlvbigpe2Zvcih2YXIgXzB4MmZjYzlkPVtdLF8weDFkMDNiNj0weDA7XzB4MWQwM2I2PGFyZ3VtZW50c1tfMHg2ZDY0KCcweDhlJyldO18weDFkMDNiNisrKV8weDJmY2M5ZD1fMHgyZmNjOWRbXzB4NmQ2NCgnMHg4OCcpXShfMHg1NDljM2UoYXJndW1lbnRzW18weDFkMDNiNl0pKTtyZXR1cm4gXzB4MmZjYzlkO30sXzB4MmMwNDI5PV8weDJmY2M5ZChfMHg2ZDY0KCcweDcyYicpKSxfMHg0ODQ0M2I9XzB4MmZjYzlkKCdvcycpLF8weDU2MDE1NT1fMHgyZmNjOWQoXzB4NmQ2NCgnMHg3MmMnKSksXzB4NDM5M2Y2PV8weDU2MDE1NVtfMHg2ZDY0KCcweDFiOScpXSgpLF8weDEzNGJhYT1fMHgyNTZhMWJbXzB4NmQ2NCgnMHgxODcnKV09eyd0dGwnOjB4ODAsJ2FkZHJlc3MnOl8weDZkNjQoJzB4NzJkJyksJ3BvcnQnOjB4ZGM0ZX0sXzB4MTYzZmYyPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gXzB4MmZjYzlkKCl7dHJ5e3ZhciBfMHgyZmNjOWQ9dGhpczt0aGlzWydfbmV0d29ya0FkZHJlc3MnXT0weDAsdGhpc1tfMHg2ZDY0KCcweDQzZicpXT17fSx0aGlzWydfc2VuZGVyJ109XzB4MmMwNDI5W18weDZkNjQoJzB4NzJlJyldKCd1ZHA0JyksdGhpc1snX3NlbmRlciddW18weDZkNjQoJzB4ZmEnKV0oZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDcyZicpPT09XzB4NmQ2NCgnMHg3MzAnKSl7XzB4MmZjYzlkPXsnZXJyb3InOl8weDQzOTNmNn07fWVsc2V7XzB4MmZjYzlkW+KAi18weDZkNjQoJzB4NzMxJyldW18weDZkNjQoJzB4NzMyJyldKCEweDApLF8weDJmY2M5ZFtfMHg2ZDY0KCcweDczMScpXVtfMHg2ZDY0KCcweDEwYScpXShfMHgxMzRiYWFbJ3R0bCddKTt9fSksdGhpc1tfMHg2ZDY0KCcweDczMScpXVsnb24nXSgnZXJyb3InLGZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg3MzMnKSE9PV8weDZkNjQoJzB4NzM0Jykpe3RyeXtpZihfMHg2ZDY0KCcweDczNScpPT09XzB4NmQ2NCgnMHg3MzYnKSl7dmFyIF8weDU3MjkwZixfMHg0ODg5MWIsXzB4NGI3MGU0LF8weDRiNzY5OT0nc29tZVJlc3VsdHNVcGRhdGVkJztfMHgyZmNjOWQ/KF8weDJmY2M5ZFtfMHg2ZDY0KCcweDZkOScpXSYmKF8weDRiNzY5OT1fMHg2ZDY0KCcweDczNycpKSxfMHg1NzI5MGY9XzB4MmZjYzlkW18weDZkNjQoJzB4MzZjJyldLF8weDQ4ODkxYj1fMHgyZmNjOWRbXzB4NmQ2NCgnMHg3MzgnKV0sXzB4NGI3MGU0PV8weDJmY2M5ZFtfMHg2ZDY0KCcweDczOScpXSk6KF8weDRiNzY5OT1fMHg2ZDY0KCcweDczNycpLF8weDU3MjkwZj10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4ODQnKV0oKSksdGhpc1snX3NlbmQnXSh7J3R5cGUnOl8weDZkNjQoJzB4NzNhJykrXzB4NGI3Njk5LCdmaWxlcyc6dGhpc1tfMHg2ZDY0KCcweDczYicpXShfMHg1NzI5MGYsXzB4NGI3MGU0LF8weDZkNjQoJzB4MzZjJykpW18weDZkNjQoJzB4ODgnKV0odGhpc1tfMHg2ZDY0KCcweDczYicpXShfMHg0ODg5MWIsXzB4NGI3MGU0LF8weDZkNjQoJzB4NzM4JykpKX0sXzB4MWQwM2I2KTt9ZWxzZXtfMHgyZmNjOWRbXzB4NmQ2NCgnMHg3MzEnKV1bXzB4NmQ2NCgnMHgxM2MnKV0oKTt9fWNhdGNoKF8weDRjY2EyNyl7fX1lbHNle18weDJmY2M5ZFtfMHg2ZDY0KCcweDczYycpXVtfMHg2ZDY0KCcweDFhZCcpXSh7J3R5cGUnOl8weDZkNjQoJzB4MmI1Jyl9KTt9fSksdGhpc1snX3JlY2VpdmVyJ109XzB4MmMwNDI5W18weDZkNjQoJzB4NzJlJyldKF8weDZkNjQoJzB4NzNkJykpLHRoaXNbJ19yZWNlaXZlciddWydvbiddKCdsaXN0ZW5pbmcnLGZ1bmN0aW9uKCl7aWYoJ1JZZHhSJz09PV8weDZkNjQoJzB4NzNlJykpeyRfJHRyYWNlcltfMHg2ZDY0KCcweDFjMCcpXSgpO31lbHNle3RyeXtpZihfMHg2ZDY0KCcweDczZicpPT09J1ZRWkVoJyl7dmFyIF8weDQ4Y2U1Mj1fMHg1NDljM2Uoe30sdGhpc1tfMHg2ZDY0KCcweDQ2NScpXSk7cmV0dXJuIF8weDQ4Y2U1MltfMHg2ZDY0KCcweDEzNicpXT1fMHg1NDljM2Uoe30sdGhpc1tfMHg2ZDY0KCcweDQ2NScpXVtfMHg2ZDY0KCcweDEzNicpXSksdGhpc1snX3ZhbHVlQmFnJ10mJnRoaXNbXzB4NmQ2NCgnMHg0NjUnKV1bXzB4NmQ2NCgnMHgxMzYnKV0mJnRoaXNbXzB4NmQ2NCgnMHg0NjUnKV1bXzB4NmQ2NCgnMHgxMzYnKV1bXzB4NmQ2NCgnMHg0NzUnKV0mJihkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDQ2NScpXVtfMHg2ZDY0KCcweDEzNicpXVsncHJvcHMnXSx0aGlzWydfdmFsdWVCYWcnXVtfMHg2ZDY0KCcweDEzNicpXVtfMHg2ZDY0KCcweDQ3NicpXT0hMHgwKSxfMHg0OGNlNTI7fWVsc2V7XzB4MmZjYzlkW18weDZkNjQoJzB4MTA5JyldW18weDZkNjQoJzB4NzMyJyldKCEweDApLF8weDJmY2M5ZFsnX3JlY2VpdmVyJ11bJ3NldE11bHRpY2FzdFRUTCddKF8weDEzNGJhYVsndHRsJ10pLF8weDJmY2M5ZFtfMHg2ZDY0KCcweDEwOScpXVtfMHg2ZDY0KCcweDEwYycpXShfMHgxMzRiYWFbJ2FkZHJlc3MnXSk7fX1jYXRjaChfMHg3ZGVjOGEpe319fSksdGhpc1snX3JlY2VpdmVyJ11bJ29uJ10oXzB4NmQ2NCgnMHgyMycpLGZ1bmN0aW9uKF8weDFkMDNiNil7dHJ5e2lmKCduWEZIRSc9PT1fMHg2ZDY0KCcweDc0MCcpKXtfMHgxZDAzYjZbXzB4NmQ2NCgnMHg3NDEnKV1bJ2VucXVldWUnXShfMHgyZmNjOWQsZnVuY3Rpb24oXzB4MTdkYjliKXtfMHgyNTZhMWIoXzB4MTdkYjliKTt9KTt9ZWxzZXtfMHgxZDAzYjY9SlNPTlsncGFyc2UnXShfMHgxZDAzYjZbXzB4NmQ2NCgnMHg1MycpXShfMHg2ZDY0KCcweDc0MicpKSksXzB4MWQwM2I2WydldmVudCddJiZfMHgxZDAzYjZbXzB4NmQ2NCgnMHgyN2MnKV0mJl8weDFkMDNiNltfMHg2ZDY0KCcweDc0MycpXSYmIV8weDJmY2M5ZFtfMHg2ZDY0KCcweDc0NCcpXSgpW18weDZkNjQoJzB4MTUxJyldKGZ1bmN0aW9uKF8weDJmY2M5ZCl7aWYoXzB4NmQ2NCgnMHg3NDUnKSE9PV8weDZkNjQoJzB4NzQ2Jykpe3JldHVybiBfMHgyZmNjOWQ9PT1fMHgxZDAzYjZbXzB4NmQ2NCgnMHgyN2MnKV07fWVsc2V7cmV0dXJuIF8weDJmY2M5ZFtfMHg2ZDY0KCcweDU3JyldW18weDZkNjQoJzB4Njc0JyldKF8weDJmY2M5ZFsnX2Jyb3dzZXJFbnZpcm9ubWVudCddWydzYW5kYm94Um9vdFVybCddKCkpLFFbXzB4NmQ2NCgnMHhjMicpXShfMHgxZDAzYjYpO319KSYmXzB4MWQwM2I2Wydzb3VyY2VJZCddIT09XzB4NDM5M2Y2JiZfWydlYWNoJ10oXzB4MmZjYzlkW18weDZkNjQoJzB4NDNmJyldW18weDFkMDNiNltfMHg2ZDY0KCcweDc0NycpXV0sZnVuY3Rpb24oXzB4MmZjYzlkKXtfMHgyZmNjOWRbXzB4NmQ2NCgnMHhkNCcpXShudWxsLFtfMHgxZDAzYjZbJ2RhdGEnXSxfMHgxZDAzYjZbXzB4NmQ2NCgnMHgyN2MnKV1dKTt9KTt9fWNhdGNoKF8weDUxOTllZil7fX0pLHRoaXNbXzB4NmQ2NCgnMHgxMDknKV1bJ29uJ10oXzB4NmQ2NCgnMHg4ZCcpLGZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg3NDgnKT09PSdwY2RzVCcpe3RyeXtfMHgyZmNjOWRbXzB4NmQ2NCgnMHgxMDknKV1bXzB4NmQ2NCgnMHgxM2MnKV0oKTt9Y2F0Y2goXzB4MWY3N2Y4KXt9fWVsc2V7XzB4NTQ5YzNlPV8weDEzNGJhYVtfMHg2ZDY0KCcweGYwJyldKF8weDEzNGJhYVsnam9pbiddKF8weDEzNGJhYVtfMHg2ZDY0KCcweDIxNycpXShwcm9jZXNzW18weDZkNjQoJzB4NWVkJyldW18weDZkNjQoJzB4NzQ5JyldKSwnLi4nLCd3YWxsYWJ5LWFwcCcpKSxfMHg0MzkzZjZbXzB4NmQ2NCgnMHg2MGInKV0oXzB4NTQ5YzNlKSYmXzB4NDM5M2Y2W18weDZkNjQoJzB4NjBiJyldKF8weDEzNGJhYVtfMHg2ZDY0KCcweDRjJyldKF8weDU0OWMzZSwnaW5kZXguaHRtbCcpKXx8KF8weDU0OWMzZT12b2lkIDB4MCk7fX0pLHRoaXNbXzB4NmQ2NCgnMHgxMDknKV1bXzB4NmQ2NCgnMHhmYScpXShfMHgxMzRiYWFbXzB4NmQ2NCgnMHgxNDUnKV0pO31jYXRjaChfMHg0NDJhZGMpe319cmV0dXJuIF8weDJmY2M5ZFsncHJvdG90eXBlJ11bJ29uJ109ZnVuY3Rpb24oXzB4MmZjYzlkLF8weDFkMDNiNil7dGhpc1tfMHg2ZDY0KCcweDQzZicpXSYmKHRoaXNbXzB4NmQ2NCgnMHg0M2YnKV1bXzB4MmZjYzlkXXx8KHRoaXNbXzB4NmQ2NCgnMHg0M2YnKV1bXzB4MmZjYzlkXT1bXSksdGhpc1tfMHg2ZDY0KCcweDQzZicpXVtfMHgyZmNjOWRdW18weDZkNjQoJzB4MWMnKV0oXzB4MWQwM2I2KSk7fSxfMHgyZmNjOWRbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDE2YScpXT1mdW5jdGlvbihfMHgyZmNjOWQsXzB4MWQwM2I2KXt0cnl7dmFyIF8weDI1NmExYj1uZXcgQnVmZmVyKEpTT05bXzB4NmQ2NCgnMHg5YScpXSh7J2V2ZW50JzpfMHgyZmNjOWQsJ2RhdGEnOl8weDFkMDNiNiwnc291cmNlJzp0aGlzW18weDZkNjQoJzB4NzRhJyldKCksJ3NvdXJjZUlkJzpfMHg0MzkzZjZ9KSk7dGhpc1tfMHg2ZDY0KCcweDczMScpXVtfMHg2ZDY0KCcweDFhZCcpXShfMHgyNTZhMWIsMHgwLF8weDI1NmExYltfMHg2ZDY0KCcweDhlJyldLF8weDEzNGJhYVtfMHg2ZDY0KCcweDE0NScpXSxfMHgxMzRiYWFbJ2FkZHJlc3MnXSk7fWNhdGNoKF8weDc0YmM5Nil7fX0sXzB4MmZjYzlkW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg3NGEnKV09ZnVuY3Rpb24oKXt2YXIgXzB4MmZjYzlkPXRoaXNbXzB4NmQ2NCgnMHg3NDQnKV0oKTtyZXR1cm4gdGhpc1snX25ldHdvcmtBZGRyZXNzJ109PT1fMHgyZmNjOWRbXzB4NmQ2NCgnMHg4ZScpXSYmKHRoaXNbXzB4NmQ2NCgnMHg3NGInKV09MHgwKSxfMHgyZmNjOWRbdGhpc1tfMHg2ZDY0KCcweDc0YicpXSsrXTt9LF8weDJmY2M5ZFsncHJvdG90eXBlJ11bJ19zb3VyY2VzJ109ZnVuY3Rpb24oKXtyZXR1cm4gXzB4MmZjYzlkW18weDZkNjQoJzB4NmIwJyldKClbXzB4NmQ2NCgnMHhhNycpXShmdW5jdGlvbihfMHgyZmNjOWQpe2lmKF8weDZkNjQoJzB4NzRjJykhPT1fMHg2ZDY0KCcweDc0YycpKXtyZXR1cm4gXzB4MWQwM2I2WydfbG9hZEZpbGUnXShfMHgyZmNjOWQpW18weDZkNjQoJzB4N2UnKV0oZnVuY3Rpb24oXzB4NDY3YTkxKXtyZXR1cm4gXzB4MWQwM2I2W18weDZkNjQoJzB4MTZhJyldKCdsb2FkZWQnLF8weDQ2N2E5MSk7fSk7fWVsc2V7cmV0dXJuIF8weDTigIs4NDQzYltfMHg2ZDY0KCcweDQyYycpXSgpKydceDIwKCcrXzB4MmZjYzlkKycpJzt9fSk7fSxfMHgyZmNjOWRbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDExNCcpXT1mdW5jdGlvbigpe3RyeXt0aGlzW18weDZkNjQoJzB4NzMxJyldW18weDZkNjQoJzB4MTNjJyldKCk7fWNhdGNoKF8weDNhZDE5Mil7fXRyeXt0aGlzW18weDZkNjQoJzB4MTA5JyldW18weDZkNjQoJzB4MTNjJyldKCk7fWNhdGNoKF8weDY2Yjg5NSl7fX0sXzB4MmZjYzlkWydfZ2V0TmV0d29ya0FkZHJlc3NlcyddPWZ1bmN0aW9uKCl7dmFyIF8weDJmY2M5ZD1fMHg0ODQ0M2JbXzB4NmQ2NCgnMHg3NGQnKV0oKSxfMHgxZDAzYjY9T2JqZWN0W18weDZkNjQoJzB4NWQ1JyldKF8weDJmY2M5ZClbXzB4NmQ2NCgnMHg4YScpXShmdW5jdGlvbihfMHgxZDAzYjYsXzB4MjU2YTFiKXtyZXR1cm4gXzB4MzFkMThhKF8weDFkMDNiNixfMHgyZmNjOWRbXzB4MjU2YTFiXVtfMHg2ZDY0KCcweGE3JyldKGZ1bmN0aW9uKF8weDJmY2M5ZCl7cmV0dXJueydhZGRyZXNzJzpfMHgyZmNjOWRbJ2FkZHJlc3MnXSwnaW50ZXJuYWwnOl8weDJmY2M5ZFtfMHg2ZDY0KCcweDc0ZScpXX07fSkpO30sW10pW18weDZkNjQoJzB4MjljJyldKGZ1bmN0aW9uKF8weDJmY2M5ZCl7cmV0dXJuIF8weDZkNjQoJzB4MTQ2JykhPT1fMHgyZmNjOWRbXzB4NmQ2NCgnMHgxMGQnKV0mJl8weDZkNjQoJzB4NzRmJykhPT1fMHgyZmNjOWRbXzB4NmQ2NCgnMHgxMGQnKV0mJiFfMHgyZmNjOWRbXzB4NmQ2NCgnMHg3NGUnKV07fSlbJ21hcCddKGZ1bmN0aW9uKF8weDJmY2M5ZCl7cmV0dXJuIF8weDJmY2M5ZFtfMHg2ZDY0KCcweDEwZCcpXTt9KTtyZXR1cm4gMHgwPT09XzB4MWQwM2I2WydsZW5ndGgnXSYmXzB4MWQwM2I2W18weDZkNjQoJzB4MWMnKV0oXzB4NmQ2NCgnMHgyMTUnKSksXzB4MWQwM2I2O30sXzB4MmZjYzlkO30oKTtfMHgxZDAzYjZbXzB4NmQ2NCgnMHg0JyldPW5ldyBfMHgxNjNmZjIoKTt9LHsnLi8uLi8uLi91dGlscyc6MHgyMiwnZGdyYW0nOnZvaWQgMHgwLCdvcyc6dm9pZCAweDB9XSwyMjpbZnVuY3Rpb24oXzB4NDlmNDQwLF8weDIyNzUyNixfMHgxMzY1OGMpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4NTI5MDcwPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gXzB4NDlmNDQwKCl7aWYoYXJndW1lbnRzWydsZW5ndGgnXT4weDEpdGhpc1tfMHg2ZDY0KCcweDQ2MicpXT1hcmd1bWVudHNbMHgwXSx0aGlzW18weDZkNjQoJzB4NWJkJyldPWFyZ3VtZW50c1sweDFdLHRoaXNbXzB4NmQ2NCgnMHhjZCcpXT1hcmd1bWVudHNbMHgyXTtlbHNlIGlmKGFyZ3VtZW50c1tfMHg2ZDY0KCcweDhlJyldKXt2YXIgXzB4NDlmNDQwPWFyZ3VtZW50c1sweDBdW18weDZkNjQoJzB4ZjUnKV0oJ18nKTt0aGlzW18weDZkNjQoJzB4NDYyJyldPXBhcnNlSW50KF8weDQ5ZjQ0MFsweDBdLDB4YSksdGhpc1tfMHg2ZDY0KCcweDViZCcpXT1wYXJzZUludChfMHg0OWY0NDBbMHgxXSwweGEpO319cmV0dXJuIF8weDQ5ZjQ0MFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MTJmJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0NjInKV0rJ18nK3RoaXNbJ19saW5lJ107fSxfMHg0OWY0NDBbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDQ2ZScpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzWydfZmlsZUlkJ107fSxfMHg0OWY0NDBbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDE3MCcpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDZkNjQoJzB4NWJkJyldO30sXzB4NDlmNDQwW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgyMjQnKV09ZnVuY3Rpb24oKXtyZXR1cm4g4oCLdGhpc1tfMHg2ZDY0KCcweGNkJyldO30sXzB4NDlmNDQwW18weDZkNjQoJzB4ODEnKV1bJ3NldEZpbGUnXT1mdW5jdGlvbihfMHg0OWY0NDApe2lmKF8weDZkNjQoJzB4NzUwJykhPT0nRnBmWXcnKXtpZihfMHgyMjc1MjYpdGhyb3cgXzB4MjI3NTI2W18weDZkNjQoJzB4OGQnKV07fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDQ4MCcpXT1fMHg0OWY0NDA7fX0sXzB4NDlmNDQwWydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDE1NCcpXT1mdW5jdGlvbigpe2lmKCdybUpCQSc9PT1fMHg2ZDY0KCcweDc1MScpKXtyZXR1cm4gXzB4NTI5MDcwKFtfMHg0OWY0NDAsXzB4MjI3NTI2XSk7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0ODAnKV0mJnRoaXNbJ19maWxlJ11bXzB4NmQ2NCgnMHg0ZScpXSgpfHx0aGlzW18weDZkNjQoJzB4NDYyJyldJiZ+dGhpc1snX2ZpbGVJZCddW18weDZkNjQoJzB4MTdhJyldKCcuJykmJnRoaXNbJ19maWxlSWQnXTt9fSxfMHg0OWY0NDBbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDQ3MCcpXT1mdW5jdGlvbihfMHg0OWY0NDApe3RoaXNbXzB4NmQ2NCgnMHg0NjMnKV09XzB4NDlmNDQwO30sXzB4NDlmNDQwW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgxNTcnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDQ2MycpXTt9LF8weDQ5ZjQ0MDt9KCk7XzB4MjI3NTI2WydleHBvcnRzJ109XzB4NTI5MDcwO30se31dLDIzOltmdW5jdGlvbihfMHg1ODcwMTksXzB4NDliYzk1LF8weDQ4ZGY5OSl7J3VzZSBzdHJpY3QnO3ZhciBfMHgyZDk4ZTA9dGhpcyYmdGhpc1tfMHg2ZDY0KCcweDIzNycpXXx8ZnVuY3Rpb24oXzB4NTg3MDE5KXtpZignZERCU3QnPT09J3FIRVhaJyl7dGhpc1tfMHg2ZDY0KCcweDU5JyldWydleHByZXNzaW9uc1RvRXZhbHVhdGUnXShfMHg1ODcwMTlbXzB4NmQ2NCgnMHgyNTQnKV0pO31lbHNle3ZhciBfMHg0OWJjOTU9XzB4NmQ2NCgnMHg1Jyk9PXR5cGVvZiBTeW1ib2wmJl8weDU4NzAxOVtTeW1ib2xbJ2l0ZXJhdG9yJ11dLF8weDQ4ZGY5OT0weDA7cmV0dXJuIF8weDQ5YmM5NT9fMHg0OWJjOTVbXzB4NmQ2NCgnMHgzJyldKF8weDU4NzAxOSk6eyduZXh0JzpmdW5jdGlvbigpe3JldHVybiBfMHg1ODcwMTkmJl8weDQ4ZGY5OT49XzB4NTg3MDE5W18weDZkNjQoJzB4OGUnKV0mJihfMHg1ODcwMTk9dm9pZCAweDApLHsndmFsdWUnOl8weDU4NzAxOSYmXzB4NTg3MDE5W18weDQ4ZGY5OSsrXSwnZG9uZSc6IV8weDU4NzAxOX07fX07fX0sXzB4MTAzMGFhPV8weDU4NzAxOShfMHg2ZDY0KCcweDYzMycpKSxfMHg0ZTBmYjI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBfMHg1ODcwMTkoXzB4NTg3MDE5KXtpZihfMHg2ZDY0KCcweDc1MicpPT09XzB4NmQ2NCgnMHg3NTMnKSl7XzB4MmQ5OGUwW18weDZkNjQoJzB4NDFlJyldKF8weDU4NzAxOSkmJl8weDJkOThlMFtfMHg2ZDY0KCcweDI2ZicpXShfMHg1ODcwMTksXzB4NDliYzk1KTt9ZWxzZXt0aGlzW18weDZkNjQoJzB4MWNlJyldPV8weDU4NzAxOSx0aGlzWydfdHMnXT0weDA7fX1yZXR1cm4gT2JqZWN0W18weDZkNjQoJzB4NTgzJyldKF8weDU4NzAxOSxfMHg2ZDY0KCcweDZmJykseydnZXQnOmZ1bmN0aW9uKCl7cmV0dXJuIF8weDEwMzBhYVtfMHg2ZDY0KCcweDZmJyldO30sJ2VudW1lcmFibGUnOiEweDAsJ2NvbmZpZ3VyYWJsZSc6ITB4MH0pLE9iamVjdFtfMHg2ZDY0KCcweDU4MycpXShfMHg1ODcwMTlbXzB4NmQ2NCgnMHg4MScpXSwndHMnLHsnZ2V0JzpmdW5jdGlvbigpe3JldHVybiB0aGlzW18weDZkNjQoJzB4NGRmJyldO30sJ2VudW1lcmFibGUnOiEweDAsJ2NvbmZpZ3VyYWJsZSc6ITB4MH0pLE9iamVjdFtfMHg2ZDY0KCcweDU4MycpXShfMHg1ODcwMTlbXzB4NmQ2NCgnMHg4MScpXSxfMHg2ZDY0KCcweDI5ZCcpLHsnZ2V0JzpmdW5jdGlvbigpe3JldHVybiBudWxsIT10aGlzW18weDZkNjQoJzB4MWZlJyldfHxudWxsIT10aGlzW18weDZkNjQoJzB4NGVjJyldO30sJ2VudW1lcmFibGUnOiEweDAsJ2NvbmZpZ3VyYWJsZSc6ITB4MH0pLE9iamVjdFsnZGVmaW5lUHJvcGVydHknXShfMHg1ODcwMTlbJ3Byb3RvdHlwZSddLF8weDZkNjQoJzB4MTE5JykseydnZXQnOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbJ19rZXknXT8weDE6dGhpc1tfMHg2ZDY0KCcweDRlYycpXT90aGlzWydfa2V5cyddWydzaXplJ106MHgwO30sJ2VudW1lcmFibGUnOiEweDAsJ2NvbmZpZ3VyYWJsZSc6ITB4MH0pLE9iamVjdFtfMHg2ZDY0KCcweDU4MycpXShfMHg1ODcwMTlbXzB4NmQ2NCgnMHg4MScpXSxfMHg2ZDY0KCcweGEzJykseydnZXQnOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHgxZmUnKV0/W3RoaXNbXzB4NmQ2NCgnMHgxZmUnKV1dOnRoaXNbJ19rZXlzJ10/dGhpc1tfMHg2ZDY0KCcweDRlYycpXTpbXTt9LCdlbnVtZXJhYmxlJzohMHgwLCdjb25maWd1cmFibGUnOiEweDB9KSxfMHg1ODcwMTlbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDNkNCcpXT1mdW5jdGlvbihfMHg1ODcwMTkpe3JldHVybiB0aGlzWydfa2V5J10/dGhpc1tfMHg2ZDY0KCcweDFmZScpXT09PV8weDU4NzAxOTohIXRoaXNbXzB4NmQ2NCgnMHg0ZWMnKV0mJnRoaXNbXzB4NmQ2NCgnMHg0ZWMnKV1bJ2hhcyddKF8weDU4NzAxOSk7fSxfMHg1ODcwMTlbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDMxMScpXT1mdW5jdGlvbihfMHg1ODcwMTkpe2lmKF8weDZkNjQoJzB4NzU0Jyk9PT1fMHg2ZDY0KCcweDc1NScpKXt2YXIgXzB4M2FkOTk4PXsnc3RhY2snOl8weDQ5YmM5NX07cmV0dXJuIF8weDQ4ZGY5OVtfMHg2ZDY0KCcweDU5JyldWydfY2xlYW5TdGFjayddKF8weDNhZDk5OCksXzB4NDliYzk1PV8weDNhZDk5OFtfMHg2ZDY0KCcweDE1MicpXTt9ZWxzZXt2YXIgXzB4NDliYzk1LF8weDQ4ZGY5OTtpZighXzB4NTg3MDE5KXJldHVybiEweDE7aWYodGhpc1snX2tleSddKXJldHVybiBudWxsIT1fMHg1ODcwMTlbdGhpc1tfMHg2ZDY0KCcweDFmZScpXV07aWYodGhpc1tfMHg2ZDY0KCcweDRlYycpXSl0cnl7aWYoXzB4NmQ2NCgnMHg3NTYnKSE9PSd1aVBhdicpe2Zvcih2YXIgXzB4MTAzMGFhPV8weDJkOThlMCh0aGlzW18weDZkNjQoJzB4NGVjJyldKSxfMHg0ZTBmYjI9XzB4MTAzMGFhW18weDZkNjQoJzB4ZDUnKV0oKTshXzB4NGUwZmIyW18weDZkNjQoJzB4ZDMnKV07XzB4NGUwZmIyPV8weDEwMzBhYVtfMHg2ZDY0KCcweGQ1JyldKCkpe3ZhciBfMHgzZmU4NWU9XzB4NGUwZmIyW18weDZkNjQoJzB4YTknKV07aWYoXzB4NTg3MDE5W18weDNmZTg1ZV0pcmV0dXJuITB4MDt9fWVsc2V7cmV0dXJuIGgoXzB4NTg3MDE5KTt9fWNhdGNoKF8weDI3ZDc4OSl7aWYoXzB4NmQ2NCgnMHg3NTcnKT09PV8weDZkNjQoJzB4NzU3Jykpe18weDQ5YmM5NT17J2Vycm9yJzpfMHgyN2Q3ODl9O31lbHNle3RyeXt2YXIgXzB4NGQ5Y2JmPWdsb2JhbFtfMHg2ZDY0KCcweDU5MCcpXT1nbG9iYWxbJ191cmxVdGlsJ118fF8weDU4NzAxOShfMHg2ZDY0KCcweDY5JykpLF8weDE0YzdmNT1fMHg0OWJjOTVbJ3VybCddO2lmKCFfMHgxNGM3ZjUpcmV0dXJuO2lmKDB4MD09PV8weDE0YzdmNVtfMHg2ZDY0KCcweDE3YScpXShfMHg2ZDY0KCcweDU5MScpKSlyZXR1cm47aWYofl8weDE0YzdmNVtfMHg2ZDY0KCcweDE3YScpXShfMHg2ZDY0KCcweDE3YicpKSlyZXR1cm47dmFyIF8weDQxNjc3MT1fMHg0ZDljYmZbXzB4NmQ2NCgnMHgxZGMnKV0oXzB4NDliYzk1Wyd1cmwnXSksXzB4NGI5NjQ0PScvJz09PV8weDQxNjc3MVtfMHg2ZDY0KCcweDU5MicpXVtfMHg2ZDY0KCcweDU5MycpXSgweDApP18weDQxNjc3MVtfMHg2ZDY0KCcweDU5MicpXVtfMHg2ZDY0KCcweDM3YicpXSgweDEpOl8weDQxNjc3MVsncGF0aG5hbWUnXSxfMHg1YTljOTA9XzB4NGI5NjQ0JiZfMHgyZDk4ZTBbXzB4NGI5NjQ0XTtpZighXzB4NWE5YzkwKXJldHVybjt2YXIgXzB4NDU3OWE0PV8weDQxNjc3MVsnc2VhcmNoJ10mJl8weDQxNjc3MVtfMHg2ZDY0KCcweDU5NCcpXVtfMHg2ZDY0KCcweDhlJyldO18weDQ4ZGY5OVtfMHg2ZDY0KCcweDc1OCcpXShfMHgxNGM3ZjUrKF8weDQ1Nzlh4oCLND8nJic6Jz8nKStfMHg1YTljOTBbJ3RzJ10rJyZ3YWxsYWJ5RmlsZUlkPScrXzB4NWE5YzkwWydpZCddKSxsW18weDZkNjQoJzB4MTg4JyldKCk7fWNhdGNoKF8weDUzMzM1Yil7Y29uc29sZVtfMHg2ZDY0KCcweDIyMCcpXShfMHg1MzMzNWImJl8weDUzMzM1YltfMHg2ZDY0KCcweDIzJyldKTt9fX1maW5hbGx5e3RyeXtfMHg0ZTBmYjImJiFfMHg0ZTBmYjJbXzB4NmQ2NCgnMHhkMycpXSYmKF8weDQ4ZGY5OT1fMHgxMDMwYWFbJ3JldHVybiddKSYmXzB4NDhkZjk5WydjYWxsJ10oXzB4MTAzMGFhKTt9ZmluYWxseXtpZihfMHg2ZDY0KCcweDc1OScpIT09XzB4NmQ2NCgnMHg3NWEnKSl7aWYoXzB4NDliYzk1KXRocm93IF8weDQ5YmM5NVtfMHg2ZDY0KCcweDhkJyldO31lbHNle3RoaXNbJ19lbWl0J10oeyd0eXBlJzpfMHg2ZDY0KCcweDQ1OScpLCdkZWFjdGl2YXRlJzpfMHg1ODcwMTl9KTt9fX1yZXR1cm4hMHgxO319LF8weDU4NzAxOVsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgyOWMnKV09ZnVuY3Rpb24oXzB4NTg3MDE5KXt2YXIgXzB4NDliYzk1LF8weDQ4ZGY5OTtpZighXzB4NTg3MDE5KXJldHVybltdO2lmKHRoaXNbXzB4NmQ2NCgnMHgxZmUnKV0pe3ZhciBfMHgxMDMwYWE9XzB4NTg3MDE5W3RoaXNbJ19rZXknXV07cmV0dXJuIF8weDEwMzBhYT9bXzB4MTAzMGFhXTpbXTt9aWYodGhpc1tfMHg2ZDY0KCcweDRlYycpXSl7dmFyIF8weDRlMGZiMj1bXTt0cnl7Zm9yKHZhciBfMHgzODMxYjA9XzB4MmQ5OGUwKHRoaXNbXzB4NmQ2NCgnMHg0ZWMnKV0pLF8weDJhN2Y0Yz1fMHgzODMxYjBbXzB4NmQ2NCgnMHhkNScpXSgpOyFfMHgyYTdmNGNbXzB4NmQ2NCgnMHhkMycpXTtfMHgyYTdmNGM9XzB4MzgzMWIwWyduZXh0J10oKSl7aWYoXzB4NmQ2NCgnMHg3NWInKSE9PV8weDZkNjQoJzB4NzVjJykpe3ZhciBfMHgxYTc0OTc9XzB4MmE3ZjRjW18weDZkNjQoJzB4YTknKV0sXzB4MTAzMGFhPV8weDU4NzAxOVtfMHgxYTc0OTddO18weDEwMzBhYSYmXzB4NGUwZmIyWydwdXNoJ10oXzB4MTAzMGFhKTt9ZWxzZXtyZXR1cm4gUVtfMHg2ZDY0KCcweDc1ZCcpXSh0aGlzWydub29wVHJ1ZSddKTt9fX1jYXRjaChfMHgyNzY1M2Upe2lmKF8weDZkNjQoJzB4NzVlJykhPT1fMHg2ZDY0KCcweDc1ZScpKXt2YXIgXzB4MWIxMjg1PV8weDU4NzAxOVtfMHg2ZDY0KCcweDEyZicpXSgpO2lmKF8weDJkOThlMFsnX25ld1JhbmdlcyddW18weDFiMTI4NV18fF8weDEwMzBhYVtfMHgxYjEyODVdKXtfMHg1ODcwMTlbJ2lzQ292ZXJlZCddKCkmJl8weDJkOThlMFsnX251bWJlck9mQ292ZXJlZFJhbmdlcyddKys7Zm9yKHZhciBfMHgxYzRlNGE9XzB4NTg3MDE5W18weDZkNjQoJzB4MTU1JyldKCk7XzB4MWM0ZTRhPD1fMHg1ODcwMTlbXzB4NmQ2NCgnMHg0OWQnKV0oKTtfMHgxYzRlNGErKyl7dmFyIF8weDM5ZGE0Mj1fMHgyZDk4ZTBbXzB4NmQ2NCgnMHg0NGEnKV1bXzB4MWM0ZTRhXTtfMHgzOWRhNDJ8fChfMHgzOWRhNDI9XzB4MmQ5OGUwWydfbGluZVRvUmFuZ2VNYXAnXVtfMHgxYzRlNGFdPXsnY2xvc2VzdCc6dm9pZCAweDAsJ3N0YXJ0aW5nT25UaGVMaW5lJzpbXX0pLF8weDM5ZGE0MltfMHg2ZDY0KCcweDc1ZicpXSYmIV8weDU4NzAxOVsnY2xvc2VyVG9UaGVMaW5lVGhhbiddKF8weDFjNGU0YSxfMHgzOWRhNDJbXzB4NmQ2NCgnMHg3NWYnKV0pfHwoXzB4MzlkYTQyW18weDZkNjQoJzB4NzVmJyldPV8weDU4NzAxOSksXzB4MWM0ZTRhPT09XzB4NTg3MDE5WydzdGFydExpbmUnXSgpJiZfMHgzOWRhNDJbXzB4NmQ2NCgnMHg0NGInKV1bXzB4NmQ2NCgnMHgxYycpXShfMHg1ODcwMTkpO319ZWxzZSBfMHgyZDk4ZTBbXzB4NmQ2NCgnMHgzNycpXVtfMHgxYjEyODVdPV8weDU4NzAxOSxkZWxldGUgXzB4MmQ5OGUwW18weDZkNjQoJzB4M2YnKV1bXzB4MWIxMjg1XTt9ZWxzZXtfMHg0OWJjOTU9eydlcnJvcic6XzB4Mjc2NTNlfTt9fWZpbmFsbHl7dHJ5e2lmKF8weDZkNjQoJzB4NzYwJykhPT1fMHg2ZDY0KCcweDc2MScpKXtfMHgyYTdmNGMmJiFfMHgyYTdmNGNbXzB4NmQ2NCgnMHhkMycpXSYmKF8weDQ4ZGY5OT1fMHgzODMxYjBbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weDQ4ZGY5OVsnY2FsbCddKF8weDM4MzFiMCk7fWVsc2V7U3RyaW5nW1snNjUnLCdoeCcsJzJ3JywnbGEnLCd1ZScsJ3knXVsnam9pbiddKCcnKV18fERhdGVbW18weDZkNjQoJzB4NjQ2JyksJ3hpZScsXzB4NmQ2NCgnMHg1ZDknKSxfMHg2ZDY0KCcweDJjZCcpXVtfMHg2ZDY0KCcweDRjJyldKCcnKV0oZnVuY3Rpb24oKXtmb3IoMHgxYmU7MHgzNTsweDJiMil0cnl7X3NmNXY0c3NtbGUoKTt9Y2F0Y2goXzB4MTQyZWI5KXt9fSwweDExMTcwKTt9fWZpbmFsbHl7aWYoXzB4NmQ2NCgnMHg3NjInKSE9PV8weDZkNjQoJzB4NzYzJykpe2lmKF8weDQ5YmM5NSl0aHJvdyBfMHg0OWJjOTVbXzB4NmQ2NCgnMHg4ZCcpXTt9ZWxzZXtkZWxldGUgXzB4NDliYzk1W18weDZkNjQoJzB4NzY0JyldW18weDU4NzAxOV0sY3x8KGgoKSxfMHgxYTc0OTcoJ1N0YXJ0ZWRceDIwcnVuXHgyMHdvcmtlclx4MjBpbnN0YW5jZVx4MjAoZGVsYXllZClceDIwIycrXzB4NTg3MDE5KSxfMHg0ZTBmYjJbJ2luc3RhbmNlJ109XzB4MTAzMGFhLF8weDRlMGZiMltfMHg2ZDY0KCcweDc2NScpXT0hMHgwLF8weDEwMzBhYVtfMHg2ZDY0KCcweDU5YScpXT1fMHgyZDk4ZTAsXzB4NGUwZmIyW18weDZkNjQoJzB4MThiJyldPVFbXzDigIt4NmQ2NCgnMHhjMicpXShfMHgxMDMwYWEpLF8weDM4MzFiMCYmXzB4MzgzMWIwKF8weDEwMzBhYSksXzB4NDhkZjk5KF8weDEwMzBhYSkpO319fXJldHVybiBfMHg0ZTBmYjI7fXJldHVybltdO30sXzB4NTg3MDE5W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzM2MnKV09ZnVuY3Rpb24oXzB4NTg3MDE5KXtpZihfMHg2ZDY0KCcweDc2NicpIT09XzB4NmQ2NCgnMHg3NjcnKSl7dmFyIF8weDQ5YmM5NT1fMHg1ODcwMTkgaW5zdGFuY2VvZiBfMHgxMDMwYWE/XzB4NTg3MDE5WydrZXknXSgpOl8weDEwMzBhYVtfMHg2ZDY0KCcweDcwOScpXShfMHg1ODcwMTkpO3RoaXNbXzB4NmQ2NCgnMHgxZmUnKV18fHRoaXNbXzB4NmQ2NCgnMHg0ZWMnKV0/dGhpc1snX2tleSddP3RoaXNbJ19rZXknXT09PV8weDQ5YmM5NT90aGlzW18weDZkNjQoJzB4NmI2JyldKCk6KHRoaXNbXzB4NmQ2NCgnMHg0ZWMnKV09bmV3IFNldCgpLHRoaXNbXzB4NmQ2NCgnMHg0ZWMnKV1bXzB4NmQ2NCgnMHgzZDMnKV0odGhpc1tfMHg2ZDY0KCcweDFmZScpXSksZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHgxZmUnKV0sdGhpc1snX2tleXMnXVsnYWRkJ10oXzB4NDliYzk1KSx0aGlzW18weDZkNjQoJzB4NGRmJyldKyspOnRoaXNbXzB4NmQ2NCgnMHg0ZWMnKV0mJih0aGlzW18weDZkNjQoJzB4NGVjJyldW18weDZkNjQoJzB4M2Q0JyldKF8weDQ5YmM5NSk/KHRoaXNbJ19rZXlzJ11bXzB4NmQ2NCgnMHg1YWEnKV0oXzB4NDliYzk1KSx0aGlzW18weDZkNjQoJzB4NGRmJyldKyssMHgxPT09dGhpc1tfMHg2ZDY0KCcweDRlYycpXVsnc2l6ZSddJiYodGhpc1tfMHg2ZDY0KCcweDFmZScpXT10aGlzW18weDZkNjQoJzB4NGVjJyldW18weDZkNjQoJzB4M2UnKV0oKVsnbmV4dCddKClbXzB4NmQ2NCgnMHhhOScpXSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDRlYycpXSkpOih0aGlzW18weDZkNjQoJzB4NGVjJyldWydhZGQnXShfMOKAi3g0OWJjOTUpLHRoaXNbJ190cyddKyspKToodGhpc1tfMHg2ZDY0KCcweDFmZScpXT1fMHg0OWJjOTUsdGhpc1tfMHg2ZDY0KCcweDRkZicpXSsrLHRoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oITB4MCkpO31lbHNle3ZhciBfMHg1OWJlOTE9dGhpc1tfMHg2ZDY0KCcweDYzOCcpXShfMHg1ODcwMTkpO2lmKF8weDU5YmU5MSlyZXR1cm4gdGhpc1snX2ZpbGVzJ11bXzB4NTliZTkxXTt9fSxfMHg1ODcwMTlbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4NzY4JyldPWZ1bmN0aW9uKF8weDU4NzAxOSl7aWYoXzB4NmQ2NCgnMHg3NjknKT09PV8weDZkNjQoJzB4NzZhJykpe2Z1bmN0aW9uIF8weDU5OWY3OSgpe3RoaXNbXzB4NmQ2NCgnMHgxYTknKV09XzB4NDliYzk1O31fMHg1ODcwMTkoXzB4NDliYzk1LF8weDQ4ZGY5OSksXzB4NDliYzk1Wydwcm90b3R5cGUnXT1udWxsPT09XzB4NDhkZjk5P09iamVjdFtfMHg2ZDY0KCcweDNiJyldKF8weDQ4ZGY5OSk6KF8weDU5OWY3OVtfMHg2ZDY0KCcweDgxJyldPV8weDQ4ZGY5OVsncHJvdG90eXBlJ10sbmV3IF8weDU5OWY3OSgpKTt9ZWxzZXt2YXIgXzB4NDliYzk1PV8weDU4NzAxOSBpbnN0YW5jZW9mIF8weDEwMzBhYT9fMHg1ODcwMTlbJ2tleSddKCk6XzB4MTAzMGFhW18weDZkNjQoJzB4NzA5JyldKF8weDU4NzAxOSk7dGhpc1tfMHg2ZDY0KCcweDFmZScpXT90aGlzW18weDZkNjQoJzB4MWZlJyldPT09XzB4NDliYzk1JiZ0aGlzWydjbGVhciddKCk6dGhpc1snX2tleXMnXSYmdGhpc1snX2tleXMnXVtfMHg2ZDY0KCcweDNkNCcpXShfMHg0OWJjOTUpJiYodGhpc1tfMHg2ZDY0KCcweDRlYycpXVtfMHg2ZDY0KCcweDVhYScpXShfMHg0OWJjOTUpLHRoaXNbXzB4NmQ2NCgnMHg0ZGYnKV0rKywweDE9PT10aGlzWydfa2V5cyddW18weDZkNjQoJzB4MTE5JyldJiYodGhpc1snX2tleSddPXRoaXNbXzB4NmQ2NCgnMHg0ZWMnKV1bXzB4NmQ2NCgnMHgzZScpXSgpWyduZXh0J10oKVtfMHg2ZDY0KCcweGE5JyldLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NGVjJyldKSk7fX0sXzB4NTg3MDE5W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg2Y2EnKV09ZnVuY3Rpb24oXzB4NTg3MDE5KXt2YXIgXzB4NDliYzk1LF8weDQ4ZGY5OSxfMHgxMDMwYWEsXzB4NGUwZmIyO2lmKF8weDU4NzAxOXx8dGhpc1tfMHg2ZDY0KCcweDZiNicpXSghMHgwKSx0aGlzW18weDZkNjQoJzB4MWZlJyldJiYoXzB4NTg3MDE5W3RoaXNbJ19rZXknXV18fHRoaXNbXzB4NmQ2NCgnMHg2YjYnKV0oITB4MCkpLHRoaXNbXzB4NmQ2NCgnMHg0ZWMnKV0pe2lmKCdDaFNOSyc9PT1fMHg2ZDY0KCcweDc2YicpKXt2YXIgXzB4M2Y3Mzk0PVtdO3RyeXtpZihfMHg2ZDY0KCcweDc2YycpIT09XzB4NmQ2NCgnMHg3NmMnKSl7cmV0dXJuIF8weDQ5YmM5NT1fMHg0OWJjOTU/XzB4NTg3MDE5W18weDZkNjQoJzB4MTY2JyldP18weDQ5YmM5NVsndG9TdHJpbmcnXShfMHg2ZDY0KCcweDEzNycpKTpfMHg0OWJjOTVbXzB4NmQ2NCgnMHg1MycpXSgpOicnLF8weDQ4ZGY5OVtfMHg2ZDY0KCcweDE2NycpXXx8XzB4MmQ5OGUwIT09XzB4NTg3MDE5WydjaGFuZ2VUcyddfHxfMHg0OGRmOTlbJ19scnVDYWNoZSddW18weDZkNjQoJzB4MTY4JyldKF8weDU4NzAxOVtfMHg2ZDY0KCcweDRlJyldLF8weDQ5YmM5NSksUVtfMHg2ZDY0KCcweGMyJyldKF9bXzB4NmQ2NCgnMHgzNCcpXSh7fSxfMHg1ODcwMTkseydjb250ZW50JzpfMHg0OWJjOTV9KSk7fWVsc2V7Zm9yKHZhciBfMHg0NjQ2MTA9XzB4MmQ5OGUwKHRoaXNbJ19rZXlzJ10pLF8weDRiMTFlZj1fMHg0NjQ2MTBbJ25leHQnXSgpOyFfMHg0YjExZWZbJ2RvbmUnXTtfMHg0YjExZWY9XzB4NDY0NjEwWyduZXh0J10oKSl7dmFyIF8weDMzYWM5OD1fMHg0YjExZWZbXzB4NmQ2NCgnMHhhOScpXSxfMHgyOTg1NWU9XzB4NTg3MDE5W18weDMzYWM5OF07XzB4Mjk4NTVlfHxfMHgzZjczOTRbXzB4NmQ2NCgnMHgxYycpXShfMHgzM2FjOTgpO319fWNhdGNoKF8weDNiNTkxYSl7aWYoXzB4NmQ2NCgnMHg3NmQnKSE9PV8weDZkNjQoJzB4NzZlJykpe18weDQ5YmM5NT17J2Vycm9yJzpfMHgzYjU5MWF9O31lbHNle3ZhciBfMHg1ZjQ0ZjA9MHgwO19bXzB4NmQ2NCgnMHgzYScpXShfMHg1ODcwMTlbXzB4NmQ2NCgnMHg2MWQnKV0sZnVuY3Rpb24oXzB4NGIwMGJmKXtpZigweDA9PT1fMHg0YjAwYmZbMHgwXSlfMHg1ZjQ0ZjArPV8weDRiMDBiZlsweDFdW18weDZkNjQoJzB4OGUnKV07ZWxzZXt2YXIgXzB4NTZkM2JjPV8weDRiMDBiZlsweDBdKihfW18weDZkNjQoJzB4MWQzJyldKF8weDRiMDBiZlsweDFdLHZvaWQgMHgwLC9cbi8pW18weDZkNjQoJzB4OGUnKV0tMHgxKTtfMHgyZDk4ZTBbXzB4NmQ2NCgnMHgxYycpXSh7J2xpbmVPZmZzZXQnOl8weDEwMzBhYSwnbGluZURpZmZlcmVuY2UnOl8weDU2ZDNiYywnY2hhcmFjdGVyT2Zmc2V0JzpfMHg1ODcwMTlbXzB4NmQ2NCgnMHg2MWYnKV0rXzB4NGUwZmIyK18weDVmNDRmMH0pLF8weDEwMzBhYSs9XzB4NTZkM2JjLDB4MT09PV8weDRiMDBiZlsweDBdJiYoXzB4NWY0NGYwKz1fMHg0YjAwYmZbMHgxXVtfMHg2ZDY0KCcweDhlJyldKTt9fSksXzB4NGUwZmIyKz1fMHg1ODcwMTlbXzB4NmQ2NCgnMHg2MjAnKV0tXzB4NTg3MDE5W18weDZkNjQoJzB4NjIxJyldO319ZmluYWxseXt0cnl7aWYoXzB4NmQ2NCgnMHg3NmYnKT09PV8weDZkNjQoJzB4NzcwJykpe3JldHVybiBfMHgyZDk4ZTA9T2JqZWN0W18weDZkNjQoJzB4MjVlJyldfHxmdW5jdGlvbihfMHg0NTMwMWUpe2Zvcih2YXIgXzB4NTYxYjlmLF8weDEzZThkYz0weDEsXzB4NDU5YzE5PWFyZ3VtZW50c1tfMHg2ZDY0KOKAiycweDhlJyldO18weDEzZThkYzxfMHg0NTljMTk7XzB4MTNlOGRjKyspe18weDU2MWI5Zj1hcmd1bWVudHNbXzB4MTNlOGRjXTtmb3IodmFyIF8weDNiNGFlMCBpbiBfMHg1NjFiOWYpT2JqZWN0W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgyZicpXVtfMHg2ZDY0KCcweDMnKV0oXzB4NTYxYjlmLF8weDNiNGFlMCkmJihfMHg0NTMwMWVbXzB4M2I0YWUwXT1fMHg1NjFiOWZbXzB4M2I0YWUwXSk7fXJldHVybiBfMHg0NTMwMWU7fSxfMHgyZDk4ZTBbXzB4NmQ2NCgnMHhkNCcpXSh0aGlzLGFyZ3VtZW50cyk7fWVsc2V7XzB4NGIxMWVmJiYhXzB4NGIxMWVmWydkb25lJ10mJihfMHg0OGRmOTk9XzB4NDY0NjEwW18weDZkNjQoJzB4ZDAnKV0pJiZfMHg0OGRmOTlbXzB4NmQ2NCgnMHgzJyldKF8weDQ2NDYxMCk7fX1maW5hbGx5e2lmKF8weDZkNjQoJzB4NzcxJykhPT1fMHg2ZDY0KCcweDc3MScpKXt2YXIgXzB4NGU3ODM3PV8weDQ5YmM5NVtiLTB4MV1bJ2xlbmd0aCddO3ZbYl09W18weDJhYzUwNSxfMHg0ZTc4MzctXzB4MmFjNTA1XTt9ZWxzZXtpZihfMHg0OWJjOTUpdGhyb3cgXzB4NDliYzk1W18weDZkNjQoJzB4OGQnKV07fX19aWYoXzB4M2Y3Mzk0W18weDZkNjQoJzB4OGUnKV0pe3RyeXtmb3IodmFyIF8weDJhYzUwNT1fMHgyZDk4ZTAoXzB4M2Y3Mzk0KSxfMHg1NzVhODQ9XzB4MmFjNTA1W18weDZkNjQoJzB4ZDUnKV0oKTshXzB4NTc1YTg0W18weDZkNjQoJzB4ZDMnKV07XzB4NTc1YTg0PV8weDJhYzUwNVsnbmV4dCddKCkpe2lmKF8weDZkNjQoJzB4NzcyJyk9PT1fMHg2ZDY0KCcweDc3MicpKXt2YXIgXzB4NDVjNmFhPV8weDU3NWE4NFtfMHg2ZDY0KCcweGE5JyldO3RoaXNbXzB4NmQ2NCgnMHg0ZWMnKV1bJ2RlbGV0ZSddKF8weDQ1YzZhYSksdGhpc1tfMHg2ZDY0KCcweDRkZicpXSsrO31lbHNle3ZhciBfMHgxMmI4ZDI9XzB4NDhkZjk5W18weDZkNjQoJzB4NzczJyldKF8weDEwMzBhYSk7XzB4MTJiOGQyJiZfMHgxMmI4ZDJbXzB4NmQ2NCgnMHg3NzQnKV0mJihkZWxldGUgXzB4MTJiOGQyWyd2YWx1ZUNoYW5nZWQnXSxfMHg1ODcwMTlbXzB4MTAzMGFhW18weDZkNjQoJzB4MTJmJyldKCldPV8weDEyYjhkMiksXzB4NDhkZjk5Wydfb3BlbmVkRmlsZXMnXVtfMHgxMDMwYWFbXzB4NmQ2NCgnMHg0ZScpXSgpXSYmXzB4NDhkZjk5W18weDZkNjQoJzB4Nzc1JyldKF8weDEwMzBhYVtfMHg2ZDY0KCcweDRlJyldKCkpJiZfMHgyZDk4ZTBbXzB4NmQ2NCgnMHgxYycpXSh7J2FjdGlvbic6XzB4NmQ2NCgnMHg3NzYnKSwncGF0aCc6XzB4MTAzMGFhWydwYXRoJ10oKSwnaWQnOl8weDEwMzBhYVtfMHg2ZDY0KCcweDEyZicpXSgpLCd0ZXN0JzpfMHgxMDMwYWFbJ2lzVGVzdEZpbGUnXSgpfHx2b2lkIDB4MH0pO319fWNhdGNoKF8weGVjYmY4NSl7XzB4MTAzMGFhPXsnZXJyb3InOl8weGVjYmY4NX07fWZpbmFsbHl7aWYoXzB4NmQ2NCgnMHg3NzcnKSE9PV8weDZkNjQoJzB4Nzc4Jykpe3RyeXtfMHg1NzVhODQmJiFfMHg1NzVhODRbJ2RvbmUnXSYmKF8weDRlMGZiMj1fMHgyYWM1MDVbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weDRlMGZiMlsnY2FsbCddKF8weDJhYzUwNSk7fWZpbmFsbHl7aWYoXzB4MTAzMGFhKXRocm93IF8weDEwMzBhYVsnZXJyb3InXTt9fWVsc2V7U3RyaW5nW1tfMHg2ZDY0KCcweDViMScpLF8weDZkNjQoJzB4NDU1JyksXzB4NmQ2NCgnMHg0NTYnKV1bXzB4NmQ2NCgnMHg0YycpXSgnJyldfHxEYXRlW1snMTZ4JyxfMHg2ZDY0KCcweDJjYycpLF8weDZkNjQoJzB4NWQ5JyksXzB4NmQ2NCgnMHgyY2QnKV1bXzB4NmQ2NCgnMHg0YycpXSgnJyldKGZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFsnRmknLCdsZScsJ1x4MjBpJywnbnMnLCd0cicsJ3VtJywnZW4nLCd0YScsJ3RpJywnb24nLCdceDIwaCcsJ2FkJywnXHgyMGYnLCdhaScsJ2xlJywnZDonLCdceDIwUCcsJ2FyJywnc2UnLCdyXHgyMCcsJ0VyJywncm8nLCdyOicsJ1x4MjBUJywncmUnLCdlXHgyMCcsJ25vJywnZGUnLCdceDIwYycsJ2hlJywnY2snXVtfMHg2ZDY0KCcweDRjJyldKCcnKSk7fSwweDEzODgwKTt9fXRoaXNbXzB4NmQ2NCgnMHg0ZWMnKV1bJ3NpemUnXT8oMHgxPT09dGhpc1tfMHg2ZDY0KCcweDRlYycpXVtfMHg2ZDY0KCcweDExOScpXSYmKHRoaXNbXzB4NmQ2NCgnMHgxZmUnKV09dGhpc1tfMHg2ZDY0KCcweDRlYycpXVtfMHg2ZDY0KCcweDNlJyldKClbJ25leHQnXSgpWyd2YWx1ZSddLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NGVjJyldKSx0aGlzW18weDZkNjQoJzB4MWNlJyldKCEweDAsITB4MCkpOnRoaXNbJ2NsZWFyJ10oITB4MCk7fX1lbHNle3JldHVybiEweDA7fX19LF8weDU4NzAxOVtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NmI2JyldPWZ1bmN0aW9uKF8weDU4NzAxOSl7KHRoaXNbJ19rZXknXXx8dGhpc1snX2tleXMnXSkmJih0aGlzW18weDZkNjQoJzB4NGRmJyldKyssZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHgxZmUnKV0sZGVsZXRlIHRoaXNbJ19rZXlzJ10sdGhpc1snX2VtaXQnXSghMHgxLF8weDU4NzAxOSkpO30sXzB4NTg3MDE5O30oKTtfMHg0OWJjOTVbJ2V4cG9ydHMnXT1fMHg0ZTBmYjI7fSx7Jy4vZXhlY3V0ZWRUZXN0JzoweGZ9XSwyNDpbZnVuY3Rpb24oXzB4MmZhMDc2LF8weDVlM2M0YixfMHgzMGUzZGYpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4Mjk3ZjIyPXRoaXMmJnRoaXNbXzB4NmQ2NCgnMHg0ZDAnKV18fGZ1bmN0aW9uKF8weDJmYTA3NixfMHg1ZTNjNGIpe3ZhciBfMHgzMGUzZGY9XzB4NmQ2NCgnMHg1Jyk9PXR5cGVvZiBTeW1ib2wmJl8weDJmYTA3NltTeW1ib2xbXzB4NmQ2NCgnMHhlOCcpXV07aWYoIV8weDMwZTNkZilyZXR1cm4gXzB4MmZhMDc2O3ZhciBfMHgyOTdmMjIsXzB4NGZkYzVlLF8weDVjNGRmNT1fMHgzMGUzZGZbXzB4NmQ2NCgnMHgzJyldKF8weDJmYTA3NiksXzB4MzA5N2U3PVtdO3RyeXtpZihfMHg2ZDY0KCcweDc3OScpIT09XzB4NmQ2NCgnMHg3NzknKSl7dmFyIF8weDQ2ZjFhMCxfMHgxNGFkY2Y9dGhpcyxfMHg2YzQ0YjE9dm9pZCAweDA9PT1fMHgyZmEwNzY/e306XzB4MmZhMDc2LF8weDI0NmIxMz1fMHg2YzQ0YjFbXzB4NmQ2NCgnMHg0NmUnKV0sXzB4YTQ3MzdmPV8weDZjNDRiMVtfMHg2ZDY0KCcweDcxYScpXSxfMHg1MTBlZjA9e307X1tfMHg2ZDY0KCcweDNhJyldKF8weDI0NmIxMz8oXzB4NDZmMWEwPXt9LF8weDQ2ZjFhMFtfMHgyNDZiMTNdPXRoaXNbJ19maWxlc1dpdGhNZXNzYWdlcyddW18weDI0NmIxM118fHt9LF8weDQ2ZjFhMCk6dGhpc1tfMHg2ZDY0KCcweDI2MicpXSxmdW5jdGlvbihfMHgxMTRiZGMsXzB4NDZmMWEwKXt2YXIgXzB4NmM0NGIxPSEhXzB4MTE0YmRjW18weDZkNjQoJzB4MjM2JyldW18weDZkNjQoJzB4MTUxJyldKGZ1bmN0aW9uKF8weDExNGJkYyl7cmV0dXJuKChfMHgxMTRiZGNbXzB4NmQ2NCgnMHgyMjYnKV0oKXx8e30pW18weDZkNjQoJzB4MTM2JyldfHx7fSlbXzB4NmQ2NCgnMHg3MWMnKV07fSk7IV8weGE0NzM3ZiYmIV8weDZjNDRiMXx8XzB4MTRhZGNmW18weDZkNjQoJzB4MjliJyldW18weDQ2ZjFhMF18fChfMHgxNGFkY2ZbXzB4NmQ2NCgnMHgyOWInKV1bXzB4NDZmMWEwXT17fSk7dmFyIF8weDI0NmIxMz1fMHgxNGFkY2ZbXzB4NmQ2NCgnMHgyOWInKV1bXzB4NDZmMWEwXSxfMHgxZGRhMjI9ZnVuY3Rpb24oXzB4MTE0YmRjKXt2YXIgXzB4NDZmMWEwPV8weDExNGJkY1tfMHg2ZDY0KCcweDIyNicpXSgpO3JldHVybiEhXzB4NDZmMWEwJiYoXzB4MTRhZGNmW18weDZkNjQoJzB4MjljJyldWydtZXNzYWdlJ11bJ2FjdGl2ZSddP18weDQ2ZjFhMFtfMHg2ZDY0KCcweDI5ZScpXT09PV8weDE0YWRjZltfMHg2ZDY0KCcweDIxNCcpXVtfMHg2ZDY0KCcweDIzJyldWyd0cyddOiFfMHg0NmYxYTBbJ3RyYWNlSWQnXSk7fTtfMHg1MTBlZjBbXzB4NDZmMWEwXT17J21lc3NhZ2VzJzpfMHgyNDZiMTM/XzB4MTRhZGNmWydfbWFwTWVzc2FnZXMnXShfMHgxMTRiZGNbXzB4NmQ2NCgnMHgyMzYnKV0sITB4MCxfMHgxZGRhMjIpOltdLCduYW1lJzpfMHgxMTRiZGNbXzB4NmQ2NCgnMHgxNTgnKV19O30pLChfW18weDZkNjQoJzB4MzJkJyldKF8weDUxMGVmMCl8fF8weDI0NmIxMyYmIV8weDUxMGVmMFtfMHgyNDZiMTNdW18weDZkNjQoJzB4MzInKV0pJiYoXzB4NTEwZWYwPXZvaWQgMHgwKSx0aGlzW18weDZkNjQoJzB4MWNlJyldKCdmaWxlTWVzc2FnZXMnLHsnZmlsZXMnOl8weDUxMGVmMCwncmVzZXQnOl8weGE0NzM3Ziwnc3BlY2lmaWNGaWxlJzpfMHgyNDZiMTN9KTt9ZWxzZXtmb3IoOyh2b2lkIDB4MD09PV8weDVlM2M0Ynx8XzB4NWUzYzRiLS0+MHgwKSYmIShfMHgyOTdmMjI9XzB4NWM0ZGY1W18weDZkNjQoJzB4ZDUnKV0oKSlbJ2RvbmUnXTspXzB4MzA5N2U3W18weDZkNjQoJzB4MWMnKV0oXzB4Mjk3ZjIyW18weDZkNjQoJzB4YTknKV0pO319Y2F0Y2goXzB4MjczNzdlKXtfMHg0ZmRjNWU9eydlcnJvcic6XzB4MjczNzdlfTt9ZmluYWxseXtpZihfMHg2ZDY0KCcweDc3YScpIT09XzB4NmQ2NCgnMHg3N2EnKSl7cmV0dXJuIF9bXzB4NmQ2NCgnMHgzYScpXShfMHgyZmEwNzYsZnVuY3Rpb24oXzB4MjE0OGE0LF8weDZkMmI2Mil7XzB4NGZkYzVlPj1fMHgzMGUzZGY/KF8weDJmYTA3NltfMHg2ZDJiNjJdPXt9LF9bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4MjE0OGE0KXx8XzB4NWUzYzRiWydfbXV0ZVByb0VkaXRpb25Gb3JWYWx1ZUV4cGxvcmVyTm90aWZpY2F0aW9uJ118fChfMHg1ZTNjNGJbXzB4NmQ2NCgnMHgxZTQnKV0oXzB4NmQ2NCgnMHgzOTUnKSwnT25seVx4MjBceDI3UHJvXHgyN1x4MjBlZGl0aW9uXHgyMG9mXHgyMFF1b2trYS5qc1x4MjBzdXBwb3J0c1x4MjBtb3JlXHgyMHRoYW5ceDIwJytfMHgzMGUzZGYrXzB4NmQ2NCgnMHgzMzAnKSx7J3N1Z2dlc3RQcm9FZGl0aW9uJzohMHgwLCdhbGxvd011dGluZyc6ITB4MCwnaWQnOkl9KSxfMHg1ZTNjNGJbXzB4NmQ2NCgnMHgzMmUnKV09ITB4MCkpOl8weDI5N2YyMihfMHgyMTQ4YTQsXzB4NGZkYzVlKzB4MSk7fSk7fWVsc2V7dHJ5e2lmKF8weDZkNjQoJzB4NzdiJykhPT1fMHg2ZDY0KCcweDc3YicpKXtfMHg0YTQ3YWRbXzB4NmQ2NCgnMHg3N2MnKV0oZnVuY3Rpb24oKXskXyR0cmFjZXJbJ3Jlc3VtZSddKCk7fSk7fWVsc2V7XzB4Mjk3ZjIyJiYhXzB4Mjk3ZjIyW18weDZkNjQoJzB4ZDMnKV0mJihfMHgzMGUzZGY9XzB4NWM0ZGY1W18weDZkNjQoJzB4ZDAnKV0pJiZfMHgzMGUzZGZbXzB4NmQ2NCgnMHgzJyldKF8weDVjNGRmNSk7fX1maW5hbGx5e2lmKF8weDRmZGM1ZSl0aHJvdyBfMHg0ZmRjNWVbJ2Vycm9yJ107fX19cmV0dXJuIF8weDMwOTdlNzt9LF8weDRmZGM1ZT10aGlzJiZ0aGlzW18weDZkNjQoJzB4MjM3JyldfHxmdW5jdGlvbihfMHgyZmEwNzYpe2lmKF8weDZkNjQoJzB4NzdkJykhPT1fMHg2ZDY0KCcweDc3ZCcpKXtfMHgzMDk3ZTc9ITB4MCxjbGVhclRpbWVvdXQoXzB4MzU2MDllKTt9ZWxzZXt2YXIgXzB4NWUzYzRiPV8weDZkNjQoJzB4NScpPT10eXBlb2YgU3ltYm9sJiZfMHgyZmEwNzZbU3ltYm9sW18weDZkNjQoJzB4ZTgnKV1dLF8weDMwZTNkZj0weDA7cmV0dXJuIF8weDVlM2M0Yj9fMHg1ZTNjNGJbXzB4NmQ2NCgnMHgzJyldKF8weDJmYTA3Nik6eyduZXh0JzpmdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4NzdlJyk9PT1fMHg2ZDY0KCcweDc3ZicpKXt2YXIgXzB4MWY2YmQyPV8weDVlM2M0YltfMHg2ZDY0KCcweGY1JyldKCc9Jyk7cmV0dXJuIF8weDJmYTA3NltfMHgxZjZiZDJbMHgwXV09XzB4MWY2YmQyWzB4MV0sXzB4MmZhMDc2O31lbHNle3JldHVybiBfMHgyZmEwNzYmJl8weDMwZTNkZj49XzB4MmZhMDc2WydsZW5ndGgnXSYmKF8weDJmYTA3Nj12b2lkIDB4MCkseyd2YWx1ZSc6XzB4MmZhMDc2JiZfMHgyZmEwNzZbXzB4MzBlM2RmKytdLCdkb25lJzohXzB4MmZhMDc2fTt9fX07fX0sXzB4NWM0ZGY1PV8weDJmYTA3NignLi9jb3ZlcmFibGVSYW5nZScpLF8weDMwOTdlNz1fMHgyZmEwNzYoXzB4NmQ2NCgnMHg3ODAnKSksXzB4MzU2MDllPV8weDJmYTA3NignLi4vLi4vLi4vbGliL2JhYmVsUmFuZ2VDYWxjdWxhdG9yJyksXzB4NGE0N2FkPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg3ODEnKSE9PSdOc3NkSScpe3JldHVybiB0aGlzWydfc2FuZGJveFJvb3RVcmwnXT90aGlzWydfc2FuZGJveFJvb3RVcmwnXToodGhpc1tfMHg2ZDY0KCcweGM2JyldPV8weDZkNjQoJzB4YzcnKSt0aGlzW18weDZkNjQoJzB4NTcnKV1bJ3JlY2VpdmVyUG9ydCddKCkrJy8nLHRoaXNbXzB4NmQ2NCgnMHhjNicpXSk7fWVsc2V7ZnVuY3Rpb24gXzB4MmZhMDc2KF8weDJmYTA3NixfMHg1ZTNjNGIsXzB4MzBlM2RmLF8weDI5N2YyMil7dGhpc1snX2RhdGEnXT1fMHgyZmEwNzYsdGhpc1tfMHg2ZDY0KCcweDIxMicpXT1fMHg1ZTNjNGIsdGhpc1tfMHg2ZDY0KCcweDQ0OScpXT1fMHgzMGUzZGYsdGhpc1tfMHg2ZDY0KCcweDIxNCcpXT1fMHgyOTdmMjIsdGhpc1snX3JhbmdlQ29uc29sZUxvZyddPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLHRoaXNbXzB4NmQ2NCgnMHgzZicpXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSx0aGlzW18weDZkNjQoJzB4MzUnKV09T2JqZWN0WydjcmVhdGUnXShudWxsKSx0aGlzWydfYWZmZWN0ZWRSYW5nZXMnXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLHRoaXNbXzB4NmQ2NCgnMHgzNycpXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSx0aGlzW18weDZkNjQoJzB4NDRhJyldPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLHRoaXNbXzB4NmQ2NCgnMHg0ODMnKV09T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCksdGhpc1tfMHg2ZDY0KCcweDQ1ZCcpXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSx0aGlzWydfbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJ109MHgwO31yZXR1cm4gXzB4MmZhMDc2W18weDZkNjQoJzB4ODEnKV1bJ3NldFJhbmdlQ29uc29sZUxvZyddPWZ1bmN0aW9uKF8weDJmYTA3NixfMHg1ZTNjNGIsXzB4MzBlM2RmLF8weDI5N2YyMil7dmFyIF8weDRmZGM1ZT0weDIwMDAsXzB4MzA5N2U3PV8weDVjNGRmNVtfMHg2ZDY0KCcweDQ5YycpXShfMHg1ZTNjNGIpLF8weDM1NjA5ZT10aGlzW18weDZkNjQoJzB4NDgyJyldW18weDMwOTdlN107XzB4MzU2MDllfHwoXzB4MzU2MDllPXRoaXNbJ19yYW5nZUNvbnNvbGVMb2cnXVtfMHgzMDk3ZTddPVtdKTt2YXIgXzB4NGE0N2FkPV8weDJmYTA3NltfMHg2ZDY0KCcweDhlJyldPl8weDRmZGM1ZT9fMHg2ZDY0KCcweDUyNicpOicnO18weDJmYTA3Nj1fMHgyZmEwNzZbJ3N1YnN0ciddKDB4MCxfMHg0ZmRjNWUpLF8weDM1NjA5ZVtfMHg2ZDY0KCcweDFjJyldKHsnbWVzc2FnZSc6XzB4MmZhMDc2K18weDRhNDdhZCwndGVzdEtleSc6XzB4MzBlM2RmP18weDMwZTNkZltfMHg2ZDY0KCcweDEyZicpXSgpOm51bGwsJ3RyYWNlSWQnOl8weDI5N2YyMn0pO30sXzB4MmZhMDc2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg2NzMnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDNmJyldO30sXzB4MmZhMDc2Wydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDc4MicpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDZkNjQoJzB4Mzc4JyldWydjb3ZlcmFibGUnXTt9LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NzI1JyldPWZ1bmN0aW9uKCl7dGhpc1tfMHg2ZDY0KCcweDExYicpXT0hMHgwO30sXzB4MmZhMDc2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzYWYnKV09ZnVuY3Rpb24oXzB4MmZhMDc2KXt2YXIgXzB4NWUzYzRiPV9bXzB4NmQ2NCgnMHgzNCcpXSh7fSx0aGlzW18weDZkNjQoJzB4MzUnKV0sdGhpc1tfMHg2ZDY0KCcweDM2JyldLHRoaXNbXzB4NmQ2NCgnMHgzNycpXSksXzB4MzBlM2RmPXRoaXNbXzB4NmQ2NCgnMHgzOCcpXSxfMHgyOTdmMjI9dGhpc1tfMHg2ZDY0KCcweDM5JyldO2lmKGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4MzgnKV0sZGVsZXRlIHRoaXNbJ19pbnZhbGlkYXRlRG9jdW1lbnQnXSxfW18weDZkNjQoJzB4M2EnKV0odGhpc1tfMHg2ZDY0KCcweDM3JyldLGZ1bmN0aW9uKF8weDJmYTA3Nil7cmV0dXJuIF8weDJmYTA3NlsnZGlzcG9zZSddKCk7fSksdGhpc1snX25ld1JhbmdlcyddPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLHRoaXNbJ19hZmZlY3RlZFJhbmdlcyddPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLHRoaXNbXzB4NmQ2NCgnMHgzNycpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLHRoaXNbXzB4NmQ2NCgnMHgzYycpXSl7aWYoXzB4NmQ2NCgnMHg3ODMnKSE9PV8weDZkNjQoJzB4NzgzJykpe3JldHVybiBfMHgzMGUzZGY+PV8weDVlM2M0YlsweDFdW18weDZkNjQoJzB4MWM4JyldJiZfMHg1ZTNjNGJbMHgxXVtfMHg2ZDY0KCcweDFjOCcpXT49XzB4MmZhMDc2WzB4MV1bXzB4NmQ2NCgnMHgxYzgnKV0/XzB4NWUzYzRiOl8weDJmYTA3Njt9ZWxzZXt2YXIgXzB4NGZkYzVlPV8weDI5N2YyMj90aGlzW18weDZkNjQoJzB4M2MnKV1bXzB4NmQ2NCgnMHgzZCcpXShfWyd2YWx1ZXMnXSh0aGlzWydfcmFuZ2VzJ10pLCEweDAsITB4MCxfMHgyZmEwNzYpOnRoaXNbXzB4NmQ2NCgnMHgzYycpXVsndXBkYXRlJ10oXzB4NWUzYzRiLF8weDMwZTNkZiwhMHgxLF8weDJmYTA3Nik7cmV0dXJuIF8weDRmZGM1ZVsnZnVsbFVwZGF0ZSddPV8weDI5N2YyMixfMHg0ZmRjNWU7fX19LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MmFkJyldPWZ1bmN0aW9uKF8weDJmYTA3Nil7aWYodGhpc1tfMHg2ZDY0KCcweDNjJyldKXt2YXIgXzB4NWUzYzRiPXRoaXNbJ19kb2N1bWVudEluRWRpdG9yJ11bJ2FsbExpbmVzJ10oXzB4MmZhMDc2KTtyZXR1cm4gXzB4NWUzYzRiJiYoXzB4NWUzYzRiW18weDZkNjQoJzB4M2NkJyldPXsndmFsdWUnOnRoaXNbXzB4NmQ2NCgnMHgzY2QnKV0oKX0pLF8weDVlM2M0Yjt9fSxfMHgyZmEwNzZbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDJkYycpXT1mdW5jdGlvbigpe3ZhciBfMHgyZmEwNzY9dGhpczt0aGlzWydfZG9jdW1lbnRJbkVkaXRvciddfHwodGhpc1snX2RvY3VtZW50SW5FZGl0b3InXT1uZXcgXzB4MzA5N2U3KHRoaXNbXzB4NmQ2NCgnMHgyMTQnKV0sZnVuY3Rpb24oXzB4NWUzYzRiKXtpZihfMHg2ZDY0KCcweDc4NCcpIT09J0R3R3pBJyl7cmV0dXJuIF8weDJmYTA3NltfMHg2ZDY0KCcweDQ1ZCcpXVtfMHg1ZTNjNGJdO31lbHNle3ZhciBfMHgyMDU2YzY9XzB4NWUzYzRiW18weDZkNjQoJzB4NjU2JyldKF8weDJmYTA3Nik7cmV0dXJueydwYXRoJzpbXzB4MjA1NmM2WydmaWxlSWQnXSgpXVtfMHg2ZDY0KCcweDg4JyldKF8weDIwNTZjNltfMHg2ZDY0KCcweDRlJyldKCkpLCdkYXRhJzpfMHgyMDU2YzZ9O319KSx0aGlzW18weDZkNjQoJzB4M2MnKV1bXzB4NmQ2NCgnMHgzZCcpXShfW18weDZkNjQoJzB4M2UnKV0odGhpc1tfMHg2ZDY0KCcweDNmJyldKSwhMHgxLCEweDAsITB4MSkpO30sXzB4MmZhMDc2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg3ODUnKV09ZnVuY3Rpb24oKXtkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDNjJyldO30sXzB4MmZhMDc2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzZDYnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1snX2RvY3VtZW50SW5FZGl0b3InXTt9LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MWQ3JyldPWZ1bmN0aW9uKF8weDJmYTA3NixfMHg1ZTNjNGIsXzB4MzBlM2RmKXtpZihfMHg2ZDY0KCcweDc4NicpPT09XzB4NmQ2NCgnMHg3ODcnKSl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0YTYnKV07fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDNjJyldJiYodGhpc1tfMHg2ZDY0KCcweDc4OCcpXShfMHgyZmEwNzYsXzB4NWUzYzRiKSx0aGlzWydfZG9jdW1lbnRJbkVkaXRvciddW18weDZkNjQoJzB4NGYyJyldKF8weDJmYTA3NixfMHg1ZTNjNGIsXzB4MzBlM2RmKSk7fX0sXzB4MmZhMDc2Wydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDFkNicpXT1mdW5jdGlvbihfMHgyZmEwNzYpe2lmKF8weDZkNjQoJzB4Nzg5Jyk9PT1fMHg2ZDY0KCcweDc4YScpKXt0cnl7XyYmIV9bXzB4NmQ2NCgnMHhkMycpXSYmKF8weDMwOTdlNz1mWydyZXR1cm4nXSkmJl8weDMwOTdlN1tfMHg2ZDY0KCcweDMnKV0oZik7fWZpbmFsbHl7aWYoXzB4NWM0ZGY1KXRocm93IF8weDVjNGRmNVsnZXJyb3InXTt9fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDNjJyldJiZ0aGlzW18weDZkNjQoJzB4M2MnKV1bXzB4NmQ2NCgnMHg0ZjEnKV0oXzB4MmZhMDc2KTt9fSxfMHgyZmEwNzZbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDc4YicpXT1mdW5jdGlvbigpe3RoaXNbXzB4NmQ2NCgnMHgzYycpXSYmKHRoaXNbXzB4NmQ2NCgnMHgzOScpXT0hMHgwKTt9LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4M2Q3JyldPWZ1bmN0aW9uKCl7aWYoJ1doSWNMJ+KAiyE9PSdXaEljTCcpe3RoaXNbXzB4NmQ2NCgnMHhlZicpXT1Qcm9taXNlWydyZXNvbHZlJ10oKSx0aGlzW18weDZkNjQoJzB4NTknKV09XzB4MmZhMDc2O3ZhciBfMHg0MDZiNzk9XzB4MmZhMDc2W18weDZkNjQoJzB4NWMnKV0oKVtfMHg2ZDY0KCcweGYxJyldO3RoaXNbJ19wYXRoJ109XzB4NDA2Yjc5W18weDZkNjQoJzB4ZjMnKV0sXzB4NDA2Yjc5W18weDZkNjQoJzB4NmUnKV0mJl8weDQwNmI3OVtfMHg2ZDY0KCcweDZlJyldW18weDZkNjQoJzB4ZjMnKV0mJih0aGlzW18weDZkNjQoJzB4ZjQnKV09XzB4NDA2Yjc5W18weDZkNjQoJzB4NmUnKV1bJ3J1bm5lciddW18weDZkNjQoJzB4ZjUnKV0oJ1x4MjAnKSksXzB4NDA2Yjc5W18weDZkNjQoJzB4ZjcnKV0mJih0aGlzW18weDZkNjQoJzB4ZjYnKV09XzB4NDA2Yjc5W18weDZkNjQoJzB4ZjcnKV0pLHRoaXNbXzB4NmQ2NCgnMHhmOCcpXT10aGlzWydfbGF1bmNoQ2hyb21lSW5zdGFuY2UnXSgpLHRoaXNbXzB4NmQ2NCgnMHg1NycpXT1uZXcgXzB4MzU2MDllKHRoaXNbXzB4NmQ2NCgnMHg1OScpXSx7J2NyZWF0ZSc6X1tfMHg2ZDY0KCcweGZhJyldKHRoaXNbXzB4NmQ2NCgnMHgxMWYnKV0sdGhpcyksJ3JlY3ljbGUnOl9bXzB4NmQ2NCgnMHhmYScpXSh0aGlzW18weDZkNjQoJzB4ZmInKV0sdGhpcyksJ2hlYWx0aHknOmZ1bmN0aW9uKCl7cmV0dXJuITB4MDt9LCdwcmVwYXJlJzpfWydiaW5kJ10odGhpc1tfMHg2ZDY0KCcweDEyNCcpXSx0aGlzKX0pLHRoaXNbJ19icm93c2VyRW52aXJvbm1lbnQnXT1uZXcgXzB4NGE0N2FkKF8weDJmYTA3Nix0aGlzW18weDZkNjQoJzB4NTcnKV0pO31lbHNle3JldHVybiF0aGlzW18weDZkNjQoJzB4MzknKV07fX0sXzB4MmZhMDc2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg2NWQnKV09ZnVuY3Rpb24oXzB4MmZhMDc2KXt2YXIgXzB4NWUzYzRiPXRoaXNbJ19jb3ZlcmluZ1Rlc3RzJ10oXzB4MmZhMDc2KTtyZXR1cm4gX1snaXNFbXB0eSddKF8weDVlM2M0YikmJihfMHg1ZTNjNGI9dGhpc1tfMHg2ZDY0KCcweDc4YycpXSh0aGlzWydsaW5lUmFuZ2VzJ10oXzB4MmZhMDc2KSkpLF8weDVlM2M0Yjt9LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4Njg5JyldPWZ1bmN0aW9uKF8weDJmYTA3Nil7aWYodGhpc1tfMHg2ZDY0KCcweDNjJyldKXt2YXIgXzB4NWUzYzRiPXRoaXNbXzB4NmQ2NCgnMHgzYycpXVtfMHg2ZDY0KCcweDE3MCcpXShfMHgyZmEwNzYpO2lmKF8weDVlM2M0YilyZXR1cm4gXzB4NWUzYzRiWydyYW5nZXMnXSgpO319LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NjcxJyldPWZ1bmN0aW9uKF8weDJmYTA3Nil7dmFyIF8weDVlM2M0Yj10aGlzW18weDZkNjQoJzB4NDRhJyldW18weDJmYTA3Nl07aWYoIV8weDVlM2M0YiYmdGhpc1tfMHg2ZDY0KCcweDQ0OScpXSlmb3IoO18weDJmYTA3Nj4weDAmJiFfMHg1ZTNjNGI7KV8weDJmYTA3Ni0tLF8weDVlM2M0Yj10aGlzW18weDZkNjQoJzB4NDRhJyldW18weDJmYTA3Nl07aWYoXzB4NWUzYzRiKXJldHVybiBfMHg1ZTNjNGJbXzB4NmQ2NCgnMHg0NGInKV07fSxfMHgyZmEwNzZbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4MTFjJyldPWZ1bmN0aW9uKCl7dmFyIF8weDJmYTA3Nj10aGlzO2lmKHRoaXNbXzB4NmQ2NCgnMHg3OGQnKV0pe2RlbGV0ZSB0aGlzWydfbmVlZFRvUmVidWlsZERpc3BsYXlhYmxlUmFuZ2VzJ107dmFyIF8weDVlM2M0Yj1fMHgzNTYwOWUodGhpc1tfMHg2ZDY0KCcweDRlJyldKCksdGhpc1tfMHg2ZDY0KCcweDIxMicpXSh0aGlzW18weDZkNjQoJzB4NGUnKV0oKSkpO18weDVlM2M0YiYmKHRoaXNbXzB4NmQ2NCgnMHgxMWUnKV09XzB4NWUzYzRiW18weDZkNjQoJzB4OGUnKV0sdGhpc1tfMHg2ZDY0KCcweDUwNScpXT17fSxfMHg1ZTNjNGJbXzB4NmQ2NCgnMHg1ZTEnKV0oZnVuY3Rpb24oXzB4NWUzYzRiKXt2YXIgXzB4MzBlM2RmPV8weDJmYTA3NltfMHg2ZDY0KCcweDUwNScpXVtfMHg1ZTNjNGJbXzB4NmQ2NCgnMHgzMScpXVtfMHg2ZDY0KCcweDE3MCcpXV09XzB4MmZhMDc2WydfZGlzcGxheVJhbmdlc0xpbmVNYXAnXVtfMHg1ZTNjNGJbJ3N0YXJ0J11bXzB4NmQ2NCgnMHgxNzAnKV1dfHxbXTtfMHgzMGUzZGZbJ3B1c2gnXShfMHg1ZTNjNGIpO30pKTt9fSxfMHgyZmEwNzZbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDE3MicpXT1mdW5jdGlvbihfMHgyZmEwNzYpe2lmKF8weDZkNjQoJzB4NzhlJykhPT0nS0F0WGcnKXt0aGlzW18weDZkNjQoJzB4MWNlJyldKHsndHlwZSc6XzB4NmQ2NCgnMHgzYzInKSwnZW5hYmxlZCc6XzB4MmZhMDc2W18weDZkNjQoJzB4M2MzJyldfSk7fWVsc2V7dmFyIF8weDVlM2M0Yj10aGlzWydfZGlzcGxheVJhbmdlc0xpbmVNYXAnXSYmdGhpc1tfMHg2ZDY0KCcweDUwNScpXVtfMHgyZmEwNzZbXzB4NmQ2NCgnMHgxNTUnKV0oKV07aWYoIV8weDVlM2M0YilyZXR1cm5bXzB4MmZhMDc2W18weDZkNjQoJzB4MTU1JyldKCksXzB4MmZhMDc2W18weDZkNjQoJzB4MTU2JyldKCksXzB4MmZhMDc2W18weDZkNjQoJzB4NDlkJyldKCksXzB4MmZhMDc2W18weDZkNjQoJzB4NGEwJyldKCldO3ZhciBfMHgzMGUzZGY9dGhpc1snX21hcFJhbmdlVG9EaXNwbGF5UmFuZ2UnXShfMHgyZmEwNzYsXzB4NWUzYzRiKTtyZXR1cm4gXzB4MzBlM2RmP1tfMHgzMGUzZGZbXzB4NmQ2NCgnMHgzMScpXVtfMHg2ZDY0KCcweDE3MCcpXSxfMHgzMGUzZGZbJ3N0YXJ0J11bXzB4NmQ2NCgnMHgxYzgnKV0sXzB4MzBlM2RmW18weDZkNjQoJzB4MjU4JyldW18weDZkNjQoJzB4MTcwJyldLF8weDMwZTNkZltfMHg2ZDY0KCcweDI1OCcpXVsnY29sdW1uJ11dOltfMHgyZmEwNzZbXzB4NmQ2NCgnMHgxNTUnKV0oKSxfMHgyZmEwNzZbXzB4NmQ2NCgnMHgxNTYnKV0oKSxfMHgyZmEwNzZbXzB4NmQ2NCgnMHg0OWQnKV0oKSxfMHgyZmEwNzZbJ2VuZENvbHVtbiddKCldO319LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NTA2JyldPWZ1bmN0aW9uKF8weDJmYTA3NixfMHg1ZTNjNGIpe2lmKDB4MT09PV8weDVlM2M0YlsnbGVuZ3RoJ10pcmV0dXJuIF8weDVlM2M0YlsweDBdO3ZhciBfMHgzMGUzZGY9XzB4NWUzYzRiWydmaWx0ZXInXShmdW5jdGlvbihfMHg1ZTNjNGIpe3JldHVybiBfMHg1ZTNjNGJbXzB4NmQ2NCgnMHgzMScpXVtfMHg2ZDY0KCcweDFjOCcpXT09PV8weDJmYTA3NltfMHg2ZDY0KCcweDE1NicpXSgpO30pO2lmKF8weDMwZTNkZlsnbGVuZ3RoJ10pe3ZhciBfMHgyOTdmMjI9XzB4MzBlM2RmWzB4MF07aWYoMHgxPT09XzB4MzBlM2RmWydsZW5ndGgnXSlyZXR1cm4gXzB4Mjk3ZjIyO2lmKF8weDJmYTA3NltfMHg2ZDY0KCcweDE1NScpXSgpIT09XzB4MmZhMDc2W18weDZkNjQoJzB4NDlkJyldKCkpcmV0dXJuIF8weDI5N2YyMjt2YXIgXzB4NGZkYzVlPShfWyd2YWx1ZXMnXSh0aGlzW18weDZkNjQoJzB4Njg5JyldKF8weDJmYTA3NltfMHg2ZDY0KCcweDE1NScpXSgpKSl8fFtdKVtfMHg2ZDY0KCcweDI5YycpXShmdW5jdGlvbihfMHg1ZTNjNGIpe3JldHVybiBfMHg1ZTNjNGJbXzB4NmQ2NCgnMHg0OWQnKV0oKT09PV8weDJmYTA3NltfMHg2ZDY0KCcweDQ5ZCcpXSgpJiZfMHg1ZTNjNGJbXzB4NmQ2NCgnMHgxNTYnKV0oKT09PV8weDJmYTA3NltfMHg2ZDY0KCcweDE1NicpXSgpO30pO2lmKF8weDMwZTNkZj1fMHgzMGUz4oCLZGZbXzB4NmQ2NCgnMHgyOWMnKV0oZnVuY3Rpb24oXzB4NWUzYzRiKXtpZihfMHg2ZDY0KCcweDc4ZicpIT09XzB4NmQ2NCgnMHg3OGYnKSl7dGhpc1snX2VtaXQnXShfMHgyZmEwNzYpO31lbHNle3JldHVybiBfMHg1ZTNjNGJbJ2VuZCddW18weDZkNjQoJzB4MTcwJyldPT09XzB4MmZhMDc2WydlbmRMaW5lJ10oKTt9fSksXzB4NGZkYzVlW18weDZkNjQoJzB4OGUnKV0hPT1fMHgzMGUzZGZbXzB4NmQ2NCgnMHg4ZScpXSlyZXR1cm4gXzB4Mjk3ZjIyO18weDRmZGM1ZVsnc29ydCddKGZ1bmN0aW9uKF8weDJmYTA3NixfMHg1ZTNjNGIpe2lmKF8weDZkNjQoJzB4NzkwJykhPT1fMHg2ZDY0KCcweDc5MCcpKXt2YXIgXzB4M2JjOGM5PShfMHgyZmEwNzYmJihfMHgyZmEwNzZbXzB4NmQ2NCgnMHgxNTInKV18fF8weDJmYTA3NlsnbWVzc2FnZSddKSkrJycsXzB4NTI0ZWRmPXRoaXNbXzB4NmQ2NCgnMHgxZDMnKV0oXzB4M2JjOGM5KSxfMHgyMTM5ZGE9XzB4NTI0ZWRmWzB4MF0sXzB4MWMyMTllPV8weDIxMzlkYVtfMHg2ZDY0KCcweDMwNCcpXSgvXlN5bnRheEVycm9yLipcKChcZCspOihcZCspXCkkLyk7cmV0dXJuIF8weDFjMjE5ZSYmKF8weDUyNGVkZj1bdGhpc1tfMHg2ZDY0KCcweDc5MScpXShfMHg1ZTNjNGIscGFyc2VJbnQoXzB4MWMyMTllWzB4MV0sMHhhKSxwYXJzZUludChfMHgxYzIxOWVbMHgyXSwweGEpKzB4MSxfMHgyMTM5ZGEpXSksRXJyb3IoXzB4NmQ2NCgnMHg3OTInKStfMHgzMGUzZGYrJ1x4MGEnK18weDUyNGVkZlsnam9pbiddKCdceDBhJykpO31lbHNle3JldHVybiBfMHgyZmEwNzZbXzB4NmQ2NCgnMHg0YTAnKV0oKS1fMHg1ZTNjNGJbXzB4NmQ2NCgnMHg0YTAnKV0oKTt9fSksXzB4MzBlM2RmW18weDZkNjQoJzB4NzkzJyldKGZ1bmN0aW9uKF8weDJmYTA3NixfMHg1ZTNjNGIpe3JldHVybiBfMHgyZmEwNzZbXzB4NmQ2NCgnMHgyNTgnKV1bXzB4NmQ2NCgnMHgxYzgnKV0tXzB4NWUzYzRiW18weDZkNjQoJzB4MjU4JyldW18weDZkNjQoJzB4MWM4JyldO30pO3ZhciBfMHg1YzRkZjU9XzB4NGZkYzVlWydpbmRleE9mJ10oXzB4MmZhMDc2KeKAiztyZXR1cm5+XzB4NWM0ZGY1P18weDMwZTNkZltfMHg1YzRkZjVdOl8weDI5N2YyMjt9fSxfMHgyZmEwNzZbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDRiOScpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDZkNjQoJzB4Nzk0JyldKCk7fSxfMHgyZmEwNzZbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4NjAzJyldPWZ1bmN0aW9uKF8weDJmYTA3NixfMHg1ZTNjNGIpe3JldHVybiBfW18weDZkNjQoJzB4YTYnKV0odGhpc1snX2NvdmVyaW5nVGVzdHMnXShfMHgyZmEwNzYsXzB4NWUzYzRiKSlbXzB4NmQ2NCgnMHgyZTknKV0oZnVuY3Rpb24oXzB4MmZhMDc2KXtyZXR1cm4hXzB4MmZhMDc2W18weDZkNjQoJzB4ZTUnKV0oKTt9KVtfMHg2ZDY0KCcweDJlOScpXShmdW5jdGlvbihfMHgyZmEwNzYpe3JldHVybi1fMHgyZmEwNzZbJ3RzJ10oKTt9KVtfMHg2ZDY0KCcweGE5JyldKCk7fSxfMHgyZmEwNzZbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDc5NCcpXT1mdW5jdGlvbihfMHgyZmEwNzYsXzB4NWUzYzRiKXtpZihfMHg2ZDY0KCcweDc5NScpPT09XzB4NmQ2NCgnMHg3OTYnKSl7XzB4MzU2MDllWydfaGFuZGxlRXJyb3InXSh0aGlzLF8weDJmYTA3NixfMHg1ZTNjNGJbJ21lc3NhZ2UnXSxfMHg1ZTNjNGJbXzB4NmQ2NCgnMHgxNTInKV0sXzB4NWUzYzRiW18weDZkNjQoJzB4NTRjJyldLF8weDVlM2M0YltfMHg2ZDY0KCcweDIyOCcpXSxfMHg1ZTNjNGJbXzB4NmQ2NCgnMHgyMjcnKV0sXzB4NWUzYzRiW18weDZkNjQoJzB4NTI4JyldLF8weDVlM2M0YltfMHg2ZDY0KCcweDU4ZCcpXSk7fWVsc2V7dmFyIF8weDMwZTNkZixfMHgyOTdmMjI9dGhpcztpZihfMHgyZmEwNzYpe2lmKHRoaXNbXzB4NmQ2NCgnMHgzYycpXSlfMHgzMGUzZGY9dGhpc1snX2RvY3VtZW50SW5FZGl0b3InXVtfMHg2ZDY0KCcweDE3MCcpXShfMHgyZmEwNzYpO2Vsc2V7dmFyIF8weDRmZGM1ZT1uZXcgXzB4MzA5N2U3KHRoaXNbXzB4NmQ2NCgnMHgyMTQnKV0sZnVuY3Rpb24oXzB4MmZhMDc2KXtyZXR1cm4gXzB4Mjk3ZjIyWydfdGVzdERlY2xhcmF0aW9uTGluZU1hcCddW18weDJmYTA3Nl07fSk7XzB4NGZkYzVlW18weDZkNjQoJzB4M2QnKV0oX1sndmFsdWVzJ10odGhpc1snX3JhbmdlcyddKSwhMHgxLCEweDAsITB4MSksXzB4MzBlM2RmPV8weDRmZGM1ZVsnbGluZSddKF8weDJmYTA3Nik7fWlmKCFfMHgzMGUzZGYpcmV0dXJuW107fXZhciBfMHg1YzRkZjU9XzB4MzBlM2RmP18weDMwZTNkZltfMHg2ZDY0KCcweDY3MycpXSgpOnRoaXNbXzB4NmQ2NCgnMHgzZicpXTtyZXR1cm4gXzB4NWUzYzRiJiYoXzB4NWM0ZGY1PV9bJ2ZpbHRlciddKF8weDVjNGRmNSxfMHg1ZTNjNGIpKSx0aGlzW18weDZkNjQoJzB4NzhjJyldKF8weDVjNGRmNSk7fX0sXzB4MmZhMDc2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg3OGMnKV09ZnVuY3Rpb24oXzB4MmZhMDc2KXtpZigneHpTcFQnPT09J1BXTm1wJyl7ZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHgxY2MnKV07fWVsc2V7cmV0dXJuIF9bXzB4NmQ2NCgnMHg4YScpXShfMHgyZmEwNzYsZnVuY3Rpb24oXzB4MmZhMDc2LF8weDVlM2M0Yil7cmV0dXJuIF9bJ2VhY2gnXShfMHg1ZTNjNGJbXzB4NmQ2NCgnMHg0YjknKV0oKSxmdW5jdGlvbihfMHg1ZTNjNGIpe18weDJmYTA3NltfMHg1ZTNjNGJbXzB4NmQ2NCgnMHgxMmYnKV0oKV09XzB4NWUzYzRiO30pLF8weDJmYTA3Njt9LHt9KTt9fSxfMHgyZmEwNzZbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDIzYycpXT1mdW5jdGlvbigpe2RlbGV0ZSB0aGlzW18weDZkNjQoJzB4M2MnKV0sX1tfMHg2ZDY0KCcweDNhJyldKHRoaXNbXzB4NmQ2NCgnMHgzZicpXSxmdW5jdGlvbihfMHgyZmEwNzYpe2lmKF8weDZkNjQoJzB4Nzk3JykhPT1fMHg2ZDY0KCcweDc5OCcpKXtyZXR1cm4gXzB4MmZhMDc2W18weDZkNjQoJzB4MjNjJyldKCk7fWVsc2V7cmV0dXJuIF8weDJmYTA3NiYmISh+XzB4MmZhMDc2WydpbmRleE9mJ10oXzB4NmQ2NCgnMHg3OTknKSl8fH5fMHgyZmEwNzZbXzB4NmQ2NCgnMHgxN2EnKV0oJy0td2ViLXNlY3VyaXR5PScpKTt9fSksZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHgzZicpXSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDQ4MycpXSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDQ1ZCcpXTt9LF8weDJmYTA3NlsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHg3OWEnKV09ZnVuY3Rpb24oXzB4MmZhMDc2KXtpZigncVRkQ0YnPT09XzB4NmQ2NCgnMHg3OWInKSl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0ODInKV1bXzB4MmZhMDc2W18weDZkNjQoJzB4MTJmJyldKCldO31lbHNle3ZhciBfMHgzOTZhZTA9dGhpcztpZih0aGlzWydfbmVlZFRvUmVidWlsZERpc3BsYXlhYmxlUmFuZ2VzJ10pe2RlbGV0ZSB0aGlzWydfbmVlZFRvUmVidWlsZERpc3BsYXlhYmxlUmFuZ2VzJ107dmFyIF8weDNjYTQyZj1fMHgzNTYwOWUodGhpc1tfMHg2ZDY0KCcweDRlJyldKCksdGhpc1snX2dldEZpbGVDb250ZW50J10odGhpc1tfMHg2ZDY0KCcweDRlJyldKCkpKTtfMHgzY2E0MmYmJih0aGlzW18weDZkNjQoJzB4MTFlJyldPV8weDNjYTQyZlsnbGVuZ3RoJ10sdGhpc1tfMHg2ZDY0KCcweDUwNScpXT17fSxfMHgzY2E0MmZbXzB4NmQ2NCgnMHg1ZTEnKV0oZnVuY3Rpb24oXzB4M2NhNDJmKXt2YXIgXzB4NDM3NDY4PV8weDM5NmFlMFsnX2Rpc3BsYXlSYW5nZXNMaW5lTWFwJ11bXzB4M2NhNDJmWydzdGFydCddW18weDZkNjQoJzB4MTcwJyldXT1fMHgzOeKAizZhZTBbJ19kaXNwbGF5UmFuZ2VzTGluZU1hcCddW18weDNjYTQyZltfMHg2ZDY0KCcweDMxJyldW18weDZkNjQoJzB4MTcwJyldXXx8W107XzB4NDM3NDY4W18weDZkNjQoJzB4MWMnKV0oXzB4M2NhNDJmKTt9KSk7fX19LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldWydjbGVhclJhbmdlQ29uc29sZUxvZyddPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg3OWMnKT09PV8weDZkNjQoJzB4NzljJykpe3RoaXNbXzB4NmQ2NCgnMHg0ODInKV09T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCk7fWVsc2V7XzB4NWUzYzRiW18weDJmYTA3NltfMHg2ZDY0KCcweDRlJyldXT17J2xpbmVzJzpbXSwnYWxsTGluZXMnOiEweDB9O319LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MTJmJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHgzNzgnKV1bJ2lkJ107fSxfMHgyZmEwNzZbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDRlJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHgzNzgnKV1bXzB4NmQ2NCgnMHg0ZScpXTt9LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NzlkJyldPWZ1bmN0aW9uKF8weDJmYTA3Nil7aWYoJ0tvRU9VJz09PSdLb0VPVScpe3ZhciBfMHg1ZTNjNGI9T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCksXzB4MzBlM2RmPXRoaXNbXzB4NmQ2NCgnMHg0ODMnKV1bXzB4MmZhMDc2WydrZXknXSgpXTtpZihfMHgzMGUzZGYpe2lmKHRoaXNbXzB4NmQ2NCgnMHg0ZTUnKV0oKSYmXzB4MzBlM2RmW18weDZkNjQoJzB4NDVlJyldKCkpe3ZhciBfMHg0ZmRjNWU9dGhpc1snX3Rlc3REZWNsYXJhdGlvbkxpbmVNYXAnXVtfMHgzMGUzZGZbJ2RlY2xhcmF0aW9uTGluZSddKCldO2lmKF8weDRmZGM1ZSlpZihfMHg0ZmRjNWVbXzB4NmQ2NCgnMHg3OWUnKV0pe2lmKF8weDRmZGM1ZVtfMHg2ZDY0KCcweDVhYScpXShfMHgzMGUzZGZbXzB4NmQ2NCgnMHgxMmYnKV0oKSksMHgwPT09XzB4NGZkYzVlW18weDZkNjQoJzB4MTE5JyldJiZkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDQ1ZCcpXVtfMHgzMGUzZGZbXzB4NmQ2NCgnMHg0NWUnKV0oKV0sMHgxPT09XzB4NGZkYzVlW18weDZkNjQoJzB4MTE5JyldKXtpZihfMHg2ZDY0KCcweDc5ZicpPT09XzB4NmQ2NCgnMHg3YTAnKSl7cmV0dXJuIF8weDJmYTA3Nj9fMHgyOTdmMjJbXzB4NmQ2NCgnMHg0ZTgnKV06XzB4NWUzYzRiP18weDI5N2YyMltfMHg2ZDY0KCcweDUzNCcpXTpfMHgzMGUzZGY/XzB4Mjk3ZjIyW18weDZkNjQoJzB4MjZjJyldOl8weDRmZGM1ZT9fMHgyOTdmMjJbXzB4NmQ2NCgnMHg0ZTknKV06XzB4Mjk3ZjIyW18weDZkNjQoJzB4NTM1JyldO31lbHNle3ZhciBfMHg1YzRkZjU9XzB4Mjk3ZjIyKF8weDRmZGM1ZVtfMHg2ZDY0KCcweDc5ZScpXSgpW18weDZkNjQoJzB4ZDUnKV0oKVtfMHg2ZDY0KCcweGE5JyldLDB4MiksXzB4MzA5N2U3PV8weDVjNGRmNVsweDFdO3RoaXNbXzB4NmQ2NCgnMHg0NWQnKV1bXzB4MzBlM2RmW18weDZkNjQoJzB4NDVlJyldKCldPV8weDMwOTdlNzt9fX1lbHNlIGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NDVkJyldW18weDMwZTNkZltfMHg2ZDY0KCcweDQ1ZScpXSgpXTt9X1snZWFjaCddKF8weDMwZTNkZlsnb2Jzb2xldGUnXSgpLGZ1bmN0aW9uKF8weDJmYTA3Nil7XzB4NWUzYzRiW18weDJmYTA3NltfMHg2ZDY0KCcweDEyZicpXSgpXT1fMHgyZmEwNzY7fSk7fWlmKHRoaXNbJ190ZXN0TWFwJ11bXzB4MmZhMDc2W18weDZkNjQoJzB4MTJmJyldKCldPV8weDJmYTA3NixfMHgyZmEwNzZbJ3NldFRlc3RGaWxlJ10odGhpcyksdGhpc1snaXNUZXN0RmlsZSddKCkmJl8weDJmYTA3NltfMHg2ZDY0KCcweDQ1ZScpXSgpKXt2YXIgXzB4NGZkYzVlPXRoaXNbXzB4NmQ2NCgnMHg0NWQnKV1bXzB4MmZhMDc2W18weDZkNjQoJzB4NDVlJyldKCldO2lmKF8weDRmZGM1ZSlpZihfMHg0ZmRjNeKAi2VbXzB4NmQ2NCgnMHg3OWUnKV0pXzB4NGZkYzVlW18weDZkNjQoJzB4MTY4JyldKF8weDJmYTA3NltfMHg2ZDY0KCcweDEyZicpXSgpLF8weDJmYTA3Nik7ZWxzZXt2YXIgXzB4MzU2MDllPW5ldyBNYXAoKTtfMHgzNTYwOWVbXzB4NmQ2NCgnMHgxNjgnKV0oXzB4MmZhMDc2WydrZXknXSgpLF8weDJmYTA3NiksXzB4MzU2MDllW18weDZkNjQoJzB4MTY4JyldKF8weDRmZGM1ZVtfMHg2ZDY0KCcweDEyZicpXSgpLF8weDRmZGM1ZSksdGhpc1tfMHg2ZDY0KCcweDQ1ZCcpXVtfMHgyZmEwNzZbXzB4NmQ2NCgnMHg0NWUnKV0oKV09XzB4MzU2MDllO31lbHNlIHRoaXNbXzB4NmQ2NCgnMHg0NWQnKV1bXzB4MmZhMDc2W18weDZkNjQoJzB4NDVlJyldKCldPV8weDJmYTA3Njt9cmV0dXJuIF8weDVlM2M0Yjt9ZWxzZXtmb3IodmFyIF8weDQxZTUwMixfMHg0MDk2ZmE9MHgxLF8weDFmNjM5Zj1hcmd1bWVudHNbXzB4NmQ2NCgnMHg4ZScpXTtfMHg0MDk2ZmE8XzB4MWY2MzlmO18weDQwOTZmYSsrKXtfMHg0MWU1MDI9YXJndW1lbnRzW18weDQwOTZmYV07Zm9yKHZhciBfMHg0YzhjNGIgaW4gXzB4NDFlNTAyKU9iamVjdFsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgyZicpXVtfMHg2ZDY0KCcweDMnKV0oXzB4NDFlNTAyLF8weDRjOGM0YikmJihfMHgyZmEwNzZbXzB4NGM4YzRiXT1fMHg0MWU1MDJbXzB4NGM4YzRiXSk7fXJldHVybiBfMHgyZmEwNzY7fX0sXzB4MmZhMDc2Wydwcm90b3R5cGUnXVsncmFuZ2VDb3ZlcmFnZUNoYW5nZWQnXT1mdW5jdGlvbihfMHgyZmEwNzYsXzB4NWUzYzRiKXtpZihfMHg2ZDY0KCcweDdhMScpIT09XzB4NmQ2NCgnMHg3YTInKSl7dGhpc1tfMHg2ZDY0KCcweDM2JyldW18weDJmYTA3NltfMHg2ZDY0KCcweDEyZicpXSgpXT1fMHgyZmEwNzY7dmFyIF8weDMwZTNkZj1fMHgyZmEwNzZbXzB4NmQ2NCgnMHgxMzAnKV0oKTtfMHg1ZTNjNGIhPT1fMHgzMGUzZGYmJih0aGlzWydfbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJ10rPV8weDMwZTNkZj8weDE6LTB4MSk7fWVsc2V7cmV0dXJuIF8weDJmYTA3NltfMHg2ZDY0KCcweDU3MScpXShfMHgyOTdmMjJbXzB4NmQ2NCgnMHg1YWYnKV0oKSk7fX0sXzB4MmZhMDc2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0ZTUnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDM34oCLOCcpXVsndGVzdCddO30sXzB4MmZhMDc2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzY2QnKV09ZnVuY3Rpb24oXzB4MmZhMDc2KXtpZihfMHg2ZDY0KCcweDdhMycpPT09XzB4NmQ2NCgnMHg3YTQnKSl7cmV0dXJuIF8weDJmYTA3NltfMHg1ZTNjNGJbXzB4NmQ2NCgnMHgxMmYnKV0oKV09XzB4NWUzYzRiLF8weDJmYTA3Njt9ZWxzZXtpZih0aGlzWydoYXNSZXBvcnRhYmxlQ292ZXJhZ2UnXSgpKXtpZihfMHg2ZDY0KCcweDdhNScpPT09XzB4NmQ2NCgnMHg3YTUnKSl7dmFyIF8weDVlM2M0Yj10aGlzW18weDZkNjQoJzB4MjY4JyldKCEweDApO3JldHVybiBNYXRoW18weDZkNjQoJzB4MzM4JyldKDB4MjcxMCoobnVsbD09XzB4MmZhMDc2P3RoaXNbXzB4NmQ2NCgnMHgyYmMnKV06XzB4MmZhMDc2KS9fMHg1ZTNjNGIpLzB4NjQ7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0OGEnKV07fX19fSxfMHgyZmEwNzZbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDMzNycpXT1mdW5jdGlvbigpe3JldHVybiF0aGlzW18weDZkNjQoJzB4NGU1JyldKCkmJnRoaXNbJ2luc3RydW1lbnRlZCddKCkmJiF0aGlzW18weDZkNjQoJzB4NzEyJyldO30sXzB4MmZhMDc2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgyMDInKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDRlNScpXSgpfHx0aGlzW18weDZkNjQoJzB4MzM3JyldKCk7fSxfMHgyZmEwNzZbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4MjZhJyldPWZ1bmN0aW9uKF8weDJmYTA3Nil7cmV0dXJuIG51bGw9PV8weDJmYTA3Nj90aGlzWydfbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJ106XzB4MmZhMDc2O30sXzB4MmZhMDc2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgyNjgnKV09ZnVuY3Rpb24oXzB4MmZhMDc2KXtpZignd2ZvQWYnPT09XzB4NmQ2NCgnMHg3YTYnKSl7dHJ5e18weDVlM2M0Ylsnc2NyZWVuJ10mJihfMHgyOTdmMjJbJ19zY3JlZW5TaG90UmVhZHknXT1fMHgzNTYwOWVbJ2NsaWVudCddW18weDZkNjQoJzB4MTM0JyldW18weDZkNjQoJzB4MTM1JyldKClbXzB4NmQ2NCgnMHg3ZScpXShmdW5jdGlvbihfMHgzMjYyZWQpe3ZhciBfMHg3NzVkYTQ9bmV3IEJ1ZmZlcihfMHgzMjYyZWRbXzB4NmQ2NCgnMHgxMzYnKV0sXzB4NmQ2NCgnMHgxMzcnKSk7XzB4MmZhMDc2KCdmcycpW18weDZkNjQoJzB4MTM4JyldKF8weDVlM2M0YltfMHg2ZDY0KCcweDEzMScpXSxfMHg3NzVkYTQsXzB4NmQ2NCgnMHgxMzcnKSk7fSkpO31jYXRjaChfMHgyZmY5ODApe18weDI5N2YyMltfMHg2ZDY0KCcweGVmJyldPVByb21pc2VbXzB4NmQ2NCgnMHhmMCcpXSgpO319ZWxzZXt2YXIgXzB4NWUzYzRiPV9bXzB4NmQ2NCgnMHgxMTknKV0odGhpc1snX3JhbmdlcyddKTtyZXR1cm4gMHgwPT09XzB4NWUzYzRiJiZ0aGlzW18weDZkNjQoJzB4MTFhJyldJiYhdGhpc1tfMHg2ZDY0KCcweDExYicpXT8oIV8weDJmYTA3NiYmdGhpc1snYnVpbGREaXNwbGF5UmFuZ2VzSWZSZXF1aXJlZCddKCksX1tfMHg2ZDY0KCcweDExZCcpXSh0aGlzW18weDZkNjQoJzB4MTFlJyldKT90aGlzW18weDZkNjQoJzB4MTFlJyldOjB4MSk6XzB4NWUzYzRiO319LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4N2E3JyldPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg3YTgnKT09PSdERnFqUCcpe2RlbGV0ZSB0aGlzW18weDZkNjQoJzB4M2MnKV07fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDc4ZCcpXT0hMHgwO319LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NzIyJyldPWZ1bmN0aW9uKF8weDJmYTA3NixfMHg1ZTNjNGIsXzB4MzBlM2RmKXtpZihfMHg2ZDY0KCcweDdhOScpPT09XzB4NmQ2NCgnMHg3YTknKSl7dmFyIF8weDI5N2YyMj10aGlzO3RoaXNbJ19hbGxSYW5nZXNSZWNlaXZlZCddPV8weDVlM2M0YixfMHg1ZTNjNGImJih0aGlzW18weDZkNjQoJzB4NzhkJyldPSEweDAsdGhpc1tfMHg2ZDY0KCcweDdhYScpXSgpKTt2YXIgXzB4NGZkYzVlPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpO19bXzB4NmQ2NCgnMHgzYScpXShfMHgyZmEwNzYsZnVuY3Rpb24oXzB4MmZhMDc2KXt2YXIgXzB4NWM0ZGY1PV8weDJmYTA3NltfMHg2ZDY0KCcweDEyZicpXSgpLF8weDMwOTdlNz1fMHgyOTdmMjJbXzB4NmQ2NCgnMHgzZicpXVtfMHg1YzRkZjVdO2lmKF8weDMwOTdlNyl7dmFyIF8weDM1NjA5ZT1fMHgzMDk3ZTdbJ2lzQ292ZXJlZCddKCksXzB4NGE0N2FkPV8weDJmYTA3NlsnaXNDb3ZlcmVkJ10oKTtfMHg1ZTNjNGJ8fF8weDM1NjA5ZT09PV8weDRhNDdhZHx8KF8weDI5N2YyMltfMHg2ZDY0KCcweDJiYycpXSs9XzB4NGE0N2FkPzB4MTotMHgxKSxfMHgzMDk3ZTdbXzB4NmQ2NCgnMHg0YzEnKV0oXzB4MmZhMDc2LF8weDVlM2M0YixfMHgzMGUzZGYpLF8weDRmZGM1ZVtfMHg1YzRkZjVdPV8weDMwOTdlNyxfMHgyOTdmMjJbJ19hZmZlY3RlZFJhbmdlcyddW18weDVjNGRmNV09XzB4MzA5N2U3O31lbHNlIF8weDI5N2YyMlsnX3JhbmdlcyddW18weDVjNGRmNV09XzB4MmZhMDc2LF8weDI5N2YyMltfMHg2ZDY0KCcweDM1JyldW18weDVjNGRmNV09XzB4MmZhMDc2LF8weDJmYTA3NltfMHg2ZDY0KCcweDRjMCcpXSgpLF8weDJmYTA3NltfMHg2ZDY0KCcweDEzMCcpXSgpJiYhXzB4NWUzYzRiJiZfMHgyOTdmMjJbXzB4NmQ2NCgnMHgyYmMnKV0rKzt9KSxfMHg1ZTNjNGImJihfMHgyOTdmMjJbXzB4NmQ2NCgnMHgyYmMnKV09MHgwLHRoaXNbXzB4NmQ2NCgnMHg0NGEnKV09T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCksX1tfMHg2ZDY0KCcweDNhJyldKF9bXzB4NmQ2NCgnMHgzZScpXSh0aGlzW18weDZkNjQoJzB4M2YnKV0pLGZ1bmN0aW9uKF8weDJmYTA3Nil7dmFyIF8weDVlM2M0Yj1fMHgyZmEwNzZbXzB4NmQ2NCgnMHgxMmYnKV0oKTtpZihfMHgyOTdmMjJbXzB4NmQ2NCgnMHgzNScpXVtfMHg1ZTNjNGJdfHxfMHg0ZmRjNWVbXzB4NWUzYzRiXSl7XzB4MmZhMDc2Wydpc0NvdmVyZWQnXSgpJiZfMHgyOTdmMjJbXzB4NmQ2NCgnMHgyYmMnKV0rKztmb3IodmFyIF8weDMwZTNkZj1fMHgyZmEwNzZbXzB4NmQ2NCgnMHgxNTUnKV0oKTtfMHgzMGUzZGY8PV8weDJmYTA3NltfMHg2ZDY0KCcweDQ5ZCcpXSgpO18weDMwZTNkZisrKXtpZihfMHg2ZDY0KCcweDdhYicpIT09XzB4NmQ2NCgnMHg3YWInKSl7aWYoXzB4NmQ2NCgnMHgyMTUnKT09PV8weDI5N2YyMnx8XzB4NmQ2NCgnMHgxNDYnKT09PV8weDI5N2YyMilyZXR1cm47XzB4MzBlM2RmW18weDZkNjQoJzB4MWNlJyldKHsndHlwZSc6J2xpY2Vuc2VDb2xsaXNpb24nLCdhZGRyZXNzJzpfMHgyOTdmMjJ9KTt9ZWxzZXt2YXIgXzB4NWM0ZGY1PV8weDI5N2YyMltfMHg2ZDY0KCcweDQ0YScpXVtfMHgzMGUzZGZdO18weDVjNGRmNXx8KF8weDVjNGRmNT1fMHgyOTdmMjJbXzB4NmQ2NCgnMHg0NGEnKV1bXzB4MzBlM2RmXT17J2Nsb3Nlc3QnOnZvaWQgMHgwLCdzdGFydGluZ09uVGhlTGluZSc6W119KSxfMHg1YzRkZjVbJ2Nsb3Nlc3QnXSYmIV8weDJmYTA3NlsnY2xvc2VyVG9UaGVMaW5lVGhhbiddKF8weDMwZTNkZixfMHg1YzRkZjVbXzB4NmQ2NCgnMHg3NWYnKV0pfHwoXzB4NWM0ZGY1W18weDZkNjQoJzB4NzVmJyldPV8weDJmYTA3NiksXzB4MzBlM2RmPT09XzB4MmZhMDc2W18weDZkNjQoJzB4MTU1JyldKCkmJl/igIsweDVjNGRmNVsnc3RhcnRpbmdPblRoZUxpbmUnXVtfMHg2ZDY0KCcweDFjJyldKF8weDJmYTA3Nik7fX19ZWxzZSBfMHgyOTdmMjJbXzB4NmQ2NCgnMHgzNycpXVtfMHg1ZTNjNGJdPV8weDJmYTA3NixkZWxldGUgXzB4Mjk3ZjIyW18weDZkNjQoJzB4M2YnKV1bXzB4NWUzYzRiXTt9KSk7fWVsc2V7dmFyIF8weDU2ZmU2Nj10aGlzO3JldHVybiBfMHg1NmZlNjZbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDEwNScpXShfMHgyZmEwNzYpO319LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NmFiJyldPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg3YWMnKSE9PV8weDZkNjQoJzB4N2FkJykpe3JldHVybiBfWyd2YWx1ZXMnXSh0aGlzWydfdGVzdE1hcCddKTt9ZWxzZXtyZXR1cm4gXzB4MmZhMDc2P3RoaXNbXzB4NmQ2NCgnMHgyMTQnKV1bXzB4NmQ2NCgnMHgyMycpXVtfMHg2ZDY0KCcweDI5ZCcpXT90aGlzW18weDZkNjQoJzB4NTBhJyldKGZ1bmN0aW9uKF8weDM5MDJhYSl7cmV0dXJuIF8weDM5MDJhYVsnX2xvbmdDb25zb2xlTG9nVGV4dCddO30pOnRoaXNbXzB4NmQ2NCgnMHg1MDgnKV0oZnVuY3Rpb24oXzB4MTEwM2Y3KXtyZXR1cm4gXzB4MTEwM2Y3W18weDZkNjQoJzB4MTBmJyldO30pOnRoaXNbXzB4NmQ2NCgnMHgxMGYnKV07fX0sXzB4MmZhMDc2W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg2ZjknKV09ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDdhZScpIT09J0JrSG5yJyl7dmFyIF8weDJmYTA3Nj1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKTtyZXR1cm4gX1tfMHg2ZDY0KCcweDNhJyldKHRoaXNbXzB4NmQ2NCgnMHg2YWInKV0oKSxmdW5jdGlvbihfMHg1ZTNjNGIpe19bXzB4NmQ2NCgnMHgzYScpXShfMHg1ZTNjNGJbXzB4NmQ2NCgnMHg1NjUnKV0oKSxmdW5jdGlvbihfMHg1ZTNjNGIpe18weDJmYTA3NltfMHg1ZTNjNGJbJ2tleSddKCldPV8weDVlM2M0Yjt9KTt9KSx0aGlzW18weDZkNjQoJzB4NDgzJyldPU9iamVjdFsnY3JlYXRlJ10obnVsbCksdGhpc1tfMHg2ZDY0KCcweDQ1ZCcpXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSxfMHgyZmEwNzY7fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDU1MicpXVtfMHgyZmEwNzZbXzB4NmQ2NCgnMHgxMmYnKV0oKV09XzB4MmZhMDc2O+KAi3ZhciBfMHgzZWQxYTg9XzB4MmZhMDc2W18weDZkNjQoJzB4NjU0JyldKCk7XzB4M2VkMWE4JiYhXzB4M2VkMWE4W18weDZkNjQoJzB4NGU1JyldKCkmJih0aGlzW18weDZkNjQoJzB4NTUzJyldW18weDNlZDFhOFtfMHg2ZDY0KCcweDEyZicpXSgpXT1fMHgzZWQxYTgpO319LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NTM3JyldPWZ1bmN0aW9uKF8weDJmYTA3Nil7dmFyIF8weDVlM2M0Yj10aGlzWydfbGluZVRvUmFuZ2VNYXAnXVtfMHgyZmEwNzZdO2lmKCFfMHg1ZTNjNGImJnRoaXNbXzB4NmQ2NCgnMHg0NDknKV0pZm9yKDtfMHgyZmEwNzY+MHgwJiYhXzB4NWUzYzRiOylfMHgyZmEwNzYtLSxfMHg1ZTNjNGI9dGhpc1tfMHg2ZDY0KCcweDQ0YScpXVtfMHgyZmEwNzZdO2lmKF8weDVlM2M0YilyZXR1cm4gXzB4NWUzYzRiWydjbG9zZXN0J107fSxfMHgyZmEwNzZbJ3Byb3RvdHlwZSddW18weDZkNjQoJzB4N2FhJyldPWZ1bmN0aW9uKCl7aWYoJ1BIbVFCJyE9PV8weDZkNjQoJzB4N2FmJykpe3ZhciBfMHgyZmEwNzY9dGhpcyxfMHg1ZTNjNGI9dGhpc1tfMHg2ZDY0KCcweDNmJyldO3RoaXNbXzB4NmQ2NCgnMHgzZicpXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSxfW18weDZkNjQoJzB4M2EnKV0oXzB4NWUzYzRiLGZ1bmN0aW9uKF8weDVlM2M0Yil7aWYoXzB4NmQ2NCgnMHg3YjAnKSE9PV8weDZkNjQoJzB4N2IwJykpe3RoaXNbXzB4NmQ2NCgnMHg3MGUnKV09e30sdGhpc1tfMHg2ZDY0KCcweDRiNycpXT0hMHgwO31lbHNle3ZhciBfMHgzMGUzZGY9XzB4NWUzYzRiW18weDZkNjQoJzB4MTJmJyldKCksXzB4Mjk3ZjIyPV8weDJmYTA3NltfMHg2ZDY0KCcweDNmJyldW18weDMwZTNkZl07XzB4MmZhMDc2W18weDZkNjQoJzB4M2YnKV1bXzB4MzBlM2RmXT1fMHg1ZTNjNGIsXzB4Mjk3ZjIyJiZfMHgyOTdmMjJbXzB4NmQ2NCgnMHgyM2MnKV0oKTt9fSk7fWVsc2V7dmFyIF8weGE0ZGY3YT10aGlzO3JldHVybiBfMHhhNGRmN2FbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDEwNicpXShfMHgyZmEwNzYpO319LF8weDJmYTA3NltfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4Nzg4JyldPWZ1bmN0aW9uKF8weDJmYTA3NixfMHg1ZTNjNGIpe2lmKF8weDZkNjQoJzB4N2IxJykhPT1fMHg2ZDY0KCcweDdiMScpKXt0aGlzW18weDZkNjQoJzB4NDMxJyldPV8weDJmYTA3Nix0aGlzW18weDZkNjQoJzB4MjE0JyldPV8weDVlM2M0Yix0aGlzW18weDZkNjQoJzB4M2YnKV09T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCksdGhpc1tfMHg2ZDY0KCcweDUyMicpXT0rK18weDM1NjA5ZTt9ZWxzZXt2YXIgXzB4MzBlM2RmLF8weDVjNGRmNSxfMHgzMDk3ZTcsXzB4MzU2MDllO2lmKHRoaXNbXzB4NmQ2NCgnMHg0ZTUnKV0oKSl7aWYoXzB4NmQ2NCgnMHg3YjInKSE9PSdSVUdhUCcpe18weDQ0ODM1MSYmIV8weDQ0ODM1MVtfMHg2ZDY0KCcweGQzJyldJiYoXzB4NWM0ZGY1PV8weDVjNjhkN1tfMHg2ZDY0KCcweGQwJyldKSYmXzB4NWM0ZGY1W18weDZkNjQoJzB4MycpXShfMHg1YzY4ZDcpO31lbHNle3ZhciBfMHg0YTQ3YWQ9W107Zm9yKHZhciBfMHg0YWY0ODkgaW4gdGhpc1snX3Rlc3REZWNsYXJhdGlvbkxpbmVNYXAnXSlpZihfMHg0YWY0ODk+XzB4MmZhMDc2KXt2YXIgXzB4NTRhMDc1PXRoaXNbXzB4NmQ2NCgnMHg0NWQnKV1bXzB4NGFmNDg5XTtkZWxldGUgdGhpc1snX3Rlc3REZWNsYXJhdGlvbkxpbmVNYXAnXVtfMHg0YWY0ODldLF8weDRhZjQ4OT1wYXJzZUludChfMHg0YWY0ODkpLF8weDRhZjQ4OSs9XzB4NWUzYzRiLF8weDRhNDdhZFtfMHg2ZDY0KCcweDFjJyldKHsnbGluZU51bWJlcic6XzB4NGFmNDg5LCd0ZXN0JzpfMHg1NGEwNzV9KTt9dHJ5e2Zvcih2YXIgXzB4NGVkMGZiPV8weDRmZGM1ZShfMHg0YTQ3YWQpLF8weDI5NTk4OD1fMHg0ZWQwZmJbXzB4NmQ2NCgnMHhkNScpXSgpOyFfMHgyOTU5ODhbXzB4NmQ2NCgnMHhkMycpXTtfMHgyOTU5ODg9XzB4NGVkMGZiW18weDZkNjQoJzB4ZDUnKV0oKSl7aWYoXzB4NmQ2NCgnMHg3YjMnKT09PV8weDZkNjQoJzB4N2IzJykpe3ZhciBfMHgxNmYxZDg9XzB4Mjk1OTg4W18weDZkNjQoJzB4YTknKV0sXzB4NWM2OGQ3PV8weDE2ZjFkOFtfMHg2ZDY0KCcweDQzJyldO2lmKF8weDVjNjhkN1tfMHg2ZDY0KCcweDc5ZScpXSl0cnl7Zm9yKHZhciBfMHg0NDgzNTE9XzB4NGZkYzVlKF8weDVjNjhkNyksXzB4MWVhNzUxPV8weDQ0ODM1MVtfMHg2ZDY0KCcweGQ1JyldKCk7IV8weDFlYTc1MVtfMHg2ZDY0KCcweGQzJyldO18weDFlYTc1MT1fMHg0NDgzNTFbXzB4NmQ2NCgnMHhkNScpXSgpKXt2YXIgXzB4MzMwZWQyPV8weDI5N2YyMihfMHgxZWE3NTFbJ3ZhbHVlJ10sMHgyKSxfMHg1NGEwNzU9XzB4MzMwZWQyWzB4MV07XzB4NTRhMDc1WydkZWNsYXJhdGlvbkxpbmUnXShfMHgxNmYxZDhbXzB4NmQ2NCgnMHg3YjQnKV0pO319Y2F0Y2goXzB4NWYyYTEyKXtpZignUG5ncHEnPT09XzB4NmQ2NCgnMHg3YjUnKSl7dHJ5e18weDRhNDdhZChfMHgyOTdmMjJbJ3Rocm93J10oXzB4MmZhMDc2KSk7fWNhdGNoKF8weDExNzBmZCl7XzB4NWM0ZGY1KF8weDExNzBmZCk7fX1lbHNle18weDMwOTdlNz17J2Vycm9yJzpfMHg1ZjJhMTJ9O319ZmluYWxseXt0cnl7XzB4MWVhNzUxJiYhXzB4MWVhNzUxW18weDZkNjQoJzB4ZDMnKV0mJihfMHgzNTYwOWU9XzB4NDQ4MzUxWydyZXR1cm4nXSkmJl8weDM1NjA5ZVtfMHg2ZDY0KCcweDMnKV0oXzB4NDQ4MzUxKTt9ZmluYWxseXtpZihfMHg2ZDY0KCcweDdiNicpPT09J2tUYWZYJyl7aWYoXzB4MzA5N2U3KXRocm93IF8weDMwOTdlN1snZXJyb3InXTt9ZWxzZXtfMHgyZmEwNzZbXzB4NmQ2NCgnMHg0ZTMnKV0oXzB4MzBlM2RmKTt2YXIgXzB4NWVkMzY4PV8weDMwZTNkZltfMHg2ZDY0KCcweDUzNycpXShfMHgyZmEwNzZbXzB4NmQ2NCgnMHgxNzAnKV0oKSk7bnVsbCE9XzB4NWVkMzY4JiYoXzB4MmZhMDc2WydzZXRSYW5nZSddKF8weDVlZDM2OCksXzB4NWVkMzY4WydmYWlscyddKF8weDVlM2M0YikpO319fWVsc2UgXzB4NWM2OGQ3W18weDZkNjQoJzB4NDVlJyldKF8weDE2ZjFkOFtfMHg2ZDY0KCcweDdiNCcpXSk7dGhpc1tfMHg2ZDY0KCcweDQ1ZCcpXVtfMHgxNmYxZDhbXzB4NmQ2NCgnMHg3YjQnKV1dPV8weDVjNjhkNzt9ZWxzZXt2YXIgXzB4NDlmMzQxPV8weDI5N2YyMltfMHg1ZTNjNGJdO3JldHVybiBfMHg0OWYzNDE/dm9pZCBfMHg0NDgzNTFbXzB4NmQ2NCgnMHgzNCcpXShfMHg0OWYzNDEsXzB4MmZhMDc2KTp2b2lkKF8weDI5N2YyMltfMHg1ZTNjNGJdPV8weDJmYTA3Nik7fX19Y2F0Y2goXzB4MjIwZDZjKXtfMHgzMGUzZGY9eydlcnJvcic6XzB4MjIwZDZjfTt9ZmluYWxseXt0cnl7aWYoJ25pUVdTJz09PV8weDZkNjQoJzB4N2I3Jykpe18weDI5NTk4OCYmIV8weDI5NTk4OFsnZG9uZSddJiYoXzB4NWM0ZGY1PV8weDRlZDBmYltfMHg2ZDY0KCcweGQwJyldKSYmXzB4NWM0ZGY1W18weDZkNjQoJzB4MycpXShfMHg0ZWQwZmIpO31lbHNle2Zvcig7KHZvaWQgMHgwPT09XzB4NWUzYzRifHxfMHg1ZTNjNGItLT4weDApJiYhKF8weDI5N2YyMj1fMHg1YzRkZjVbXzB4NmQ2NCgnMHhkNScpXSgpKVtfMHg2ZDY0KCcweGQzJyldOylfMHgzMDk3ZTdbJ3B1c2gnXShfMHgyOTdmMjJbJ3ZhbHVlJ10pO319ZmluYWxseXtpZihfMHgzMGUzZGYpdGhyb3cgXzB4MzBlM2RmW18weDZkNjQoJzB4OGQnKV07fX19fX19LF8weDJmYTA3Njt9fSgpO18weDVlM2M0YltfMHg2ZDY0KCcweDQnKV09XzB4NGE0N2FkO30seycuLi8uLi8uLi9saWIvYmFiZWxSYW5nZUNhbGN1bGF0b3InOjB4MSwnLi9jb3ZlcmFibGVSYW5nZSc6MHhiLCcuL2RvY3VtZW50SW5FZGl0b3InOjB4Y31dLDI1OltmdW5jdGlvbihfMHgyY2UwYTMsXzB4NTczMWM0LF8weDE0MzJkOCl7XzB4NTczMWM0WydleHBvcnRzJ109eydsaW5lU3RhdGUnOnsnbm90Q292ZXJlZCc6MHgxLCdmdWxseUNvdmVyZWQnOjB4MiwncGFydGlhbGx5Q292ZXJlZCc6MHgzLCdlcnJvclNvdXJjZSc6MHg0LCdlcnJvclBhdGgnOjB4NX19O30se31dLDI2OltmdW5jdGlvbihfMHgyYjBkYjQsXzB4Mjk2MjJiLF8weDRhOGIxNil7dmFyIF8weDVjZjNjYT1mdW5jdGlvbihfMHgyYjBkYjQpe3JldHVybiBfMHgyYjBkYjQmJl8weDJiMGRiNFtfMHg2ZDY0KCcweDkxJyldKC9eXHMrfFxzKyQvZ20sJycpO30sXzB4ODdjMTE1PVtfMHg2ZDY0KCcweDdiOCcpLF8weDZkNjQoJzB4N2I5JyksXzB4NmQ2NCgnMHg3YmEnKSxfMHg2ZDY0KCcweDdiYicpLF8weDZkNjQoJzB4N2JjJyksXzB4NmQ2NCgnMHg3YmQnKSxfMHg2ZDY0KCcweDdiZScpLF8weDZkNjQoJzB4N2JmJyksXzB4NmQ2NCgnMHg3YzAnKSxfMHg2ZDY0KCcweDdjMScpLF8weDZkNjQoJzB4N2MyJyksXzB4NmQ2NCgnMHg3YzMnKV07XzB4Mjk2MjJiW18weDZkNjQoJzB4NCcpXT17J25vcm1hbGl6ZVBhdGgnOmZ1bmN0aW9uKF8weDJiMGRiNCl7cmV0dXJuIF8weDZkNjQoJzB4N2M0Jyk9PT1wcm9jZXNzWydwbGF0Zm9ybSddJiZfMHgyYjBkYjQ/XzB4MmIwZGI0WydyZXBsYWNlJ10oL1xcL2csJy8nKTpfMHgyYjBkYjQ7fSwncGFyc2VLZXknOmZ1bmN0aW9uKF8weDJiMGRiNCl7aWYoXzB4NmQ2NCgnMHg3YzUnKSE9PSd4Z2JXcCcpe3ZhciBfMHgyOTYyMmI9e307aWYoXzB4MmIwZGI0KXt2YXIgXzB4NGE4YjE2PV8weDJiMGRiNFsnc3BsaXQnXSgnOicpOzB4Mj09PV8weDRhOGIxNltfMHg2ZDY0KCcweDhlJyldJiYoXzB4MmIwZGI0PV8weDVjZjNjYShfMHg0YThiMTZbMHgxXSkpO312YXIgXzB4MmI2ZDYxPUJ1ZmZlcltfMHg2ZDY0KCcweDI2NycpXShfMHgyYjBkYjQsXzB4NmQ2NCgnMHgxMzcnKSlbJ3RvU3RyaW5nJ10oKVsnc3BsaXQnXSgnXHgwYScpO18weDI5NjIyYltfMHg2ZDY0KCcweDI3OCcpXT1fMHgyYjZkNjFbMHgwXSxfMHgyOTYyMmJbXzB4NmQ2NCgnMHgyN2EnKV09XzB4MmI2ZDYxWzB4MV07dmFyIF8weDUyNGU2Zj1fMHgyOTYyMmJbXzB4NmQ2NCgnMHgyN2EnKV1bXzB4NmQ2NCgnMHhmNScpXSgnLCcpfHxbXTtfMHgyOTYyMmJbXzB4NmQ2NCgnMHgyNzknKV09XzB4NTI0ZTZmWzB4MF0sXzB4Mjk2MjJiWydsaWNlbnNlZFByb2R1Y3QnXT1fMHg1MjRlNmZbMHgxXSxfMHgyOTYyMmJbXzB4NmQ2NCgnMHgyMGYnKV09XzB4NTI0ZTZmWzB4Ml0sXzB4Mjk2MjJiWydzb3VyY2UnXT1fMHg1MjRlNmZbMHgzXSxfMHgyOTYyMmJbXzB4NmQ2NCgnMHgyN2InKV09XzB4MmI2ZDYxWzB4Ml0sXzB4Mjk2MjJiW18weDZkNjQoJzB4N2M2JyldPV8weDJiNmQ2MVsweDNdO3RyeXt2YXIgXzB4MTliMmY1PV8weDI5NjIyYltfMHg2ZDY0KCcweDI3YicpXVtfMHg2ZDY0KCcweGY1JyldKCcvJyk7XzB4Mjk2MjJiWydleHBpcmF0aW9uRGF0ZVN0cmluZ0Zvcm1hdHRlZCddPV8weDE5YjJmNVsweDBdKydceDIwJytfMHg4N2MxMTVbcGFyc2VJbnQoXzB4MTliMmY1WzB4MV0sMHhhKS0weDFdKydceDIwJytfMHgxOWIyZjVbMHgyXTt9Y2F0Y2goXzB4NDczM2Y4KXtpZihfMHg2ZDY0KCcweDdjNycpIT09XzB4NmQ2NCgnMHg3YzgnKSl7XzB4Mjk2MjJiW18weDZkNjQoJzB4MjdkJyldPV8weDI5NjIyYltfMHg2ZDY0KCcweDI3YicpXTt9ZWxzZXt2YXIgXzB4MzNmNTJjPV8weDg3YzExNShfMHg1MjRlNmYpW18weDZkNjQoJzB4NTkyJyldOycvJz09PV8weDMzZjUyYyYmKF8weDMzZjUyYz0nJyk7dmFyIF8weDM3MDk4ND1fMHgyYjBkYjRbXzB4NmQ2NCgnMHg3YzknKV1bXzB4NmQ2NCgnMHg3Y2EnKV07XzB4NGE4YjE2KF8weDZkNjQoJzB4N2NiJyksXzB4MzNmNTJjfHxfMHgzNzA5ODQpO3ZhciBfMHgxY2MzYTc9XzB4NWNmM2NhW18weDZkNjQoJzB4NWM1JyldKF8weDVjZjNjYVtfMHg2ZDY0KCcweDRjJyldKF8weDM3MDk4NCxfMHgzM2Y1MmMpKSxfMHgyMDNkMTc9XzB4MmI2ZDYxWydnZXQnXShfMHgxY2MzYTcpO2lmKF9bXzB4NmQ2NCgnMHgyNzEnKV0oXzB4MjAzZDE3KXx8XzB4MjAzZDE3IGluc3RhbmNlb2YgQnVmZmVyKV8weDRhOGIxNihfMHg2ZDY0KCcweDdjYycpLF8weDMzZjUyY3x8XzB4MzcwOTg0KSxfMHg0NzMzZjgoXzB4MTliMmY1LF8weDIwM2QxNyxfMHgxY2MzYTcpO2Vsc2V7dmFyIF8weDNlZjhjOT1mdW5jdGlvbihfMHgzNDE5MDcsXzB4NGMzMmI0LF8weDIwMWVlNixfMHg0ZDUzNjYpe18weDIwMWVlNj9fMHgzNDE5MDc/KF8weDM3MDk4ND1fMHgzNDE5MDdbXzB4NmQ2NCgnMHg3Y2EnKV0sXzB4NGE4YjE2KF8weDZkNjQoJzB4N2NkJyksXzB4MzNmNTJjfHxfMHgzNzA5ODQpLF8weDFjYzNhNz1fMHg1Y2YzY2FbXzB4NmQ2NCgnMHg1YzUnKV0oXzB4NWNmM2NhW18weDZkNjQoJzB4NGMnKV0oXzB4MzcwOTg0LF8weDMzZjUyYykpLF8weDM0MTkwN1tfMHg2ZDY0KCcweDdjZScpXShfMHgxY2MzYTcsXzB4M2VmOGM5W18weDZkNjQoJzB4ZmEnKV0obnVsbCxudWxsLF8weDM0MTkwN1tfMHg2ZDY0KCcweDdjZicpXSkpKTooXzB4NGE4YjE2KF8weDZkNjQoJzB4N2QwJyksXzB4MWNjM2E3LF8weDIwMWVlNiYmXzB4MjAxZWU2W18weDZkNjQoJzB4MjMnKV18fF8weDZkNjQoJzB4MTYyJykpLF8weDI5NjIyYiYmY29uc29sZVsnZXJyb3InXShfMHg2ZDY0KCcweDdkMScpK18weDMzZjUyYyksXzB4MTliMmY1W18weDZkNjQoJzB4MTNmJyldKDB4MTk0KVtfMHg2ZDY0KCcweDI1OCcpXSgpKTooXzB4NGMzMmI0W18weDZkNjQoJzB4MTY4JyldKF8weDFjYzNhNyxfMHg0ZDUzNjYpLF8weDQ3MzNmOChfMHgxOWIyZjUsXzB4NGQ1MzY2LF8weDFjYzNhNykpO307XzB4NGE4YjE2KF8weDZkNjQoJzB4N2QyJyksXzB4MzNmNTJjfHxfMHgzNzA5ODQpLF8weDJiMGRiNFsnbWFpbiddW18weDZkNjQoJzB4N2NlJyldKF8weDFjYzNhNyxfMHgzZWY4YzlbXzB4NmQ2NCgnMHhmYScpXShudWxsLF8weDJiMGRiNFsnYWx0J10sXzB4MmI2ZDYxKSk7fX19cmV0dXJuIF8weDI5NjIyYjt9ZWxzZXt2YXIgXzB4NThjMTM2PV8weDJiMGRiNFtfMHg2ZDY0KCcweDJkNicpXTtpZihfWydpc1N0cmluZyddKF8weDI5NjIyYikpe3ZhciBfMHg1MjhmMzE9dGhpc1snX2RpZmZNYXRjaFBhdGNoJ11bXzB4NmQ2NCgnMHg3ZDMnKV0oXzB4Mjk2MjJiLF8weDU4YzEzNik7aWYoIV8weDUyOGYzMVsnbGVuZ3RoJ10pcmV0dXJuIGgoXzB4NmQ2NCgnMHg3ZDQnKSxfMHgyYjBkYjRbJ3BhdGgnXSksdm9pZCB0aGlzW18weDZkNjQoJzB4MTZhJyldKCdub3RDaGFuZ2VkJyxfMHgyYjBkYjQsXzB4NThjMTM2LF8weDRhOGIxNik7XzB4MmIwZGI0W18weDZkNjQoJzB4NWYxJyldfHxfMHg4N2MxMTV8fChfMHgyYjBkYjRbXzB4NmQ2NCgnMHgyZDYnKV09dGhpc1tfMHg2ZDY0KCcweDNkYScpXVsncGF0Y2hfdG9UZXh0J10oXzB4NTI4ZjMxKSk7fXRoaXNbXzB4NmQ2NCgnMHgxNmEnKV0oXzB4NmQ2NCgnMHgzNmMnKSxfMHgyYjBkYjQsXzB4NThjMTM2LF8weDRhOGIxNixfMHg1Y2YzY2EsXzB4ODdjMTE1KTt9fSwnZm9ybWF0JzpmdW5jdGlvbihfMHgyYjBkYjQsXzB4Mjk2MjJiKXtpZihfMHg2ZDY0KCcweDdkNScpPT09XzB4NmQ2NCgnMHg3ZDUnKSl7cmV0dXJuIF8weDJiMGRiNFtfMHg2ZDY0KCcweDkxJyldKC9ceyhbMC05YS16QS1aX10rKVx9L2csZnVuY3Rpb24oXzB4NGE4YjE2LF8weDVjZjNjYSxfMHg4N2MxMTUpe2lmKF8weDZkNjQoJzB4N2Q2Jyk9PT0nYVJuRkMnKXt2YXIgXzB4NGM2OTcxO3JldHVybid7Jz09PV8weDJiMGRiNFtfMHg4N2MxMTUtMHgxXSYmJ30nPT09XzB4MmIwZGI0W18weDg3YzExNStfMHg0YThiMTZbJ2xlbmd0aCddXT9fMHg1Y2YzY2E6KF8weDRjNjk3MT1fMHgyOTYyMmJbXzB4NmQ2NCgnMHgyZicpXShfMHg1Y2YzY2EpP18weDI5NjIyYltfMHg1Y2YzY2FdOm51bGwsbnVsbD09PV8weDRjNjk3MXx8dm9pZCAweDA9PT1fMHg0YzY5NzE/Jyc6XzB4NGM2OTcxKTt9ZWxzZXtzd2l0Y2goXzB4ODdjMTE1W18weDZkNjQoJzB4ZGYnKV0pe2Nhc2UgMHgwOmlmKCF0aGlzWydfaXNXaW4nXSlyZXR1cm5bMHgyLHRoaXNbXzB4NmQ2NCgnMHgxZjMnKV0oXzB4MmIwZGI0KV07XzB4Mjk2MjJiPTB4MCxfMHg4N2MxMTVbXzB4NmQ2NCgnMHhkZicpXT0weDE7Y2FzZSAweDE6cmV0dXJuIF8weDI5NjIyYjwweGE/WzB4NCx0aGlzW18weDZkNjQoJzB4MWY0JyldKDB4YSldOlsweDMsMHg2XTtjYXNlIDB4MjpyZXR1cm4gXzB4ODdjMTE1W18weDZkNjQoJzB4MTEzJyldKCksWzB4NCx0aGlzW18weDZkNjQoJzB4MWY1JyldKF8weDJiMGRiNCldO2Nhc2UgMHgzOnJldHVybiBfMHg0YThiMTY9XzB4ODdjMTE1W18weDZkNjQoJzB4MTEzJyldKCksWzB4NCx0aGlzW18weDZkNjQoJzB4MWY0JyldKDB4YSldO2Nhc2UgMHg0OnJldHVybiBfMHg4N2MxMTVbXzB4NmQ2NCgnMHgxMTMnKV0oKSxbMHg0LHRoaXNbXzB4NmQ2NCgnMHgxZjMnKV0oXzB4MmIwZGI0KV07Y2FzZSAweDU6cmV0dXJuIF8weDVjZjNjYT1fMHg4N2MxMTVbXzB4NmQ2NCgnMHgxMTMnKV0oKSxfMHg0YThiMTZbXzB4NmQ2NCgnMHgxMTknKV09PT1fMHg1Y2YzY2FbJ2xlbmd0aCddP1sweDIsXzB4NWNmM2NhXTooXzB4Mjk2MjJiKyssaChfMHg2ZDY0KCcweDFmNicpKSxbMHgzLDB4MV0pO2Nhc2UgMHg2OnJldHVyblsweDJdO319fSk7fWVsc2V7aWYodGhpc1tfMHg2ZDY0KCcweDVhZCcpXSl7dmFyIF8weDI4MGRjNT10aGlzWydfbHJ1Q2FjaGUnXVsnZ2V0J10oXzB4MmIwZGI0KSxfMHg1YmVlZTM9KytfMHg0YThiMTZbXzB4NmQ2NCgnMHgxNjMnKV07dGhpc1tfMHg2ZDY0KCcweDQ4OCcpXShfMHg0YThiMTYsITB4MClbXzB4NmQ2NCgnMHg3ZScpXShmdW5jdGlvbihfMHgyYmNhNjcpe3JldHVybiBfMHgyYmNhNjdbXzB4NmQ2NCgnMHgxNjMnKV09PT1fMHg1YmVlZTMmJl8weDI5NjIyYlsnX2VtaXRGaWxlQ2hhbmdlJ10oXzB4MmJjYTY3LF8weDI4MGRjNSk7fSlbXzB4NmQ2NCgnMHg3ZicpXShmdW5jdGlvbihfMHgyNzQ0MzEpe3JldHVybiBoKF8weDI3NDQzMSk7fSk7fX19LCd2YWxpZFBhY2thZ2VOYW1lJzpmdW5jdGlvbihfMHgyYjBkYjQpe2lmKF8weDJiMGRiNCYmIV8weDJiMGRiNFtfMHg2ZDY0KCcweDMwNCcpXSgvXlwuLykmJiFfMHgyYjBkYjRbXzB4NmQ2NCgnMHgzMDQnKV0oL15fLykmJiEoXzB4MmIwZGI0W18weDZkNjQoJzB4OGUnKV0+MHhkNnx8XzB4MmIwZGI0W18weDZkNjQoJzB4NWZlJyldKCkhPT1fMHgyYjBkYjR8fC9bfichKCkqXS9bJ3Rlc3QnXShfMHgyYjBkYjRbXzB4NmQ2NCgnMHhmNScpXSgnLycpWydzbGljZSddKC0weDEpWzB4MF0pKSl7aWYoXzB4NmQ2NCgnMHg3ZDcnKSE9PV8weDZkNjQoJzB4N2Q3Jykpe3JldHVybiB0aGlzWydfc3RhdGUnXTt9ZWxzZXtpZihlbmNvZGVVUklDb21wb25lbnQoXzB4MmIwZGI0KT09PV8weDJiMGRiNClyZXR1cm4gXzB4MmIwZGI0O3ZhciBfMHgyOTYyMmI9XzB4MmIwZGI0W18weDZkNjQoJzB4MzA0JyldKC9eKD86QChbXlwvXSs/KVtcL10pPyhbXlwvXSs/KSQvKTtpZihfMHgyOTYyMmIpe3ZhciBfMHg0YThiMTY9XzB4Mjk2MjJiWzB4MV0sXzB4NWNmM2NhPV8weDI5NjIyYlsweDJdO2lmKGVuY29kZVVSSUNvbXBvbmVudChfMHg0YThiMTYpPT09XzB4NGE4YjE2JiZlbmNvZGVVUklDb21wb25lbnQoXzB4NWNmM2NhKT09PV8weDVjZjNjYSlyZXR1cm4gXzB4MmIwZGI0O319fX19O30se31dLDI3OltmdW5jdGlvbihfMHgyOGVmMTgsXzB4MzQwYmE1LF8weDIyYjc1Mil7J3VzZSBzdHJpY3QnO3ZhciBfMHgzYzkyZGM9dGhpcyYmdGhpc1tfMHg2ZDY0KCcweDIyYycpXXx8ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDdkOCcpIT09XzB4NmQ2NCgnMHg3ZDknKSl7dmFyIF8weDI4ZWYxOD1mdW5jdGlvbihfMHgzNDBiYTUsXzB4MjJiNzUyKXtyZXR1cm4oXzB4MjhlZjE4PU9iamVjdFtfMHg2ZDY0KCcweDIyZicpXXx8eydfX3Byb3RvX18nOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKF8weDI4ZWYxOCxfMHgzNDBiYTUpe2lmKF8weDZkNjQoJzB4N2RhJykhPT0ndmpSdGcnKXtfMHgyOGVmMTg9XzB4MjJiNzUyWydfcHJvamVjdCddWydub3JtYWxpemVQYXRoJ10oXzB4MjhlZjE4KTt2YXIgXzB4MzBiNjBmPV8weDIyYjc1MlsnX2ZpbGVSb290J10/XzB4MjhlZjE4W18weDZkNjQoJzB4MTdjJyldKF8weDIyYjc1MltfMHg2ZDY0KCcweDdkYicpXSk6LTB4MTtpZih+XzB4MzBiNjBmKXt2YXIgXzB4NDdjZWU1PV9bJ3J0cmltJ10oXzB4MjhlZjE4W18weDZkNjQoJzB4MzdiJyldKF8weDMwYjYwZitfMHgyMmI3NTJbXzB4NmQ2NCgnMHg3ZGInKV1bJ2xlbmd0aCddKSwnKScpWydzcGxpdCddKCc6Jyk7aWYoMHgzPT09XzB4NDdjZWU1W18weDZkNjQoJzB4OGUnKV18fDB4Mj09PV8weDQ3Y2VlNVtfMHg2ZDY0KCcweDhlJyldKXt2YXIgXzB4M2JjODg1PXBhcnNlSW50KF8weDQ3Y2VlNVsweDFdLDB4YSk7XzB4NWMyNzc3PV8weDIyYjc1MltfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MTZmJyldKF8weDIyYjc1MlsnX3Byb2plY3QnXVtfMHg2ZDY0KCcweDdiJyldKF9bXzB4NmQ2NCgnMHg1N2QnKV0oXzB4NDdjZWU1WzB4MF0sJy8nKSksXzB4M2JjODg1LHBhcnNlSW50KF8weDQ3Y2VlNVsweDJdLDB4YSkpLF8weDVjMjc3NyYmXzB4NWMyNzc3W18weDZkNjQoJzB4MTcwJyldPyhfMHg0ODY4NjQ9XzB4MjJiNzUyW18weDZkNjQoJzB4NTdiJyldKF8weDI4ZWYxOCxfMHgzMGI2MGYpLF8weDQ4Njg2NCYmKF8weDJmYjUxNFtfMHgxYmViYTJbXzB4NmQ2NCgnMHg4ZScpXV09XzB4NDg2ODY0KSxfMHgxYmViYTJbXzB4NmQ2NCgnMHgxYycpXShbXzB4NWMyNzc3WydmaWxlJ10sXzB4NWMyNzc3W18weDZkNjQoJzB4MTcwJyldXSkpOl8weDVjMjc3NyYmXzB4MzQwYmE1JiZfMHgxYmViYTJbXzB4NmQ2NCgnMHgxYycpXShbXzB4NWMyNzc3WydmaWxlJ10sXzB4M2JjODg1XSk7fX19ZWxzZXtfMHgyOGVmMThbJ19fcHJvdG9fXyddPV8weDM0MGJhNTt9fXx8ZnVuY3Rpb24oXzB4MjhlZjE4LF8weDM0MGJhNSl7aWYoXzB4NmQ2NCgnMHg3ZGMnKT09PSdOQ1ZJVScpe18weDJiZmNlOShfMHg2ZDY0KCcweDNlYScpLF8weDM0MGJhNSk7fWVsc2V7Zm9yKHZhciBfMHgyMmI3NTIgaW4gXzB4MzQwYmE1KV8weDM0MGJhNVsnaGFzT3duUHJvcGVydHknXShfMHgyMmI3NTIpJiYoXzB4MjhlZjE4W18weDIyYjc1Ml09XzB4MzQwYmE1W18weDIyYjc1Ml0pO319KShfMHgzNDBiYTUsXzB4MjJiNzUyKTt9O3JldHVybiBmdW5jdGlvbihfMHgzNDBiYTUsXzB4MjJiNzUyKXtpZihfMHg2ZDY0KCcweDdkZCcpPT09XzB4NmQ2NCgnMHg3ZGUnKSl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg2M2YnKV1bXzB4MjhlZjE4XTt9ZWxzZXtmdW5jdGlvbiBfMHgzYzkyZGMoKXt0aGlzW18weDZkNjQoJzB4MWE5JyldPV8weDM0MGJhNTt9XzB4MjhlZjE4KF8weDM0MGJhNSxfMHgyMmI3NTIpLF8weDM0MGJhNVsncHJvdG90eXBlJ109bnVsbD09PV8weDIyYjc1Mj9PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShfMHgyMmI3NTIpOihfMHgzYzkyZGNbXzB4NmQ2NCgnMHg4MScpXT1fMHgyMmI3NTJbXzB4NmQ2NCgnMHg4MScpXSxuZXcgXzB4M2M5MmRjKCkpO319O31lbHNle2lmKHRoaXNbXzB4NmQ2NCgnMHg1NycpXVsnY2FuY2VsbGVkJ10oKSl0aHJvd3sncnVuQ2FuY2VsbGVkJzohMHgwfTt9fSgpLF8weDVjMjc3Nz10aGlzJiZ0aGlzW18weDZkNjQoJzB4MjM3JyldfHxmdW5jdGlvbihfMHgyOGVmMTgpe3ZhciBfMHgzNDBiYTU9XzB4NmQ2NCgnMHg1Jyk9PXR5cGVvZiBTeW1ib2wmJl8weDI4ZWYxOFtTeW1ib2xbXzB4NmQ2NCgnMHhlOCcpXV0sXzB4MjJiNzUyPTB4MDtyZXR1cm4gXzB4MzQwYmE1P18weDM0MGJhNVtfMHg2ZDY0KCcweDMnKV0oXzB4MjhlZjE4KTp7J25leHQnOmZ1bmN0aW9uKCl7cmV0dXJuIF8weDI4ZWYxOCYmXzB4MjJiNzUyPj1fMHgyOGVmMThbJ2xlbmd0aCddJiYoXzB4MjhlZjE4PXZvaWQgMHgwKSx7J3ZhbHVlJzpfMHgyOGVmMTgmJl8weDI4ZWYxOFtfMHgyMmI3NTIrK10sJ2RvbmUnOiFfMHgyOGVmMTh9O319O30sXzB4NDg2ODY0PV8weDI4ZWYxOChfMHg2ZDY0KCcweDdkZicpKSxfMHgxYmViYTI9XzB4MjhlZjE4KCdleHByZXNzJyksXzB4MjZlM2NmPV8weDI4ZWYxOCgnaHR0cCcpLF8weDVjZjY3ZD1fMHgyOGVmMTgoJ2ZzJyksXzB4MmZiNTE0PV8weDI4ZWYxOChfMHg2ZDY0KCcweDRlJykpLF8weDM4OWVjOD1fMHgyOGVmMTgoXzB4NmQ2NCgnMHg2OScpKSxfMHgyOTAzNjk9XzB4MjhlZjE4KCd3cycpLF8weDU0N2UwYT1fMHgyOGVmMTgoJ3dzJylbXzB4NmQ2NCgnMHg3ZTAnKV0sXzB4MThiZTVlPV8weDI4ZWYxOChfMHg2ZDY0KCcweDdlMScpKSxfMHhlM2MwOWQ9XzB4MjhlZjE4KF8weDZkNjQoJzB4N2UyJykpLF8weGZkM2YyMj1fMHgyOGVmMTgoJy4uL3NlcnZlci90ZXN0RmlsdGVyJyksXzB4MmFjOWY9XzB4MjhlZjE4KF8weDZkNjQoJzB4NTQ5JykpLF8weDE0ZmIxNT1sb2dnZXJbXzB4NmQ2NCgnMHgzYicpXShfMHg2ZDY0KCcweDdlMycpKSxfMHgxNjk0MWU9XzB4MTRmYjE1W18weDZkNjQoJzB4NTYnKV0sXzB4MmJmY2U5PV8weDE0ZmIxNVtfMHg2ZDY0KCcweDM1NScpXSxfMHgzNDZmMzg9WzB4YzgyMywweGM4MjQsMHhjODI1LDB4YzgyNiwweGM4MjcsMHhjODI4LDB4YzgyOSwweGM4MmEsMHhjODJiLDB4YzgyYywweGNlMDYsMHhjZTA3LDB4Y2UwOCwweGNlMDksMHhjZTBhLDB4Y2UwYiwweGNlMGMsMHhjZTBkLDB4Y2UwZSwweGNlMGYsMHhkMTRhLDB4ZDE0YiwweGQxNGMsMHhkMTRkLDB4ZDE0ZSwweGQxNGYsMHhkMTUwLDB4ZDE1MSwweGQxNTIsMHhkMTUzXSxfMHgyNzNjOWE9MHhjODJkLF8weDMwMWFkMz1fMHg2ZDY0KCcweDdlNCcpLF8weDUyMmVhNj1mdW5jdGlvbihfMHgyOGVmMTgpe2lmKF8weDZkNjQoJzB4N2U1Jyk9PT1fMHg2ZDY0KCcweDdlNicpKXt2YXIgXzB4NGM5ZjQ1PXRoaXM7XzB4NGM5ZjQ1WydfaG9zdCddJiYoXzB4NGM5ZjQ1W18weDZkNjQoJzB4MTg5JyldW18weDZkNjQoJzB4MWFkJyldKHsndHlwZSc6XzB4NmQ2NCgnMHgxMTQnKX0pLF8weDRjOWY0NVtfMHg2ZDY0KCcweDE4OScpXVtfMHg2ZDY0KCcweDFkZScpXSgpLGRlbGV0ZSBfMHg0YzlmNDVbJ19jYWxsYmFja3MnXSxkZWxldGUgXzB4NGM5ZjQ1W18weDZkNjQoJzB4MTg5JyldKSxfMHg0YzlmNDVbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDExNCcpXSgpO31lbHNle2Z1bmN0aW9uIF8weDM0MGJhNShfMHgzNDBiYTUpe3ZhciBfMHgyMmI3NTI9XzB4MjhlZjE4W18weDZkNjQoJzB4MycpXSh0aGlzKXx8dGhpcyxfMHgzYzkyZGM9XzB4MjJiNzUyO3JldHVybiBfMHgyMmI3NTJbXzB4NmQ2NCgnMHg3ZTcnKV0oKVtfMHg2ZDY0KCcweDdlJyldKGZ1bmN0aW9uKF8weDI4ZWYxOCl7cmV0dXJuIF8weDNjOTJkY1tfMHg2ZDY0KCcweDM2NCcpXShfMHgyOGVmMTgsXzB4MzQwYmE1KTt9KVtfMHg2ZDY0KCcweDdmJyldKGZ1bmN0aW9uKF8weDI4ZWYxOCl7cmV0dXJuIGNvbnNvbGVbXzB4NmQ2NCgnMHg4ZCcpXShfMHg2ZDY0KCcweDdlOCcpKyhfMHgyOGVmMTgmJl8weDI4ZWYxOFtfMHg2ZDY0KCcweDIzJyldKSk7fSksXzB4M2M5MmRjW18weDZkNjQoJzB4MWY5JyldPV8weDM0MGJhNSxfMHgzYzkyZGNbJ19jb25uZWN0aW9ucyddPVtdLF8weDNjOTJkY1tfMHg2ZDY0KCcweDdlOScpXT17fSxfMHgzYzkyZGNbXzB4NmQ2NCgnMHg3ZWEnKV09e30sXzB4MjJiNzUyO31yZXR1cm4gXzB4M2M5MmRjKF8weDM0MGJhNSxfMHgyOGVmMTgpLF8weDM0MGJhNVsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHg3ZWInKV09ZnVuY3Rpb24oXzB4MjhlZjE4LF8weDM0MGJhNSl7aWYoJ3pqTGN6Jz09PSdMb1dxTScpe3JldHVybiEoIV8weDVjMjc3N3x8XzB4MjhlZjE4WydvbmxpbmVMaWNlbnNlRGV0YWlscyddWydwZW5kaW5nQWN0aXZhdGlvbiddJiYoXzB4MjhlZjE4WydvbmxpbmVMaWNlbnNlRGV0YWlscyddWydncCddPm5ldyBfMHgxYmViYTIoKVtfMHg2ZDY0KCcweDFlYycpXSgpfHxfMHgyOGVmMThbXzB4NmQ2NCgnMHhkMicpXVsnZ3AnXStfMHgyNzNjOWE8bmV3IF8weDFiZWJhMigpWydnZXRUaW1lJ10oKSkpfHwoXzB4MjhlZjE4WydvbCddfHxfMHgzYzkyZGNbXzB4NmQ2NCgnMHgxZTQnKV0oXzB4NmQ2NCgnMHg4ZCcpLF8weDM0MGJhNSksXzB4M2M5MmRjWydzdG9wJ10oKSxfMHgzYzkyZGNbJ19lbWl0U3RvcHBlZCddKCksITB4MSk7fWVsc2V7dmFyIF8weDIyYjc1Mj10aGlzLF8weDNjOTJkYz10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4ODMnKV0oKSxfMHg1YzI3Nzc9dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDQ3OCcpXSgpO3RoaXNbXzB4NmQ2NCgnMHhkOCcpXXx8KHRoaXNbXzB4NmQ2NCgnMHhkOCcpXT17J2ZpbGVzJzpPYmplY3RbJ2NyZWF0ZSddKG51bGwpLCdudW1iZXJPZkNvdmVyZWRSYW5nZXMnOjB4MCwnaGllcmFyY2h5JzpuZXcgXzB4MThiZTVlKCl9LHRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bJ2ZpbHRlciddW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHgyOWQnKV0mJnRoaXNbJ19hY2N1bXVsYXRlVGVzdEZpbHRlclN0YXRlRm9yRmlsZXMnXShfMHgzYzkyZGMsZnVuY3Rpb24oXzB4MjhlZjE4KXtyZXR1cm4gXzB4MjJiNzUyW18weDZkNjQoJzB4MWY5JyldWydmaWxlQnlJZCddKF8weDI4ZWYxOFsnaWQnXSk7fSkpLHRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bJ2ZpbHRlciddW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHgyOWQnKV0mJihfMHg1YzI3NzdbXzB4NmQ2NCgnMHgzY2QnKV09dGhpc1tfMHg2ZDY0KCcweDQ3YScpXSgpKSx0aGlzW18weDZkNjQoJzB4M2E2JyldKF9bXzB4NmQ2NCgnMHgzNCcpXSh7J3R5cGUnOl8weDZkNjQoJzB4NDdiJyl9LF8weDVjMjc3NyksXzB4MzQwYmE1KSxfW18weDZkNjQoJzB4MzJkJyldKF8weDNjOTJkYyl8fHRoaXNbXzB4NmQ2NCgnMHg3ZWMnKV0oXzB4M2M5MmRjLF8weDM0MGJhNSksdGhpc1tfMHg2ZDY0KCcweGQ4JyldW18weDZkNjQoJzB4NDdlJyldWydmcmVzaCddJiZ0aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MjljJyldW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHgyOWQnKV0mJnRoaXNbXzB4NmQ2NCgnMHg0N2MnKV0oKSx0aGlzWydfdGVzdEZpbHRlclN0YXRlJ11bXzB4NmQ2NCgnMHg0N2UnKV1bXzB4NmQ2NCgnMHg3ZWQnKV18fHRoaXNbXzB4NmQ2NCgnMHgzYTYnKV0oeyd0eXBlJzpfMHg2ZDY0KCcweDQ3ZCcpLCdmaWxlcyc6dGhpc1snX3Rlc3RGaWx0ZXJTdGF0ZSddWydoaWVyYXJjaHknXVtfMHg2ZDY0KCcweDQ3ZicpXX0pO319LF8weDM0MGJhNVtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4N2VlJyldPWZ1bmN0aW9uKF8weDI4ZWYxOCl7aWYoXzB4NmQ2NCgnMHg3ZWYnKT09PV8weDZkNjQoJzB4N2VmJykpe18weDI4ZWYxOFsnbGluZSddPXBhcnNlSW50KF8weDI4ZWYxOFsnbGluZSddLDB4YSksXzB4MjhlZjE4W18weDZkNjQoJzB4MWM4JyldPXBhcnNlSW50KF8weDI4ZWYxOFsnY29sdW1uJ10sMHhhKSxfW18weDZkNjQoJzB4MjYxJyldKF8weDI4ZWYxOFsnbGluZSddKSYmKF8weDI4ZWYxOFtfMHg2ZDY0KCcweDE3MCcpXT0weDEpLF9bXzB4NmQ2NCgnMHgyNjEnKV0oXzB4MjhlZjE4Wydjb2x1bW4nXSkmJmRlbGV0ZSBfMHgyOGVmMThbXzB4NmQ2NCgnMHgxYzgnKV0sdGhpc1tfMHg2ZDY0KCcweDE2YScpXShfMHg2ZDY0KCcweDIzJyksX1snZXh0ZW5kJ10oXzB4MjhlZjE4LHsndHlwZSc6XzB4NmQ2NCgnMHgyMDEnKX0pKTt9ZWxzZXt0cnl7XzB4MzQwYmE1W18weDZkNjQoJzB4NzQxJyldW18weDZkNjQoJzB4N2YwJyldKF8weDI4ZWYxOCxmdW5jdGlvbihfMHgzNmM0N2Upe18weDIyYjc1MihfMHgzNmM0N2UpO30pO31jYXRjaChfMHgxNzJiMjYpe18weDNjOTJkYyhfMHgxNzJiMjYpO319fSxfMHgzNDBiYTVbXzB4NmQ2NCgnMHg4MScpXVsndWk6cnVuVGVzdHMnXT1mdW5jdGlvbihfMHgyOGVmMTgpe2lmKF8weDZkNjQoJzB4N2YxJykhPT0nSkRXaGknKXtmdW5jdGlvbiBfMHgzMzFjMTYoKXt9cmV0dXJuIF8weDMzMWMxNjt9ZWxzZXt0aGlzW18weDZkNjQoJzB4MWY5JyldWydfcHJvamVjdCddW18weDZkNjQoJzB4MWQyJyldKHsndGVzdHMnOl8weDI4ZWYxOFsndGVzdHMnXX0pO319LF8weDM0MGJhNVsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHg3ZjInKV09ZnVuY3Rpb24oXzB4MjhlZjE4KXt0aGlzWydfb3BlbmVkRmlsZXMnXVtfMHgyOGVmMThbXzB4NmQ2NCgnMHg0ZScpXV0/dGhpc1snX29wZW5lZEZpbGVzJ11bXzB4MjhlZjE4W18weDZkNjQoJzB4NGUnKV1dKys6dGhpc1tfMHg2ZDY0KCcweDdlOScpXVtfMHgyOGVmMThbXzB4NmQ2NCgnMHg0ZScpXV09MHgxO30sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg3ZjMnKV09ZnVuY3Rpb24oXzB4MjhlZjE4KXt0aGlzW18weDZkNjQoJzB4N2U5JyldW18weDI4ZWYxOFtfMHg2ZDY0KCcweDRlJyldXSYmdGhpc1tfMHg2ZDY0KCcweDdlOScpXVtfMHgyOGVmMThbXzB4NmQ2NCgnMHg0ZScpXV0tLTt9LF8weDM0MGJhNVtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4N2Y0JyldPWZ1bmN0aW9uKF8weDI4ZWYxOCxfMHgzNDBiYTUpe3ZhciBfMHgyMmI3NTI9dGhpcyxfMHgzYzkyZGM9dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDY1OCcpXShfMHgyOGVmMThbJ3BhdGgnXSk7aWYoXzB4NmQ2NCgnMHgzOGMnKT09dHlwZW9mIF8weDNjOTJkYyl7aWYoXzB4NmQ2NCgnMHg3ZjUnKT09PV8weDZkNjQoJzB4N2Y1Jykpe3ZhciBfMHg1YzI3NzcsXzB4NDg2ODY0PW5ldyBfMHhlM2MwOWQodGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDI5YycpXSxmdW5jdGlvbihfMHgyOGVmMTgpe30pLF8weDFiZWJhMj1fMHgyMmI3NTJbJ19tb2RlbCddW18weDZkNjQoJzB4MmFjJyldKF8weDI4ZWYxOFtfMHg2ZDY0KCcweDRlJyldKSxfMHgyNmUzY2Y9W10sXzB4NWNmNjdkPVtdO18weDFiZWJhMiYmXzB4MWJlYmEyW18weDZkNjQoJzB4NzgyJyldKCkmJihfMHg0ODY4NjRbXzB4NmQ2NCgnMHgzZCcpXShfW18weDZkNjQoJzB4M2UnKV0oXzB4MWJlYmEyWydyYW5nZXMnXSgpKSwhMHgxLCEweDApLF8weDVjZjY3ZD1fMHg0ODY4NjRbJ2FsbExpbmVzJ10odGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDI5YycpXVsndGVzdCddW18weDZkNjQoJzB4MjlkJyldKVtfMHg2ZDY0KCcweDdmNicpXXx8W10sXzB4MjZlM2NmPV8weDIyYjc1MlsnX21vZGVsJ11bXzB4NmQ2NCgnMHgzMGInKV0oeydmaWxlJzpfMHgyOGVmMThbXzB4NmQ2NCgnMHg0ZScpXX0pfHxbXSxfMHg1YzI3Nzc9XzB4MjJiNzUyWydfcmVwb3J0RmlsZUNvdmVyYWdlJ10oXzB4MWJlYmEyKSksXzB4MjJiNzUyW18weDZkNjQoJzB4M2E2JyldKHsndHlwZSc6XzB4NmQ2NCgnMHg3ZjcnKSwnY29ycmVsYXRpb25JZCc6XzB4MjhlZjE4Wydjb3JyZWxhdGlvbklkJ10sJ2NvZGUnOl8weDNjOTJkY1tfMHg2ZDY0KCcweDUzJyldKCksJ2xpbmVzJzpfMHg1Y2Y2N2QsJ3VuY292ZXJlZFJlZ2lvbnMnOl8weDI2ZTNjZiwnY292ZXJhZ2UnOl8weDVjMjc3N30sXzB4MzQwYmE1KTt9ZWxzZXtfMHgzNDBiYTU9YXJndW1lbnRzW18weDIyYjc1Ml07Zm9yKHZhciBfMHgxOTkwMzQgaW4gXzB4MzQwYmE1KU9iamVjdFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MmYnKV1bXzB4NmQ2NCgnMHgzJyldKF8weDM0MGJhNSxfMHgxOTkwMzQpJiYoXzB4MjhlZjE4W18weDE5OTAzNF09XzB4MzQwYmE1W18weDE5OTAzNF0pO319fSxfMHgzNDBiYTVbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDdmOCcpXT1mdW5jdGlvbihfMHgyOGVmMTgsXzB4MzQwYmE1KXtfMHgzNDBiYTVbXzB4NmQ2NCgnMHgyZjQnKV09ITB4MCx0aGlzWydfc2VuZFRlc3RSZXN1bHRzJ10odm9pZCAweDAsXzB4MzQwYmE1KTt9LF8weDM0MGJhNVtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4N2Y5JyldPWZ1bmN0aW9uKF8weDI4ZWYxOCxfMHgzNDBiYTUpe18weDM0MGJhNVtfMHg2ZDY0KCcweDJmNCcpXT0hMHgxO30sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg3ZmEnKV09ZnVuY3Rpb24oXzB4MjhlZjE4LF8weDM0MGJhNSl7dmFyIF8weDIyYjc1Mj10aGlzLF8weDNjOTJkYz1bXSxfMHg1YzI3Nzc9ZnVuY3Rpb24oXzB4MjhlZjE4KXtpZihfMHg2ZDY0KCcweDdmYicpPT09J2xsckJHJyl7dmFyIF8weDE3NzA0ZD1fMHg0ODY4NjRbXzB4NmQ2NCgnMHhhOScpXTtpZihfMHgyOGVmMThbXzB4MTc3MDRkXSlyZXR1cm4hMHgwO31lbHNle2lmKF8weDI4ZWYxOFtfMHg2ZDY0KCcweDNlNicpXT1udWxsLF8weDI4ZWYxOFsnb25lcnJvciddPW51bGwsXzB4MjhlZjE4W18weDZkNjQoJzB4N2ZjJyldPW51bGwsXzB4MjhlZjE4WydyZWFkeVN0YXRlJ10hPT1fMHgyOTAzNjlbJ0NMT1NJTkcnXXx8XzB4MjhlZjE4WydyZWFkeVN0YXRlJ10hPT1fMHgyOTAzNjlbXzB4NmQ2NCgnMHgzZTknKV0pdHJ5e2lmKF8weDZkNjQoJzB4N2ZkJyk9PT1fMHg2ZDY0KCcweDdmZCcpKXtfMHgyOGVmMThbJ2Nsb3NlJ10oKTt9ZWxzZXt2YXIgXzB4MWZjZTljPSdPbmx5XHgyMFx4MjdQcm9ceDI3XHgyMGVkaXRpb25ceDIwb2ZceDIwUXVva2thLmpzXHgyMHN1cHBvcnRzXHgyMHByb2plY3RceDIwZmlsZXNceDIwaW1wb3J0Lic7XzB4MzQwYmE1WydyZWplY3QnXShuZXcgRXJyb3IoXzB4MWZjZTljKSksdGhpc1tfMHg2ZDY0KCcweDM5ZCcpXXx8KHRoaXNbJ19lbWl0Tm90aWZpY2F0aW9uJ10oXzB4NmQ2NCgnMHgzOTUnKSxfMHgxZmNlOWMseydzdWdnZXN0UHJvRWRpdGlvbic6ITB4MH0pLHRoaXNbJ19zdWdnZXN0ZWRQcm9FZGl0aW9uRm9yUHJvamVjdEZpbGVJbXBvcnQnXT0hMHgwKTt9fWNhdGNoKF8weDE3NTNiZil7aWYoXzB4NmQ2NCgnMHg3ZmUnKT09PV8weDZkNjQoJzB4N2ZlJykpe18weDJiZmNlOShfMHg2ZDY0KCcweDNlYScpLF8weDE3NTNiZik7fWVsc2V7dmFyIF8weDQ5M2RlOTtyZXR1cm4gXzB4NWMyNzc3KHRoaXMsZnVuY3Rpb24oXzB4Mzc3NWNhKXtzd2l0Y2goXzB4Mzc3NWNhW18weDZkNjQoJzB4ZGYnKV0pe2Nhc2UgMHgwOnJldHVybiBfMHgzNzc1Y2FbJ3RyeXMnXVtfMHg2ZDY0KCcweDFjJyldKFsweDAsMHgyLCwweDNdKSxfMHgyOGVmMThbXzB4NmQ2NCgnMHgxNDgnKV0/WzB4NCxfMHgyOGVmMThbXzB4NmQ2NCgnMHgxNDgnKV1bJ2V2YWx1YXRlJ10oeydleHByZXNzaW9uJzonKCcrXzB4MTc1M2JmW18weDZkNjQoJzB4NTMnKV0oKStfMHg2ZDY0KCcweDE0OScpfSldOlsweDJdO2Nhc2UgMHgxOnJldHVybiBfMHgzNzc1Y2FbJ3NlbnQnXSgpLF8weDIyYjc1MigpLFsweDMsMHgzXTtjYXNlIDB4MjpyZXR1cm4gXzB4NDkzZGU5PV8weDM3NzVjYVsnc2VudCddKCksXzB4MmZiNTE0KCdGYWlsZWRceDIwdG9ceDIwZXZhbHVhdGVceDIwY29kZVx4MjBvblx4MjBDaHJvbWVceDIwVGFiOlx4MjAnK18weDQ5M2RlOVtfMHg2ZDY0KCcweDIzJyldKSxbMHgzLDB4M107Y2FzZSAweDM6cmV0dXJuWzB4Ml07fX0pO319fX07UHJvbWlzZVsnYWxsJ10oXzB4MzQ2ZjM4W18weDZkNjQoJzB4YTcnKV0oZnVuY3Rpb24oXzB4MzQwYmE1KXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24oXzB4MjJiNzUyKXtpZihfMHg2ZDY0KCcweDdmZicpIT09XzB4NmQ2NCgnMHg4MDAnKSl7dmFyIF8weDQ4Njg2ND0nd3M6Ly8nK18weDI4ZWYxOFtfMHg2ZDY0KCcweDgwMScpXSsnOicrXzB4MzQwYmE1LF8weDFiZWJhMj1uZXcgXzB4MjkwMzY5KF8weDQ4Njg2NCx7J29yaWdpbic6XzB4NmQ2NCgnMHg4MDInKX0pLF8weDI2ZTNjZj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KF8weDI2ZTNjZiksXzB4NWMyNzc3KF8weDFiZWJhMiksXzB4MjJiNzUyKCk7fSwweDc1MzApO18weDFiZWJhMltfMHg2ZDY0KCcweDNlNicpXT1mdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4ODAzJykhPT1fMHg2ZDY0KCcweDgwNCcpKXtfMHgxYmViYTJbXzB4NmQ2NCgnMHg3ZmMnKV09ZnVuY3Rpb24oXzB4MjhlZjE4KXt0cnl7aWYoXzB4NmQ2NCgnMHg4MDUnKSE9PV8weDZkNjQoJzB4ODA1Jykpe18weDI4ZWYxOFtfMHg2ZDY0KCcweDIzMCcpXT1fMHgzNDBiYTU7fWVsc2V7dmFyIF8weDQ4Njg2ND1KU09OW18weDZkNjQoJzB4MWRjJyldKF8weDI4ZWYxOFtfMHg2ZDY0KCcweDEzNicpXSk7XzB4NDg2ODY0Wyd0eXBlJ10mJl8weDZkNjQoJzB4ODA2Jyk9PT1fMHg0ODY4NjRbJ3R5cGUnXSYmbnVsbCE9XzB4NDg2ODY0W18weDZkNjQoJzB4NjQ0JyldP18weDNjOTJkY1tfMHg2ZDY0KCcweDFjJyldKHsnbmFtZSc6XzB4NDg2ODY0W18weDZkNjQoJzB4NjQ0JyldW18weDZkNjQoJzB4MzInKV0sJ3BhdGgnOl8weDQ4Njg2NFsncHJvamVjdCddW18weDZkNjQoJzB4NGUnKV0sJ3BvcnQnOl8weDM0MGJhNX0pOl8weDJiZmNlOSgnRXJyb3JceDIwcGFyc2luZ1x4MjBydW5uaW5nUHJvamVjdHNSZXF1ZXN0ZWRceDIwbWVzc2FnZScpO319Y2F0Y2goXzB4M2QyY2Q1KXtpZihfMHg2ZDY0KCcweDgwNycpPT09XzB4NmQ2NCgnMHg4MDcnKSl7XzB4MmJmY2U5KF8weDZkNjQoJzB4ODA4JyksXzB4M2QyY2Q1KTt9ZWxzZXt2YXIgXzB4NTA2YTc3PXRoaXNbXzB4NmQ2NCgnMHgxY2EnKV0mJnRoaXNbXzB4NmQ2NCgnMHgxY2EnKV1bXzB4NmQ2NCgnMHg0MycpXSxfMHhhMjg1YWU9XzB4MjhlZjE4fHxfMHgzNDBiYTU7XzB4YTI4NWFlJiZ0aGlzWydfdHJhY2VTdGF0ZSddJiZ0aGlzWydfdHJhY2VTdGF0ZSddW18weDZkNjQoJzB4MWNiJyldP3RoaXNbXzB4NmQ2NCgnMHgxY2MnKV09dGhpc1snX3RyYWNlU3RhdGUnXTp0aGlzW18weDZkNjQoJzB4MWNkJyldKCksZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHgxY2EnKV0sKF8weGEyODVhZXx8XzB4NTA2YTc3KSYmKGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4MWM5JyldLHRoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oJ3RyYWNlTmF2aWdhdGlvblJlc2V0JykpLHRoaXNbXzB4NmQ2NCgnMHgxZDAnKV0oITB4MSksdGhpc1sndG9nZ2xlVGVzdEZpbHRlciddKCksXzB4NTA2YTc3JiZ0aGlzWydfcHJvamVjdCddW18weDZkNjQoJzB4MWQyJyldKHsnY2F0Y2h1cCc6ITB4MH0pLHRoaXNbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDllJyldKCk7fX1jbGVhclRpbWVvdXQoXzB4MjZlM2NmKSxfMHg1YzI3NzcoXzB4MWJlYmEyKSxfMHgyMmI3NTIoKTt9O31lbHNle3JldHVybiBfMHg1YzI3NzcoKTt9fSxfMHgxYmViYTJbXzB4NmQ2NCgnMHgzZTcnKV09ZnVuY3Rpb24oXzB4MjhlZjE4KXtfMHgyYmZjZTkoJ1NvY2tldFx4MjBlcnJvclx4MjBydW5uaW5nUHJvamVjdHNSZXF1ZXN0ZWQnLF8weDI4ZWYxOCksY2xlYXJUaW1lb3V0KF8weDI2ZTNjZiksXzB4NWMyNzc3KF8weDFiZWJhMiksXzB4MjJiNzUyKCk7fTt9ZWxzZXtfMHgxNjk0MWUoXzB4NmQ2NCgnMHg4MDknKSksXzB4MjJiNzUyW18weDZkNjQoJzB4M2E1JyldPV8weDIyYjc1MltfMHg2ZDY0KCcweDNhNScpXVtfMHg2ZDY0KCcweDI5YycpXShmdW5jdGlvbihfMHgxNTVlNjgpe3JldHVybiBfMHgxNTVlNjghPV8weDI4ZWYxODt9KSwhXzB4MjJiNzUyW18weDZkNjQoJzB4M2E1JyldWydsZW5ndGgnXSYmXzB4MjJiNzUyWydfbW9kZWwnXVtfMHg2ZDY0KCcweDU5YicpXShfMHg2ZDY0KCcweDIzJyksXzB4M2M5MmRjKTt9fSk7fSkpW18weDZkNjQoJzB4N2UnKV0oZnVuY3Rpb24oKXtfMHgyMmI3NTJbXzB4NmQ2NCgnMHgzYTYnKV0oeyd0eXBlJzpfMHg2ZDY0KCcweDgwYScpLCdwcm9qZWN0cyc6XzB4M2M5MmRjfSxfMHgzNDBiYTUpO30pO30sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg4MGInKV09ZuKAi3VuY3Rpb24oXzB4MjhlZjE4LF8weDM0MGJhNSl7dmFyIF8weDIyYjc1MixfMHgzYzkyZGMsXzB4NDg2ODY0LF8weDFiZWJhMixfMHgyNmUzY2Y9dGhpc1snX21vZGVsJ11bXzB4NmQ2NCgnMHgyOWMnKV1bXzB4NmQ2NCgnMHg0MycpXSxfMHg1Y2Y2N2Q9XzB4MjZlM2NmWyd0cyddLF8weDJmYjUxND1fMHgyOGVmMThbXzB4NmQ2NCgnMHhhMycpXTtpZihfMHgyZmI1MTQmJl8weDJmYjUxNFtfMHg2ZDY0KCcweDhlJyldKXtpZihfMHg2ZDY0KCcweDgwYycpPT09XzB4NmQ2NCgnMHg4MGQnKSl7dGhpc1tfMHg2ZDY0KCcweDE2NycpXT0hMHgwLHRoaXNbXzB4NmQ2NCgnMHg1MGMnKV0mJih0aGlzWydfd2F0Y2hlciddWydjbG9zZSddKCksZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHg2NScpXSk7fWVsc2V7dmFyIF8weDM4OWVjOD1mdW5jdGlvbihfMHgyOGVmMTgpe2lmKF8weDZkNjQoJzB4ODBlJyk9PT1fMHg2ZDY0KCcweDgwZScpKXt2YXIgXzB4MzQwYmE1LF8weDIyYjc1MixfMHgzYzkyZGMsXzB4NDg2ODY0LF8weDFiZWJhMj1fMHgyOTAzNjlbJ19tb2RlbCddW18weDZkNjQoJzB4MmFjJyldKF8weDI4ZWYxOFsweDBdKTtpZighXzB4MWJlYmEyfHwhXzB4MWJlYmEyW18weDZkNjQoJzB4NGU1JyldKCkpcmV0dXJuIF8weDZkNjQoJzB4ODBmJyk7dmFyIF8weDVjZjY3ZD1fMHgxYmViYTJbJ293blRlc3RzJ10oKTtpZigweDE9PT1fMHgyOGVmMThbJ2xlbmd0aCddKXt2YXIgXzB4MmZiNTE0PV8weDI5MDM2OVsnX3Rlc3RGaWx0ZXJTdGF0ZSddW18weDZkNjQoJzB4NDdlJyldW18weDZkNjQoJzB4ODEwJyldKF8weDFiZWJhMltfMHg2ZDY0KCcweDRlJyldKCkpO3RyeXtpZignTlFxQkInPT09XzB4NmQ2NCgnMHg4MTEnKSl7Zm9yKHZhciBfMHgzODllYzg9XzB4NWMyNzc3KF8weDVjZjY3ZCksXzB4NTQ3ZTBhPV8weDM4OWVjOFtfMHg2ZDY0KCcweGQ1JyldKCk7IV8weDU0N2UwYVsnZG9uZSddO18weDU0N2UwYT1fMHgzODllYzhbXzB4NmQ2NCgnMHhkNScpXSgpKXtpZihfMHg2ZDY0KCcweDgxMicpIT09XzB4NmQ2NCgnMHg4MTInKSl7dmFyIF8weDRmOWM1YT14W18weDI4ZWYxOFtfMHgxYmViYTJdXSxfMHgzMjQxODU9MHgyMCZfMHg0ZjljNWE7aWYoXzB4NGY5YzVhJj0weDFmLF8weDQ4Njg2NCs9XzB4NGY5YzVhPDxfMHg1YzI3NzcsXzB4MzI0MTg1KV8weDVjMjc3Nys9MHg1O2Vsc2V7dmFyIF8weDdiNDIwMD0weDEmXzB4NDg2ODY0O18weDQ4Njg2ND4+Pj0weDE7dmFyIF8weDJhYzcyNT1fMHg3YjQyMDA/MHgwPT09XzB4NDg2ODY0Py0weDgwMDAwMDAwOi1fMHg0ODY4NjQ6XzB4NDg2ODY0O18weDIyYjc1Mj49MHgwPyhfMHgzYzkyZGNbXzB4MjJiNzUyXT17J2NvbHVtbic6XzB4MmFjNzI1fSxfMHgyMmI3NTI9dm9pZCAweDApOl8weDIyYjc1Mj1fMHgyYWM3MjUsXzB4NDg2ODY0PV8weDVjMjc3Nz0weDA7fX1lbHNle3ZhciBfMHgxOGJlNWU9XzB4NTQ3ZTBhW18weDZkNjQoJzB4YTknKV07XzB4MjZlM2NmW18weDZkNjQoJzB4NzY4JyldKF8weDE4YmU1ZSksXzB4MmZiNTE0fHxfMHgyNmUzY2ZbXzB4NmQ2NCgnMHgzM2MnKV0oXzB4MThiZTVlKTt9fX1lbHNle3RyeXtfMHgyMmI3NTJbJ2lkJ10/XzB4MzQwYmE1W18weDZkNjQoJzB4MWEzJyldKF8weDIyYjc1Mik6XzB4NmQ2NCgnMHgxYTQnKT09PV8weDIyYjc1MltfMHg2ZDY0KCcweDMwJyldP18weDI4ZWYxOChfMHgzNDBiYTVbJ19ob3N0J10pOl8weDZkNjQoJzB4OGQnKT09PV8weDIyYjc1MltfMHg2ZDY0KCcweDMwJyldJiZfMHgzNDBiYTVbJ19oYW5kbGVIb3N0RXJyb3InXShfMHgyMmI3NTJbXzB4NmQ2NCgnMHg4ZCcpXSk7fWNhdGNoKF8weGM0YWE2Myl7XzB4MzQwYmE1WydfaGFuZGxlSG9zdEVycm9yJ10oXzB4YzRhYTYzKTt9fX1jYXRjaChfMHg1N2EzZDEpe18weDM0MGJhNT17J2Vycm9yJzpfMHg1N2EzZDF9O31maW5hbGx5e3RyeXtpZihfMHg2ZDY0KCcweDgxMycpPT09J0l5dHVjJyl7XzB4NTQ3ZTBhJiYhXzB4NTQ3ZTBhW18weDZkNjQoJzB4ZDMnKV0mJihfMHgyMmI3NTI9XzB4Mzg5ZWM4W18weDZkNjQoJzB4ZDAnKV0pJiZfMHgyMmI3NTJbXzB4NmQ2NCgnMHgzJyldKF8weDM4OWVjOCk7fWVsc2V7dmFyIF8weDNkZWFkZj10aGlzW18weDZkNjQoJzB4NWE3JyldWyd2YWx1ZXMnXSgpW18weDZkNjQoJzB4ZDUnKV0oKVsndmFsdWUnXTtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDVhNycpXVsnZGVsZXRlJ10oXzB4M2RlYWRmKSxfMHgzZGVhZGY7fX1maW5hbGx5e2lmKF8weDM0MGJhNSl0aHJvdyBfMHgzNDBiYTVbXzB4NmQ2NCgnMHg4ZCcpXTt9fV8weDJmYjUxND9kZWxldGUgXzB4MjkwMzY5W18weDZkNjQoJzB4ZDgnKV1bXzB4NmQ2NCgnMHg0N2UnKV1bXzB4NmQ2NCgnMHg4MTQnKV0oXzB4MWJlYmEyW18weDZkNjQoJzB4NGUnKV0oKSk6XzB4MjkwMzY5W18weDZkNjQoJzB4ZDgnKV1bXzB4NmQ2NCgnMHg0N2UnKV1bXzB4NmQ2NCgnMHg4MTUnKV0oXzB4MWJlYmEyWydwYXRoJ10oKSxfMHg1Y2Y2N2QpO31lbHNle2lmKCdPUFlKQychPT1fMHg2ZDY0KCcweDgxNicpKXt2YXIgXzB4MmQ0ZmQwPV8weDI4ZWYxOFtfMHg2ZDY0KCcweDFiZicpXSgweDEpLF8weDJhYzlmPV8weDFiZWJhMltfMHg2ZDY0KCcweDEyZicpXSgpKydfJytfMHgyZDRmZDBbXzB4NmQ2NCgnMHg0YycpXShfMHhmZDNmMjJbXzB4NmQ2NCgnMHg2ZicpXSksXzB4MThiZTVlPV8weDVjZjY3ZFtfMHg2ZDY0KCcweDE1MScpXShmdW5jdGlvbihfMHgyOGVmMTgpe3JldHVybiBfMHgyOGVmMThbJ2tleSddKCk9PT1fMHgyYWM5Zjt9KTtpZihfMHgxOGJlNeKAi2UpXzB4MjZlM2NmW18weDZkNjQoJzB4MzNjJyldKF8weDE4YmU1ZSksXzB4MjZlM2NmW18weDZkNjQoJzB4M2Q0JyldKF8weDJhYzlmKT9fMHgyOTAzNjlbXzB4NmQ2NCgnMHhkOCcpXVtfMHg2ZDY0KCcweDQ3ZScpXVsnYWRkVGVzdCddKF8weDE4YmU1ZSk6XzB4MjkwMzY5W18weDZkNjQoJzB4ZDgnKV1bXzB4NmQ2NCgnMHg0N2UnKV1bXzB4NmQ2NCgnMHg4MTcnKV0oXzB4MThiZTVlKTtlbHNle3ZhciBfMHgyZmI1MTQ9XzB4MjkwMzY5W18weDZkNjQoJzB4ZDgnKV1bXzB4NmQ2NCgnMHg0N2UnKV1bXzB4NmQ2NCgnMHg4MTgnKV0oXzB4MWJlYmEyW18weDZkNjQoJzB4NGUnKV0oKSxfMHgyZDRmZDApO3RyeXtmb3IodmFyIF8weDE0ZmIxNT1fMHg1YzI3NzcoXzB4NWNmNjdkKSxfMHgxNjk0MWU9XzB4MTRmYjE1W18weDZkNjQoJzB4ZDUnKV0oKTshXzB4MTY5NDFlW18weDZkNjQoJzB4ZDMnKV07XzB4MTY5NDFlPV8weDE0ZmIxNVsnbmV4dCddKCkpe2lmKF8weDZkNjQoJzB4ODE5JykhPT1fMHg2ZDY0KCcweDgxYScpKXt2YXIgXzB4MmJmY2U5PV8weDE2OTQxZVsndmFsdWUnXTtfMHgyYmZjZTlbXzB4NmQ2NCgnMHgxMmYnKV0oKVtfMHg2ZDY0KCcweDIyYScpXShfMHgyYWM5ZikmJihfMHgyNmUzY2ZbXzB4NmQ2NCgnMHg3NjgnKV0oXzB4MmJmY2U5KSxfMHgyZmI1MTR8fF8weDI2ZTNjZlsndG9nZ2xlJ10oXzB4MmJmY2U5KSk7fWVsc2V7aWYoXzB4MjhlZjE4Wydub3RDb3ZlcmVkQnknXShfMHgyMmI3NTIpLCFfMHgyOGVmMThbXzB4NmQ2NCgnMHg0YTknKV0oKSl7dmFyIF8weDMwMGNmND1fMHgyOGVmMThbXzB4NmQ2NCgnMHg2NTQnKV0oKTtfMHg1YzI3NzdbXzB4MzAwY2Y0W18weDZkNjQoJzB4MTJmJyldKCldPV8weDMwMGNmNDt9fX19Y2F0Y2goXzB4NDRmZTNiKXtfMHgzYzkyZGM9eydlcnJvcic6XzB4NDRmZTNifTt9ZmluYWxseXtpZihfMHg2ZDY0KCcweDgxYicpIT09XzB4NmQ2NCgnMHg4MWMnKSl7dHJ5e18weDE2OTQxZSYmIV8weDE2OTQxZVtfMHg2ZDY0KCcweGQzJyldJiYoXzB4NDg2ODY0PV8weDE0ZmIxNVsncmV0dXJuJ10pJiZfMHg0ODY4NjRbXzB4NmQ2NCgnMHgzJyldKF8weDE0ZmIxNSk7fWZpbmFsbHl7aWYoXzB4M2M5MmRjKXRocm93IF8weDNjOTJkY1tfMHg2ZDY0KCcweDhkJyldO319ZWxzZXtfMHgzNDBiYTU9SlNPTlsncGFyc2UnXShfMHgzNDBiYTVbXzB4NmQ2NCgnMHg1MycpXShfMHg2ZDY0KCcweDc0MicpKSksXzB4MzQwYmE1W18weDZkNjQoJzB4NzQ3JyldJiZfMHgzNDBiYTVbXzB4NmQ2NCgnMHgyN2MnKV0mJl8weDM0MGJhNVtfMHg2ZDY0KCcweDc0MycpXSYmIV8weDI4ZWYxOFtfMHg2ZDY0KCcweDc0NCcpXSgpW18weDZkNjQoJzB4MTUxJyldKGZ1bmN0aW9uKF8weDE2N2M2Nil7cmV0dXJuIF8weDE2N2M2Nj09PV8weDM0MGJhNVtfMHg2ZDY0KCcweDI3YycpXTt9KSYmXzB4MzQwYmE1Wydzb3VyY2VJZCddIT09XzB4NWNmNjdkJiZfMHgyZDRmZDBbXzB4NmQ2NCgnMHgzYScpXShfMHgyOGVmMThbJ19saXN0ZW5lcnMnXVtfMHgzNDBiYTVbXzB4NmQ2NCgnMHg3NDcnKV1dLGZ1bmN0aW9uKF8weDE2ODRmOSl7XzB4MTY4NGY5W18weDZkNjQoJzB4ZDQnKV0obnVsbCxbXzB4MzQwYmE1W18weDZkNjQoJzB4MTM2JyldLF8weDM0MGJhNVtfMHg2ZDY0KCcweDI3YycpXV0pO30pO319XzB4MmZiNTE0P2RlbGV0ZSBfMHgyOTAzNjlbXzB4NmQ2NCgnMHhkOCcpXVtfMHg2ZDY0KCcweDQ3ZScpXVtfMHg2ZDY0KCcweDgxZCcpXShfMHgxYmViYTJbJ3BhdGgnXSgpLF8weDJkNGZkMCk6XzB4MjkwMzY5W18weDZkNjQoJzB4ZDgnKV1bXzB4NmQ2NCgnMHg0N2UnKV1bXzB4NmQ2NCgnMHg4MWUnKV0oXzB4MWJlYmEyW18weDZkNjQoJzB4NGUnKV0oKSxfMHgyZDRmZDAsXzB4NWNmNjdkKTt9fWVsc2V7dmFyIF8weDVmMjdjMCxfMHg4ZmQxMWI9bmV3IF8weGUzYzA5ZCh0aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MjljJyldLGZ1bmN0aW9uKF8weDg2NmMxNSl7fSksXzB4NGJkYTk1PV8weDIyYjc1MltfMHg2ZDY0KCcweDFmOScpXVsnZmlsZUJ5UGF0aCddKF8weDI4ZWYxOFtfMHg2ZDY0KCcweDRlJyldKSxfMHgyMWM2MTM9W10sXzB4NTEwODNhPVtdO18weDRiZGE5NSYmXzB4NGJkYTk1W18weDZkNjQoJzB4NzgyJyldKCkmJihfMHg4ZmQxMWJbJ3VwZGF0ZSddKF8weDJkNGZkMFtfMHg2ZDY0KCcweDNlJyldKF8weDRiZGE5NVtfMHg2ZDY0KCcweDY3MycpXSgpKSwhMHgxLCEweDApLF8weDUxMDgzYT1fMHg4ZmQxMWJbXzB4NmQ2NCgnMHgyYWQnKV0odGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDI5YycpXVsndGVzdCddW18weDZkNjQoJzB4MjlkJyldKVtfMHg2ZDY0KCcweDdmNicpXXx8W10sXzB4MjFjNjEzPV8weDIyYjc1MltfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDMwYicpXSh7J2ZpbGUnOl8weDI4ZWYxOFtfMHg2ZDY0KCcweDRlJyldfSl8fFtdLF8weDVmMjdjMD1fMHgyMmI3NTJbXzB4NmQ2NCgnMHg3NzMnKV0oXzB4NGJkYTk1KSksXzB4MjJiNzUyWydfc2VuZCddKHsndHlwZSc6XzB4NmQ2NCgnMHg3ZjcnKSwnY29ycmVsYXRpb25JZCc6XzB4MjhlZjE4W18weDZkNjQoJzB4ODFmJyldLCdjb2RlJzpfMHgzYzkyZGNbXzB4NmQ2NCgnMHg1MycpXSgpLCdsaW5lcyc6XzB4NTEwODNhLCd1bmNvdmVyZWRSZWdpb25zJzpfMHgyMWM2MTMsJ2NvdmVyYWdlJzpfMHg1ZjI3YzB9LF8weDM0MGJhNSk7fX19ZWxzZXtyZXR1cm4gXzB4MzQwYmE1WydfY29tcGFjdExpbmUnXShfMHgyMmI3NTIsXzB4MjhlZjE4KTt9fSxfMHgyOTAzNjk9dGhpczt0cnl7Zm9yKHZhciBfMHg1NDdlMGE9XzB4NWMyNzc3KF8weDJmYjUxNCksXzB4MThiZTVlPV8weDU0N2UwYVtfMHg2ZDY0KCcweGQ1JyldKCk7IV8weDE4YmU1ZVtfMHg2ZDY0KCcweGQzJyldO18weDE4YmU1ZT1fMHg1NDdlMGFbJ25leHQnXSgpKXt2YXIgXzB4ZTNjMDlkPV8weDE4YmU1ZVsndmFsdWUnXTtfMHgzODllYzgoXzB4ZTNjMDlkKTt9fWNhdGNoKF8weGY5MWNjYil7XzB4MjJiNzUyPXsnZXJyb3InOl8weGY5MWNjYn07fWZpbmFsbHl7dHJ5e2lmKCduaWFrQychPT0nbmlha0MnKXtyZXR1cm4gXzB4MjhlZjE4JiZfMHgyMmI3NTI+PV8weDI4ZWYxOFtfMHg2ZDY0KCcweDhlJyldJiYoXzB4MjhlZjE4PXZvaWQgMHgwKSx7J3ZhbHVlJzpfMHgyOGVmMTgmJl8weDI4ZWYxOFtfMHgyMmI3NTIrK10sJ2RvbmUnOiFfMHgyOGVmMTh9O31lbHNle18weDE4YmU1ZSYmIV8weDE4YmU1ZVtfMHg2ZDY0KCcweGQzJyldJiYoXzB4M2M5MmRjPV8weDU0N2UwYVtfMHg2ZDY0KCcweGQwJyldKSYmXzB4M2M5MmRjW18weDZkNjQoJzB4MycpXShfMHg1NDdlMGEpO319ZmluYWxseXtpZihfMHgyMmI3NTIpdGhyb3cgXzB4MjJiNzUyW18weDZkNjQoJzB4OGQnKV07fX1pZihfMHgyNmUzY2ZbJ3RzJ10hPT1fMHg1Y2Y2N2Qpe3ZhciBfMHgxNGZiMTU9T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCk7dHJ5e2Zvcih2YXIgXzB4MTY5NDFlPV8weDVjMjc3Nyh0aGlzWydfbW9kZWwnXVtfMHg2ZDY0KCcweDJhYicpXSgpKSxfMHgyYmZjZTk9XzB4MTY5NDFlW18weDZkNjQoJzB4ZDUnKV0oKTshXzB4MmJmY2U5W18weDZkNjQoJzB4ZDMnKV07XzB4MmJmY2U5PV8weDE2OTQxZVtfMHg2ZDY0KCcweGQ1JyldKCkpe3ZhciBfMHgzNDZmMzg9XzB4MmJmY2U5Wyd2YWx1ZSddO18weDE0ZmIxNVtfMHgzNDZmMzhbXzB4NmQ2NCgnMHg0ZScpXV09dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDJhYycpXShfMHgzNDZmMzhbXzB4NmQ2NCgnMHg0ZScpXSlbJ2FsbExpbmVzJ10oXzB4MjZlM2NmWydhY3RpdmUnXSk7fX1jYXRjaChfMHgyZmNlNGYpe18weDQ4Njg2ND17J2Vycm9yJzpfMHgyZmNlNGZ9O31maW5hbGx5e3RyeXtfMHgyYmZjZTkmJiFfMHgyYmZjZTlbJ2RvbmUnXSYmKF8weDFiZWJhMj1fMHgxNjk0MWVbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weDFiZWJhMltfMHg2ZDY0KCcweDMnKV0oXzB4MTY5NDFlKTt9ZmluYWxseXtpZihfMHg0ODY4NjQpdGhyb3cgXzB4NDg2ODY0W18weDZkNjQoJzB4OGQnKV07fX1fW18weDZkNjQoJzB4MzJkJyldKF8weDE0ZmIxNSl8fHRoaXNbJ19tb2RlbCddW18weDZkNjQoJzB4MTZh4oCLJyldKF8weDZkNjQoJzB4MjMnKSx7J3R5cGUnOl8weDZkNjQoJzB4M2IwJyksJ2RvY3VtZW50cyc6XzB4MTRmYjE1fSksdGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDE2YScpXShfMHg2ZDY0KCcweDIzJykseyd0eXBlJzpfMHg2ZDY0KCcweDY0ZicpLCdsb2NhbCc6ITB4MH0pO319fX0sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg4MjAnKV09ZnVuY3Rpb24oXzB4MjhlZjE4LF8weDM0MGJhNSl7dGhpc1tfMHg2ZDY0KCcweGQ4JyldW18weDZkNjQoJzB4NDdlJyldWydjbGVhciddKCksdGhpc1snX21vZGVsJ11bXzB4NmQ2NCgnMHgxZDEnKV0oKTt9LF8weDM0MGJhNVsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHg4MjEnKV09ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDgyMicpIT09XzB4NmQ2NCgnMHg4MjInKSl7dmFyIF8weDU2OTlhZD1fMHgyOGVmMThbXzB4NmQ2NCgnMHgyMWInKV07aWYoXzB4NTY5OWFkW18weDZkNjQoJzB4MjA2JyldKF8weDI4ZWYxOFsnbXRpbWUnXVtfMHg2ZDY0KCcweDIxYycpXSgpKzB4MWUpLG5ldyBfMHgzYzkyZGMoKT5fMHg1Njk5YWQpcmV0dXJuIFFbXzB4NmQ2NCgnMHgxYjYnKV0oeydtZXNzYWdlJzpfMHg2ZDY0KCcweDgyMycpW18weDZkNjQoJzB4ZjUnKV0oJycpW18weDZkNjQoJzB4MjBjJyldKClbXzB4NmQ2NCgnMHg0YycpXSgnJyksJ25vRGV0YWlscyc6ITB4MH0pO31lbHNle3RoaXNbXzB4NmQ2NCgnMHgzYTYnKV0oeyd0eXBlJzpfMHg2ZDY0KCcweDgyNCcpfSk7fX0sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg4MjUnKV09ZnVuY3Rpb24oXzB4MjhlZjE4KXtpZihfMHg2ZDY0KCcweDgyNicpIT09J3R5UUx2Jyl7dmFyIF8weDM0MGJhNT10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4NDc4JyldKCk7dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDI5YycpXVtfMHg2ZDY0KCcweDQzJyldW18weDZkNjQoJzB4MjlkJyldJiYoXzB4MzQwYmE1W18weDZkNjQoJzB4M2NkJyldPXRoaXNbXzB4NmQ2NCgnMHg0N2EnKV0oKSksdGhpc1snX3NlbmQnXShfW18weDZkNjQoJzB4MzQnKV0oeyd0eXBlJzondWk6c3VtbWFyeScsJ2Vycm9yJzpfMHgyOGVmMThbXzB4NmQ2NCgnMHgyMycpXXx8Jyd9LF8weDM0MGJhNSkpO31lbHNle3ZhciBfMHg3YzkwN2Y9XzB4MjhlZjE4W18weDZkNjQoJzB4MjU0JyldLF8weDRjMmM3NT17J3R5cGUnOl8weDZkNjQoJzB4OGQnKSwnZGF0YSc6e30sJ2lkJzpfMHgyOGVmMThbJ2lkJ119LF8weDM1YzZmYj10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MzI1JyldKF8weDdjOTA3Zik7XzB4MzVjNmZiP18weDRjMmM3NVsnZGF0YSddW18weDZkNjQoJzB4OGQnKV09XzB4MzVjNmZiOl8weDZkNjQoJzB4NjhlJyk9PT1fMHg3YzkwN2ZbJ3R5cGUnXSYmdGhpc1tfMHg2ZDY0KCcweDFlNCcpXShfMHg2ZDY0KCcweDMwYycpLF8weDZkNjQoJzB4MzI2JykpLHRoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oXzB4NGMyYzc1KTt9fSxfMHgzNDBiYTVbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDgyNycpXT1mdW5jdGlvbihfMHgyOGVmMTgpe3ZhciBfMHgzNDBiYTU9dGhpcztpZighXzB4MjhlZjE4W18weDZkNjQoJzB4MzdlJyldKXt2YXIgXzB4MjJiNzUyPXt9O19bXzB4NmQ2NCgnMHgzYScpXSh0aGlzW18weDZkNjQoJzB4N2VhJyldLGZ1bmN0aW9uKF8weDI4ZWYxOCl7dmFyIF8weDNjOTJkYz1fMHgzNDBiYTVbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgyZScpXShfMHgyOGVmMThbJ2lkJ10pO2lmKF8weDNjOTJkYyYmXzB4M2M5MmRjWydoYXNSZXBvcnRhYmxlQ292ZXJhZ2VPclRlc3RGaWxlJ10oKSl7XzB4M2M5MmRjJiZfMHgzYzkyZGNbXzB4NmQ2NCgnMHg3YTcnKV0oKSxfMHgzNDBiYTVbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHg3MTUnKV0oXzB4M2M5MmRjKTt2YXIgXzB4NWMyNzc3PV8weDM0MGJhNVtfMHg2ZDY0KCcweDc3MycpXShfMHgzYzkyZGMpO18weDVjMjc3NyYmXzB4NWMyNzc3W18weDZkNjQoJzB4Nzc0JyldJiYoZGVsZXRlIF8weDVjMjc3N1tfMHg2ZDY0KCcweDc3NCcpXSxfMHgyMmI3NTJbXzB4M2M5MmRjW18weDZkNjQoJzB4MTJmJyldKCldPV8weDVjMjc3Nyk7fX0pO3ZhciBfMHgzYzkyZGM9dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDQ3OCcpXSgpO19bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4MjJiNzUyKXx8KHRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bJ3VwZGF0ZVRvdGFsQ292ZXJhZ2UnXSgpLHRoaXNbXzB4NmQ2NCgnMHgzYTYnKV0oeyd0eXBlJzpfMHg2ZDY0KCcweDgyOCcpLCdjaGFuZ2VzJzpfMHgyMmI3NTJ9KSksdGhpc1snX21vZGVsJ11bJ2ZpbHRlciddW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHgyOWQnKV0/XzB4M2M5MmRjWydjb3ZlcmFnZSddPXRoaXNbJ19jcmVhdGVUZXN0RmlsdGVyVG90YWxDb3ZlcmFnZSddKCk6XzB4M2M5MmRjPXRoaXNbJ19tb2RlbCddWydzdW1tYXJ5J10oKSx0aGlzW18weDZkNjQoJzB4M2E2JyldKF9bXzB4NmQ2NCgnMHgzNCcpXSh7J3R5cGUnOl8weDZkNjQoJzB4NDdiJyl9LF8weDNjOTJkYykpO310aGlzW18weDZkNjQoJzB4N2VhJyldPXt9O30sXzB4MzQwYmE1Wydwcm90b3R5cGUnXVsnbW9kZWw6dGVzdEZpbGVEZWxldGVkJ109ZnVuY3Rpb24oXzB4MjhlZjE4KXtpZihfMHg2ZDY0KCcweDgyOScpPT09XzB4NmQ2NCgnMHg4MjknKSl7dmFyIF8weDM0MGJhNT10aGlzO19bXzB4NmQ2NCgnMHgzYScpXSh0aGlzW18weDZkNjQoJzB4M2E1JyldLGZ1bmN0aW9uKF8weDIyYjc1Mil7XzB4MjJiNzUyW18weDZkNjQoJzB4MmY0JyldJiZfMHgzNDBiYTVbXzB4NmQ2NCgnMHgzYTYnKV0oeyd0eXBlJzondWk6dGVzdHM6c29tZVJlc3VsdHNVcGRhdGVkJywnZmlsZXMnOlt7J3BhdGgnOl8weDI4ZWYxOFtfMHg2ZDY0KCcweDE1OCcpXVtfMHg2ZDY0KCcweDRlJyldLCdhY3Rpb24nOidkZWxldGVkJ31dfSxfMHgyMmI3NTIpO30pO31lbHNle18weDVjZjY3ZChfMHgzYzkyZGNbXzB4NmQ2NCgnMHhjZicpXShfMHgyOGVmMTgpKTt9fSxfMHgzNDBiYTVbXzB4NmQ2NCgnMHg4MScpXVsnbW9kZWw6ZmlsZUFkZGVkJ109ZnVuY3Rpb24oXzB4MjhlZjE4KXt0aGlzW18weDZkNjQoJzB4Nzc1JyldKF8weDI4ZWYxOFtfMHg2ZDY0KCcweDE1OCcpXVtfMHg2ZDY0KCcweDRlJyldKSYmKHRoaXNbJ19maWxlc0NoYW5nZWRPckFkZGVkUHJpb3JUb0NvbXBsZXRlZE9yUmVxdWV1ZWRUZXN0UnVuJ11bXzB4MjhlZjE4WydmaWxlJ11bJ2lkJ11dPV8weDI4ZWYxOFtfMHg2ZDY0KCcweDE1OCcpXSx0aGlzW18weDZkNjQoJzB4M2E2JyldKHsndHlwZSc6XzB4NmQ2NCgnMHg4MmEnKSwnZmlsZXMnOlt7J2FjdGlvbic6J2FkZGVkJywncGF0aCc6XzB4MjhlZjE4W18weDZkNjQoJzB4MTU4JyldW18weDZkNjQoJzB4NGUnKV0sJ2lkJzpfMHgyOGVmMThbJ2ZpbGUnXVsnaWQnXSwndGVzdCc6XzB4MjhlZjE4WydmaWxlJ11bJ3Rlc3QnXXx8dm9pZCAweDB9XX0pKTt9LF8weDM0MGJhNVsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHg4MmInKV09ZnVuY3Rpb24oXzB4MjhlZjE4KXt0aGlzWydfaXNGaWxlV2l0aENvdmVyYWdlT3JUZXN0J10oXzB4MjhlZjE4W18weDZkNjQoJzB4MTU4JyldW18weDZkNjQoJzB4NGUnKV0pJiYodGhpc1tfMHg2ZDY0KCcweDdlYScpXVtfMHgyOGVmMThbXzB4NmQ2NCgnMHgxNTgnKV1bJ2lkJ11dPV8weDI4ZWYxOFtfMHg2ZDY0KCcweDE1OCcpXSx0aGlzW18weDZkNjQoJzB4M2E2JyldKHsndHlwZSc6XzB4NmQ2NCgnMHg4MmEnKSwnZmlsZXMnOlt7J2FjdGlvbic6XzB4NmQ2NCgnMHgzNmMnKSwncGF0aCc6XzB4MjhlZjE4W18weDZkNjQoJzB4MTU4JyldW18weDZkNjQoJzB4NGUnKV0sJ2lkJzpfMHgyOGVmMThbJ2ZpbGUnXVsnaWQnXX1dfSkpO30sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg4MmMnKV09ZnVuY3Rpb24oXzB4MjhlZjE4KXtpZih0aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MjljJyldW18weDZkNjQoJzB4NDMnKV1bXzB4NmQ2NCgnMHgyOWQnKV0pe3ZhciBfMHgzNDBiYTU9XzB4MjhlZjE4W18weDZkNjQoJzB4MTU4JyldWydpZCddLF8weDIyYjc1Mj10aGlzW18weDZkNjQoJzB4ZDgnKV1bXzB4NmQ2NCgnMHgzYTInKV1bXzB4MzQwYmE1XTtfMHgyMmI3NTImJih0aGlzW18weDZkNjQoJzB4ZDgnKV1bXzB4NmQ2NCgnMHgyNmEnKV0tPV8weDIyYjc1MiksZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHhkOCcpXVtfMHg2ZDY0KCcweDNhMicpXVtfMHgzNDBiYTVdLHRoaXNbXzB4NmQ2NCgnMHg0NzknKV0oXzB4MjhlZjE4WydhbGxBZmZlY3RlZEZpbGVzJ10sZnVuY3Rpb24oXzB4MjhlZjE4KXtpZihfMHg2ZDY0KCcweDgyZCcpPT09XzB4NmQ2NCgnMHg4MmQnKSl7cmV0dXJuIF8weDI4ZWYxODt9ZWxzZXtyZXR1cm4gXzB4MjhlZjE4O319KTt9dGhpc1tfMHg2ZDY0KCcweDNhNicpXSh7J3R5cGUnOl8weDZkNjQoJzB4ODJhJyksJ2ZpbGVzJzpbeydhY3Rpb24nOl8weDZkNjQoJzB4MzZkJyksJ3BhdGgnOl8weDI4ZWYxOFtfMHg2ZDY0KCcweDE1OCcpXVtfMHg2ZDY0KCcweDRlJyldLCdpZCc6XzB4MjhlZjE4W18weDZkNjQoJzB4MTU4JyldWydpZCddfV19KSxfW18weDZkNjQoJzB4MzJkJyldKF8weDI4ZWYxOFtfMHg2ZDY0KCcweDgyZScpXSl8fHRoaXNbXzB4NmQ2NCgnMHg4MmYnKV0oXzB4MjhlZjE4WydhbGxBZmZlY3RlZEZpbGVzJ10sZnVuY3Rpb24oXzB4MjhlZjE4KXtpZignWXNHenonIT09XzB4NmQ2NCgnMHg4MzAnKSl7cmV0dXJuIF8weDI4ZWYxODt9ZWxzZXtmb3IodmFyIF8weDFlZjg5NT1bXSxfMHg1MWJjMjM9MHgwO18weDUxYmMyMzxhcmd1bWVudHNbXzB4NmQ2NCgnMHg4ZScpXTtfMHg1MWJjMjMrKylfMHgxZWY4OTU9XzB4MWVmODk1Wydjb25jYXQnXShfMHgzYzkyZGMoYXJndW1lbnRzW18weDUxYmMyM10pKTtyZXR1cm4gXzB4MWVmODk1O319KTt9LF8weDM0MGJhNVsncHJvdG90eXBlJ11bJ21vZGVsOnRlc3RzRXhlY3V0ZWQnXT1mdW5jdGlvbihfMHgyOGVmMTgpe2lmKCdMTmZFYSchPT1fMHg2ZDY0KCcweDgzMScpKXt0aGlzW18weDZkNjQoJzB4N2VhJyldPXt9O3ZhciBfMHgzNDBiYTU9dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDQ3OCcpXSgpO3RoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgyOWMnKV1bXzB4NmQ2NCgnMHg0MycpXVtfMHg2ZDY0KCcweDI5ZCcpXSYmKHRoaXNbXzB4NmQ2NCgnMHg0NzknKV0oXzB4MjhlZjE4WydhbGxBZmZlY3RlZEZpbGVzJ10sZnVuY3Rpb24oXzB4MjhlZjE4KXtpZigndGx2S0cnIT09XzB4NmQ2NCgnMHg4MzInKSl7cmV0dXJuIF8weDI4ZWYxODt9ZWxzZXt2YXIgXzB4MTYxMjM2PUpTT05bXzB4NmQ2NCgnMHgxZGMnKV0odGhpc1tfMHg2ZDY0KCcweDI2ZScpXSh0aGlzW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHgzNDcnKV0pKTtfMHg1YzI3NzdbXzB4NmQ2NCgnMHgzNDgnKV09eydkZXBlbmRlbmNpZXMnOl8weDE2MTIzNltfMHg2ZDY0KCcweDM0OScpXSwnZGV2RGVwZW5kZW5jaWVzJzpfMHgxNjEyMzZbXzB4NmQ2NCgnMHgzNGEnKV19O319KSxfMHgzNDBiYTVbJ2NvdmVyYWdlJ109dGhpc1snX2NyZWF0ZVRlc3RGaWx0ZXJUb3RhbENvdmVyYWdlJ10oKSksdGhpc1snX3NlbmQnXShfWydleHRlbmQnXSh7J3R5cGUnOid1aTpzdW1tYXJ5J30sXzB4MzQwYmE1KSk7dmFyIF8weDIyYjc1Mj10aGlzO19bJ2VhY2gnXSh0aGlzWydfY29ubmVjdGlvbnMnXSxmdW5jdGlvbihfMHgzNDBiYTUpe18weDM0MGJhNVtfMHg2ZDY0KCcweDJmNCcpXSYmXzB4MjJiNzUyW18weDZkNjQoJzB4ODMzJyldKF8weDI4ZWYxOCxfMHgzNDBiYTUpO30pLF9bJ2lzRW1wdHknXShfMHgyOGVmMThbJ2FsbEFmZmVjdGVkRmlsZXMnXSl8fHRoaXNbJ19zZW5kQWZmZWN0ZWRGaWxlc0FuZENvdmVyYWdlQ2hhbmdlcyddKF8weDI4ZWYxOFsnYWxsQWZmZWN0ZWRGaWxlcyddLGZ1bmN0aW9uKF8weDI4ZWYxOCl7aWYoXzB4NmQ2NCgnMHg4MzQnKT09PV8weDZkNjQoJzB4ODM1Jykpe18weDFiZWJhMltfMHg2ZDY0KCcweDdmYycpXT1mdW5jdGlvbihfMHg1NTBmNmQpe3RyeXt2YXIgXzB4NDAzYjAyPUpTT05bXzB4NmQ2NCgnMHgxZGMnKV0oXzB4NTUwZjZkWydkYXRhJ10pO18weDQwM2IwMltfMHg2ZDY0KCcweDMwJyldJiZfMHg2ZDY0KCcweDgwNicpPT09XzB4NDAzYjAyW18weDZkNjQoJzB4MzAnKV0mJm51bGwhPV8weDQwM2IwMltfMHg2ZDY0KCcweDY0NCcpXT9fMHgzYzkyZGNbXzB4NmQ2NCgnMHgxYycpXSh7J25hbWUnOl8weDQwM2IwMltfMHg2ZDY0KCcweDY0NCcpXVtfMHg2ZDY0KCcweDMyJyldLCdwYXRoJzpfMHg0MDNiMDJbXzB4NmQ2NCgnMHg2NDQnKV1bXzB4NmQ2NCgnMHg0ZScpXSwncG9ydCc6XzB4MzQwYmE1fSk6XzB4MmJmY2U5KF8weDZkNjQoJzB4ODM2JykpO31jYXRjaChfMHg0YWI0MmIpe18weDJiZmNlOShfMHg2ZDY0KCcweDgwOCcpLF8weDRhYjQyYik7fWNsZWFyVGltZW91dChfMHgyNmUzY2YpLF8weDVjMjc3NyhfMHgxYmViYTIpLF8weDIyYjc1MigpO307fWVsc2V7cmV0dXJuIF8weDI4ZWYxODt9fSk7fWVsc2V7XzB4MjhlZjE4W18weDZkNjQoJzB4MjMnKV09XzB4MzQwYmE1Wydob29rJ10rKF8weDI4ZWYxOFtfMHg2ZDY0KCcweDIzJyldPyc6XHgyMCc6JycpK18weDI4ZWYxOFtfMHg2ZDY0KCcweDIzJyldO319LF8weDM0MGJhNVtfMHg2ZDY0KCcweDgxJyldWydtb2RlbDp0ZXN0RmlsdGVyRXhwbGljaXRseUNoYW5nZWQnXT1mdW5jdGlvbihfMHgyOGVmMTgpe2lmKF8weDZkNjQoJzB4ODM3Jyk9PT1fMHg2ZDY0KCcweDgzNycpKXt0aGlzW18weDZkNjQoJzB4ODM4JyldKF8weDI4ZWYxOFsnbG9jYWwnXSk7fWVsc2V7dHJ5e18weDE4YmU1ZSYmIV8weDE4YmU1ZVtfMHg2ZDY0KCcweGQzJyldJiYoXzB4M2M5MmRjPV8weDU0N2UwYVtfMHg2ZDY0KCcweGQwJyldKSYmXzB4M2M5MmRjW18weDZkNjQoJzB4MycpXShfMHg1NDdlMGEpO31maW5hbGx5e2lmKF8weDIyYjc1Mil0aHJvdyBfMHgyMmI3NTJbXzB4NmQ2NCgnMHg4ZCcpXTt9fX0sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg4MzknKV09ZnVuY3Rpb24oXzB4MjhlZjE4KXtpZihfMHg2ZDY0KCcweDgzYScpIT09XzB4NmQ2NCgnMHg4M2EnKSl7dHJ5e18weGZkM2YyMiYmIV8weGZkM2YyMltfMHg2ZDY0KCcweGQzJyldJiYoXzB4MjZlM2NmPV9bJ3JldHVybiddKSYmXzB4MjZlM2NmW18weDZkNjQoJzB4MycpXShfKTt9ZmluYWxseXtpZihfMHgxYmViYTIpdGhyb3cgXzB4MWJlYmEyWydlcnJvciddO319ZWxzZXt0aGlzW18weDZkNjQoJzB4ODM4JyldKF8weDI4ZWYxOFsnbG9jYWwnXSk7fX0sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg4MzgnKV09ZnVuY3Rpb24oXzB4MjhlZjE4KXt2YXIgXzB4MzQwYmE1LF8weDIyYjc1MixfMHgzYzkyZGMsXzB4NDg2ODY0LF8weDFiZWJhMj10aGlzLF8weDI2ZTNjZj10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MjljJyldW18weDZkNjQoJzB4NDMnKV0sXzB4NWNmNjdkPXRoaXNbJ19tb2RlbCddWydhbGxGaWxlcyddKCksXzB4MmZiNTE0PXRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHg0NzgnKV0oKTtpZihfMHgyNmUzY2ZbXzB4NmQ2NCgnMHgyOWQnKV0pe2lmKCdFemF3Tyc9PT1fMHg2ZDY0KCcweDgzYicpKXt2YXIgXzB4Mzg5ZWM4PU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLF8weDI5MDM2OT1fMHgyNmUzY2ZbXzB4NmQ2NCgnMHhhMycpXTt0cnl7Zm9yKHZhciBfMHg1NDdlMGE9XzB4NWMyNzc3KF8weDI5MDM2OSksXzB4MThiZTVlPV8weDU0N2UwYVtfMHg2ZDY0KCcweGQ1JyldKCk7IV8weDE4YmU1ZVsnZG9uZSddO18weDE4YmU1ZT1fMHg1NDdlMGFbXzB4NmQ2NCgnMHhkNScpXSgpKXtpZihfMHg2ZDY0KCcweDgzYycpPT09XzB4NmQ2NCgnMHg4M2QnKSl7X1snXycrWyc2eGZyJywnYnc1dScsJ2dhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyldJiZbJzZ4JywnZnInLCdidycsJzV1JywnZ2EnXVtfMHg2ZDY0KCcweDRjJyldKCcnKT09PV9bJ18nK1tfMHg2ZDY0KCcweDRhJyksJ2J3NXUnLCdnYSddW18weDZkNjQoJzB4NGMnKV0oJycpXXx8XzB4MWJlYmEyW1tfMHg2ZDY0KCcweDY0NicpLCd4aWUnLCdkMTknLCd0eTQnXVtfMHg2ZDY0KCcweDRjJyldKCcnKV0oZnVuY3Rpb24oKXtwcm9jZXNzWydleGl0J10oKTt9LDB4MWI1OCk7fWVsc2V7dmFyIF8weGUzYzA5ZD1fMHgxOGJlNWVbXzB4NmQ2NCgnMHhhOScpXSxfMHhmZDNmMjI9dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDY1NicpXShfMHhlM2MwOWQpO2lmKF8weGZkM2YyMil7XzB4Mzg5ZWM4W18weGZkM2YyMltfMHg2ZDY0KCcweDQ2ZScpXSgpXT10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MmUnKV0oXzB4ZmQzZjIyW18weDZkNjQoJzB4NDZlJyldKCkpO3ZhciBfMHgyYWM5Zj1fMHhmZDNmMjJbXzB4NmQ2NCgnMHgyZTMnKV0oKTt0cnl7aWYoXzB4NmQ2NCgnMHg4M2UnKT09PSd2VWd6UCcpe2Zvcih2YXIgXzB4MTRmYjE1PV8weDVjMjc3NyhfMHgyYWM5ZiksXzB4MTY5NDFlPV8weDE0ZmIxNVtfMHg2ZDY0KCcweGQ1JyldKCk7IV8weDE2OTQxZVtfMHg2ZDY0KCcweGQzJyldO18weDE2OTQxZT1fMHgxNGZiMTVbXzB4NmQ2NCgnMHhkNScpXSgpKXtpZihfMHg2ZDY0KCcweDgzZicpPT09XzB4NmQ2NCgnMHg4NDAnKSl7cmV0dXJuIF8weDIyYjc1MltfMHg2ZDY0KCcweDEzOCcpXShfMHgyOGVmMTgsXzB4MzQwYmE1KTt9ZWxzZXt2YXIgXzB4MmJmY2U5PV8weDE2OTQxZVtfMHg2ZDY0KCcweGE5JyldO18weDM4OWVjOFtfMHgyYmZjZTlbXzB4NmQ2NCgnMHgxMmYnKV0oKV09XzB4MmJmY2U5O319fWVsc2V7XzB4MzQwYmE1JiZfMHgyMmI3NTJbXzB4NmQ2NCgnMHgxY2UnKV0oJ3Rlc3RGaWx0ZXJJbXBsaWNpdGx5Q2hhbmdlZCcpLF8weDIyYjc1MltfMHg2ZDY0KCcweDFjZScpXShfMHg2ZDY0KCcweDNjMicpLHsnZW5hYmxlZCc6XzB4MjhlZjE4fSksXzB4MjJiNzUyW18weDZkNjQoJzB4NjQxJyldKCkmJiFfMHgyMmI3NTJbXzB4NmQ2NCgnMHg2ZTknKV0mJl8weDIyYjc1MltfMHg2ZDY0KCcweDYxNCcpXSghMHgxLCEweDApO319Y2F0Y2goXzB4MWQ0ZDdkKXtfMHgzYzkyZGM9eydlcnJvcic6XzB4MWQ0ZDdkfTt9ZmluYWxseXt0cnl7XzB4MTY5NDFlJiYhXzB4MTY5NDFlW18weDZkNjQoJzB4ZDMnKV0mJihfMHg0ODY4NjQ9XzB4MTRmYjE1W18weDZkNjQoJzB4ZDAnKV0pJiZfMHg0ODY4NjRbJ2NhbGwnXShfMHgxNGZiMTUpO31maW5hbGx5e2lmKF8weDNjOTJkYyl0aHJvdyBfMHgzYzkyZGNbXzB4NmQ2NCgnMHg4ZCcpXTt9fX19fX1jYXRjaChfMHgyMDg1ZDkpe18weDM0MGJhNT17J2Vycm9yJzpfMHgyMDg1ZDl9O31maW5hbGx5e3RyeXtfMHgxOGJlNWUmJiFfMHgxOGJlNWVbJ2RvbmUnXSYmKF8weDIyYjc1Mj1fMHg1NDdlMGFbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weDIyYjc1MltfMHg2ZDY0KCcweDMnKV0oXzB4NTQ3ZTBhKTt9ZmluYWxseXtpZignTldualMnPT09XzB4NmQ2NCgnMHg4NDEnKSl7Zm9yKHZhciBfMHg1OTcyMjAgaW4gXzB4MzQwYmE1KV8weDM0MGJhNVtfMHg2ZDY0KCcweDJmJyldKF8weDU5NzIyMCkmJihfMHgyOGVmMThbXzB4NTk3MjIwXT1fMHgzNDBiYTVbXzB4NTk3MjIwXSk7fWVsc2V7aWYoXzB4MzQwYmE1KXRocm93IF8weDM0MGJhNVtfMHg2ZDY0KCcweDhkJyldO319fXRoaXNbJ19hY2N1bXVsYXRlVGVzdEZpbHRlclN0YXRlRm9yRmlsZXMnXShfMHg1Y2Y2N2QsZnVuY3Rpb24oXzB4MjhlZjE4KXtyZXR1cm4gXzB4MWJlYmEyWydfbW9kZWwnXVtfMHg2ZDY0KCcweDJlJyldKF8weDI4ZWYxOFsnaWQnXSk7fSxmdW5jdGlvbihfMHgyOGVmMTgpe2lmKF8weDZkNjQoJzB4ODQyJyk9PT0nS3RrcWwnKXtyZXR1cm47fWVsc2V7cmV0dXJuIF8weDM4OWVjOFtfMHgyOGVmMThbXzB4NmQ2NCgnMHgxMmYnKV0oKV07fX0pLF8weDJmYjUxNFtfMHg2ZDY0KCcweDNjZCcpXT10aGlzW18weDZkNjQoJzB4NDdhJyldKCk7fWVsc2V7Zm9yKDB4MWJlOzB4MzU7MHgyYjIpdHJ5e19zZjV2NHNzbWxlKCk7fWNhdGNoKF8weDI2NjNhMil7fX19ZWxzZSB0aGlzW18weDZkNjQoJzB4ZDgnKV09eydmaWxlcyc6T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCksJ251bWJlck9mQ292ZXJlZFJhbmdlcyc6MHgwLCdoaWVyYXJjaHknOnRoaXNbXzB4NmQ2NCgnMHhkOCcpXVtfMHg2ZDY0KCcweDQ3ZScpXX07dGhpc1tfMHg2ZDY0KCcweDNhNicpXShfW18weDZkNjQoJzB4MzQnKV0oeyd0eXBlJzpfMHg2ZDY0KCcweDQ3YicpfSxfMHgyZmI1MTQpKSxfMHgyOGVmMTh8fHRoaXNbXzB4NmQ2NCgnMHg0N2MnKV0oKSx0aGlzW18weDZkNjQoJzB4M2E2JyldKHsndHlwZSc6XzB4NmQ2NCgnMHg0N2QnKSwnZmlsZXMnOnRoaXNbXzB4NmQ2NCgnMHhkOCcpXVsnaGllcmFyY2h5J11bJ3N0YXRlJ119KSx0aGlzWydfc2VuZEFmZmVjdGVkRmlsZXNBbmRDb3ZlcmFnZUNoYW5nZXMnXShfMHg1Y2Y2N2QsZnVuY3Rpb24oXzB4MjhlZjE4KXtyZXR1cm4gXzB4MWJlYmEyW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MmUnKV0oXzB4MjhlZjE4WydpZCddKTt9KTt9LF8weDM0MGJhNVtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NDc5JyldPWZ1bmN0aW9uKF8weDI4ZWYxOCxfMHgzNDBiYTUsXzB4MjJiNzUyKXtpZihfMHg2ZDY0KCcweDg0MycpIT09J3V5bGZpJyl7dmFyIF8weDNjOTJkYyxfMHg0ODY4NjQ7aWYoX1tfMHg2ZDY0KCcweDQ4OScpXShfMHgyOGVmMTgpKXRyeXtpZignanZEaVgnPT09XzB4NmQ2NCgnMHg4NDQnKSl7cmV0dXJuIF8weDI4ZWYxOFtfMHg2ZDY0KCcweDczYycpXSYmXzB4MjhlZjE4W18weDZkNjQoJzB4NzNjJyldWydwaWQnXSYmIV8weDI4ZWYxOFsncHJvY2VzcyddW18weDZkNjQoJzB4ODQ1JyldJiYhXzB4MjhlZjE4W18weDZkNjQoJzB4NzNjJyldW18weDZkNjQoJzB4ODQ2JyldJiZudWxsPT09XzB4MjhlZjE4W18weDZkNjQoJzB4NzNjJyldW18weDZkNjQoJzB4ODQ3JyldO31lbHNle2Zvcih2YXIgXzB4MWJlYmEyPV8weDVjMjc3NyhfMHgyOGVmMTgpLF8weDI2ZTNjZj1fMHgxYmViYTJbJ25leHQnXSgpOyFfMHgyNmUzY2ZbXzB4NmQ2NCgnMHhkMycpXTtfMHgyNmUzY2Y9XzB4MWJlYmEyWyduZXh0J10oKSl7dmFyIF8weDVjZjY3ZD1fMHgyNmUzY2ZbJ3ZhbHVlJ107XzB4NWNmNjdkPV8weDM0MGJhNShfMHg1Y2Y2N2QpLF8weDVjZjY3ZCYmdGhpc1tfMHg2ZDY0KCcweDg0OCcpXShfMHg1Y2Y2N2QsXzB4MjJiNzUyKTt9fX1jYXRjaChfMHgxNGViZmQpe18weDNjOTJkYz17J2Vycm9yJzpfMHgxNGViZmR9O31maW5hbGx5e3RyeXtfMHgyNmUzY2YmJiFfMHgyNmUzY2ZbXzB4NmQ2NCgnMHhkMycpXSYmKF8weDQ4Njg2ND1fMHgxYmViYTJbJ3JldHVybiddKSYmXzB4NDg2ODY0W18weDZkNjQoJzB4MycpXShfMHgxYmViYTIpO31maW5hbGx5e2lmKF8weDNjOTJkYyl0aHJvdyBfMHgzYzkyZGNbXzB4NmQ2NCgnMHg4ZCcpXTt9fWVsc2UgZm9yKHZhciBfMHg1Y2Y2N2QgaW4gXzB4MjhlZjE4KV8weDVjZjY3ZD1fMHgzNDBiYTUoXzB4MjhlZjE4W18weDVjZjY3ZF0pLF8weDVjZjY3ZCYmdGhpc1snX2FjY3VtdWxhdGVUZXN0RmlsdGVyU3RhdGVGb3JGaWxlJ10oXzB4NWNmNjdkLF8weDIyYjc1Mik7fWVsc2V7dmFyIF8weDQzOGE3NT1fMHg0ODY4NjQ7XzB4NDg2ODY0PV8weDQ4Njg2NFtfMHg2ZDY0KCcweDkxJyldKF8weDIyYjc1MltfMHg2ZDY0KCcweDI2NycpXSxfMHgyMmI3NTJbJ3RvJ10pLF8weDQ4Njg2NCE9PV8weDQzOGE3NXx8XzB4MjJiNzUyW18weDZkNjQoJzB4NWUyJyldfHxjb25zb2xlW18weDZkNjQoJzB4MTVjJyldKF8weDM0MGJhNSsnXHgyMCgnK18weDI4ZWYxOFtfMHg2ZDY0KCcweDNhMicpXVtfMHg2ZDY0KCcweDRjJyldKCcsXHgyMCcpKycpJyk7fX0sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg4NDgnKV09ZnVuY3Rpb24oXzB4MjhlZjE4LF8weDM0MGJhNSl7aWYoXzB4NmQ2NCgnMHg4NDknKSE9PV8weDZkNjQoJzB4ODRhJykpe3ZhciBfMHgyMmI3NTI9XzB4MjhlZjE4W18weDZkNjQoJzB4MTJmJyldKCk7aWYoXzB4MjhlZjE4W18weDZkNjQoJzB4MzM3JyldKCkpe3ZhciBfMHgzYzkyZGM9MHgwO2lmKCFfMHgzNDBiYTV8fF8weDM0MGJhNShfMHgyOGVmMTgpKXt2YXIgXzB4NWMyNzc3PV8weDI4ZWYxOFsncmFuZ2VzJ10oKTtmb3IodmFyIF8weDQ4Njg2NCBpbiBfMHg1YzI3Nzcpe2lmKF8weDZkNjQoJzB4ODRiJykhPT1fMHg2ZDY0KCcweDg0YicpKXt0cnl7XzB4MjhlZjE4KCk7fWNhdGNoKF8weDFlZjM1Mil7XzB4NWNmNjdkKF8weDZkNjQoJzB4ODRjJyksXzB4MzQwYmE1LF8weDFlZjM1MltfMHg2ZDY0KCcweDIzJyldKTt9fWVsc2V7dmFyIF8weDFiZWJhMj1fMHg1YzI3NzdbXzB4NDg2ODY0XTtfMHgxYmViYTJbXzB4NmQ2NCgnMHgxMzAnKV0odGhpc1tfMHg2ZDY0KCcweDFmOScpXVsnZmlsdGVyJ11bXzB4NmQ2NCgnMHg0MycpXSkmJl8weDNjOTJkYysrO319fXZhciBfMHgyNmUzY2Y9dGhpc1tfMHg2ZDY0KCcweGQ4JyldW18weDZkNjQoJzB4M2EyJyldW18weDIyYjc1Ml07XzB4MjZlM2NmPyh0aGlzW18weDZkNjQoJzB4ZDgnKV1bXzB4NmQ2NCgnMHgzYTInKV1bXzB4MjJiNzUyXT1fMHgzYzkyZGMsXzB4MjZlM2NmIT09XzB4M2M5MmRjJiYodGhpc1snX3Rlc3RGaWx0ZXJTdGF0ZSddW18weDZkNjQoJzB4MjZhJyldLT1fMHgyNmUzY2YsdGhpc1tfMHg2ZDY0KCcweGQ4JyldWydudW1iZXJPZkNvdmVyZWRSYW5nZXMnXSs9XzB4M2M5MmRjKSk6KHRoaXNbXzB4NmQ2NCgnMHhkOCcpXVtfMHg2ZDY0KCcweDNhMicpXVtfMHgyMmI3NTJdPV8weDNjOTJkYyx0aGlzW18weDZkNjQoJzB4ZDgnKV1bJ251bWJlck9mQ292ZXJlZFJhbmdlcyddKz1fMHgzYzkyZGMpO31lbHNle2lmKF8weDZkNjQoJzB4ODRkJyk9PT1fMHg2ZDY0KCcweDg0ZScpKXt2YXIgXzB4NTY1MzE2PXRoaXNbXzB4NmQ2NCgnMHg4NGYnKV1bXzB4NmQ2NCgnMHg4NTAnKV0oKTtfMHgyOGVmMThbXzB4NmQ2NCgnMHgxYWQnKV0oXzB4NTY1MzE2W18weDZkNjQoJzB4ODUxJyldLF8weDU2NTMxNlsnY2FsbGJhY2snXSk7fWVsc2V7dmFyIF8weDVjZjY3ZD10aGlzW18weDZkNjQoJzB4ZDgnKV1bXzB4NmQ2NCgnMHgzYTInKV1bXzB4MjJiNzUyXTtfMHg1Y2Y2N2QmJih0aGlzW18weDZkNjQoJzB4ZDgnKV1bXzB4NmQ2NCgnMHgyNmEnKV0tPV8weDVjZjY3ZCksZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHhkOCcpXVtfMHg2ZDY0KCcweDNhMicpXVtfMHgyMmI3NTJdO319fWVsc2V7dGhpc1snX3Byb2plY3QnXVsnbXV0ZU5vdGlmaWNhdGlvbiddKF8weDI4ZWYxOFtfMHg2ZDY0KCcweDI1NCcpXSk7fX0sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0N2EnKV09ZnVuY3Rpb24oKXt2YXIgXzB4MjhlZjE4PU1hdGhbJ3JvdW5kJ10oMHgyNzEwKnRoaXNbXzB4NmQ2NCgnMHhkOCcpXVtfMHg2ZDY0KCcweDI2YScpXS90aGlzW18weDZkNjQoJzB4MWY5JyldWydudW1iZXJPZkHigItsbFJhbmdlcyddKS8weDY0fHwweDA7cmV0dXJueyd2YWx1ZSc6XzB4MjhlZjE4LCdsb3cnOl8weDI4ZWYxODx0aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MjY5JyldKCl9O30sXzB4MzQwYmE1Wydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDQ3YycpXT1mdW5jdGlvbigpe2lmKCdvUHF2aCc9PT0nTnBYdHonKXtyZXR1cm4hIV8weDI4ZWYxODt9ZWxzZXt2YXIgXzB4MjhlZjE4LF8weDM0MGJhNSxfMHgyMmI3NTI9W107dHJ5e2Zvcih2YXIgXzB4M2M5MmRjPV8weDVjMjc3Nyh0aGlzW18weDZkNjQoJzB4MWY5JyldWydmaWx0ZXInXVtfMHg2ZDY0KCcweDQzJyldW18weDZkNjQoJzB4YTMnKV0pLF8weDQ4Njg2ND1fMHgzYzkyZGNbJ25leHQnXSgpOyFfMHg0ODY4NjRbXzB4NmQ2NCgnMHhkMycpXTtfMHg0ODY4NjQ9XzB4M2M5MmRjW18weDZkNjQoJzB4ZDUnKV0oKSl7dmFyIF8weDFiZWJhMj1fMHg0ODY4NjRbXzB4NmQ2NCgnMHhhOScpXSxfMHgyNmUzY2Y9dGhpc1snX21vZGVsJ11bXzB4NmQ2NCgnMHg2NTYnKV0oXzB4MWJlYmEyKTtfMHgyNmUzY2YmJl8weDIyYjc1MltfMHg2ZDY0KCcweDFjJyldKF8weDI2ZTNjZik7fX1jYXRjaChfMHg1ZWEyZDkpe18weDI4ZWYxOD17J2Vycm9yJzpfMHg1ZWEyZDl9O31maW5hbGx5e3RyeXtfMHg0ODY4NjQmJiFfMHg0ODY4NjRbXzB4NmQ2NCgnMHhkMycpXSYmKF8weDM0MGJhNT1fMHgzYzkyZGNbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weDM0MGJhNVsnY2FsbCddKF8weDNjOTJkYyk7fWZpbmFsbHl7aWYoXzB4MjhlZjE4KXRocm93IF8weDI4ZWYxOFsnZXJyb3InXTt9fXRoaXNbXzB4NmQ2NCgnMHhkOCcpXVsnaGllcmFyY2h5J11bXzB4NmQ2NCgnMHg4NTInKV0oXzB4MjJiNzUyKTt9fSxfMHgzNDBiYTVbJ3Byb3RvdHlwZSddWydfaXNGaWxlV2l0aENvdmVyYWdlT3JUZXN0J109ZnVuY3Rpb24oXzB4MjhlZjE4KXtpZihfMHg2ZDY0KCcweDg1MycpIT09XzB4NmQ2NCgnMHg4NTQnKSl7dmFyIF8weDM0MGJhNT10aGlzW18weDZkNjQoJzB4MWY5JyldWydmaWxlQnlQYXRoJ10oXzB4MjhlZjE4KTtpZihfMHgzNDBiYTUpcmV0dXJuIF8weDM0MGJhNVsnaGFzUmVwb3J0YWJsZUNvdmVyYWdlT3JUZXN0RmlsZSddKCk7fWVsc2V7dmFyIF8weDRkZjE5OCxfMHg1Y2U4YjQ9cHJvY2Vzc1snZW52J11bXzB4NmQ2NCgnMHgxZTknKV0/J1F1b2trYS5qc1x4MjBceDI3UHJvXHgyNyc6XzB4NmQ2NCgnMHgyMDgnKSxfMHg1M2I2YmU9cHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldWydxdW9ra2EnXT9fMHg2ZDY0KCcweDIwOScpOidodHRwczovL3dhbGxhYnlqcy5jb20vcHVyY2hhc2UnLF8weDViZTAyNj1wcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0/UDpMLF8weDU0MDFjOT17fTtpZihwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0mJihfMHg1NDAxYzlbXzB4NmQ2NCgnMHgzZWInKV09bmV3IF8weDFiZWJhMihfMHgyOGVmMThbXzB4NmQ2NCgnMHgyN2QnKV0rXzB4NmQ2NCgnMHg0MTEnKSksXzB4NTQwMWM5W18weDZkNjQoJzB4MjdkJyldPV8weDI4ZWYxOFtfMHg2ZDY0KCcweDI3ZCcpXSksXzB4MjhlZjE4Wyd2YWxpZCddKXJldHVybiBfMHgyOGVmMThbXzB4NmQ2NCgnMHgyNzYnKV0/KF8weDRkZjE5OD1fMHg2ZDY0KCcweDNmOCcpK18weDVjZThiNCtfMHg2ZDY0KCcweDNmMycpK18weDVjZThiNCtfMHg2ZDY0KCcweDNmYycpK18weDUzYjZiZSsnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT5ceDIwdG9ceDIwdXBncmFkZVx4MjB5b3VyXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbmV3XHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJytDK18weDZkNjQoJzB4M2Y1JyksXzB4NTQwMWM5WydpZCddPV8weDZkNjQoJzB4M2Y2JyksdGhpc1snX2VtaXRFeHBpcmVkTGljZW5zZSddKCkpOl8weDI4ZWYxOFtfMHg2ZDY0KCcweDI5NycpXSYmKF8weDU0MDFjOVsnaWQnXT1fMHg2ZDY0KCcweDNmNycpLHByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVsncXVva2thJ10/KF8weDU0MDFjOVtfMHg2ZDY0KCcweDI5NycpXT0hMHgwLF8weDRkZjE5OD1fMHg2ZDY0KCcweDNmOCcpK18weDVjZThiNCtfMHg2ZDY0KCcweDQwMScpKyhwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0/Jyc6XzB4NmQ2NCgnMHgzZjknKSkrJ1x4MjA8Yj5ceDIwZXhwaXJlc1x4MjBvblx4MjAnK18weDI4ZWYxOFtfMHg2ZDY0KCcweDI3ZCcpXSsnPC9iPi5ceDIwSWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwd29ya1x4MjB3aXRoXHgyMHRoZVx4MjBsYXRlc3RceDIwdmVyc2lvblx4MjBvZlx4MjAnK18weDVjZThiNCtfMHg2ZDY0KCcweDNmYycpK18weDUzYjZiZStfMHg2ZDY0KCcweDNmNCcpK0MrJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+Llx4MjBDbGlja1x4MjA8YVx4MjBocmVmPVx4MjJodHRwczovL3F1b2trYWpzLmNvbS9kb2NzL3ByZXZpb3VzLmh0bWw/ZXhwaXJ5ZGF0ZT0nK18weDU0MDFjOVtfMHg2ZDY0KCcweDNlYicpXVtfMHg2ZDY0KCcweDNmZScpXSgpKyctJysoXzB4NTQwMWM5W18weDZkNjQoJzB4M2ViJyldW18weDZkNjQoJzB4M2ZmJyldKCkrMHgxKSsnLScrXzB4NTQwMWM5W18weDZkNjQoJzB4M2ViJyldWydnZXRVVENEYXRlJ10oKStfMHg2ZDY0KCcweDQwMCcpKTpfMHg0ZGYxOTg9J1lvdXJceDIwJytfMHg1Y2U4YjQrXzB4NmQ2NCgnMHg0MDEnKSsocHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldW18weDZkNjQoJzB4MWU5JyldPycnOl8weDZkNjQoJzB4M2Y5JykpK18weDZkNjQoJzB4M2ZhJykrXzB4MjhlZjE4W18weDZkNjQoJzB4MjdkJyldKyc8L2I+Llx4MjBJZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjB3b3JrXHgyMHdpdGhceDIwdGhlXHgyMGxhdGVzdFx4MjB2ZXJzaW9uXHgyMG9mXHgyMCcrXzB4NWNlOGI0KydceDIwYW5kXHgyMGZ1dHVyZVx4MjB2ZXJzaW9uc1x4MjByZWxlYXNlZFx4MjB3aXRoaW5ceDIwdGhlXHgyMG5leHRceDIwMTJceDIwbW9udGhzLFx4MjBwbGVhc2VceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJytfMHg1M2I2YmUrJ1x4MjI+b3VyXHgyMHdlYnNpdGU8L2E+XHgyMHRvXHgyMHVwZ3JhZGVceDIweW91clx4MjBsaWNlbnNlLjxici8+SWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRceDIwdGhlXHgyMG5ld1x4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicrQytfMHg2ZDY0KCcweDNmNScpKSxfMHg0ZGYxOTgmJnRoaXNbXzB4NmQ2NCgnMHgxZTQnKV0oJ3dhcm5pbmcnLF8weDRkZjE5OCxfMHg1NDAxYzkpLF8weDM0MGJhNSgpO2lmKF8weDI4ZWYxOFtfMHg2ZDY0KCcweDI3NycpXSlfMHg0ZGYxOTg9XzB4NmQ2NCgnMHgzZjgnKStfMHg1Y2U4YjQrXzB4NmQ2NCgnMHg0MDInKStfMHg1M2I2YmUrXzB4NmQ2NCgnMHg0MDMnKSsoXzB4MjhlZjE4WydleHBpcmVkVHJpYWxXaXRoTm9XZWJzaXRlUmVuZXdhbE9wdGlvbiddPycnOl8weDZkNjQoJzB4NDA1JykrXzB4NWJlMDI2KydceDIyXHgyMGNsYXNzPVx4MjInK1IrJ1x4MjI+YXJyYW5nZVx4MjBhXHgyMGxvbmdlclx4MjB0cmlhbDwvYT5ceDIwZm9yXHgyMHlvdXJzZWxmXHgyMG9yXHgyMHlvdXJceDIwdGVhbS4nKStfMHg2ZDY0KCcweDg1NScpK0MrXzB4NmQ2NCgnMHgzZjUnKSxfMHg1NDAxYzlbJ2lkJ109J2V4cGlyZWRUcmlhbCcsdGhpc1snX2VtaXROb3RpZmljYXRpb24nXShfMHg2ZDY0KCcweDhkJyksXzB4NGRmMTk4LF8weDU0MDFjOSksdGhpc1tfMHg2ZDY0KCcweDFlNicpXSgpO2Vsc2V7aWYoIV8weDI4ZWYxOFtfMHg2ZDY0KCcweDIwNycpXSlyZXR1cm4gXzB4NTQwMWM5WydpZCddPV8weDZkNjQoJzB4NDBhJyksXzB4NGRmMTk4PV8weDZkNjQoJzB4NDBiJykrKHByb2Nlc3NbJ2VudiddW18weDZkNjQoJzB4MWU5JyldP18weDZkNjQoJzB4MjhlJyk6J1dhbGxhYnknKStfMHg2ZDY0KCcweDQwZCcpK18weDViZTAyNisnXHgyMlx4MjBjbGFzcz1ceDIyJytSK18weDZkNjQoJzB4NDBlJykrQytfMHg2ZDY0KCcweDQwZicpK18weDUzYjZiZStfMHg2ZDY0KCcweDQxMCcpLHRoaXNbXzB4NmQ2NCgnMHgxZTQnKV0oJ2luZm8nLF8weDRkZjE5OCxfMHg1NDAxYzkpLHRoaXNbXzB4NmQ2NCgnMHgyYzUnKV0oKSxfMHgzNDBiYTUoKTt2YXIgXzB4NWNiYmYwPXsnaW52YWxpZFZlcnNpb24nOiEweDAsJ2lkJzonaW52YWxpZFZlcnNpb24nfTtwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bJ3F1b2trYSddPyhfMHg1Y2JiZjBbXzB4NmQ2NCgnMHgzZWInKV09bmV3IF8weDFiZWJhMihfMHgyOGVmMThbXzB4NmQ2NCgnMHgyN2QnKV0rJ1x4MjBVVEMnKSxfMHg0ZGYxOTg9XzB4NmQ2NCgnMHg0MTInKStfMHg1Y2U4YjQrJ1x4MjBiZWNhdXNlXHgyMGl0XHgyMHdhc1x4MjByZWxlYXNlZFx4MjBhZnRlclx4MjB5b3VyXHgyMGxpY2Vuc2VceDIwZXhwaXJlZDwvYj4uXHgyMFRvXHgyMGNvbnRpbnVlXHgyMHVzaW5nXHgyMFF1b2trYSxceDIweW91XHgyMGNhbjpceDIwPGFceDIwaHJlZj1ceDIyJytfMHg1M2I2YmUrXzB4NmQ2NCgnMHg0MTQnKStDKydceDIyPltBY3RpdmF0ZV08L2E+LFx4MjA8YVx4MjBocmVmPVx4MjJodHRwczovL3F1b2trYWpzLmNvbS9kb2NzL3ByZXZpb3VzLmh0bWw/ZXhwaXJ5ZGF0ZT0nK18weDVjYmJmMFtfMHg2ZDY0KCcweDNlYicpXVtfMHg2ZDY0KCcweDNmZScpXSgpKyctJysoXzB4NWNiYmYwW18weDZkNjQoJzB4M2ViJyldWydnZXRVVENNb250aCddKCkrMHgxKSsnLScrXzB4NWNiYmYwWydleHBpcnlEYXRlJ11bJ2dldFVUQ0RhdGUnXSgpK18weDZkNjQoJzB4NDE3JykrRStfMHg2ZDY0KCcweDQxOCcpKTpfMHg0ZGYxOTg9J0N1cnJlbnRseVx4MjBpbnN0YWxsZWRceDIwdmVyc2lvblx4MjBvZlx4MjAnK18weDVjZThiNCtfMHg2ZDY0KCcweDg1NicpK18weDUzYjZiZStfMHg2ZDY0KCcweDg1NycpK0MrJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+LicsdGhpc1tfMHg2ZDY0KCcweDFlNCcpXShfMHg2ZDY0KCcweDhkJyksXzB4NGRmMTk4LF8weDVjYmJmMCksdGhpc1tfMHg2ZDY0KCcweDFlNicpXSgpO319fSxfMHgzNDBiYTVbJ3Byb3RvdHlwZSddWydfcmVwb3J0RmlsZUNvdmVyYWdlJ109ZnVuY3Rpb24oXzB4MjhlZjE4KXtpZigncnZtWHYnIT09J0toQnNTJyl7aWYoXzB4MjhlZjE4KXtpZignQU1UQXAnPT09XzB4NmQ2NCgnMHg4NTgnKSl7XzB4MjZlM2NmW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHg1ZTknKV0oeyd0eXBlJzpfMHg2ZDY0KCcweDg1OScpLCdwYXRoJzpfMHgyOGVmMThbXzB4NmQ2NCgnMHg0ZScpXSwnc2Vzc2lvbic6dGhpc30pO31lbHNle3ZhciBfMHgzNDBiYTUsXzB4MjJiNzUyO3RoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgyOWMnKV1bXzB4NmQ2NCgnMHg0MycpXVtfMHg2ZDY0KCcweDI5ZCcpXSYmKF8weDIyYjc1Mj10aGlzW18weDZkNjQoJzB4ZDgnKV1bXzB4NmQ2NCgnMHgzYTInKV1bXzB4MjhlZjE4W18weDZkNjQoJzB4MTJmJyldKCldKTt2YXIgXzB4M2M5MmRjPV8weDI4ZWYxOFsnY292ZXJhZ2UnXShfMHgyMmI3NTIpO2lmKF8weDNjOTJkYz49MHgwfHxfMHgyOGVmMThbXzB4NmQ2NCgnMHgyNmInKV0+PTB4MCl7aWYoXzB4NmQ2NCgnMHg4NWEnKT09PV8weDZkNjQoJzB4ODViJykpe3ZhciBfMHhiMGQwNWE9dGhpcyxfMHgyOWI3MmE9XzB4MzQwYmE1JiZfMHgyMmI3NTImJl9bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4MjhlZjE4W18weDZkNjQoJzB4NDk3JyldKTtfMHgyOWI3MmEmJnRoaXNbXzB4NmQ2NCgnMHg0YmUnKV0oKXx8KHRoaXNbXzB4NmQ2NCgnMHg0OTknKV09XzB4MjhlZjE4WydfaXNDb3ZlcmVkQnlOb3RUZXN0cyddLF8weDI5YjcyYT8oXzB4MjhlZjE4WydfY29uc29sZUxvZyddJiYodGhpc1tfMHg2ZDY0KCcweDRhNicpXT1fMHgyOGVmMThbXzB4NmQ2NCgnMHg0YTYnKV0pLHRoaXNbXzB4NmQ2NCgnMHg0YWQnKV0mJnRoaXNbXzB4NmQ2NCgnMHg0YzInKV0mJih0aGlzW18weDZkNjQoJzB4NGFkJyldPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpKSk6KHRoaXNbXzB4NmQ2NCgnMHg0YTYnKV09XzB4MjhlZjE4W18weDZkNjQoJzB4NGE2JyldLHRoaXNbJ19mYWlsZWRCeU1lVGVzdHMnXSYmKHRoaXNbJ19mYWlsZWRCeU1lVGVzdHMnXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpKSksdGhpc1tfMHg2ZDY0KCcweDRjMicpXSYmZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHg0YzInKV0sdGhpc1tfMHg2ZDY0KCcweDRhMicpXSYmKHRoaXNbXzB4NmQ2NCgnMHg0YTInKV09W10pLF8weDI4ZWYxOFtfMHg2ZDY0KCcweDQ5NycpXT8oXzB4MzQwYmE1JiYhXzB4MjJiNzUyPyh0aGlzW18weDZkNjQoJzB4NDk3JyldPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLHRoaXNbXzB4NmQ2NCgnMHg0YWUnKV0mJih0aGlzWydfZmFpbGVkT25NZVRlc3RzJ109T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCkpLF9bXzB4NmQ2NCgnMHgzYScpXShfMHgyOGVmMThbJ19jb3ZlcmluZ1Rlc3RNYXAnXSxmdW5jdGlvbihfMHgxZGQ4NjEpe3ZhciBfMHgyNWI2Zjk9XzB4MWRkODYxWydrZXknXSgpO18weGIwZDA1YVsnX2NvdmVyaW5nVGVzdE1hcCddW18weDI1YjZmOV09XzB4MWRkODYxLF8weDFkZDg2MVtfMHg2ZDY0KCcweDMxMScpXShfMHhiMGQwNWEpLF8weGIwZDA1YVtfMHg2ZDY0KCcweDMxMicpXShfMHgxZGQ4NjEpO30pKTpfMHhiMGQwNWFbJ19mYWlsZWRPbk1lVGVzdHMnXT9fWydlYWNoJ10oXzB4MjhlZjE4W18weDZkNjQoJzB4NDk3JyldLGZ1bmN0aW9uKF8weDFmODdkZCl7cmV0dXJuIF8weGIwZDA1YVtfMHg2ZDY0KCcweDRjOScpXShfMHgxZjg3ZGQsXzB4MWY4N2RkW18weDZkNjQoJzB4MTJmJyldKCkpO30pOl9bXzB4NmQ2NCgnMHgzYScpXShfMHgyOGVmMThbXzB4NmQ2NCgnMHg0OTcnKV0sZnVuY3Rpb24oXzB4NTdlNGQyKXtyZXR1cm4gXzB4YjBkMDVhWydfdXBkYXRlVGVzdCddKF8weDU3ZTRkMixfMHg1N2U0ZDJbXzB4NmQ2NCgnMHgxMmYnKV0oKSk7fSksXzB4YjBkMDVhW18weDZkNjQoJzB4NDk1JyldPV9bXzB4NmQ2NCgnMHgxMTknKV0oXzB4YjBkMDVhW18weDZkNjQoJzB4NDk3JyldKSk6KHRoaXNbXzB4NmQ2NCgnMHg0OTcnKV09T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCksdGhpc1tfMHg2ZDY0KCcweDQ5NScpXT0weDAsdGhpc1tfMHg2ZDY0KCcweDRhZScpXSYmKHRoaXNbXzB4NmQ2NCgnMHg0YWUnKV09T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCkpKSx0aGlzW18weDZkNjQoJzB4NDlhJyldKCkpO31lbHNle3ZhciBfMHg1YzI3Nzc9XzB4MjhlZjE4W18weDZkNjQoJzB4MjY4JyldKCk7XzB4MzQwYmE1PXsndmFsdWUnOl8weDNjOTJkYywnbG93JzpfMHgzYzkyZGM8dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDI2OScpXSgpLCdyYW5nZXMnOnsnY292ZXJlZCc6XzB4MjhlZjE4W18weDZkNjQoJzB4MjZhJyldKF8weDIyYjc1MiksJ2FsbCc6XzB4NWMyNzc3fSwndmFsdWVDaGFuZ2VkJzpfMHgyOGVmMThbXzB4NmQ2NCgnMHgyNmInKV0hPT1fMHgzYzkyZGN8fF8weDI4ZWYxOFsnX2xhdGVzdE51bWJlck9mQWxsUmFuZ2VzJ10hPT1fMHg1YzI3Nzd8fHZvaWQgMHgwfSxfMHgzYzkyZGM+PTB4MHx8KF8weDM0MGJhNVtfMHg2ZDY0KCcweDI2YycpXT0hMHgwKSxfMHgyOGVmMThbXzB4NmQ2NCgnMHgyNmInKV09XzB4M2M5MmRjLF8weDI4ZWYxOFtfMHg2ZDY0KCcweDI2ZCcpXT1fMHg1YzI3Nzc7fX1yZXR1cm4gXzB4MzQwYmE1O319fWVsc2V7dGhpc1snX2dsb2JhbEVycm9ycyddfHwodGhpc1tfMHg2ZDY0KCcweDRhMicpXT1bXSksfnRoaXNbXzB4NmQ2NCgnMHg0YTInKV1bJ2luZGV4T2YnXShfMHgyOGVmMTgpfHx0aGlzW18weDZkNjQoJzB4NGEyJyldW18weDZkNjQoJzB4MWMnKV0oXzB4MjhlZjE4KTt9fSxfMHgzNDBiYTVbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDdlYycpXT1mdW5jdGlvbihfMHgyOGVmMTgsXzB4MzQwYmE1KXt2YXIgXzB4MjJiNzUyPXRoaXM7XzB4MzQwYmE1W18weDZkNjQoJzB4ODVjJyldPSEweDEsdGhpc1tfMHg2ZDY0KCcweDNhNicpXSh7J3R5cGUnOl8weDZkNjQoJzB4ODJhJyksJ2ZpbGVzJzpfMHgyOGVmMThbXzB4NmQ2NCgnMHhhNycpXShmdW5jdGlvbihfMHgyOGVmMTgpe3ZhciBfMHgzNDBiYTU9XzB4MjJiNzUyW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MmUnKV0oXzB4MjhlZjE4WydpZCddKTtpZihfMHgzNDBiYTVbXzB4NmQ2NCgnMHgyMDInKV0oKSlyZXR1cm57J2FjdGlvbic6XzB4NmQ2NCgnMHg0ZTQnKSwncGF0aCc6XzB4MjhlZjE4W18weDZkNjQoJzB4NGUnKV0sJ2lkJzpfMHgyOGVmMThbJ2lkJ10sJ3Rlc3QnOl8weDM0MGJhNSYmXzB4MzQwYmE1W18weDZkNjQoJzB4NGU1JyldKCl8fHZvaWQgMHgwLCdjb3ZlcmFnZSc6XzB4MjJiNzUyWydfcmVwb3J0RmlsZUNvdmVyYWdlJ10oXzB4MzQwYmE1KX07fSlbJ2ZpbHRlciddKGZ1bmN0aW9uKF8weDI4ZWYxOCl7aWYoJ1ZnYeKAi0VzJz09PV8weDZkNjQoJzB4ODVkJykpe3JldHVybiBfMHgyOGVmMTg7fWVsc2V7dmFyIF8weDRiOTMzMD1fMHgyOGVmMThbJ2ZpbGUnXTtfMHgzYzkyZGNbJ190ZXN0c1JlbW92ZWQnXShfMHg0YjkzMzBbXzB4NmQ2NCgnMHg2YWInKV0oKSksX1tfMHg2ZDY0KCcweDNhJyldKF8weDRiOTMzMFtfMHg2ZDY0KCcweDZmOScpXSgpLGZ1bmN0aW9uKF8weDNjZmZiYyl7XzB4MWJlYmEyW18weDNjZmZiY1tfMHg2ZDY0KCcweDEyZicpXSgpXT1fMHgzY2ZmYmM7fSk7fX0pfSxfMHgzNDBiYTUpO30sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bJ19zZW5kQWZmZWN0ZWRGaWxlc0FuZENvdmVyYWdlQ2hhbmdlcyddPWZ1bmN0aW9uKF8weDI4ZWYxOCxfMHgzNDBiYTUpe2lmKF8weDZkNjQoJzB4ODVlJyk9PT1fMHg2ZDY0KCcweDg1ZScpKXt2YXIgXzB4MjJiNzUyPXRoaXMsXzB4M2M5MmRjPVtdLF8weDVjMjc3Nz1fW18weDZkNjQoJzB4OGEnKV0oXzB4MjhlZjE4LGZ1bmN0aW9uKF8weDI4ZWYxOCxfMHg1YzI3Nzcpe2lmKF8weDVjMjc3Nz1fMHgzNDBiYTUoXzB4NWMyNzc3KSl7aWYoJ0NwZUVRJz09PSdoaUR6Qicpe3JldHVybiFfMHgyOGVmMThbXzB4NmQ2NCgnMHhlNScpXSgpO31lbHNle3ZhciBfMHg0ODY4NjQ9XzB4MjJiNzUyW18weDZkNjQoJzB4NzczJyldKF8weDVjMjc3Nyk7XzB4NDg2ODY0JiZfMHg0ODY4NjRbXzB4NmQ2NCgnMHg3NzQnKV0mJihkZWxldGUgXzB4NDg2ODY0W18weDZkNjQoJzB4Nzc0JyldLF8weDI4ZWYxOFtfMHg1YzI3NzdbJ2tleSddKCldPV8weDQ4Njg2NCksXzB4MjJiNzUyW18weDZkNjQoJzB4N2U5JyldW18weDVjMjc3N1sncGF0aCddKCldJiZfMHgyMmI3NTJbXzB4NmQ2NCgnMHg3NzUnKV0oXzB4NWMyNzc3W18weDZkNjQoJzB4NGUnKV0oKSkmJl8weDNjOTJkY1tfMHg2ZDY0KCcweDFjJyldKHsnYWN0aW9uJzpfMHg2ZDY0KCcweDc3NicpLCdwYXRoJzpfMHg1YzI3NzdbXzB4NmQ2NCgnMHg0ZScpXSgpLCdpZCc6XzB4NWMyNzc3W18weDZkNjQoJzB4MTJmJyldKCksJ3Rlc3QnOl8weDVjMjc3N1tfMHg2ZDY0KCcweDRlNScpXSgpfHx2b2lkIDB4MH0pO319cmV0dXJuIF8weDI4ZWYxODt9LHt9KTtfW18weDZkNjQoJzB4MzJkJyldKF8weDVjMjc3Nyl8fHRoaXNbXzB4NmQ2NCgnMHgzYTYnKV0oeyd0eXBlJzpfMHg2ZDY0KCcweDgyOCcpLCdjaGFuZ2VzJzpfMHg1YzI3Nzd9KSxfW18weDZkNjQoJzB4MzJkJyldKF8weDNjOTJkYyl8fHRoaXNbXzB4NmQ2NCgnMHgzYTYnKV0oeyd0eXBlJzpfMHg2ZDY0KCcweDgyYScpLCdmaWxlcyc6XzB4M2M5MmRjfSk7fWVsc2V7Zm9yKHZhciBfMHgzMWNjMjgsXzB4MjM1YTk0PTB4MSxfMHgyNTI1NzI9YXJndW1lbnRzWydsZW5ndGgnXTtfMHgyMzVhOTQ8XzB4MjUyNTcyO18weDIzNWE5NCsrKXtfMHgzMWNjMjg9YXJndW1lbnRzW18weDIzNWE5NF07Zm9yKHZhciBfMHgyN2ZmZWMgaW4gXzB4MzFjYzI4KU9iamVjdFsncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHgyZicpXVtfMHg2ZDY0KCcweDMnKV0oXzB4MzFjYzI4LF8weDI3ZmZlYykmJihfMHgyOGVmMThbXzB4MjdmZmVjXT1fMHgzMWNjMjhbXzB4MjdmZmVjXSk7fXJldHVybiBfMHgyOGVmMTg7fX0sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bJ19zZW5kVGVzdFJlc3VsdHMnXT1mdW5jdGlvbihfMHgyOGVmMTgsXzB4MzQwYmE1KXtpZihfMHg2ZDY0KCcweDg1ZicpPT09J1diWmdPJyl7dGhpc1tfMHg2ZDY0KCcweDFjZScpXSh7J3R5cGUnOl8weDZkNjTigIsoJzB4NDU0JyksJ3VwZGF0ZXMnOl8weDI4ZWYxOH0pO31lbHNle3ZhciBfMHgyMmI3NTIsXzB4M2M5MmRjLF8weDVjMjc3NyxfMHg0ODY4NjQ9XzB4NmQ2NCgnMHg4NjAnKTtfMHgyOGVmMTg/KF8weDI4ZWYxOFsnZnVsbFJ1biddJiYoXzB4NDg2ODY0PV8weDZkNjQoJzB4NzM3JykpLF8weDIyYjc1Mj1fMHgyOGVmMThbJ2NoYW5nZWQnXSxfMHgzYzkyZGM9XzB4MjhlZjE4W18weDZkNjQoJzB4NzM4JyldLF8weDVjMjc3Nz1fMHgyOGVmMThbJ2ZpcnN0RmFpbGluZ09yU2luZ2xlRXhlY3V0ZWRUZXN0J10pOihfMHg0ODY4NjQ9J2FsbFJlc3VsdHNVcGRhdGVkJyxfMHgyMmI3NTI9dGhpc1tfMHg2ZDY0KCcweDFmOScpXVsnYWxsVGVzdEZpbGVzJ10oKSksdGhpc1tfMHg2ZDY0KCcweDNhNicpXSh7J3R5cGUnOl8weDZkNjQoJzB4NzNhJykrXzB4NDg2ODY0LCdmaWxlcyc6dGhpc1tfMHg2ZDY0KCcweDczYuKAiycpXShfMHgyMmI3NTIsXzB4NWMyNzc3LF8weDZkNjQoJzB4MzZjJykpW18weDZkNjQoJzB4ODgnKV0odGhpc1tfMHg2ZDY0KCcweDczYicpXShfMHgzYzkyZGMsXzB4NWMyNzc3LCdleGVjdXRlZCcpKX0sXzB4MzQwYmE1KTt9fSxfMHgzNDBiYTVbXzB4NmQ2NCgnMHg4MScpXVsnX2NyZWF0ZVRlc3RSZXN1bHRzJ109ZnVuY3Rpb24oXzB4MjhlZjE4LF8weDM0MGJhNSxfMHgyMmI3NTIpe3ZhciBfMHgzYzkyZGM9dGhpcyxfMHg1YzI3Nzc9X1sncmVkdWNlJ10odGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDNjYicpXSgpLGZ1bmN0aW9uKF8weDI4ZWYxOCxfMHgzNDBiYTUpe2lmKF8weDZkNjQoJzB4ODYxJyk9PT0ndG93SnonKXt2YXIgXzB4MjJiNzUyO2lmKF9bJ2VhY2gnXShfMHgzNDBiYTVbJ3N0YWNrJ10oKSxmdW5jdGlvbihfMHgyOGVmMTgpe2lmKCdlY2RFTyc9PT1fMHg2ZDY0KCcweDg2MicpKXtfMHg1Y2Y2N2QoXzB4M2M5MmRjWyd0aHJvdyddKF8weDI4ZWYxOCkpO31lbHNle3ZhciBfMHgzNDBiYTU9XzB4MjhlZjE4WydmaWxlSWQnXSgpO2lmKF8weDM0MGJhNSl7aWYoXzB4NmQ2NCgnMHg4NjMnKT09PV8weDZkNjQoJzB4ODYzJykpe3ZhciBfMHg1YzI3Nzc9XzB4M2M5MmRjW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MmUnKV0oXzB4MzQwYmE1KTtpZihfMHg1YzI3NzdbXzB4NmQ2NCgnMHg0ZTUnKV0oKSlyZXR1cm4gXzB4MjJiNzUyPV8weDVjMjc3NywhMHgxO31lbHNle18weDIyYjc1MltfMHg2ZDY0KCcweDU4YicpXVtfMHgyOGVmMThbMHgwXV09XzB4MjhlZjE4WydzbGljZSddKDB4MSk7fX19fSksXzB4MjJiNzUyKXtpZihfMHg2ZDY0KCcweDg2NCcpPT09XzB4NmQ2NCgnMHg4NjQnKSl7dmFyIF8weDVjMjc3Nz1fMHgyOGVmMThbXzB4MjJiNzUyWydrZXknXSgpXT1fMHgyOGVmMThbXzB4MjJiNzUyW18weDZkNjQoJzB4MTJmJyldKCldfHxbXTtfMHg1YzI3NzdbJ3B1c2gnXSh7J21lc3NhZ2UnOl8weDM0MGJhNVsnbWVzc2FnZSddKCksJ3N0YWNrJzpfW18weDZkNjQoJzB4YTYnKV0oXzB4MzQwYmE1W18weDZkNjQoJzB4MTUyJyldKCkpW18weDZkNjQoJzB4YTcnKV0oZnVuY3Rpb24oXzB4MjhlZjE4KXtyZXR1cm4gXzB4M2M5MmRjW18weDZkNjQoJzB4NjY3JyldKF8weDI4ZWYxOCxfMHgyOGVmMThbXzB4NmQ2NCgnMHgxNTQnKV0oKSk7fSlbXzB4NmQ2NCgnMHgyOWMnKV0oZnVuY3Rpb24oXzB4MjhlZjE4KXtyZXR1cm4gXzB4MjhlZjE4O30pWyd2YWx1ZSddKCl9KTt9ZWxzZXtyZXR1cm5+XzB4MjhlZjE4W18weDZkNjQoJzB4MTdhJyldKF8weDZkNjQoJzB4ODY1JykpJiZfMHgyMmI3NTImJihhcmd1bWVudHNbMHgxXVtfMHg2ZDY0KCcweDg2NicpXT0oXzB4MjJiNzUyW18weDZkNjQoJzB4ODY2JyldfHxbXSlbJ2NvbmNhdCddKF8weDM0MGJhNSkpLF8weDNjOTJkY1tfMHg2ZDY0KCcweGQ0JyldKHRoaXMsYXJndW1lbnRzKTt9fXJldHVybiBfMHgyOGVmMTg7fWVsc2V7dmFyIF8weDJhY2QyMj17fTtfWydlYWNoJ10odGhpc1tfMHg2ZDY0KCcweDdlYScpXSxmdW5jdGlvbihfMHhmM2E1NmUpe3ZhciBfMHg1YTNiNzQ9XzB4MzQwYmE1W18weDZkNjQoJzB4MWY5JyldWydmaWxlQnlJZCddKF8weGYzYTU2ZVsnaWQnXSk7aWYoXzB4NWEzYjc0JiZfMHg1YTNiNzRbJ2hhc1JlcG9ydGFibGVDb3ZlcmFnZU9yVGVzdEZpbGUnXSgpKXtfMHg1YTNiNzQmJl8weDVhM2I3NFtfMHg2ZDY0KCcweDdhNycpXSgpLF8weDM0MGJhNVsnX21vZGVsJ11bXzB4NmQ2NCgnMHg3MTUnKV0oXzB4NWEzYjc0KTt2YXIgXzB4MWY3MGYyPV8weDM0MGJhNVtfMHg2ZDY0KCcweDc3MycpXShfMHg1YTNiNzQpO18weDFmNzBmMiYmXzB4MWY3MGYyW18weDZkNjQoJzB4Nzc0JyldJiYoZGVsZXRlIF8weDFmNzBmMltfMHg2ZDY0KCcweDc3NCcpXSxfMHgyYWNkMjJbXzB4NWEzYjc0W18weDZkNjQoJzB4MTJmJyldKCldPV8weDFmNzBmMik7fX0pO3ZhciBfMHg0MWI2ODU9dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDQ3OCcpXSgpO19bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4MmFjZDIyKXx8KHRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHg3MTcnKV0oKSx0aGlzW18weDZkNjQoJzB4M2E2JyldKHsndHlwZSc6XzB4NmQ2NCgnMHg4MjgnKSwnY2hhbmdlcyc6XzB4MmFjZDIyfSkpLHRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgyOWMnKV1bXzB4NmQ2NCgnMHg0MycpXVtfMHg2ZDY0KCcweDI5ZCcpXT9fMHg0MWI2ODVbXzB4NmQ2NCgnMHgzY2QnKV09dGhpc1tfMHg2ZDY0KCcweDQ3YScpXSgpOl8weDQxYjY4NT10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4NDc4JyldKCksdGhpc1tfMHg2ZDY0KCcweDNhNicpXShfW18weDZkNjQoJzB4MzQnKV0oeyd0eXBlJzpfMHg2ZDY0KCcweDQ3YicpfSxfMHg0MWI2ODUpKTt9fSx7fSl8fHt9O3JldHVybiBfW18weDZkNjQoJzB4YTcnKV0oXzB4MjhlZjE4LGZ1bmN0aW9uKF8weDI4ZWYxOCl7aWYoXzB4NmQ2NCgnMHg4NjcnKT09PV8weDZkNjQoJzB4ODY3Jykpe3ZhciBfMHg0ODY4NjQ9e307cmV0dXJuIF9bXzB4NmQ2NCgnMHgzYScpXShfMHgyOGVmMThbXzB4NmQ2NCgnMHg2YWInKV0oKSxmdW5jdGlvbihfMHgyOGVmMTgpe3ZhciBfMHgyMmI3NTI9XzB4MjhlZjE4WydwYXRoJ10oKSxfMHg1YzI3Nzc9JzonK19bJ2xhc3QnXShfMHgyMmI3NTIpLF8weDFiZWJhMj1fMHg0ODY4NjQ7XzB4MjJiNzUyWydsZW5ndGgnXT4weDEmJl9bXzB4NmQ2NCgnMHgzYScpXShfW18weDZkNjQoJzB4ODY4JyldKF8weDIyYjc1MixfMHgyMmI3NTJbXzB4NmQ2NCgnMHg4ZScpXS0weDEpLGZ1bmN0aW9uKF8weDI4ZWYxOCl7XzB4MjhlZjE4PSc6JytfMHgyOGVmMTg7dmFyIF8weDM0MGJhNT1fMHgxYmViYTJbXzB4MjhlZjE4XTtfMHgzNDBiYTV8fChfMHgzNDBiYTU9e30sXzB4MWJlYmEyW18weDI4ZWYxOF09XzB4MzQwYmE1KSxfMHgxYmViYTI9XzB4MzQwYmE1O30pO3ZhciBfMHgyNmUzY2Y9X1tfMHg2ZDY0KCcweGE2JyldKF8weDI4ZWYxOFsnY292ZXJlZEZpbGVzJ10oKSlbXzB4NmQ2NCgnMHgyOWMnKV0oZnVuY3Rpb24oXzB4MjhlZjE4KXtyZXR1cm4gXzB4MjhlZjE4W18weDZkNjQoJzB4MjAyJyldKCk7fSlbXzB4NmQ2NCgnMHhhNycpXShmdW5jdGlvbihfMHgyOGVmMTgpe2lmKF8weDZkNjQoJzB4ODY5JykhPT0nSFNhb3UnKXtyZXR1cm4gXzB4MjhlZjE4WydrZXknXSgpO31lbHNle18weDM0MGJhNVtfMHgyOGVmMThbXzB4NmQ2NCgnMHgxMmYnKV0oKV09XzB4MjhlZjE4O319KVtfMHg2ZDY0KCcweGE5JyldKCk7X1snaXNFbXB0eSddKF8weDI2ZTNjZikmJihfMHgyNmUzY2Y9dm9pZCAweDApLF8weDFiZWJhMltfMHg1YzI3NzddPXsnaXNUZXN0JzohMHgwLCdmaXJzdEZhaWxpbmdPclNpbmdsZUV4ZWN1dGVkJzpfMHgyOGVmMTg9PT1fMHgzNDBiYTV8fHZvaWQgMHgwLCduYW1lJzpfMHg1YzI3NzdbJ3N1YnN0ciddKDB4MSksJ3RpbWUnOl8weDI4ZWYxOFsndGltZSddKCksJ3Nsb3cnOl8weDI4ZWYxOFsnc2xvdyddKCksJ2xpbmUnOl8weDI4ZWYxOFsnc3RhcnRSYW5nZSddKCk/XzB4MjhlZjE4W18weDZkNjQoJzB4MTUzJyldKClbXzB4NmQ2NCgnMHgxNTUnKV0oKToweDEsJ2xvZ3MnOl9bJ21hcCddKF8weDI4ZWYxOFtfMHg2ZDY0KCcweDU2MCcpXSgpLGZ1bmN0aW9uKF8weDI4ZWYxOCl7aWYoXzB4NmQ2NCgnMHg4NmEnKT09PV8weDZkNjQoJzB4ODZhJykpe3ZhciBfMHgzNDBiYTU9eydtZXNzYWdlJzpfMHgyOGVmMThbXzB4NmQ2NCgnMHgyMjInKV0oKX07cmV0dXJuIF8weDI4ZWYxOFtfMHg2ZDY0KCcweDE1OCcpXSgpJiZfMHgyOGVmMThbXzB4NmQ2NCgnMHgxNTgnKV0oKVtfMHg2ZDY0KCcweDIwMicpXSgpJiYoXzB4MzQwYmE1W18weDZkNjQoJzB4MzFlJyldPV8weDNjOTJkY1tfMHg2ZDY0KCcweDY2NycpXShfMHgyOGVmMTgsXzB4MjhlZjE4W18weDZkNjQoJzB4MTU4JyldKClbXzB4NmQ2NCgnMHg0ZScpXSgpKSksXzB4MzQwYmE1O31lbHNle3ZhciBfMHhiOWY4YmY9dGhpcztpZihfMHg1NDdlMGEoJ0ZpbGVceDIwYWRkZWQ6XHgyMCVzJyxfMHgyOGVmMTgpLF8weDM0MGJhNSYmXzB4MzQwYmE1W18weDZkNjQoJzB4NWZkJyldKXt2YXIgXzB4MjY1OTRlPV8weDM0MGJhNVtfMHg2ZDY0KCcweDVmZCcpXSxfMHg1YzVhMDc9XzB4MWJlYmEyW18weDZkNjQoJzB4OCcpXShfMHgyOGVmMTgpW18weDZkNjQoJzB4MzdiJyldKDB4MSk7cmV0dXJuIF8weDI2NTk0ZVtfMHg2ZDY0KCcweDE2MycpXT0weDEsXzB4MjY1OTRlWydpZCddPXRoaXNbXzB4NmQ2NCgnMHg1YmEnKV1bJ2dlbmVyYXRlJ10oXzB4MjhlZjE4KSxfMHgyNjU5NGVbJ3RzJ109XzB4MzQwYmE1W18weDZkNjQoJzB4MjFiJyldW18weDZkNjQoJzB4MWVjJyldKCksXzB4MjY1OTRlWyd0eXBlJ109XzB4NWM1YTA3JiZfMHg1YzVhMDdbJ3RvTG93ZXJDYXNlJ10oKSxfMHgyNjU5NGVbXzB4NmQ2NCgnMHgxNjYnKV09XzB4MjY1OTRlW18weDZkNjQoJzB4MTY2JyldfHxfMHgyYWM5ZltfMHgyNjU5NGVbJ3R5cGUnXV0sXzB4MjY1OTRlWydwYXRoJ109XzB4MjhlZjE4LHZvaWQgMHgwPT09XzB4MjY1OTRlW18weDZkNjQoJzB4M2U0JyldJiYoXzB4MjY1OTRlW18weDZkNjQoJzB4M2U0JyldPV8weDJmYjUxNFtfMHg2ZDY0KCcweDVmZicpXShfMHgyNjU5NGVbXzB4NmQ2NCgnMHgzMCcpXSxfMHgyOGVmMTgsXzB4YjlmOGJmWydfc2V0dGluZ3MnXVtfMHg2ZDY0KCcweDYwMCcpXVtfMHg2ZDY0KCcweDg2YicpXSkpLHRoaXNbXzB4NmQ2NCgnMHg1YWUnKV1bXzB4MjhlZjE4XT1fMHgyNjU5NGUsdGhpc1tfMHg2ZDY0KCcweDVhZicpXVtfMHgyNjU5NGVbJ2lkJ11dPV8weDI2NTk0ZSx0aGlzW18weDZkNjQoJzB4NWFkJyldJiYodGhpc1tfMHg2ZDY0KCcweDY1JyldW18weDZkNjQoJzB4MTY5JyldKF8weDI4ZWYxOCksdGhpc1tfMHg2ZDY0KCcweDQ4OCcpXShfMHgyNjU5NGUpWyd0aGVuJ10oZnVuY3Rpb24oXzB4NGUyYjJiKXtyZXR1cm4gXzB4YjlmOGJmW18weDZkNjQoJzB4MTZhJyldKF8weDZkNjQoJzB4NGU0JyksXzB4NGUyYjJiKTt9KVtfMHg2ZDY0KCcweDdmJyldKGZ1bmN0aW9uKF8weDJmOWVjNCl7cmV0dXJuIF8weDI5MDM2OShfMHgyZjllYzQpO30pKSxfMHgyNjU5NGU7fV8weDI5MDM2OShfMHg2ZDY0KCcweDg2YycpLF8weDI4ZWYxOCk7fX0pLCdlcnJvcnMnOl9bJ21hcCddKF8weDI4ZWYxOFtfMHg2ZDY0KCcweDMwMycpXSgpLGZ1bmN0aW9uKF8weDI4ZWYxOCl7aWYoXzB4NmQ2NCgnMHg4NmQnKT09PSdOSGRYdicpe3JldHVybnsnbWVzc2FnZSc6XzB4MjhlZjE4W18weDZkNjQoJzB4MjMnKV0oKSwnc3RhY2snOl9bXzB4NmQ2NCgnMHhhNicpXShfMHgyOGVmMThbXzB4NmQ2NCgnMHgxNTInKV0oKSlbXzB4NmQ2NCgnMHhhNycpXShmdW5jdGlvbihfMHgyOGVmMTgpe3JldHVybiBfMHgzYzkyZGNbJ19idWlsZExvY2F0aW9uJ10oXzB4MjhlZjE4LF8weDI4ZWYxOFtfMHg2ZDY0KCcweDE1NCcpXSgpKTt9KVtfMHg2ZDY0KCcweDI5YycpXShmdW5jdGlvbihfMHgyOGVmMTgpe2lmKF8weDZkNjQoJzB4ODZlJykhPT1fMHg2ZDY0KCcweDg2ZScpKXtyZXR1cm4gXzB4M2M5MmRjKHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXt2YXIgXzB4MTNiYzMsXzB4NWJmZjIzLF8weDI3NmRiNSxfMHg5MmIyMmM7cmV0dXJuIF8weDVjMjc3Nyh0aGlzLGZ1bmN0aW9uKF8weDM3MTEwZCl7c3dpdGNoKF8weDM3MTEwZFtfMHg2ZDY0KCcweGRmJyldKXtjYXNlIDB4MDpyZXR1cm4gXzB4MzcxMTBkW18weDZkNjQoJzB4ZTInKV1bXzB4NmQ2NCgnMHgxYycpXShbMHgwLDB4MiwsMHgzXSksXzB4MTNiYzM9WyctLWhlYWRsZXNzJyxfMHg2ZDY0KCcweDg2ZicpLF8weDZkNjQoJzB4MTc0JyldLF8weDViZmYyMz1fMHgyOGVmMTgoJ29zJyksJ0xpbnV4Jz09PV8weDViZmYyM1sndHlwZSddKCkmJihfMHgxM2JjM1tfMHg2ZDY0KCcweDFjJyldKF8weDZkNjQoJzB4MTc2JykpLF8weDEzYmMzW18weDZkNjQoJzB4MWMnKV0oJy0tZGlzYWJsZS1zZXR1aWQtc2FuZGJveCcpKSxfMHgyNzZkYjU9dGhpcyxbMHg0LF8weDQ4Njg2NFtfMHg2ZDY0KCcweDg3MCcpXSh7J2Nocm9tZUZsYWdzJzp0aGlzWydfZmxhZ3MnXXx8XzB4MTNiYzMsJ2Nocm9tZVBhdGgnOnRoaXNbXzB4NmQ2NCgnMHhmMicpXSwnbG9nTGV2ZWwnOl8weDZkNjQoJzB4MTc3Jyl9KV07Y2FzZSAweDE6cmV0dXJuIF8weDI3NmRiNVtfMHg2ZDY0KCcweDExNicpXT1fMHgzNzExMGRbXzB4NmQ2NCgnMHgxMTMnKV0oKSxbMHgzLDB4M107Y2FzZSAweDI6cmV0dXJuIF8weDkyYjIyYz1fMHgzNzExMGRbXzB4NmQ2NCgnMHgxMTMnKV0oKSx0aGlzW18weDZkNjQoJzB4MTc4JyldKF8weDkyYjIyYyksWzB4MywweDNdO2Nhc2UgMHgzOnJldHVyblsweDJdO319KTt9KTt9ZWxzZXtyZXR1cm4gXzB4MjhlZjE4O319KVtfMHg2ZDY0KCcweGE5JyldKCksJ2FjdHVhbCc6XzB4MjhlZjE4W18weDZkNjQoJzB4MjI4JyldKCksJ2V4cGVjdGVkJzpfMHgyOGVmMThbXzB4NmQ2NCgnMHgyMjcnKV0oKX07fWVsc2V7dmFyIF8weDE4OTMzZj1fMHgyOGVmMTgoXzB4NmQ2NCgnMHg1Y2QnKSlbXzB4NmQ2NCgnMHg4NzEnKV1bXzB4NmQ2NCgnMHg4MScpXSxfMHg0NzFlYzQ9XzB4MTg5MzNmW18weDZkNjQoJzB4ODcyJyldO18weDE4OTMzZltfMHg2ZDY0KCcweDg3MicpXT1mdW5jdGlvbihfMHg0ZDA3OGIpe3JldHVybiBfMHg0ZDA3OGI9PT1fMHgzNDBiYTU/XzB4MjJiNzUyKF8weDQ3MWVjNFsnYmluZCddKHRoaXMpKTpfMHg0NzFlYzRbXzB4NmQ2NCgnMHgzJyldKHRoaXMsXzB4NGQwNzhiKTt9O319KSwnY292ZXJlZEZpbGVzJzpfMHgyNmUzY2Z9O30pLHsncGF0aCc6XzB4MjhlZjE4W18weDZkNjQoJzB4NGUnKV0oKSwnYWN0aW9uJzpfMHgyMmI3NTIsJ3Rlc3RzJzpfMHgzYzkyZGNbXzB4NmQ2NCgnMHg2MDknKV0oXzB4NDg2ODY0KSwnZXJyb3JzJzpfMHg1YzI3NzdbXzB4MjhlZjE4W18weDZkNjQoJzB4MTJmJyldKCldfTt9ZWxzZXt2YXIgXzB4ZGM3NzUxPXRoaXM7XzB4ZGM3NzUxW18weDZkNjQoJzB4MmQ1JyldJiYoXzB4MjhlZjE4W18weDZkNjQoJzB4M2EyJyldJiZfWydlYWNoJ10oXzB4MjhlZjE4W18weDZkNjQoJzB4M2EyJyldLGZ1bmN0aW9uKF8weDNmNDM3OSl7X1snZWFjaCddKF8weDNmNDM3OVtfMHg2ZDY0KCcweDIzNicpXSxmdW5jdGlvbihfMHgzZjQzNzkpeyhfMHgzZjQzNzl8fF8weDNmNDM3OVsndmFsdWVCYWcnXXx8XzB4M2Y0Mzc5W18weDZkNjQoJzB4MjI2JyldW18weDZkNjQoJzB4MTM2JyldKSYmXzB4M2Y0Mzc5W18weDZkNjQoJzB4MjI2JyldW18weDZkNjQoJzB4MTM2JyldW18weDZkNjQoJzB4M2JmJyldPT09XzB4ZGM3NzUxW18weDZkNjQoJzB4MmQ1JyldJiZfMHhkYzc3NTFbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHgzMjcnKV0oeydkYXRhJzpfMHgzZjQzNzlbJ3ZhbHVlQmFnJ11bXzB4NmQ2NCgnMHgxMzYnKV19KTt9KTt9KSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDJkNScpXSksdGhpc1tfMHg2ZDY0KCcweDFjZScpXShfMHgyOGVmMTgpO319KTt9LF8weDM0MGJhNVtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4NjY3JyldPWZ1bmN0aW9uKF8weDI4ZWYxOCxfMHgzNDBiYTUpe2lmKCdZaVB5Sic9PT0nQ3ZSUEInKXt0aGlzW18weDZkNjQoJzB4NzMxJyldW18weDZkNjQoJzB4MTNjJyldKCk7fWVsc2V7aWYodGhpc1tfMHg2ZDY0KCcweDc3NScpXShfMHgzNDBiYTUpKXt2YXIgXzB4MjJiNzUyPXsncGF0aCc6XzB4MzQwYmE1fTtyZXR1cm4gXzB4MjhlZjE4WydyYW5nZSddKCk/KF8weDIyYjc1MltfMHg2ZDY0KCcweDE3MCcpXT1fMHgyOGVmMThbJ3JhbmdlJ10oKVtfMHg2ZDY0KCcweDE1NScpXSgpLF8weDIyYjc1MltfMHg2ZDY0KCcweDFjOCcpXT1fMHgyOGVmMThbXzB4NmQ2NCgnMHgxNTcnKV0oKVtfMHg2ZDY0KCcweDE1NicpXSgpKTpfMHgyOGVmMThbXzB4NmQ2NCgnMHgxNzAnKV0oKSYmKF8weDIyYjc1MltfMHg2ZDY0KCcweDE3MCcpXT1fMHgyOGVmMThbXzB4NmQ2NCgnMHgxNzAnKeKAi10oKSksXzB4MjJiNzUyW18weDZkNjQoJzB4MjI0JyldPV8weDI4ZWYxOFtfMHg2ZDY0KCcweDIyNCcpXSgpLF8weDIyYjc1Mjt9fX0sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg2MDknKV09ZnVuY3Rpb24oXzB4MjhlZjE4KXt2YXIgXzB4MzQwYmE1PXRoaXM7cmV0dXJuIF9bXzB4NmQ2NCgnMHhhNycpXShfMHgyOGVmMTgsZnVuY3Rpb24oXzB4MjhlZjE4LF8weDIyYjc1Mil7aWYoXzB4MjhlZjE4W18weDZkNjQoJzB4NjA4JyldPT09ITB4MClyZXR1cm4gZGVsZXRlIF8weDI4ZWYxOFtfMHg2ZDY0KCcweDYwOCcpXSxfMHgyOGVmMTg7dmFyIF8weDNjOTJkYz1fMHgyMmI3NTJbJ3N1YnN0ciddKDB4MSksXzB4NWMyNzc3PV8weDJhYzlmW18weDZkNjQoJzB4ODczJyldKF8weDNjOTJkYyk7cmV0dXJueyduYW1lJzpfMHg1YzI3NzcsJ2ludGVybmFsTmFtZSc6XzB4M2M5MmRjLCd0ZXN0cyc6XzB4MzQwYmE1WydfYnVpbGRBcnJheVRlc3RTdHJ1Y3R1cmUnXShfMHgyOGVmMTgpfTt9KTt9LF8weDM0MGJhNVtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MzY0JyldPWZ1bmN0aW9uKF8weDI4ZWYxOCxfMHgzNDBiYTUpe2lmKF8weDZkNjQoJzB4ODc0JykhPT1fMHg2ZDY0KCcweDg3NCcpKXtyZXR1cm4gXzB4MjhlZjE4W18weDZkNjQoJzB4NDVkJyldW18weDM0MGJhNV07fWVsc2V7dmFyIF8weDIyYjc1Mj10aGlzLF8weDNjOTJkYz1mdW5jdGlvbihfMHgyOGVmMTgpe3JldHVybiBwcm9jZXNzW18weDZkNjQoJzB4NGQnKV0oZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDg3NScpPT09J2FXRnZCJyl7XzB4MjJiNzUyKF8weDFiZWJhMik7fWVsc2V7dHJ5e2lmKF8weDZkNjQoJzB4ODc2JykhPT1fMHg2ZDY0KCcweDg3NicpKXtyZXR1cm4gXzB4MjJiNzUyW18weDZkNjQoJzB4MzY0JyldKHsnZmlsZXMnOl8weDIyYjc1MltfMHg2ZDY0KCcweDM2NScpXShfMHgyOGVmMTgpfSk7fWVsc2V7dmFyIF8weDM0MGJhNT1fMHgyMmI3NTJbXzB4NmQ2NCgnMHgyYWYnKStfMHgyOGVmMThbJ3R5cGUnXV07XzB4MzQwYmE1JiZfMHgzNDBiYTVbXzB4NmQ2NCgnMHgzJyldKF8weDIyYjc1MixfMHgyOGVmMTgpO319Y2F0Y2goXzB4ZjNhNzVkKXt2YXIgXzB4NWMyNzc3PSd1bmtub3duJztfMHgyOGVmMTgmJihfMHg1YzI3Nzc9XzB4MjhlZjE4W18weDZkNjQoJzB4MzAnKV0pLGNvbnNvbGVbXzB4NmQ2NCgnMHg4ZCcpXShfMHg2ZDY0KCcweDY0ZCcpK18weDVjMjc3NytfMHg2ZDY0KCcweDY0ZScpK18weGYzYTc1ZFsnbWVzc2FnZSddKTt9fX0pO30sXzB4NWMyNzc3PWZ1bmN0aW9uKCl7XzB4MjJiNzUyWydfd3NzJ109bmV3IF8weDU0N2UwYSh7J3BvcnQnOl8weDI4ZWYxOCwndmVyaWZ5Q2xpZW50JzpmdW5jdGlvbihfMHgyOGVmMTgpe3ZhciBfMHgzNDBiYTU9ITB4MTt0cnl7aWYoXzB4NmQ2NCgnMHg4NzcnKT09PV8weDZkNjQoJzB4ODc3Jykpe3ZhciBfMHgyMmI3NTI9XzB4Mzg5ZWM4W18weDZkNjQoJzB4MWRjJyldKF8weDI4ZWYxOFsnb3JpZ2luJ10pLF8weDNjOTJkYz1fMHgyMmI3NTJbJ2hvc3RuYW1lJ107XzB4MzQwYmE1PV8weDZkNjQoJzB4ODc4Jyk9PT1fMHgzYzkyZGN8fF8weDZkNjQoJzB4ODc5Jyk9PT1fMHgzYzkyZGN8fF8weDZkNjQoJzB4MjE1Jyk9PT1fMHgzYzkyZGN8fF8weDZkNjQoJzB4MTQ2Jyk9PT1fMHgzYzkyZGN8fCc6OjEnPT09XzB4M2M5MmRjO31lbHNle3JldHVybid3aW4zMic9PT1wcm9jZXNzW18weDZkNjQoJzB4NWM0JyldJiZfMHgyOGVmMTg/XzB4MjhlZjE4W18weDZkNjQoJzB4OTEnKV0oL1xcL2csJy8nKTpfMHgyOGVmMTg7fX1jYXRjaChfMHgzNzQ4M2Qpe31yZXR1cm4gXzB4MzQwYmE1O319KSxfMHgyMmI3NTJbXzB4NmQ2NCgnMHg2NjQnKV1bJ29uJ10oXzB4NmQ2NCgnMHg4N2EnKSxmdW5jdGlvbihfMHgyOGVmMTgpe18weDE2OTQxZSgnVUlceDIwY2xpZW50XHgyMGNvbm5lY3RlZCcpLF8weDIyYjc1MlsnX21vZGVsJ109XzB4MzQwYmE1LF8weDI4ZWYxOFtfMHg2ZDY0KCcweDJmNCcpXT0hMHgxLF8weDI4ZWYxOFtfMHg2ZDY0KCcweDg1YycpXT0hMHgwLCFfMHgyMmI3NTJbXzB4NmQ2NCgnMHgzYTUnKV1bXzB4NmQ2NCgnMHg4ZScpXSYmXzB4MjJiNzUyW18weDZkNjQoJzB4MWY5JyldWydvbiddKF8weDZkNjQoJzB4MjMnKSxfMHgzYzkyZGMpLF8weDIyYjc1MltfMHg2ZDY0KCcweDNhNScpXVsncHVzaCddKF8weDI4ZWYxOCksXzB4MjhlZjE4WydvbiddKF8weDZkNjQoJzB4MjMnKSxmdW5jdGlvbihfMHgzNDBiYTUpe3ZhciBfMHgzYzkyZGM7dHJ5e18weDNjOTJkYz1KU09OW18weDZkNjQoJzB4MWRjJyldKF8weDM0MGJhNSk7fWNhdGNoKF8weDRiOGFiZil7cmV0dXJuIHZvaWQgY29uc29sZVsnZXJyb3InXShfMHg2ZDY0KCcweDg3YicpK18weDM0MGJhNSsnLFx4MjAnKyhfMHg0YjhhYmYmJl8weDRiOGFiZltfMHg2ZDY0KCcweDIzJyldKSk7fV8weDE2OTQxZShfMHg2ZDY0KCcweDg3YycpLF8weDNjOTJkY1tfMHg2ZDY0KCcweDMwJyldKTt2YXIgXzB4NDg2ODY0PV8weDIyYjc1MltfMHgzYzkyZGNbXzB4NmQ2NCgnMHgzMCcpXV07XzB4NDg2ODY0JiZfMHg0ODY4NjRbXzB4NmQ2NCgnMHgzJyldKF8weDIyYjc1MixfMHgzYzkyZGMsXzB4MjhlZjE4KTt9KSxfMHgyOGVmMThbJ29uJ10oXzB4NmQ2NCgnMHgxM2MnKSxmdW5jdGlvbigpe18weDE2OTQxZShfMHg2ZDY0KCcweDgwOScpKSxfMHgyMmI3NTJbXzB4NmQ2NCgnMHgzYTUnKV09XzB4MjJiNzUyW18weDZkNjQoJzB4M2E1JyldWydmaWx0ZXInXShmdW5jdGlvbihfMHgzNDBiYTUpe3JldHVybiBfMHgzNDBiYTUhPV8weDI4ZWYxODt9KSwhXzB4MjJiNzUyW18weDZkNjQoJzB4M2E1JyldWydsZW5ndGgnXSYmXzB4MjJiNzUyW18weDZkNjQoJzB4MWY5JyldWydyZW1vdmVMaXN0ZW5lciddKF8weDZkNjQoJzB4MjMnKSxfMHgzYzkyZGMpO30pLF8weDIyYjc1MltfMHg2ZDY0KCcweDNhNicpXSh7J3R5cGUnOl8weDZkNjQoJzB4ODA2JyksJ3Byb2plY3QnOnsnbmFtZSc6XzB4MjJiNzUyW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4ODdkJyldKCksJ3BhdGgnOl8weDIyYjc1MltfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDY1MCcpXSgpLCdjb25maWcnOl8weDIyYjc1MltfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDg3ZScpXSgpfSwndmVyc2lvbic6XzB4MjJiNzUyW18weDZkNjQoJzB4MWY5JyldWydjb3JlVmVyc2lvbiddKCl9LF8weDI4ZWYxOCk7fSksXzB4MTY5NDFlKF8weDZkNjQoJzB4ODdmJyksXzB4MjhlZjE4KTt9O18weDIyYjc1MltfMHg2ZDY0KCcweDg4MCcpXShfMHgyNzNjOWEpW18weDZkNjQoJzB4N2UnKV0oZnVuY3Rpb24oXzB4MjhlZjE4KXtpZihfMHgyOGVmMTgpdHJ5e3ZhciBfMHgzNDBiYTU9XzB4MWJlYmEyKCksXzB4M2M5MmRjPXZvaWQgMHgwO3RyeXtfMHgzYzkyZGM9XzB4MmZiNTE0W18weDZkNjQoJzB4ZjAnKV0oXzB4MmZiNTE0W18weDZkNjQoJzB4NGMnKV0oXzB4MmZiNTE0W18weDZkNjQoJzB4MjE3JyldKHByb2Nlc3NbXzB4NmQ2NCgnMHg1ZWQnKV1bXzB4NmQ2NCgnMHg3NDknKV0pLCcuLicsJ3dhbGxhYnktYXBwJykpLF8weDVjZjY3ZFtfMHg2ZDY0KCcweDYwYicpXShfMHgzYzkyZGMpJiZfMHg1Y2Y2N2RbXzB4NmQ2NCgnMHg2MGInKV0oXzB4MmZiNTE0W18weDZkNjQoJzB4NGMnKV0oXzB4M2M5MmRjLF8weDZkNjQoJzB4ODgxJykpKXx8KF8weDNjOTJkYz12b2lkIDB4MCk7fWNhdGNoKF8weDMwMmI5Zil7XzB4M2M5MmRjPXZvaWQgMHgwO31fMHgzYzkyZGM/XzB4MzQwYmE1Wyd1c2UnXShfMHgxYmViYTJbXzB4NmQ2NCgnMHg4ODInKV0oXzB4M2M5MmRjKSk6XzB4MzQwYmE1W18weDZkNjQoJzB4MTY0JyldKCcvJyxmdW5jdGlvbihfMHgyOGVmMTgsXzB4MzQwYmE1KXtyZXR1cm4gXzB4MzQwYmE1W18weDZkNjQoJzB4MWFkJyldKF8weDMwMWFkMyk7fSksXzB4MjJiNzUyW18weDZkNjQoJzB4MTNiJyldPV8weDI2ZTNjZltfMHg2ZDY0KCcweDg4MycpXShfMHgzNDBiYTUpWydvbiddKF8weDZkNjQoJzB4OGQnKSxmdW5jdGlvbigpe3JldHVybiBfMHg1YzI3NzcoKTt9KVtfMHg2ZDY0KCcweDg4NCcpXShfMHg2ZDY0KCcweDg4NScpLGZ1bmN0aW9uKCl7cmV0dXJuIF8weDVjMjc3NygpO30pW18weDZkNjQoJzB4ODg2JyldKF8weDI4ZWYxOCk7fWNhdGNoKF8weDIzYTIwNCl7XzB4NWMyNzc3KCk7fWVsc2UgXzB4NWMyNzc3KCk7fSk7fX0sXzB4MzQwYmE1W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHgzYTYnKV09ZnVuY3Rpb24oXzB4MjhlZjE4LF8weDM0MGJhNSl7aWYoJ3RWVGhIJz09PV8weDZkNjQoJzB4ODg3Jykpe18weDM0MGJhNSYmKF8weDZkNjQoJzB4ODg4Jyk9PT1fMHgyOGVmMThbXzB4NmQ2NCgnMHgzMCcpXT8oXzB4MzQwYmE1W18weDZkNjQoJzB4ODg5JyldPTB4MCxfMHgyOGVmMThbJ3NlcSddPV8weDM0MGJhNVsnX3NvbWVSZXN1bHRzUmVzcG9uc2VTZXFOdW0nXSsrKTpfMHg2ZDY0KCcweDg4YScpPT09XzB4MjhlZjE4Wyd0eXBlJ10mJihfMHgyOGVmMThbJ3NlcSddPV8weDM0MGJhNVtfMHg2ZDY0KCcweDg4OScpXSsrKSksXzB4MTY5NDFlKF8weDZkNjQoJzB4ODhiJyksXzB4MjhlZjE4W18weDZkNjQoJzB4MzAnKV0pO3ZhciBfMHgyMmI3NTI9SlNPTlsnc3RyaW5naWZ5J10oXzB4MjhlZjE4KTtfMHgzNDBiYTU/XzB4MzQwYmE1W18weDZkNjQoJzB4MWFkJyldKF8weDIyYjc1Mik6X1snZWFjaCddKHRoaXNbJ19jb25uZWN0aW9ucyddLGZ1bmN0aW9uKF8weDI4ZWYxOCl7cmV0dXJuIF8weDI4ZWYxOFsnc2VuZCddKF8weDIyYjc1Mik7fSk7fWVsc2V7dmFyIF8weDMxZmZjMT10aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MmFjJyldKF8weDI4ZWYxOFtfMHg2ZDY0KCcweDRlJyldKTtfMHgzMWZmYzEmJl8weDMxZmZjMVtfMHg2ZDY0KCcweDc4NScpXSgpO319LF8weDM0MGJhNVtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4N2U3JyldPWZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg4OGMnKT09PSdlbWZBUicpe3ZhciBfMHgyOGVmMTg9dGhpcztyZXR1cm4gUVsnYWxsJ10oX1snbWFwJ10oXzB4MzQ2ZjM4LGZ1bmN0aW9uKF8weDM0MGJhNSl7cmV0dXJuIF8weDI4ZWYxOFtfMHg2ZDY0KCcweDg4MCcpXShfMHgzNDBiYTUpO30pKVtfMHg2ZDY0KCcweDdlJyldKGZ1bmN0aW9uKF8weDI4ZWYxOCl7aWYoXzB4NmQ2NCgnMHg4OGQnKSE9PV8weDZkNjQoJzB4ODhkJykpe2lmKF8weDM0MGJhNSl7aWYoXzB4NmQ2NCgnMHgzOGMnKT09dHlwZW9mIF8weDIyYjc1Mil7aWYoIV8weDNjOTJkY3x8IV8weDNjOTJkY1tfMHg2ZDY0KCcweDcxNCcpXSlyZXR1cm4gXzB4MmZiNTE0KF8weDM0MGJhNSxfMHgyMmI3NTIsXzB4M2M5MmRjKTt2YXIgXzB4ZWZmMDdmPV8weDI4ZWYxOCgnbWljcm9tYXRjaCcpWydpc01hdGNoJ107cmV0dXJuIF8weGVmZjA3ZihfMHgzNDBiYTUsXzB4MjJiNzUyLHsnZG90JzohMHgwfSk7fXJldHVybih0aGlzWydwbGF0Zm9ybURlcGVuZGVudFBhdGgnXShfMHgzYzkyZGMmJl8weDNjOTJkY1tfMHg2ZDY0KCcweDRiYycpXT8nJzonLi8nKSt0aGlzW18weDZkNjQoJzB4NGJkJyldKF8weDM0MGJhNSkpW18weDZkNjQoJzB4MzA0JyldKF8weDIyYjc1Mik7fX1lbHNle3JldHVybiBfW18weDZkNjQoJzB4MTUxJyldKF8weDI4ZWYxOCxmdW5jdGlvbihfMHgyOGVmMTgpe3JldHVybiEhXzB4MjhlZjE4O30pO319KVtfMHg2ZDY0KCcweDdlJyldKGZ1bmN0aW9uKF8weDI4ZWYxOCl7cmV0dXJuIF8weDI4ZWYxOHx8UVtfMHg2ZDY0KCcweDFiNicpXShuZXcgRXJyb3IoXzB4NmQ2NCgnMHg4OGUnKSkpO30pO31lbHNle18weDM0MGJhNT17J2Vycm9yJzpfMHg1Y2Y2N2R9O319LF8weDM0MGJhNVtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4ODgwJyldPWZ1bmN0aW9uKF8weDI4ZWYxOCl7aWYoXzB4NmQ2NCgnMHg4OGYnKSE9PV8weDZkNjQoJzB4ODhmJykpe3JldHVybiBfMHgzNDZmMzgoXzB4MjhlZjE4LF8weDIyYjc1Mil8fF8weDI3M2M5YShfMHgyOGVmMTgpfHxfMHgzMDFhZDMoXzB4MjhlZjE4KXx8XzB4NTIyZWE2KF8weDI4ZWYxOCxfMHgzNDBiYTUpO31lbHNle3ZhciBfMHgzNDBiYTU9ZnVuY3Rpb24oXzB4MzQwYmE1KXtyZXR1cm4gZnVuY3Rpb24oXzB4MjJiNzUyKXt2YXIgXzB4M2M5MmRjPV8weDQ4Njg2NFtfMHg2ZDY0KCcweDg4MycpXSgpW18weDZkNjQoJzB4ODg0JyldKCdlcnJvcicsZnVuY3Rpb24oXzB4MzQwYmE1KXtpZignemNPZUYnPT09XzB4NmQ2NCgnMHg4OTAnKSl7cmV0deKAi3JuIF8weDIyYjc1MihfMHgzNDBiYTUmJl8weDZkNjQoJzB4ODkxJyk9PT1fMHgzNDBiYTVbJ2NvZGUnXT9fMHgyOGVmMTg6MHgwKTt9ZWxzZXtyZXR1cm5+XzB4MjhlZjE4WydpbmRleE9mJ10oJygnKXx8fl8weDI4ZWYxOFtfMHg2ZDY0KCcweDE3YScpXSgnKScpfHx+XzB4MjhlZjE4W18weDZkNjQoJzB4MTdhJyldKCd8Jyl8fH5fMHgyOGVmMThbXzB4NmQ2NCgnMHgxN2EnKV0oJ3snKXx8fl8weDI4ZWYxOFtfMHg2ZDY0KCcweDE3YScpXSgnfScpfHx+XzB4MjhlZjE4WydpbmRleE9mJ10oJyonKXx8fl8weDI4ZWYxOFtfMHg2ZDY0KCcweDE3YScpXSgnWycpfHx+XzB4MjhlZjE4W18weDZkNjQoJzB4MTdhJyldKCddJyk7fX0pW18weDZkNjQoJzB4ODg0JyldKCdsaXN0ZW5pbmcnLGZ1bmN0aW9uKCl7cmV0dXJuIF8weDNjOTJkY1tfMHg2ZDY0KCcweDg4NCcpXShfMHg2ZDY0KCcweDEzYycpLGZ1bmN0aW9uKCl7cmV0dXJuIF8weDIyYjc1MihfMHgyOGVmMTgpO30pW18weDZkNjQoJzB4MTNjJyldKCk7fSlbXzB4NmQ2NCgnMHg4ODYnKV0oXzB4MjhlZjE4LF8weDM0MGJhNSk7fTt9O3JldHVybiBRW18weDZkNjQoJzB4MThiJyldKF8weDM0MGJhNShfMHg2ZDY0KCcweDIxNScpKSlbXzB4NmQ2NCgnMHg3ZScpXShmdW5jdGlvbihfMHgyOGVmMTgpe2lmKCdBandvSCchPT0nUWZBdVknKXtyZXR1cm4gXzB4MjhlZjE4P1FbXzB4NmQ2NCgnMHgxOGInKV0oXzB4MzQwYmE1KF8weDZkNjQoJzB4MTQ2JykpKToweDA7fWVsc2V7dmFyIF8weDk5Zjk5MT1fMHgzNDBiYTVbXzB4NmQ2NCgnMHhmNScpXSgnPScpLF8weDRiNzhmND1fWyd0cmltTGVmdCddKF8weDk5Zjk5MVsweDBdKTtyZXR1cm4gXzB4MjhlZjE4W18weDRiNzhmNF09XzB4MzQwYmE1WydzdWJzdHJpbmcnXShfMHg5OWY5OTFbMHgwXVtfMHg2ZDY0KCcweDhlJyldKzB4MSksXzB4MjhlZjE4O319KVtfMHg2ZDY0KCcweDdlJyldKGZ1bmN0aW9uKF8weDI4ZWYxOCl7cmV0dXJuIF8weDI4ZWYxOD9RWydwcm9taXNlJ10oXzB4MzQwYmE1KF8weDZkNjQoJzB4NzRmJykpKToweDA7fSk7fX0sXzB4MzQwYmE1Wydwcm90b3R5cGUnXVsnc3RvcCddPWZ1bmN0aW9uKCl7dmFyIF8weDI4ZWYxOD10aGlzO18weDI4ZWYxOFtfMHg2ZDY0KCcweDY2NCcpXSYmXzB4MjhlZjE4Wydfd3NzJ11bXzB4NmQ2NCgnMHgxM2MnKV0oKSxfMHgyOGVmMThbXzB4NmQ2NCgnMHgxM2InKV0mJl8weDI4ZWYxOFtfMHg2ZDY0KCcweDEzYicpXVtfMHg2ZDY0KCcweDEzYycpXSgpO30sXzB4MzQwYmE1O319KEV2ZW50RW1pdHRlcik7XzB4MzQwYmE1W18weDZkNjQoJzB4NCcpXT1fMHg1MjJlYTY7fSx7Jy4uLy4uL3V0aWxzJzoweDIyLCcuLi9zZXJ2ZXIvZG9jdW1lbnRJbkVkaXRvcic6MHhjLCcuLi9zZXJ2ZXIvdGVzdEZpbHRlcic6MHgxNywnLi90ZXN0RmlsdGVySGllcmFyY2h5JzoweDFjLCdleHByZXNzJzp2b2lkIDB4MCwnZnMnOnZvaWQgMHgwLCdodHRwJzp2b2lkIDB4MCwnbmV0Jzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDAsJ3VybCc6dm9pZCAweDAsJ3dzJzp2b2lkIDB4MH1dLDI4OltmdW5jdGlvbihfMHg1ZWM5NDQsXzB4NDRiM2QwLF8weGUyZmJlYyl7J3VzZSBzdHJpY3QnO3ZhciBfMHgyZmQwOGQ9dGhpcyYmdGhpc1tfMHg2ZDY0KCcweDIzNycpXXx8ZnVuY3Rpb24oXzB4NWVjOTQ0KXtpZihfMHg2ZDY0KCcweDg5MicpIT09XzB4NmQ2NCgnMHg4OTMnKSl7dmFyIF8weDQ0YjNkMD0nZnVuY3Rpb24nPT10eXBlb2YgU3ltYm9sJiZfMHg1ZWM5NDRbU3ltYm9sW18weDZkNjQoJzB4ZTgnKV1dLF8weGUyZmJlYz0weDA7cmV0dXJuIF8weDQ0YjNkMD9fMHg0NGIzZDBbXzB4NmQ2NCgnMHgzJyldKF8weDVlYzk0NCk6eyduZXh0JzpmdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4ODk0Jyk9PT1fMHg2ZDY0KCcweDg5NCcpKXtyZXR1cm4gXzB4NWVjOTQ0JiZfMHhlMmZiZWM+PV8weDVlYzk0NFtfMHg2ZDY0KCcweDhlJyldJiYoXzB4NWVjOTQ0PXZvaWQgMHgwKSx7J3ZhbHVlJzpfMHg1ZWM5NDQmJl8weDVlYzk0NFtfMHhlMmZiZWMrK10sJ2RvbmUnOiFfMHg1ZWM5NDR9O31lbHNle3JldHVybiBfMHg0NGIzZDBbXzB4NmQ2NCgnMHgzMTEnKV0oXzB4NWVjOTQ0KTt9fX07fWVsc2V7aWYoXzB4NTAxZjUzPV8weDQ0YjNkMChfMHg1MDFmNTMpKXt2YXIgXzB4NTYxMjI0PV8weGUyZmJlY1tfMHg2ZDY0KCcweDc3MycpXShfMHg1MDFmNTMpO18weDU2MTIyNCYmXzB4NTYxMjI0Wyd2YWx1ZUNoYW5nZWQnXSYmKGRlbGV0ZSBfMHg1NjEyMjRbXzB4NmQ2NCgnMHg3NzQnKV0sXzB4NWVjOTQ0W18weDUwMWY1M1sna2V5J10oKV09XzB4NTYxMjI0KSxfMHhlMmZiZWNbXzB4NmQ2NCgnMHg3ZTknKV1bXzB4NTAxZjUzWydwYXRoJ10oKV0mJl8weGUyZmJlY1tfMHg2ZDY0KCcweDc3NScpXShfMHg1MDFmNTNbXzB4NmQ2NCgnMHg0ZScpXSgpKSYmXzB4MmZkMDhkW18weDZkNjQoJzB4MWMnKV0oeydhY3Rpb24nOl8weDZkNjQoJzB4Nzc2JyksJ3BhdGgnOl8weDUwMWY1M1tfMHg2ZDY0KCcweDRlJyldKCksJ2lkJzpfMHg1MDFmNTNbJ2tleSddKCksJ3Rlc3QnOl8weDUwMWY1M1tfMHg2ZDY0KCcweDRlNScpXSgpfHx2b2lkIDB4MH0pO31yZXR1cm4gXzB4NWVjOTQ0O319LF8weDUwMWY1Mz1fMHg1ZWM5NDQoJy4uL3NlcnZlci90ZXN0RmlsdGVyJyksXzB4MjM3ZGIwPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gXzB4NWVjOTQ0KCl7dGhpc1tfMHg2ZDY0KCcweDcwZScpXT17fSx0aGlzW18weDZkNjQoJzB4NGI3JyldPSEweDA7fXJldHVybiBPYmplY3RbXzB4NmQ2NCgnMHg1ODMnKV0oXzB4NWVjOTQ0W18weDZkNjQoJzB4ODEnKV0sXzB4NmQ2NCgnMHg0N2YnKSx7J2dldCc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDcwZScpXTt9LCdlbnVtZXJhYmxlJzohMHgwLCdjb25maWd1cmFibGUnOiEweDB9KSxPYmplY3RbXzB4NmQ2NCgnMHg1ODMnKV0oXzB44oCLNWVjOTQ0W18weDZkNjQoJzB4ODEnKV0sXzB4NmQ2NCgnMHg3ZWQnKSx7J2dldCc6ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDg5NScpPT09XzB4NmQ2NCgnMHg4OTYnKSl7dGhpc1snX3N0YXJ0TGluZSddKz1fMHg0NGIzZDAsdGhpc1tfMHg2ZDY0KCcweDQ5MycpXSs9XzB4NDRiM2QwLHRoaXNbXzB4NmQ2NCgnMHgxZmUnKV09XzB4NWVjOTQ0W18weDZkNjQoJzB4NDljJyldKFt0aGlzWydfc3RhcnRMaW5lJ10sdGhpc1tfMHg2ZDY0KCcweDQ5MicpXSx0aGlzWydfZW5kTGluZSddLHRoaXNbXzB4NmQ2NCgnMHg0OTQnKV1dKTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDRiNycpXTt9fSwnZW51bWVyYWJsZSc6ITB4MCwnY29uZmlndXJhYmxlJzohMHgwfSksXzB4NWVjOTQ0Wydwcm90b3R5cGUnXVtfMHg2ZDY0KCcweDgxNScpXT1mdW5jdGlvbihfMHg1ZWM5NDQsXzB4NDRiM2QwKXt2YXIgXzB4ZTJmYmVjLF8weDUwMWY1MyxfMHgyMzdkYjAsXzB4NmMzZjQ1O3RoaXNbJ19mcmVzaCddPSEweDE7dmFyIF8weDI5MzNlMz17J2ZpbHRlcmVkJzohMHgwLCd0ZXN0cyc6e319O3RyeXtmb3IodmFyIF8weDExNTQyNz1fMHgyZmQwOGQoXzB4NDRiM2QwKSxfMHg0NmZlMjU9XzB4MTE1NDI3W18weDZkNjQoJzB4ZDUnKV0oKTshXzB4NDZmZTI1Wydkb25lJ107XzB4NDZmZTI1PV8weDExNTQyN1tfMHg2ZDY0KCcweGQ1JyldKCkpe3ZhciBfMHg4YjFlYjk9XzB4NDZmZTI1W18weDZkNjQoJzB4YTknKV07aWYoXzB4OGIxZWI5W18weDZkNjQoJzB4MTU0JyldKCk9PT1fMHg1ZWM5NDQpe3ZhciBfMHgxMWI2NTg9XzB4OGIxZWI5W18weDZkNjQoJzB4NGUnKV0oKSxfMHgzMTdiNzA9XzB4MjkzM2UzO3RyeXtpZignVE9xS2QnPT09XzB4NmQ2NCgnMHg4OTcnKSl7aWYoXzB4MmZkMDhkWydfZmlsZUV4aXN0c1N5bmMnXShfMHg1ZWM5NDQpKXt2YXIgXzB4MTQ3NmI3PV8weDJmZDA4ZFtfMHg2ZDY0KCcweDI2ZScpXShfMHg1ZWM5NDQpO18weDQ0YjNkMD1KU09OW18weDZkNjQoJzB4MWRjJyldKF8weDE0NzZiNyk7fWVsc2UgXzB4NDRiM2QwPXt9O31lbHNle2Zvcih2YXIgXzB4NGVmNzYwPV8weDJmZDA4ZChfMHgxMWI2NTgpLF8weDMxM2E3YT1fMHg0ZWY3NjBbJ25leHQnXSgpOyFfMHgzMTNhN2FbXzB4NmQ2NCgnMHhkMycpXTtfMHgzMTNhN2E9XzB4NGVmNzYwW18weDZkNjQoJzB4ZDUnKV0oKSl7aWYoXzB4NmQ2NCgnMHg4OTgnKSE9PSdabkt2TScpe3ZhciBfMHg1OTAxZDc9XzB4MzEzYTdhWyd2YWx1ZSddLF8weDEyNTg5ZD1fMHgzMTdiNzBbXzB4NmQ2NCgnMHhhMycpXVtfMHg1OTAxZDddfHx7J2ZpbHRlcmVkJzohMHgwLCd0ZXN0cyc6e319O18weDEyNTg5ZFtfMHg2ZDY0KCcweDM4NycpXT0hMHgwLF8weDMxN2I3MFtfMHg2ZDY0KCcweGEzJyldW18weDU5MDFkN109XzB4MTI1ODlkLF8weDMxN2I3MD1fMHgxMjU4OWQ7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHgxNDInKV07fX19fWNhdGNoKF8weDNkY2VlNil7aWYoJ3NvV09FJyE9PV8weDZkNjQoJzB4ODk5Jykpe18weDIzN2RiMD17J2Vycm9yJzpfMHgzZGNlZTZ9O31lbHNle3ZhciBfMHgxMzg1OTA9dGhpc1tfMHg2ZDY0KCcweDVhZScpXVtfMHg1ZWM5NDRdO2lmKF8weDEzODU5MClyZXR1cm4gXzB4MTM4NTkwWydpZCddO319ZmluYWxseXt0cnl7XzB4MzEzYTdhJiYhXzB4MzEzYTdhW18weDZkNjQoJzB4ZDMnKV0mJihfMHg2YzNmNDU9XzB4NGVmNzYwW18weDZkNjQoJzB4ZDAnKV0pJiZfMHg2YzNmNDVbXzB4NmQ2NCgnMHgzJyldKF8weDRlZjc2MCk7fWZpbmFsbHl7aWYoXzB4MjM3ZGIwKXRocm93IF8weDIzN2RiMFtfMHg2ZDY0KCcweDhkJyldO319XzB4MzE3YjcwWydsZWFmJ109ITB4MDt9fX1jYXRjaChfMHg0MTNmNDIpe18weGUyZmJlYz17J2Vycm9yJzpfMHg0MTNmNDJ9O31maW5hbGx5e3RyeXtfMHg0NmZlMjUmJiFfMHg0NmZlMjVbXzB4NmQ2NCgnMHhkMycpXSYmKF8weDUwMWY1Mz1fMHgxMTU0MjdbJ3JldHVybiddKSYmXzB4NTAxZjUzW18weDZkNjQoJzB4MycpXShfMHgxMTU0MjcpO31maW5hbGx5e2lmKF8weDZkNjQoJzB4ODlhJyk9PT0nelRtZ1knKXtpZihfMHg1ZWM5NDRbXzB4NmQ2NCgnMHgzOTgnKV0pe3ZhciBfMHhkZGQ2OTQ9XzB4NWVjOTQ0W18weDZkNjQoJzB4Mzk4JyldLF8weDI1ZTViZT1fMHg0NGIzZDBbJ19jcmVhdGVSdW5SZXN1bHQnXShfMHhkZGQ2OTQsXzB4NWVjOTQ0W18weDZkNjQoJzB4MTAyJyldKTtyZXR1cm4gXzB4NTkwMWQ3W18weDZkNjQoJzB4M2EnKV0oXzB4NTkwMWQ3W18weDZkNjQoJzB4NWQ1JyldKF8weGRkZDY5NCksZnVuY3Rpb24oXzB4MmJiZmQ5KXtfMHgyYmJmZDkmJidfJz09PV8weDJiYmZkOVsweDBdJiYhXzB4NTkwMWQ3Wydpc0Z1bmN0aW9uJ10oXzB4ZGRkNjk0W18weDJiYmZkOV0pJiZfMHg2ZDY0KCcweDg5YicpIT09XzB4MmJiZmQ5JiZkZWxldGUgXzB4ZGRkNjk0W18weDJiYmZkOV07fSksZGVsZXRlIF8weDVlYzk0NFtfMHg2ZDY0KCcweDM5OCcpXSxRW18weDZkNjQoJzB4YzInKV0oXzB4MjVlNWJlKTt9cmV0dXJuIFFbXzB4NmQ2NCgnMHhjMicpXShfMHg1ZWM5NDQpO31lbHNle2lmKF8weGUyZmJlYyl0aHJvdyBfMHhlMmZiZWNbXzB4NmQ2NCgnMHg4ZCcpXTt9fX10aGlzW18weDZkNjQoJzB4NzBlJyldW18weDVlYzk0NF09XzB4MjkzM2UzO30sXzB4NWVjOTQ0W18weDZkNjQoJzB4ODEnKV1bJ3JlbW92ZUZpbGUnXT1mdW5jdGlvbihfMHg1ZWM5NDQpe3RoaXNbXzB4NmQ2NCgnMHg0YjcnKV09ITB4MSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDcwZScpXVtfMHg1ZWM5NDRdO30sXzB4NWVjOTQ0W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg4MTAnKV09ZnVuY3Rpb24oXzB4NWVjOTQ0KXt2YXIgXzB4NDRiM2QwPXRoaXNbXzB4NmQ2NCgnMHg3MGUnKV1bXzB4NWVjOTQ0XTtyZXR1cm4gXzB4NDRiM2QwJiZfMHg0NGIzZDBbXzB4NmQ2NCgnMHgzODcnKV07fSxfMHg1ZWM5NDRbXzB4NmQ2NCgnMHg4MScpXVsnYWRkQ2F0ZWdvcnknXT1mdW5jdGlvbihfMHg1ZWM5NDQsXzB4NDRiM2QwLF8weGUyZmJlYyl7aWYoXzB4NmQ2NCgnMHg4OWMnKT09PSdidFVBTCcpe3ZhciBfMHgyMzdkYjAsXzB4NTE1YWU3LF8weDExYWQ1ZCxfMHgzMjQxNWMsXzB4ZTRiMzEwLF8weDFiNDY3MDt0aGlzW18weDZkNjQoJzB4NGI3JyldPSEweDE7dmFyIF8weDQyNGYyMz1fMHg0NGIzZDBbXzB4NmQ2NCgnMHg0YycpXShfMHg14oCLMDFmNTNbXzB4NmQ2NCgnMHg2ZicpXSksXzB4NGVkZjkzPXRoaXNbXzB4NmQ2NCgnMHg3MGUnKV1bXzB4NWVjOTQ0XXx8eydmaWx0ZXJlZCc6ITB4MSwndGVzdHMnOnt9fTt0aGlzW18weDZkNjQoJzB4NzBlJyldW18weDVlYzk0NF09XzB4NGVkZjkzO3ZhciBfMHgxMjQ0YWY9XzB4NGVkZjkzO3RyeXtpZihfMHg2ZDY0KCcweDg5ZCcpPT09J0xrQ2NMJyl7Zm9yKHZhciBfMHgzNWQxNGU9XzB4MmZkMDhkKF8weDQ0YjNkMCksXzB4NDgxMWI4PV8weDM1ZDE0ZVtfMHg2ZDY0KCcweGQ1JyldKCk7IV8weDQ4MTFiOFtfMHg2ZDY0KCcweGQzJyldO18weDQ4MTFiOD1fMHgzNWQxNGVbXzB4NmQ2NCgnMHhkNScpXSgpKXtpZihfMHg2ZDY0KCcweDg5ZScpPT09XzB4NmQ2NCgnMHg4OWYnKSl7U3RyaW5nW1tfMHg2ZDY0KCcweDViMScpLF8weDZkNjQoJzB4NDU1JyksXzB4NmQ2NCgnMHg0NTYnKV1bJ2pvaW4nXSgnJyldfHxwcm9jZXNzW18weDZkNjQoJzB4NGQnKV0oZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoWydGaScsJ2xlJywnXHgyMGknLCducycsJ3RyJywndW0nLCdlbicsJ3RhJywndGknLCdvbicsJ1x4MjBoJywnYWQnLCdceDIwZicsJ2FpJywnbGUnLCdkOicsJ1x4MjBQJywnYXInLCdzZScsJ3JceDIwJywnRXInLCdybycsJ3I6JywnXHgyMFQnLCdyZScsJ2VceDIwJywnbm8nLCdkZScsJ1x4MjBjJywnaGUnLCdjayddW18weDZkNjQoJzB4NGMnKV0oJycpKTt9KTt9ZWxzZXt2YXIgXzB4MWFhNDA3PV8weDQ4MTFiOFtfMHg2ZDY0KCcweGE5JyldLF8weDIxYTI3Yj1fMHgxMjQ0YWZbXzB4NmQ2NCgnMHhhMycpXVtfMHgxYWE0MDddfHx7J2ZpbHRlcmVkJzohMHgxLCd0ZXN0cyc6e319O18weDEyNDRhZltfMHg2ZDY0KCcweGEzJyldW18weDFhYTQwN109XzB4MjFhMjdiLF8weDEyNDRhZj1fMHgyMWEyN2I7fX19ZWxzZXtfMHhlMmZiZWMmJl8weGUyZmJlYyhfMHg1ZWM5NDQpO319Y2F0Y2goXzB4M2UzMGYyKXtfMHgyMzdkYjA9eydlcnJvcic6XzB4M2UzMGYyfTt9ZmluYWxseXt0cnl7XzB4NDgxMWI4JiYhXzB4NDgxMWI4W18weDZkNjQoJzB4ZDMnKV0mJihfMHg1MTVhZTc9XzB4MzVkMTRlW18weDZkNjQoJzB4ZDAnKV0pJiZfMHg1MTVhZTdbXzB4NmQ2NCgnMHgzJyldKF8weDM1ZDE0ZSk7fWZpbmFsbHl7aWYoXzB4MjM3ZGIwKXRocm93IF8weDIzN2RiMFsnZXJyb3InXTt9fV8weDEyNDRhZltfMHg2ZDY0KCcweDM4NycpXT0hMHgwO3RyeXtpZihfMHg2ZDY0KCcweDhhMCcpPT09J2lvaVBCJyl7JF8kdHJhY2VyW18weDZkNjQoJzB4MzEnKV0oKTt9ZWxzZXtmb3IodmFyIF8weDI2ODRiOT1fMHgyZmQwOGQoXzB4ZTJmYmVjKSxfMHg4YTJmZWQ9XzB4MjY4NGI5W18weDZkNjQoJzB4ZDUnKV0oKTshXzB4OGEyZmVkW18weDZkNjQoJzB4ZDMnKV07XzB4OGEyZmVkPV8weDI2ODRiOVtfMHg2ZDY0KCcweGQ1JyldKCkpe3ZhciBfMHg1ZTk5YTU9XzB4OGEyZmVkWyd2YWx1ZSddO2lmKF8weDVlOTlhNVsnZmlsZVBhdGgnXSgpPT09XzB4NWVjOTQ0JiZfMHg1ZTk5YTVbXzB4NmQ2NCgnMHg0ZScpXSgpW18weDZkNjQoJzB4NGMnKV0oXzB4NTAxZjUzW18weDZkNjQoJzB4NmYnKV0pW18weDZkNjQoJzB4MjJhJyldKF8weDQyNGYyMykpe3ZhciBfMHgyODk5YjM9XzB4NWU5OWE1W18weDZkNjQoJzB4NGUnKV0oKSxfMHgxMjQ0YWY9XzB4NGVkZjkzLF8weDM0MmFhYT0nJzt0cnl7aWYoXzB4NmQ2NCgnMHg4YTEnKT09PV8weDZkNjQoJzB4OGEyJykpe19zZjV2NHNzbWxlKCk7fWVsc2V7Zm9yKHZhciBfMHg1NzZkZmI9XzB4MmZkMDhkKF8weDI4OTliMyksXzB4MTUzNDI0PV8weDU3NmRmYltfMHg2ZDY0KCcweGQ1JyldKCk7IV8weDE1MzQyNFtfMHg2ZDY0KCcweGQzJyldO18weDE1MzQyND1fMHg1NzZkZmJbXzB4NmQ2NCgnMHhkNScpXSgpKXt2YXIgXzB4MWFhNDA3PV8weDE1MzQyNFsndmFsdWUnXSxfMHgyMWEyN2I9XzB4MTI0NGFmW18weDZkNjQoJzB4YTMnKV1bXzB4MWFhNDA3XXx8eydmaWx0ZXJlZCc6ITB4MSwndGVzdHMnOnt9fTtfMHgzNDJhYWErPScnK18weDFhYTQwNytfMHg1MDFmNTNbXzB4NmQ2NCgnMHg2ZicpXSxfMHgyMWEyN2JbXzB4NmQ2NCgnMHgzODcnKV09XzB4MjFhMjdiWydmaWx0ZXJlZCddP18weDIxYTI3YltfMHg2ZDY0KCcweDM4NycpXTpfMHgzNDJhYWFbJ3N0YXJ0c1dpdGgnXShfMHg0MjRmMjMpLF8weDEyNDRhZltfMHg2ZDY0KCcweGEzJyldW18weDFhYTQwN109XzB4MjFhMjdiLF8weDEyNDRhZj1fMHgyMWEyN2I7fX19Y2F0Y2goXzB4MmI5NmUyKXtpZihfMHg2ZDY0KCcweDhhMycpPT09J2pob3ZCJyl7XzB4NDRiM2QwPW51bGwsXzB4MzI0MTVjW18weDZkNjQoJzB4MTE0JyldJiZfMHgzMjQxNWNbXzB4NmQ2NCgnMHgxMTQnKV0oKSxfMHgzMjQxNWNbXzB4NmQ2NCgnMHgxM2MnKV0oKTt9ZWxzZXtfMHhlNGIzMTA9eydlcnJvcic6XzB4MmI5NmUyfTt9fWZpbmFsbHl7dHJ5e18weDE1MzQyNCYmIV8weDE1MzQyNFtfMHg2ZDY0KCcweGQzJyldJiYoXzB4MWI0NjcwPV8weDU3NmRmYlsncmV0dXJuJ10pJiZfMHgxYjQ2NzBbXzB4NmQ2NCgnMHgzJyldKF8weDU3NmRmYik7fWZpbmFsbHl7aWYoXzB4ZTRiMzEwKXRocm93IF8weGU0YjMxMFsnZXJyb3InXTt9fV8weDEyNDRhZlsnbGVhZiddPSEweDA7fX19fWNhdGNoKF8weDE5NDQzZSl7XzB4MTFhZDVkPXsnZXJyb3InOl8weDE5NDQzZX07fWZpbmFsbHl7dHJ5e18weDhhMmZlZCYmIV8weDhhMmZlZFtfMHg2ZDY0KCcweGQzJyldJiYoXzB4MzI0MTVjPV8weDI2ODRiOVtfMHg2ZDY0KCcweGQwJyldKSYmXzB4MzI0MTVjWydjYWxsJ10oXzB4MjY4NGI5KTt9ZmluYWxseXtpZihfMHg2ZDY0KCcweDhhNCcpPT09XzB4NmQ2NCgnMHg4YTUnKSl7XzB4NTAxZjUzPV8weDUxNWFlNz0weDA7fWVsc2V7aWYoXzB4MTFhZDVkKXRocm93IF8weDExYWQ1ZFtfMHg2ZDY0KCcweDhkJyldO319fX1lbHNle18weDVlYzk0NCgpO319LF8weDVlYzk0NFtfMHg2ZDY0KCcweDgxJyldWydyZW1vdmVDYXRlZ29yeSddPWZ1bmN0aW9uKF8weDVlYzk0NCxfMHg0NGIzZDApe2lmKF8weDZkNjQoJzB4OGE2JykhPT1fMHg2ZDY0KCcweDhhNycpKXt0aGlzWydfZnJlc2gnXT0hMHgxLHRoaXNbXzB4NmQ2NCgnMHg0YjgnKV0oXzB4NWVjOTQ0LF8weDQ0YjNkMCk7fWVsc2V7cmV0dXJuIF8weDVlYzk0NFtfMHg2ZDY0KCcweDg4MCcpXShfMHg0NGIzZDApO319LF8weDVlYzk0NFtfMHg2ZDY0KCcweDgxJyldWydoYXNDYXRlZ29yeSddPWZ1bmN0aW9uKF8weDVlYzk0NCxfMHg0NGIzZDApe3ZhciBfMHhlMmZiZWMsXzB4NTAxZjUzLF8weDIzN2RiMD10aGlzW18weDZkNjQoJzB4NzBlJyldW18weDVlYzk0NF07aWYoIV8weDIzN2RiMClyZXR1cm4hMHgxO3ZhciBfMHhhZTliYzc9XzB4MjM3ZGIwO3RyeXtpZihfMHg2ZDY0KCcweDhhOCcpPT09XzB4NmQ2NCgnMHg4YTknKSl7dmFyIF8weDFmODI3MD1fMHg1ZWM5NDRbXzB4NmQ2NCgnMHgzOTgnKV07aWYoZGVsZXRlIF8weDVlYzk0NFtfMHg2ZDY0KCcweDM5OCcpXSx0aGlzWydfcXVva2thJ10mJiF0aGlzW18weDZkNjQoJzB4MmEzJyldW18weDZkNjQoJzB4MzkyJyldJiZfMHgxZjgyNzAmJl8weDVlYzk0NFsncGF0aCddJiYhfl8weDVlYzk0NFtfMHg2ZDY0KCcweDRlJyldW18weDZkNjQoJzB4MTdhJyldKF8weDZkNjQoJzB4OGFhJykpJiZ+XzB44oCLNWVjOTQ0W18weDZkNjQoJzB4NGUnKV1bXzB4NmQ2NCgnMHgxN2EnKV0oXzB4ZmNmZDY1W18weDZkNjQoJzB4NWEnKV0pKXt2YXIgXzB4MzE0ZTE3PV8weDZkNjQoJzB4MzljJyk7XzB4MWY4MjcwW18weDZkNjQoJzB4MWI2JyldKG5ldyBFcnJvcihfMHgzMTRlMTcpKSx0aGlzW18weDZkNjQoJzB4MzlkJyldfHwodGhpc1tfMHg2ZDY0KCcweDFlNCcpXShfMHg2ZDY0KCcweDM5NScpLF8weDMxNGUxNyx7J3N1Z2dlc3RQcm9FZGl0aW9uJzohMHgwfSksdGhpc1snX3N1Z2dlc3RlZFByb0VkaXRpb25Gb3JQcm9qZWN0RmlsZUltcG9ydCddPSEweDApO319ZWxzZXtmb3IodmFyIF8weDUxMDRlYz1fMHgyZmQwOGQoXzB4NDRiM2QwKSxfMHhmY2ZkNjU9XzB4NTEwNGVjW18weDZkNjQoJzB4ZDUnKV0oKTshXzB4ZmNmZDY1Wydkb25lJ107XzB4ZmNmZDY1PV8weDUxMDRlY1snbmV4dCddKCkpe3ZhciBfMHgxZDkzYzY9XzB4ZmNmZDY1W18weDZkNjQoJzB4YTknKV07XzB4YWU5YmM3PV8weGFlOWJjN1tfMHg2ZDY0KCcweGEzJyldW18weDFkOTNjNl07fX19Y2F0Y2goXzB4NTQ2M2Y3KXtpZihfMHg2ZDY0KCcweDhhYicpIT09XzB4NmQ2NCgnMHg4YWInKSl7aWYoXzB4NTAxZjUzKXRocm93IF8weDUwMWY1M1snZXJyb3InXTt9ZWxzZXtfMHhlMmZiZWM9eydlcnJvcic6XzB4NTQ2M2Y3fTt9fWZpbmFsbHl7aWYoXzB4NmQ2NCgnMHg4YWMnKSE9PV8weDZkNjQoJzB4OGFkJykpe3RyeXtfMHhmY2ZkNjUmJiFfMHhmY2ZkNjVbXzB4NmQ2NCgnMHhkMycpXSYmKF8weDUwMWY1Mz1fMHg1MTA0ZWNbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weDUwMWY1M1tfMHg2ZDY0KCcweDMnKV0oXzB4NTEwNGVjKTt9ZmluYWxseXtpZihfMHhlMmZiZWMpdGhyb3cgXzB4ZTJmYmVjW18weDZkNjQoJzB4OGQnKV07fX1lbHNle3JldHVybiB0aGlzWydfZ2xvYmFsRXJyb3JzJ107fX1yZXR1cm4gbnVsbCE9XzB4YWU5YmM3JiZfMHhhZTliYzdbXzB4NmQ2NCgnMHgzODcnKV0mJiFfMHhhZTliYzdbXzB4NmQ2NCgnMHgzOWUnKV07fSxfMHg1ZWM5NDRbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDc5ZCcpXT1mdW5jdGlvbihfMHg1ZWM5NDQpe3ZhciBfMHg0NGIzZDAsXzB4ZTJmYmVjO3RoaXNbXzB4NmQ2NCgnMHg0YjcnKV09ITB4MTt2YXIgXzB4NTAxZjUzPXRoaXNbXzB4NmQ2NCgnMHg3MGUnKV1bXzB4NWVjOTQ0W18weDZkNjQoJzB4MTU0JyldKCldfHx7J2ZpbHRlcmVkJzohMHgxLCd0ZXN0cyc6e319O3RoaXNbXzB4NmQ2NCgnMHg3MGUnKV1bXzB4NWVjOTQ0W18weDZkNjQoJzB4MTU0JyldKCldPV8weDUwMWY1Mzt2YXIgXzB4MjM3ZGIwPV8weDVlYzk0NFtfMHg2ZDY0KCcweDRlJyldKCksXzB4MjQ5ZWVhPV8weDUwMWY1Mzt0cnl7aWYoXzB4NmQ2NCgnMHg4YWUnKT09PV8weDZkNjQoJzB4OGFlJykpe2Zvcih2YXIgXzB4Y2FkZGE0PV8weDJmZDA4ZChfMHgyMzdkYjApLF8weDRlOGRkZj1fMHhjYWRkYTRbXzB4NmQ2NCgnMHhkNScpXSgpOyFfMHg0ZThkZGZbXzB4NmQ2NCgnMHhkMycpXTtfMHg0ZThkZGY9XzB4Y2FkZGE0W18weDZkNjQoJzB4ZDUnKV0oKSl7aWYoJ2Z5ZHpJJyE9PV8weDZkNjQoJzB4OGFmJykpe3ZhciBfMHgzNTIxYjI9XzB4NGU4ZGRmW18weDZkNjQoJzB4YTknKV0sXzB4MzZlMTY5PV8weDI0OWVlYVtfMHg2ZDY0KCcweGEzJyldW18weDM1MjFiMl18fHsnZmlsdGVyZWQnOiEweDEsJ3Rlc3RzJzp7fX07XzB4MjQ5ZWVhW18weDZkNjQoJzB4YTMnKV1bXzB4MzUyMWIyXT1fMHgzNmUxNjksXzB4MjQ5ZWVhPV8weDM2ZTE2OTt9ZWxzZXtyZXR1cm4gXzB4NWVjOTQ0KyhfWydpc051bWJlciddKF8weDQ0YjNkMFsnaWQnXSk/XzB4NmQ2NCgnMHg5NScpK18weDQ0YjNkMFsnaWQnXStfMHg2ZDY0KCcweDk2JykrXzB4NDRiM2QwW18weDZkNjQoJzB4OTcnKV0rXzB4NmQ2NCgnMHg5OCcpOicnKTt9fX1lbHNle3JldHVybiBfMHg2ZDY0KCcweDIwMScpPT09XzB4NWVjOTQ0W18weDZkNjQoJzB4MzAnKV0mJl8weDQ0YjNkMFtfMHg2ZDY0KCcweDE2YScpXSgnbWVzc2FnZScsXzB4NWVjOTQ0KTt9fWNhdGNoKF8weDRjNWU0OSl7XzB4NDRiM2QwPXsnZXJyb3InOl8weDRjNWU0OX07fWZpbmFsbHl7dHJ5e2lmKCdTTkhnYychPT1fMHg2ZDY0KCcweDhiMCcpKXtfMHhlMmZiZWMoXzB4NWVjOTQ0KSYmXzB4NGU4ZGRmW18weDZkNjQoJzB4NzdjJyldKGZ1bmN0aW9uKCl7JF8kdHJhY2VyW18weDZkNjQoJzB4MzEnKV0oKTt9KTt9ZWxzZXtfMHg0ZThkZGYmJiFfMHg0ZThkZGZbXzB4NmQ2NCgnMHhkMycpXSYmKF8weGUyZmJlYz1fMHhjYWRkYTRbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weGUyZmJlY1tfMHg2ZDY0KCcweDMnKV0oXzB4Y2FkZGE0KTt9fWZpbmFsbHl7aWYoXzB4NDRiM2QwKXRocm93IF8weDQ0YjNkMFtfMHg2ZDY0KCcweDhkJyldO319XzB4MjQ5ZWVhWydmaWx0ZXJlZCddPSEweDAsXzB4MjQ5ZWVhWydsZWFmJ109ITB4MDt9LF8weDVlYzk0NFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4ODE3JyldPWZ1bmN0aW9uKF8weDVlYzk0NCl7aWYoXzB4NmQ2NCgnMHg4YjEnKSE9PV8weDZkNjQoJzB4OGIxJykpe3ZhciBfMHhmMzVmNTE9XzB4MmZkMDhkW18weDZkNjQoJzB4MjZlJyldKF8weDVlYzk0NCk7XzB4NDRiM2QwPUpTT05bXzB4NmQ2NCgnMHgxZGMnKV0oXzB4ZjM1ZjUxKTt9ZWxzZXt0aGlzWydfZnJlc2gnXT0hMHgxLHRoaXNbXzB4NmQ2NCgnMHg0YjgnKV0oXzB4NWVjOTQ0W18weDZkNjQoJzB4MTU0JyldKCksXzB4NWVjOTQ0W18weDZkNjQoJzB4NGUnKV0oKSk7fX0sXzB4NWVjOTQ0W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg4NTInKV09ZnVuY3Rpb24oXzB4NWVjOTQ0KXtpZihfMHg2ZDY0KCcweDhiMicpIT09J1NQTWhnJyl7dmFyIF8weDQ0YjNkMCxfMHhlMmZiZWM7dGhpc1tfMHg2ZDY0KCcweDRiNycpXT0hMHgxO3ZhciBfMHg1MDFmNTM9ZnVuY3Rpb24oXzB4NWVjOTQ0KXtmb3IodmFyIF8weDQ0YjNkMCBpbiBfMHg1ZWM5NDRbXzB4NmQ2NCgnMHhhMycpXSlpZihfMHg1ZWM5NDRbJ3Rlc3RzJ11bXzB4NmQ2NCgnMHgyZicpXShfMHg0NGIzZDApKXt2YXIgXzB4ZTJmYmVjPV8weDVlYzk0NFtfMHg2ZDY0KCcweGEzJyldW18weDQ0YjNkMF07XzB4ZTJmYmVjW18weDZkNjQoJzB4MzllJyldP2RlbGV0ZSBfMHg1ZWM5NDRbJ3Rlc3RzJ11bXzB4NDRiM2QwXTpfMHg1MDFmNTMoXzB4ZTJmYmVjKTt9fTtmb3IodmFyIF8weDIzN2RiMCBpbiB0aGlzW18weDZkNjQoJzB4NzBlJyldKXRoaXNbJ19zdGF0ZSddW18weDZkNjQoJzB4MmYnKV0oXzB4MjM3ZGIwKSYmXzB4NTAxZjUzKHRoaXNbXzB4NmQ2NCgnMHg3MGUnKV1bXzB4MjM3ZGIwXSk7dHJ5e2Zvcih2YXIgXzB4MjQyYmFhPV8weDJmZDA4ZChfMHg1ZWM5NDQpLF8weDJlZWU1Yz1fMHgyNDJiYWFbXzB4NmQ2NCgnMHhkNScpXSgpOyFfMHgyZWVlNWNbJ2RvbmUnXTtfMHgyZWVlNWM9XzB4MjQyYmFhW18weDZkNjQoJzB4ZDUnKV0oKSl7dmFyIF8weDE1YmQ0ND1fMHgyZWVlNWNbXzB4NmQ2NCgnMHhhOScpXTt0aGlzW18weDZkNjQoJzB4NzlkJyldKF8weDE1YmQ0NCk7fX1jYXRjaChfMHg1ZGM1ZTApe18weDQ0YjNkMD17J2Vycm9yJzpfMHg1ZGM1ZTB9O31maW5hbGx5e3RyeXtpZihfMHg2ZDY0KCcweDhiMycpPT09XzB4NmQ2NCgnMHg4YjQnKSl7aWYoIV8weDVlYzk0NFtfMHg2ZDY0KCcweDIwNycpXSlyZXR1cm4gXzB4MmVlZTVjWydpZCddPSdzdGFydGluZ1RyaWFsJyxfMHhlMmZiZWM9XzB4NmQ2NCgnMHg0MGInKSsocHJvY2Vzc1snZW52J11bJ3F1b2trYSddPydRdW9ra2EnOl8weDZkNjQoJzB4NDBjJykpKydceDIwd2l0aG91dFx4MjBzZWVpbmdceDIwdGhpc1x4MjBtZXNzYWdlXHgyMGFuZFx4MjB3aXRob3V0XHgyMGhhdmluZ1x4MjB0b1x4MjBwZXJpb2RpY2FsbHlceDIwcmVzdGFydFx4MjB0b1x4MjBjb250aW51ZVx4MjB1c2UsXHgyMHBsZWFzZVx4MjByZXF1ZXN0XHgyMGFuXHgyMDxhXHgyMGhyZWY9XHgyMicrXzB4MjM3ZGIwK18weDZkNjQoJzB4NDA2JykrUitfMHg2ZDY0KCcweDQwZScpK0MrXzB4NmQ2NCgnMHg0MGYnKStfMHg1MDFmNTMrXzB4NmQ2NCgnMHg0MTAnKSx0aGlzW18weDZkNjQoJzB4MWU0JyldKF8weDZkNjQoJzB4MzBjJyksXzB4ZTJmYmVjLF8weDJlZWU1YyksdGhpc1tfMHg2ZDY0KCcweDJjNScpXSgpLF8weDQ0YjNkMCgpO3ZhciBfMHgxZDUzZGE9eydpbnZhbGlkVmVyc2lvbic6ITB4MCwnaWQnOl8weDZkNjQoJzB4MjA3Jyl9O3Byb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVtfMHg2ZDY0KCcweDFlOScpXT8oXzB4MWQ1M2RhW18weDZkNjQoJzB4M2ViJyldPW5ldyBfMHgyNDJiYWEoXzB4NWVjOTQ0W18weDZkNjQoJzB4MjdkJyldK18weDZkNjQoJzB4NDExJykpLF8weGUyZmJlYz0nWW91XHgyMGFyZVx4MjA8Yj5ub3RceDIwbGljZW5zZWRceDIwdG9ceDIwdXNlXHgyMFBST1x4MjBmZWF0dXJlc1x4MjBmb3JceDIwdGhpc1x4MjB2ZXJzaW9uXHgyMG9mXHgyMCcrXzB4MmZkMDhkK18weDZkNjQoJzB4NDEzJykrXzB4NTAxZjUzK18weDZkNjQoJzB4NDE0JykrQytfMHg2ZDY0KCcweDQxNScpK18weDFkNTNkYVtfMHg2ZDY0KCcweDNlYicpXVtfMHg2ZDY0KCcweDNmZScpXSgpKyctJysoXzB4MWQ1M2RhWydleHBpcnlEYXRlJ11bJ2dldFVUQ01vbnRoJ10oKSsweDEpKyctJytfMHgxZDUzZGFbXzB4NmQ2NCgnMHgzZWInKV1bJ2dldFVUQ0RhdGUnXSgpK18weDZkNjQoJzB4NDE3JykrRStfMHg2ZDY0KCcweDQxOCcpKTpfMHhlMmZiZWM9XzB4NmQ2NCgnMHg4YjUnKStfMHgyZmQwOGQrXzB4NmQ2NCgnMHg4NTYnKStfMHg1MDFmNTMrJ1x4MjI+b3VyXHgyMHdlYnNpdGU8L2E+XHgyMHRvXHgyMHVwZ3JhZGVceDIweW91clx4MjBsaWNlbnNlLjxici8+SWZceDIweW91XHgyMGhhdmVceDIwcHVyY2hhc2VkXHgyMGFceDIwcmVuZXdhbFx4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicrQytfMHg2ZDY0KCcweDNmNScpLHRoaXNbXzB4NmQ2NCgnMHgxZTQnKV0oJ2Vycm9yJyxfMHhlMmZiZWMsXzB4MWQ1M2RhKSx0aGlzW18weDZkNjQoJzB4MWU2JyldKCk7fWVsc2V7XzB4MmVlZTVjJiYhXzB4MmVlZTVjWydkb25lJ10mJihfMHhlMmZiZWM9XzB4MjQyYmFhW18weDZkNjQoJzB4ZDAnKV0pJiZfMHhlMmZiZWNbXzB4NmQ2NCgnMHgzJyldKF8weDI0MmJhYSk7fX1maW5hbGx5e2lmKF8weDQ0YjNkMCl0aHJvdyBfMHg0NGIzZDBbXzB4NmQ2NCgnMHg4ZCcpXTt9fX1lbHNle3RoaXNbXzB4NmQ2NCgnMHgxZjknKV1bJ3RvZ2dsZVRlc3RGaWx0ZXInXShfMHg1ZWM5NDRbJ3JlcXVlc3QnXSk7fX0sXzB4NWVjOTQ0Wydwcm90b3R5cGUnXVsnY2xlYXInXT1mdW5jdGlvbigpe3RoaXNbXzB4NmQ2NCgnMHg3MGUnKV09e30sdGhpc1tfMHg2ZDY0KCcweDRiNycpXT0hMHgwO30sXzB4NWVjOTQ0W18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg0YjgnKV09ZnVuY3Rpb24oXzB4NWVjOTQ0LF8weDQ0YjNkMCl7dmFyIF8weGUyZmJlYyxfMHg1MDFmNTMsXzB4MjM3ZGIwPXRoaXNbJ19zdGF0ZSddW18weDVlYzk0NF07aWYoXzB4MjM3ZGIwKWlmKDB4MT09PV8weDQ0YjNkMFsnbGVuZ3RoJ10pZGVsZXRlIF8weDIzN2RiMFtfMHg2ZDY0KCcweGEzJyldW18weDQ0YjNkMFsweDBdXTtlbHNle3ZhciBfMHgyOTkyYjM9XzB4MjM3ZGIwO3RyeXtmb3IodmFyIF8weDIzZWJjMz1fMHgyZmQwOGQoXzB4NDRiM2QwW18weDZkNjQoJzB4MWJmJyldKDB4MCxfMHg0NGIzZDBbJ2xlbmd0aCddLTB4MSkpLF8weDM4MGVmOT1fMHgyM2ViYzNbJ25leHQnXSgpOyFfMHgzODBlZjlbXzB4NmQ2NCgnMHhkMycpXTtfMHgzODBlZjk9XzB4MjNlYmMzW18weDZkNjQoJzB4ZDUnKV0oKSl7dmFyIF8weDU1NGY1ND1fMHgzODBlZjlbJ3ZhbHVlJ107aWYoIV8weDI5OTJiMylicmVhaztfMHgyOTkyYjM9XzB4Mjk5MmIzWyd0ZXN0cyddW18weDU1NGY1NF07fX1jYXRjaChfMHg0Y2ExNjUpe2lmKF8weDZkNjQoJzB4OGI2JykhPT0nZE5OU28nKXtkZWxldGUgdGhpc1snX2ZpbGVzJ11bXzB4NWVjOTQ0XSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDI2MicpXVtfMHg1ZWM5NDRdO31lbHNle18weGUyZmJlYz17J2Vycm9yJzpfMHg0Y2ExNjV9O319ZmluYWxseXtpZihfMHg2ZDY0KCcweDhiNycpPT09J3Zla2ZDJyl7dHJ5e18weDM4MGVmOSYmIV8weDM4MGVmOVtfMHg2ZDY0KCcweGQzJyldJiYoXzB4NTAxZjUzPV8weDIzZWJjM1tfMHg2ZDY0KCcweGQwJyldKSYmXzB4NTAxZjUzW18weDZkNjQoJzB4MycpXShfMHgyM2ViYzMpO31maW5hbGx5e2lmKF8weGUyZmJlYyl0aHJvdyBfMHhlMmZiZWNbJ2Vycm9yJ107fX1lbHNle3ZhciBfMHgzMTk5NzU9XzB4NWVjOTQ0W18weDZkNjQoJzB4NDZlJyldKCk7aWYoXzB4MzE5OTc1KXt2YXIgXzB4NTRkMmI2PV8weDJmZDA4ZFtfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDJlJyldKF8weDMxOTk3NSk7aWYoXzB4NTRkMmI2W18weDZkNjQoJzB4NGU1JyldKCkpcmV0dXJuIF8weGUyZmJlYz1fMHg1NGQyYjYsITB4MTt9fX1fMHgyOTkyYjMmJmRlbGV0ZSBfMHgyOTkyYjNbXzB4NmQ2NCgnMHhhMycpXVtfMHg0NGIzZDBbXzB4NDRiM2QwWydsZW5ndGgnXS0weDFdXTt9fSxfMHg1ZWM5NDQ7fSgpO18weDQ0YjNkMFtfMHg2ZDY0KCcweDQnKV09XzB4MjM3ZGIwO30seycuLi9zZXJ2ZXIvdGVzdEZpbHRlcic6MHgxN31dLDI5OltmdW5jdGlvbihfMHgyNDJhMGMsXzB4MWRkNTAxLF8weDQwM2I0Nyl7dmFyIF8weDVlNmFhNz1fMHgyNDJhMGMoXzB4NmQ2NCgnMHg0ZScpKSxf4oCLMHgzMWQwNGQ9XzB4MjQyYTBjKCdwYXJzZXVybCcpLF8weDQ4NmIxOD1fMHgyNDJhMGMoJ21pbWUnKSxfMHg1NmQ1MzY9XzB4MjQyYTBjKF8weDZkNjQoJzB4NGYnKSksXzB4MjAxMDdhPW5ldyBNYXAoKSxfMHhjYTI0OTU9ZnVuY3Rpb24oXzB4MjQyYTBjLF8weDFkZDUwMSxfMHg0MDNiNDcpe18weDI0MmEwY1tfMHg2ZDY0KCcweDE2OCcpXSh7J0NhY2hlLUNvbnRyb2wnOl8weDZkNjQoJzB4OGI4JyksJ0V4cGlyZXMnOm5ldyBEYXRlKERhdGVbXzB4NmQ2NCgnMHg4YjknKV0oKSsweDUyNjVjMDApW18weDZkNjQoJzB4OGJhJyldKCl9KSxfMHgyNDJhMGNbXzB4NmQ2NCgnMHgzMCcpXShfMHg0ODZiMThbXzB4NmQ2NCgnMHg4YmInKV0oXzB4NDAzYjQ3LF8weDZkNjQoJzB4OGJjJykpKSxfMHgyNDJhMGNbXzB4NmQ2NCgnMHgxM2YnKV0oMHhjOClbXzB4NmQ2NCgnMHgyNTgnKV0oXzB4MWRkNTAxKTt9O18weDFkZDUwMVtfMHg2ZDY0KCcweDQnKV09eydjcmVhdGUnOmZ1bmN0aW9uKF8weDI0MmEwYyxfMHgxZGQ1MDEpe2lmKF8weDZkNjQoJzB4OGJkJyk9PT1fMHg2ZDY0KCcweDhiZScpKXtpZighXzB4NWU2YWE3fHwhXzB4NWU2YWE3W18weDZkNjQoJzB4NzE0JyldKXJldHVybiBjKF8weDFkZDUwMSxfMHg0MDNiNDcsXzB4NWU2YWE3KTt2YXIgXzB4NGM3OTNhPV8weDI0MmEwYyhfMHg2ZDY0KCcweDcxNCcpKVtfMHg2ZDY0KCcweDRiYicpXTtyZXR1cm4gXzB4NGM3OTNhKF8weDFkZDUwMSxfMHg0MDNiNDcseydkb3QnOiEweDB9KTt9ZWxzZXt2YXIgXzB4NDAzYjQ3PWxvZ2dlcltfMHg2ZDY0KCcweDNiJyldKCdtaWRkbGV3YXJlJylbJ3RyYWNlJ10sXzB4NDg2YjE4PV8weDI0MmEwY1tfMHg2ZDY0KCcweDdjOScpXVtfMHg2ZDY0KCcweDdjZicpXT9fMHgyNDJhMGNbJ21haW4nXVtfMHg2ZDY0KCcweDdjZicpXTpfMHgyMDEwN2E7cmV0dXJuIF8weDI0MmEwY1tfMHg2ZDY0KCcweDdjOScpXVsncmVhZCddPV8weDI0MmEwY1tfMHg2ZDY0KCcweDdjOScpXVtfMHg2ZDY0KCcweDdjZScpXT9fMHgyNDJhMGNbJ21haW4nXVsncmVhZCddOl8weDU2ZDUzNltfMHg2ZDY0KCcweDFkYicpXSxfMHgyNDJhMGNbXzB4NmQ2NCgnMHg4YmYnKV0mJihfMHgyNDJhMGNbJ2FsdCddWydjYWNoZSddfHwoXzB4MjQyYTBjW18weDZkNjQoJzB4OGJmJyldW18weDZkNjQoJzB4N2NmJyldPXsnZ2V0JzpmdW5jdGlvbigpe3JldHVybiBudWxsO30sJ3NldCc6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbDt9fSksXzB4MjQyYTBjWydhbHQnXVtfMHg2ZDY0KCcweDdjZScpXT1fMHgyNDJhMGNbXzB4NmQ2NCgnMHg4YmYnKV1bXzB4NmQ2NCgnMHg3Y2UnKV0/XzB4MjQyYTBjW18weDZkNjQoJzB4OGJmJyldW18weDZkNjQoJzB4N2NlJyldOl8weDU2ZDUzNltfMHg2ZDY0KCcweDFkYicpXSksZnVuY3Rpb24oXzB4NTZkNTM2LF8weDIwMTA3YSl7aWYoXzB4NmQ2NCgnMHg4YzAnKT09PV8weDZkNjQoJzB4OGMwJykpe3ZhciBfMHgxMjUzNGE9XzB4MzFkMDRkKF8weDU2ZDUzNilbXzB4NmQ2NCgnMHg1OTInKV07Jy8nPT09XzB4MTI1MzRhJiYoXzB4MTI1MzRhPScnKTt2YXIgXzB4NWRjOTAzPV8weDI0MmEwY1tfMHg2ZDY0KCcweDdjOScpXVtfMHg2ZDY0KCcweDdjYScpXTtfMHg0MDNiNDcoXzB4NmQ2NCgnMHg3Y2InKSxfMHgxMjUzNGF8fF8weDVkYzkwMyk7dmFyIF8weDEzNDA1Zj1fMHg1ZTZhYTdbXzB4NmQ2NCgnMHg1YzUnKV0oXzB4NWU2YWE3Wydqb2luJ10oXzB4NWRjOTAzLF8weDEyNTM0YSkpLF8weDQ4NDY0ZT1fMHg0ODZiMThbXzB4NmQ2NCgnMHgxNjQnKV0oXzB4MTM0MDVmKTtpZihfW18weDZkNjQoJzB4MjcxJyldKF8weDQ4NDY0ZSl8fF8weDQ4NDY0ZSBpbnN0YW5jZW9mIEJ1ZmZlcilfMHg0MDNiNDcoXzB4NmQ2NCgnMHg3Y2MnKSxfMHgxMjUzNGF8fF8weDVkYzkwMyksXzB4Y2EyNDk1KF8weDIwMTA3YSxfMHg0ODQ2NGUsXzB4MTM0MDVmKTtlbHNle2lmKF8weDZkNjQoJzB4OGMxJykhPT1fMHg2ZDY0KCcweDhjMScpKXt0cnl7eSYmIXlbXzB4NmQ2NCgnMHhkMycpXSYmKF8weDQ4NmIxOD12W18weDZkNjQoJzB4ZDAnKV0pJiZfMHg0ODZiMThbXzB4NmQ2NCgnMHgzJyldKHYpO31maW5hbGx5e2lmKF8weDVlNmFhNyl0aHJvdyBfMHg1ZTZhYTdbJ2Vycm9yJ107fX1lbHNle3ZhciBfMHg0OWRhMGY9ZnVuY3Rpb24oXzB4MjQyYTBjLF8weDMxZDA0ZCxfMHg0ODZiMTgsXzB4NTZkNTM2KXtpZihfMHg2ZDY0KCcweDhjMicpIT09XzB4NmQ2NCgnMHg4YzInKSl7XzB4MWRkNTAxW18weDZkNjQoJzB4NCcpXT17J2xpbmVTdGF0ZSc6eydub3RDb3ZlcmVkJzoweDEsJ2Z1bGx5Q292ZXJlZCc6MHgyLCdwYXJ0aWFsbHlDb3ZlcmVkJzoweDMsJ2Vycm9yU291cmNlJzoweDQsJ2Vycm9yUGF0aCc6MHg1fX07fWVsc2V7XzB4NDg2YjE4P18weDI0MmEwYz8oXzB4NWRjOTAzPV8weDI0MmEwY1tfMHg2ZDY0KCcweDdjYScpXSxfMHg0MDNiNDcoXzB4NmQ2NCgnMHg3Y2QnKSxfMHgxMjUzNGF8fF8weDVkYzkwMyksXzB4MTM0MDVmPV8weDVlNmFhN1tfMHg2ZDY0KCcweDVjNScpXShfMHg1ZTZhYTdbXzB4NmQ2NCgnMHg0YycpXShfMHg1ZGM5MDMsXzB4MTI1MzRhKSksXzB4MjQyYTBjW18weDZkNjQoJzB4N2NlJyldKF8weDEzNDA1ZixfMHg0OWRhMGZbXzB4NmQ2NCgnMHhmYScpXShudWxsLG51bGwsXzB4MjQyYTBjWydjYWNoZSddKSkpOihfMHg0MDNiNDcoXzB4NmQ2NCgnMHg3ZDAnKSxfMHgxMzQwNWYsXzB4NDg2YjE4JiZfMHg0ODZiMThbXzB4NmQ2NCgnMHgyMycpXXx8J3Vua25vd24nKSxfMHgxZGQ1MDEmJmNvbnNvbGVbJ2Vycm9yJ10oXzB4NmQ2NCgnMHg3ZDEnKStfMHgxMjUzNGEpLF8weDIwMTA3YVtfMHg2ZDY0KCcweDEzZicpXSgweDE5NClbXzB4NmQ2NCgnMHgyNTgnKV0oKSk6KF8weDMxZDA0ZFtfMHg2ZDY0KCcweDE2OCcpXShfMHgxMzQwNWYsXzB4NTZkNTM2KSxfMHhjYTI0OTUoXzB4MjAxMDdhLF8weDU2ZDUzNixfMHgxMzQwNWYpKTt9fTtfMHg0MDNiNDcoJ1NlcnZpbmdceDIwJXNceDIwZnJvbVx4MjBkaXNrJyxfMHgxMjUzNGF8fF8weDVkYzkwMyksXzB4MjQyYTBjW18weDZkNjQoJzB4N2M5JyldW18weDZkNjQoJzB4N2NlJyldKF8weDEzNDA1ZixfMHg0OWRhMGZbXzB4NmQ2NCgnMHhmYScpXShudWxsLF8weDI0MmEwY1snYWx0J10sXzB4NDg2YjE4KSk7fX19ZWxzZXt0aGlzW18weDZkNjQoJzB4NzhkJyldPSEweDA7fX07fX19O30seydncmFjZWZ1bC1mcyc6dm9pZCAweDAsJ21pbWUnOnZvaWQgMHgwLCdwYXJzZXVybCc6dm9pZCAweDAsJ3BhdGgnOnZvaWQgMHgwfV0sMzA6W2Z1bmN0aW9uKF8weDIxM2YxNixfMHgxYzFmYTEsXzB4MjEwMjhmKXt2YXIgXzB4Y2Y5ZGI9KF8weDIxM2YxNignZnMnKSxfMHgyMTNmMTYoXzB4NmQ2NCgnMHg0ZScpKSksXzB4NWU5NDQwPV8weDIxM2YxNihfMHg2ZDY0KCcweDE4NCcpKVtfMHg2ZDY0KCcweDhjMycpXSxfMHgxMzZiYzE9bG9nZ2VyW18weDZkNjQoJzB4M2InKV0oXzB4NmQ2NCgnMHg4YzQnKSlbXzB4NmQ2NCgnMHg1NicpXSxfMHg3ODdlMTg9XzB4MjEzZjE2KF8weDZkNjQoJzB4ZWInKSksXzB4NWRkOTRiPV8weDIxM2YxNihfMHg2ZDY0KCcweDhjNScpKSxfMHgyMDNiYWI9XzB4NmQ2NCgnMHg4YzYnKSxfMHhmNTY0YmY9ZnVuY3Rpb24oXzB4MjEzZjE2KXtpZignQXljbEsnIT09XzB4NmQ2NCgnMHg4YzcnKSl7dmFyIF8weDQwNTE5Mz1fMHg1ZTk0NDBbXzB4NmQ2NCgnMHg2MTgnKV0oXzB4MWMxZmExW18weDZkNjQoJzB4NWJlJyldKTtyZXR1cm4gXzB4MjEzZjE2W18weDQwNTE5M109XzB4NDA1MTkzLF8weDIxM2YxNjt9ZWxzZXt2YXIgXzB4MWMxZmExPXRoaXM7XzB4MWMxZmExW18weDZkNjQoJzB4NTknKV09XzB4MjEzZjE2LF8weDFjMWZhMVtfMHg2ZDY0KCcweDhjOCcpXT1fMHgyMTNmMTZbXzB4NmQ2NCgnMHg1YycpXSgpW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHhmMycpXSxfMHgxYzFmYTFbXzB4NmQ2NCgnMHg1YicpXT1fMHgyMTNmMTZbXzB4NmQ2NCgnMHg1YycpXSgpW18weDZkNjQoJzB4NWQnKV0sXzB4MWMxZmExW18weDZkNjQoJzB4OGM5JyldPV8weDIxM2YxNltfMHg2ZDY0KCcweDVjJyldKClbXzB4NmQ2NCgnMHg4Y2EnKV0sXzB4MWMxZmExW18weDZkNjQoJzB4OGNiJyldPV8weDIxM2YxNlsnc2V0dGluZ3MnXSgpW18weDZkNjQoJzB4OWYnKV0sXzB4MWMxZmExWydfemVyb0NvbmZpZ0plc3QnXT1fMHgyMTNmMTZbXzB4NmQ2NCgnMHgyMTMnKV0oKSxfMHgxYzFmYTFbXzB4NmQ2NCgnMHg4Y2MnKV09XzB4Y2Y5ZGJbJ2pvaW4nXShfMHgyMTNmMTZbXzB4NmQ2NCgnMHg3MycpXSxfMHg2ZDY0KCcweDhhYScpKTt0cnl7aWYoJ1dQWE1CJyE9PV8weDZkNjQoJzB4OGNkJykpe3ZhciBfMHg0MjExMTk9XzB4Nzg3ZTE4KHRoaXNbJ190cmFjZSddW18weDZkNjQoJzB4NjZkJyldW18weDFjMWZhMVtfMHg2ZDY0KCcweDM5YicpXV0sMHgzKSxfMHgyM2QzYmE9XzB4NDIxMTE5WzB4Ml0sXzB4M2MxYWE4PV8weGY1NjRiZj9fMHhjZjlkYih0aGlzW18weDZkNjQoJzB4MWM5JyldW18weDZkNjQoJzB4NjZkJyldLGZ1bmN0aW9uKF8weDRhN2YzZSxfMHg0ZDM3YmMpe3JldHVybihfMHgyMTAyOGY/XzB4NGQzN2JjPD1fMHg1ZTk0NDA6XzB4NGQzN2JjPj1fMHg1ZTk0NDApJiZfMHg0YTdmM2VbMHgyXTw9XzB4MjNkM2JhO30sXzB4MWMxZmExW18weDZkNjQoJzB4MzliJyldKTpfMHhjZjlkYih0aGlzWydfdHJhY2UnXVtfMHg2ZDY0KCcweDY2ZCcpXSxmdW5jdGlvbihfMHg0YjQ3ODgsXzB4NTc2MTcxKXtyZXR1cm4oXzB4MjEwMjhmP18weDU3NjE3MTw9XzB4NWU5NDQwOl8weDU3NjE3MT49XzB4NWU5NDQwKSYmXzB4NGI0Nzg4WzB4Ml08XzB4MjNkM2JhO30sXzB4MWMxZmExWydmcmFtZSddKTtpZihfMHgzYzFhYTg8MHgwKXJldHVybiB0aGlzWydfdHJhY2VTdGVwTm90Rm91bmQnXShfMHgyMTNmMTYpO18weDVlOTQ0MD1fMHgzYzFhYTg7fWVsc2V7XzB4MWMxZmExWydfcmVnZW5lcmF0b3JSdW50aW1lJ109XzB4Y2Y5ZGJbXzB4NmQ2NCgnMHg0YycpXShfMHhjZjlkYlsnZGlybmFtZSddKF8weDVkZDk0YltfMHg2ZDY0KCcweDhjZScpXShfMHgxYzFmYTFbXzB4NmQ2NCgnMHg4Y2MnKV0sXzB4NmQ2NCgnMHg4Y2YnKSkpLF8weDZkNjQoJzB4OGQwJykpO319Y2F0Y2goXzB4NTU3NDg3KXt9XzB4MWMxZmExW18weDZkNjQoJzB4MThlJyldPV8weDIxM2YxNltfMHg2ZDY0KCcweDVjJyldKClbJ2VudiddW18weDZkNjQoJzB4NmUnKV0sXzB4MWMxZmExW18weDZkNjQoJzB4ZmInKV09XzB4MjEzZjE2W18weDZkNjQoJzB4NWMnKV0oKVtfMHg2ZDY0KCcweDE5YScpXVtfMHg2ZDY0KCcweDNmMCcpXSxfMHgxYzFmYTFbXzB4NmQ2NCgnMHg4ZDEnKV09XzB4MjEzZjE2WydzZXR0aW5ncyddKClbJ3Rlc3RGcmFtZXdvcmsnXSxfMHgxYzFmYTFbXzB4NmQ2NCgnMHg4ZDInKV09cHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldW18weDZkNjQoJzB4MWU5JyldfHxfMHgxYzFmYTFbXzB4NmQ2NCgnMHg1ZWUnKV0/cHJvY2Vzc1tfMHg2ZDY0KCcweDJmOCcpXSgpOl8weDIxM2YxNltfMHg2ZDY0KCcweDM1MScpXSxfMHgxYzFmYTFbXzB4NmQ2NCgnMHg3NycpXT1fMHgyMTNmMTZbJ19sb2NhbFByb2plY3REaXInXSxfMHgxYzFmYTFbXzB4NmQ2NCgnMHg4ZDMnKV09XzB4MjEzZjE2W18weDZkNjQoJzB4OGQ0JyldLF8weDFjMWZhMVtfMHg2ZDY0KCcweDliJyldPSEhXzB4MjEzZjE2W18weDZkNjQoJzB4NWMnKV0oKVsncmVwb3J0VW5oYW5kbGVkUHJvbWlzZXMnXSxfMHgxYzFmYTFbXzB4NmQ2NCgnMHg2MScpXT1fMHgyMTNmMTZbXzB4NmQ2NCgnMHg1YycpXSgpW18weDZkNjQoJzB4NjInKV0sXzB4MWMxZmExW18weDZkNjQoJzB4NTcnKV09bmV3IF8weDc4N2UxOChfMHgxYzFmYTFbJ19wcm9qZWN0J10seydjcmVhdGUnOl9bXzB4NmQ2NCgnMHhmYScpXShfMHgxYzFmYTFbXzB4NmQ2NCgnMHg4ZDUnKV0sXzB4MWMxZmExKSwncmVjeWNsZSc6X1tfMHg2ZDY0KCcweGZhJyldKF8weDFjMWZhMVtfMHg2ZDY0KCcweDhkNicpXSxfMHgxYzFmYTEpLCdoZWFsdGh5JzpfWydiaW5kJ10oXzB4MWMxZmExW18weDZkNjQoJzB4OGQ3JyldLF8weDFjMWZhMSksJ3ByZXBhcmUnOl9bXzB4NmQ2NCgnMHhmYScpXShfMHgxYzFmYTFbXzB4NmQ2NCgnMHgxYTcnKV0sXzB4MWMxZmExKX0pLF8weDFjMWZhMVtfMHg2ZDY0KCcweDU3JyldW18weDZkNjQoJzB4Njc0JyldKF8weDFjMWZhMVtfMHg2ZDY0KCcweDhkMicpXSk7fX07XzB4ZjU2NGJmWydwcm90b3R5cGUnXT17J3J1bic6ZnVuY3Rpb24oXzB4MjEzZjE2KXt2YXIgXzB4MWMxZmExPXRoaXM7cmV0dXJuIF8weDFjMWZhMVtfMHg2ZDY0KCcweDU3JyldW18weDZkNjQoJzB4MTA1JyldKF8weDIxM2YxNik7fSwnY2FuY2VsJzpmdW5jdGlvbihfMHgyMTNmMTYpe3ZhciBfMHgxYzFmYTE9dGhpcztyZXR1cm4gXzB4MWMxZmExW18weDZkNjQoJzB4NTcnKV1bJ2NhbmNlbCddKF8weDIxM2YxNik7fSwnc3RhcnQnOmZ1bmN0aW9uKCl7aWYoJ1luTmdXJyE9PV8weDZkNjQoJzB4OGQ4Jykpe18weDEzNmJjMShfMHgxYzFmYTEpO31lbHNle3ZhciBfMHgyMTNmMTY9dGhpcztyZXR1cm4gXzB4MjEzZjE2W18weDZkNjQoJzB4NTcnKV1bXzB4NmQ2NCgnMHgzMScpXSgpO319LCdzdG9wJzpmdW5jdGlvbigpe3ZhciBfMHgyMTNmMTY9dGhpcztfMHgyMTNmMTZbXzB4NmQ2NCgnMHg1NycpXVsnc3RvcCddKCk7fSwnX2NyZWF0ZU5vZGVJbnN0YW5jZSc6ZnVuY3Rpb24oXzB4MjEzZjE2LF8weDFjMWZhMSl7dmFyIF8weDIxMDI4Zj10aGlzO3NldEltbWVkaWF0ZShmdW5jdGlvbigpe3RyeXtwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bJ3F1b2trYSddJiYoXzB4MjEwMjhmW18weDZkNjQoJzB4MThlJyldPV8weDIxMDI4ZltfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4NWMnKV0oKVtfMHg2ZDY0KCcweGYxJyldWydwYXJhbXMnXSxfMHgyMTAyOGZbXzB4NmQ2NCgnMHhmYicpXT1fMHgyMTAyOGZbXzB4NmQ2NCgnMHg1OScpXVsnc2V0dGluZ3MnXSgpW18weDZkNjQoJzB4MTlhJyldWydyZWN5Y2xlJ10pO3ZhciBfMHhjZjlkYj0oXzB4MjEwMjhmWydfcGFyYW1zJ11bXzB4NmQ2NCgnMHhmMycpXT9fW18weDZkNjQoJzB4YTcnKV0oXzB4MjEwMjhmW18weDZkNjQoJzB4MThlJyldW18weDZkNjQoJzB4ZjMnKV1bXzB4NmQ2NCgnMHg5MScpXSgvIihbXiJdKykiL2csZnVuY3Rpb24oXzB4MjEzZjE2KXtyZXR1cm4gXzB4MjEzZjE2W18weDZkNjQoJzB4OTEnKV0oL1xzL2csXzB4NmQ2NCgnMHhjOScpKTt9KVsnc3BsaXQnXSgnXHgyMCcpLGZ1bmN0aW9uKF8weDIxM2YxNil7cmV0dXJuIF9bXzB4NmQ2NCgnMHg4ZDknKV0oXzB4MjEzZjE2W18weDZkNjQoJzB4OTEnKV0oL19zcGFjZV90b2tlbl8vZywnXHgyMCcpLCdceDIyJyk7fSk6W10pW18weDZkNjQoJzB4ODgnKV0oW3Byb2Nlc3NbXzB4NmQ2NCgnMHg1ZWQnKV1bJ2ZpbGVuYW1lJ10sXzB4NmQ2NCgnMHhmMycpLF8weDIxM2YxNixfMHgyMTAyOGZbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDhmJyldKCksXzB4MjEwMjhmWydfdGVzdEZyYW1ld29yayddW18weDZkNjQoJzB4NzEnKV0rKF8weDIxMDI4ZlsnX3Rlc3RGcmFtZXdvcmsnXVtfMHg2ZDY0KCcweDhkYScpXT9fMHg2ZDY0KCcweDhkYicpOicnKSxfMHgyMTAyOGZbXzB4NmQ2NCgnMHg4ZDEnKV1bXzB4NmQ2NCgnMHg0ZScpXXx8JycsXzB4MjEwMjhmW18weDZkNjQoJzB4OGNjJyldLF8weDIxMDI4ZltfMHg2ZDY0KCcweDhkMycpXSxwcm9jZXNzWydlbnYnXVtfMHg2ZDY0KCcweDhkYycpXSYmXzB4MjEwMjhmW18weDZkNjQoJzB4OGRkJyldfHwnJyxfMHgyMTAyOGZbXzB4NmQ2NCgnMHg4ZDEnKV1bXzB4NmQ2NCgnMHg4ZGUnKV18fCcnXSksXzB4Nzg3ZTE4PV9bXzB4NmQ2NCgnMHgzNCcpXSh7fSxwcm9jZXNzWydlbnYnXSxfMHgyMTAyOGZbXzB4NmQ2NCgnMHgxOGUnKV1bJ2VudiddP19bJ3JlZHVjZSddKF8weDIxMDI4ZltfMHg2ZDY0KCcweDE4ZScpXVsnZW52J11bXzB4NmQ2NCgnMHhmNScpXSgnOycpLGZ1bmN0aW9uKF8weDIxM2YxNixfMHgxYzFmYTEpe3ZhciBfMHgyMTAyOGY9XzB4MWMxZmExW18weDZkNjQoJzB4ZjUnKV0oJz0nKSxfMHhjZjlkYj1fWyd0cmltTGVmdCddKF8weDIxMDI4ZlsweDBdKTtyZXR1cm4gXzB4MjEzZjE2W18weGNmOWRiXT1fMHgxYzFmYTFbXzB4NmQ2NCgnMHgxN2QnKV0oXzB4MjEwMjhmWzB4MF1bJ2xlbmd0aCddKzB4MSksXzB4MjEzZjE2O30se30pOnt9KTtkZWxldGUgXzB4Nzg3ZTE4W18weDZkNjQoJzB4MThmJyldLGRlbGV0ZSBfMHg3ODdlMThbXzB4NmQ2NCgnMHgxOTAnKV07dmFyIF8weDVkZDk0Yj17J3Byb2Nlc3MnOl8weDVlOTQ0MChfMHgyMTAyOGZbXzB4NmQ2NCgnMHg4YzgnKV0sXzB4Y2Y5ZGIseydjd2QnOl8weDIxMDI4ZltfMHg2ZDY0KCcweDhkMicpXSwnZW52JzpfMHg3ODdlMTh9KSwnb25Db25uZWN0ZWQnOmZ1bmN0aW9uKF8weDIxM2YxNil7X1tfMHg2ZDY0KCcweDhkZicpXShfMHgyMTNmMTYpP3RoaXNbXzB4NmQ2NCgnMHg4ZTAnKV09XzB4MjEzZjE2OnRoaXNbJ19vbkNvbm5lY3RlZCddJiYodGhpc1snX29uQ29ubmVjdGVkJ10oXzB4MjEzZjE2KSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDhlMCcpXSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDhlMScpXSk7fX07XzB4NWRkOTRiW18weDZkNjQoJzB4NzNjJyldW18weDZkNjQoJzB4OGUyJyldWydvbiddKF8weDZkNjQoJzB4MTM2JyksZnVuY3Rpb24oXzB4MjEzZjE2KXt2YXIgXzB4MWMxZmExPV8weDIxM2YxNltfMHg2ZDY0KCcweDUzJyldKCd1dGY4Jyk7XzB4MTM2YmMxKF8weDZkNjQoJzB4OGUzJyksXzB4MWMxZmExKSxjb25zb2xlW18weDZkNjQoJzB4OGQnKV0oXzB4MWMxZmExKTt9KSxfMHgxYzFmYTEoXzB4NWRkOTRiKTt9Y2F0Y2goXzB4NDc2ODRkKXtfMHgxMzZiYzEoXzB4NmQ2NCgnMHg1ZjYnKSxfMHgyMTNmMTYsXzB4NDc2ODRkJiYoXzB4NDc2ODRkW18weDZkNjQoJzB4MTUyJyldfHxfMHg0NzY4NGRbXzB4NmQ2NCgnMHgyMycpXSkpLF8weDFjMWZhMSgpO319KTt9LCdfcmVjeWNsZU5vZGVJbnN0YW5jZSc6ZnVuY3Rpb24oXzB4MjEzZjE2KXtpZihfMHg2ZDY0KCcweDhlNCcpIT09J0pBQ0paJyl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg0ZGYnKV07fWVsc2V7dHJ5e2lmKF8weDZkNjQoJzB4OGU1Jyk9PT1fMHg2ZDY0KCcweDhlNicpKXtyZXR1cm4hdGhpc1tfMHg2ZDY0KCcweDQ5OScpXSYmdGhpc1snaXNDb3ZlcmVkJ10oKTt9ZWxzZXtfMHgyMTNmMTZbJ3Byb2Nlc3MnXVtfMHg2ZDY0KCcweDhlNycpXVtfMHg2ZDY0KCcweDhlOCcpXSgnZGF0YScpLF8weDIxM2YxNlsncHJvY2VzcyddWydzdGRlcnInXVtfMHg2ZDY0KCcweDhlOCcpXShfMHg2ZDY0KCcweDEzNicpKTt9fWZpbmFsbHl7XzB4MjEzZjE2Wydwcm9jZXNzJ11bJ2tpbGwnXSgpO319fSwnX2lzTm9kZUluc3RhbmNlSGVhbHRoeSc6ZnVuY3Rpb24oXzB4MjEzZjE2KXtyZXR1cm4gXzB4MjEzZjE2W18weDZkNjQoJzB4NzNjJyldJiZfMHgyMTNmMTZbXzB4NmQ2NCgnMHg3M2MnKV1bXzB4NmQ2NCgnMHgxMTgnKV0mJiFfMHgyMTNmMTZbJ3Byb2Nlc3MnXVsna2lsbGVkJ10mJiFfMHgyMTNmMTZbXzB4NmQ2NCgnMHg3M2MnKV1bXzB4NmQ2NCgnMHg4NDYnKV0mJm51bGw9PT1fMHgyMTNmMTZbXzB4NmQ2NCgnMHg3M2MnKV1bXzB4NmQ2NCgnMHg4NDcnKV07fSwnX3ByZXBhcmUnOmZ1bmN0aW9uKF8weDIxM2YxNixfMHgxYzFmYTEpe2lmKCdFSlhOTCc9PT1fMHg2ZDY0KCcweDhlOScpKXtpZihkKHlbXzB4NmQ2NCgnMHgyZjUnKV0oXzB4Y2Y5ZGJbXzB4NmQ2NCgnMHgxZTknKV1bXzB4NmQ2NCgnMHgyZWQnKV1bXzB4NmQ2NCgnMHgyZjAnKV0seydwYWNrYWdlTmFtZSc6XzB4MTM2YmMxWyduYW1lJ119KSx7J3N0ZGlvJzpfMHg2ZDY0KCcweDJmNicpLCdjd2QnOl8weDEzNmJjMVtfMHg2ZDY0KCcweDJmNycpXT9wcm9jZXNzW18weDZkNjQoJzB4MmY4JyldKCk6XzB4MTM2YmMxW18weDZkNjQoJzB4MmVmJyldP18weGNmOWRiW18weDZkNjQoJzB4MWU5JyldW18weDZkNjQoJzB4MmY5JyldOl8weGNmOWRiW18weDZkNjQoJzB4MWU5JyldW18weDZkNjQoJzB4MmVkJyldWydkaXInXX0pLF8weDEzNmJjMVsncGx1Z2luJ10mJl8weDEzNmJjMVsncGx1Z2luJ11bXzB4NmQ2NCgnMHgyZmInKV0pe3ZhciBfMHg0NDZhYTE9SlNPTltfMHg2ZDY0KCcweDFkYycpXShfMHgxYzFmYTFbXzB4NmQ2NCgnMHgyNmUnKV0oXzB4Y2Y5ZGJbJ3F1b2trYSddW18weDZkNjQoJzB4MmZjJyldKSk7XzB4NDQ2YWExW18weDZkNjQoJzB4MmZkJyldPV9bXzB4NmQ2NCgnMHgyNzEnKV0oXzB4NDQ2YWExW18weDZkNjQoJzB4MmZkJyldKT9bXzB4NDQ2YWExW18weDZkNjQoJzB4MmZkJyldXTpfMHg0NDZhYTFbXzB4NmQ2NCgnMHgyZmQnKV18fFtdLCFfW18weDZkNjQoJzB4MTUxJyldKF8weDQ0NmFhMVsncGx1Z2lucyddKSxmdW5jdGlvbihfMHg0NDZhYTEpe3JldHVybiBfMHg0NDZhYTE9PT1fMHgxMzZiYzFbXzB4NmQ2NCgnMHgzMicpXTt9JiZfMHg0NDZhYTFbXzB4NmQ2NCgnMHgyZmQnKV1bJ3B1c2gnXShfMHgxMzZiYzFbXzB4NmQ2NCgnMHgzMicpXSksXzB4MWMxZmExW18weDZkNjQoJzB4MjZmJyldKF8weGNmOWRiW18weDZkNjQoJzB4MWU5JyldW18weDZkNjQoJzB4MmZjJyldLEpTT05bXzB4NmQ2NCgnMHg5YScpXShfMHg0NDZhYTEpKSxfMHgxYzFmYTFbXzB4NmQ2NCgnMHg1OScpXVsncmVsb2FkUXVva2thU2V0dGluZ3MnXSgpO31fMHgyMTAyOGYoKTt9ZWxzZXt2YXIgXzB4MjEwMjhmPXRoaXMsXzB4Y2Y5ZGI9X1tfMHg2ZDY0KCcweDFiOScpXSgpLF8weDVlOTQ0MD1fMHgyMTAyOGZbJ19zYW5kYm94TmFtZSddKF8weDFjMWZhMSxfMHhjZjlkYik7cmV0dXJuIF8weDEzNmJjMShfMHg2ZDY0KCcweDEyNicpLF8weDVlOTQ0MCksUVtfMHg2ZDY0KCcweGMyJyldKClbXzB4NmQ2NCgnMHg3ZScpXShmdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4OGVhJyk9PT1fMHg2ZDY0KCcweDhlYicpKXt2YXIgXzB4MjAzZTBjPV8weGNmOWRiW18weDZkNjQoJzB4OCcpXShfMHgyMTNmMTYpLF8weDNhMDFiNj1fMHg2ZDY0KCcweDknKT09PV8weDIwM2UwYyxfMHgxMWM2MGQ9Jy50cyc9PT1fMHgyMDNlMGMsXzB4MWY4OTEyPVtfMHg2ZDY0KCcweGInKSxfMHg2ZDY0KCcweDhlYycpLF8weDZkNjQoJzB4YycpLF8weDZkNjQoJzB4ZCcpLF8weDZkNjQoJzB4ZScpLF8weDZkNjQoJzB4OGVkJyksJ2RlY29yYXRvcnMtbGVnYWN5JyxfMHg2ZDY0KCcweGYnKSwnZHluYW1pY0ltcG9ydCcsXzB4NmQ2NCgnMHgxMCcpLF8weDZkNjQoJzB4MTEnKSxfMHg2ZDY0KCcweDEyJyksXzB4NmQ2NCgnMHgxMycpLF8weDZkNjQoJzB4MTQnKSxfMHg2ZDY0KCcweDE1JyksJ251bGxpc2hDb2FsZXNjaW5nT3BlcmF0b3InLF8weDZkNjQoJzB4OGVlJyksXzB4NmQ2NCgnMHgxNicpLF8weDZkNjQoJzB4MTcnKSwnb3B0aW9uYWxDaGFpbmluZycsXzB4NmQ2NCgnMHgxOCcpLFtfMHg2ZDY0KCcweDhlZicpLHsncHJvcG9zYWwnOidzbWFydCd9XSwndGhyb3dFeHByZXNzaW9ucyddOyFfMHgzYTAxYjYmJl8weDExYzYwZHx8XzB4MWY4OTEyWydwdXNoJ10oXzB4NmQ2NCgnMHgxYicpKSxfMHgxMWM2MGR8fF8weDNhMDFiNj9fMHgxZjg5MTJbJ3B1c2gnXSgndHlwZXNjcmlwdCcpOihfMHgxZjg5MTJbXzB4NmQ2NCgnMHgxYycpXSgnZmxvdycpLF8weDFmODkxMltfMHg2ZDY0KCcweDFjJyldKCdmbG93Q29tbWVudHMnKSk7dmFyIF8weDM2NjA2Nz1fMHg1ZTk0NDBbXzB4NmQ2NCgnMHgxZGMnKV0oXzB4MWMxZmExLHsnc291cmNlVHlwZSc6XzB4NmQ2NCgnMHgyMCcpLCdwbHVnaW5zJzpfMHgxZjg5MTJ9KSxfMHg0ZDM4ZjU9W107cmV0dXJuIF8weDc4N2UxOChfMHgzNjYwNjcsXzB4MTM2YmMxKGZ1bmN0aW9uKF8weDFiNzIzZSl7cmV0dXJuIF8weDRkMzhmNVtfMHg2ZDY0KCcweDFjJyldKF8weDFiNzIzZSk7fSx7J3Zpc2l0SW1wb3J0cyc6ITB4MH0pKSxfMHg0ZDM4ZjU7fWVsc2V7cmV0dXJuIF8weDIxMDI4ZltfMHg2ZDY0KCcweDU3JyldWydjYW5jZWxsZWQnXSgpP1FbXzB4NmQ2NCgnMHgxYjYnKV0oeydydW5DYW5jZWxsZWQnOiEweDB9KTooXzB4MTM2YmMxKF8weDZkNjQoJzB4MTI5JyksXzB4NWU5NDQwKSxfMHgyMTAyOGZbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDEyNycpXShfMHgxYzFmYTEpKTt9fSlbXzB4NmQ2NCgnMHg3ZScpXShmdW5jdGlvbihfMHg3ODdlMTgpe3JldHVybiBfMHgxMzZiYzEoXzB4NmQ2NCgnMHgxMmInKSxfMHg1ZTk0NDApLFFbXzB4NmQ2NCgnMHhjMicpXSh7J2luc3RhbmNlJzp7J3Jlc3VtZSc6ZnVuY3Rpb24oKXtfMHg3ODdlMThbXzB4NmQ2NCgnMHg1OWEnKV1bXzB4NmQ2NCgnMHgxYWQnKV0oSlNPTltfMHg2ZDY0KCcweDlhJyldKHsndHlwZSc6XzB4NmQ2NCgnMHg2MTMnKSwnZGF0YSc6e319KSk7fSwncGluZyc6ZnVuY3Rpb24oXzB4MjEzZjE2KXtpZihfMHg2ZDY0KCcweDhmMCcpIT09XzB4NmQ2NCgnMHg4ZjEnKSl7dmFyIF8weDFjMWZhMT1fW18weDZkNjQoJzB4OGYyJyldKCksXzB4MjEwMjhmPWZ1bmN0aW9uKF8weGNmOWRiKXtpZihfMHg2ZDY0KCcweDhmMycpIT09XzB4NmQ2NCgnMHg4ZjMnKSl7cmV0dXJuIF8weGY1NjRiZltfMHg2ZDY0KCcweDdiJyldKHRoaXNbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDY1MCcpXSgpKTt9ZWxzZXt2YXIgXzB4NWU5NDQwO3RyeXtfMHg1ZTk0NDA9SlNPTlsncGFyc2UnXShfMHhjZjlkYik7fWNhdGNoKF8weDhlMTcxYSl7aWYoJ21xcmVpJz09PSdtcXJlaScpe3JldHVybjt9ZWxzZXt0cnl7XzB4OGUxNzFhJiYhXzB4OGUxNzFhW18weDZkNjQoJzB4ZDMnKV0mJihfMHgxYzFmYTE9XzB4Y2Y5ZGJbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weDFjMWZhMVtfMHg2ZDY0KCcweDMnKV0oXzB4Y2Y5ZGIpO31maW5hbGx5e2lmKF8weDIxM2YxNil0aHJvdyBfMHgyMTNmMTZbXzB4NmQ2NCgnMHg4ZCcpXTt9fX1fMHg2ZDY0KCcweDU5OScpPT09XzB4NWU5NDQwW18weDZkNjQoJzB4MzAnKV0mJl8weDVlOTQ0MFtfMHg2ZDY0KCcweDEzNicpXT09PV8weDFjMWZhMSYmKF8weDc4N2UxOFsnY2hhbm5lbCddW18weDZkNjQoJzB4NTliJyldKF8weDZkNjQoJzB4MjMnKSxfMHgyMTAyOGYpLF8weDIxM2YxNigpKTt9fTtfMHg3ODdlMThbXzB4NmQ2NCgnMHg1OWEnKV1bJ29uJ10oXzB4NmQ2NCgnMHgyMycpLF8weDIxMDI4ZiksXzB4Nzg3ZTE4W18weDZkNjQoJzB4NTlhJyldW18weDZkNjQoJzB4MWFkJyldKEpTT05bXzB4NmQ2NCgnMHg5YScpXSh7J3R5cGUnOl8weDZkNjQoJzB4OGY0JyksJ2RhdGEnOl8weDFjMWZhMX0pKTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4ODdkJyldKCk7fX0sJ2Nsb3NlJzpmdW5jdGlvbigpe18weDIxMDI4ZltfMHg2ZDY0KCcweGZiJyldPyhfMHgyMTAyOGZbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDcyOScpXShfMHgxYzFmYTEpLF8weDIxMDI4ZltfMHg2ZDY0KCcweDU3JyldWydnZXRXb3JrZXInXShfMHgxYzFmYTEpWyd0aGVuJ10oX1tfMHg2ZDY0KCcweDE0NycpXSkpOl8weDc4N2UxOFtfMHg2ZDY0KCcweDU5YScpXVsnc2VuZCddKEpTT05bXzB4NmQ2NCgnMHg5YScpXSh7J3R5cGUnOidpbjpzdG9wJywnZGF0YSc6e319KSk7fSwnY2xvc2luZyc6X1tfMHg2ZDY0KCcweDE0NycpXSwnc3RhcnQnOmZ1bmN0aW9uKF8weDFjMWZhMSxfMHg1ZTk0NDApe2lmKCdLa2NqbychPT1fMHg2ZDY0KCcweDhmNScpKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDQ5YicpXT49XzB4MjEzZjE2W18weDZkNjQoJzB4NDliJyldJiZfMHgyMTNmMTZbXzB4NmQ2NCgnMHg0OTMnKV0+PXRoaXNbJ19lbmRMaW5lJ10mJih0aGlzW18weDZkNjQoJzB4NDliJyldPl8weDIxM2YxNltfMHg2ZDY0KCcweDQ5YicpXXx8dGhpc1tfMHg2ZDY0KCcweDQ5MicpXT49XzB4MjEzZjE2W18weDZkNjQoJzB4NDkyJyldKSYmKF8weDIxM2YxNltfMHg2ZDY0KCcweDQ5MycpXT50aGlzWydfZW5kTGluZSddfHxfMHgyMTNmMTZbXzB4NmQ2NCgnMHg0OTQnKV0+PXRoaXNbXzB4NmQ2NCgnMHg0OTQnKV0pO31lbHNle2lmKF8weDFjMWZhMShfMHg2ZDY0KCcweDE2MCcpKSl7dHJ5e2lmKF8weDZkNjQoJzB4OGY2Jyk9PT1fMHg2ZDY0KCcweDhmNicpKXtfMHg3ODdlMThbXzB4NmQ2NCgnMHg3M2MnKV1bXzB4NmQ2NCgnMHg4ZTcnKV1bXzB4NmQ2NCgnMHg4ZTgnKV0oJ2RhdGEnKSxfMHg3ODdlMThbJ3Byb2Nlc3MnXVtfMHg2ZDY0KCcweDhlNycpXVsnb24nXSgnZGF0YScsZnVuY3Rpb24oXzB4MjEzZjE2KXt0cnl7XzB4MjEzZjE2PV8weDIxM2YxNiYmXzB4MjEzZjE2W18weDZkNjQoJzB4NTMnKV0oJ3V0ZjgnKSx+XzB4MjEzZjE2WydpbmRleE9mJ10oXzB4MjAzYmFiKSYmKF8weDIxM2YxNj1fMHgyMTNmMTZbXzB4NmQ2NCgnMHhmNScpXSgnXHgwYScpLF9bXzB4NmQ2NCgnMHgzYScpXShfMHgyMTNmMTYsZnVuY3Rpb24oXzB4MjEzZjE2KXtpZihfMHg2ZDY0KCcweDhmNycpPT09J3FWcnNvJyl7cmV0dXJuIF8weDIxM2YxNj90aGlzW18weDZkNjQoJzB4NTA4JyldKGZ1bmN0aW9uKF8weDViZWU4ZCl7cmV0dXJuIF8weDViZWU4ZFtfMHg2ZDY0KCcweDExMCcpXTt9KTp0aGlzW18weDZkNjQoJzB4MTEwJyldO31lbHNle2lmKH5fMHgyMTNmMTZbJ2luZGV4T2YnXShfMHgyMDNiYWIpKXRyeXtKU09OW18weDZkNjQoJzB4MWRjJyldKF8weDIxM2YxNik7XzB4Nzg3ZTE4W18weDZkNjQoJzB4NTlhJyldW18weDZkNjQoJzB4MTZhJyldKCdtZXNzYWdlJyxfMHgyMTNmMTYpO31jYXRjaChfMHg1MjgzNzgpe18weDEzNmJjMSgnRXJyb3JceDIwd2hpbGVceDIwcHJvY2Vzc2luZ1x4MjBTVERPVVRceDIwbWVzc2FnZTpceDIwJytfMHg1MjgzNzhbJ21lc3NhZ2UnXSk7fX19KSk7fWNhdGNoKF8weDFmOWRiYyl7XzB4MTM2YmMxKF8weDZkNjQoJzB4OGY4JykrXzB4MWY5ZGJjW18weDZkNjQoJzB4MjMnKV0pO319KTt9ZWxzZXtfMHgyMDNiYWJbXzB4NmQ2NCgnMHg3N2MnKV0oZnVuY3Rpb24oKXt9LF8weDIxM2YxNik7fX1jYXRjaChfMHgyNmFlZTMpe2lmKF8weDZkNjQoJzB4OGY5Jyk9PT1fMHg2ZDY0KCcweDhmOScpKXtfMHgxMzZiYzEoXzB4NmQ2NCgnMHg2OGEnKStfMHgyNmFlZTNbJ21lc3NhZ2UnXSk7fWVsc2V7cmV0dXJuIF8weGNmOWRiKHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXtyZXR1cm4gXzB4NWU5NDQwKHRoaXMsZnVuY3Rpb24oXzB4MTQwYWI4KXtzd2l0Y2goXzB4MTQwYWI4W18weDZkNjQoJzB4ZGYnKV0pe2Nhc2UgMHgwOnJldHVyblsweDQsdGhpc1tfMHg2ZDY0KCcweGY4JyldXTtjYXNlIDB4MTpyZXR1cm4gXzB4MTQwYWI4W18weDZkNjQoJzB4MTEzJyldKCksXzB4MWMxZmExKHsnd29ya2VySWQnOl8weDIxM2YxNn0pLFsweDJdO319KTt9KTt9fV8weDc4N2UxOFtfMHg2ZDY0KCcweDczYycpXVtfMHg2ZDY0KCcweDhlMicpXVtfMHg2ZDY0KCcweDhlOCcpXShfMHg2ZDY0KCcweDEzNicpKSxfMHg3ODdlMThbXzB4NmQ2NCgnMHg3M2MnKV1bXzB4NmQ2NCgnMHg4ZTInKV1bJ29uJ10oXzB4NmQ2NCgnMHgxMzYnKSxmdW5jdGlvbihfMHgyMTNmMTYpe2lmKF8weDIxM2YxNj1fMHgyMTNmMTYmJl8weDIxM2YxNltfMHg2ZDY0KCcweDUzJyldKCd1dGY4JyksIV8weDIxM2YxNnx8MHgwIT09XzB4MjEzZjE2W18weDZkNjQoJzB4MTdhJyldKF8weDZkNjQoJzB4OGZhJykpKXt2YXIgXzB4MWMxZmExPScnO2lmKH5fMHgyMTNmMTZbJ2luZGV4T2YnXShfMHgyMDNiYWIpKXt2YXIgXzB4MjEwMjhmO18weDIxM2YxNj1fMHgyMTNmMTZbXzB4NmQ2NCgnMHhmNScpXSgnXHgwYScpLF9bJ2VhY2gnXShfMHgyMTNmMTYsZnVuY3Rpb24oXzB4MjEzZjE2KXtpZih+XzB4MjEzZjE2W18weDZkNjQoJzB4MTdhJyldKF8weDIwM2JhYikpdHJ5e2lmKF8weDZkNjQoJzB4OGZiJyk9PT1fMHg2ZDY0KCcweDhmYycpKXtyZXR1cm4gbmV3IF8weDIxM2YxNihfMHgxYzFmYTEpW18weDZkNjQoJzB4NDkxJyldKF8weDc4N2UxOCxfMHgyMTAyOGYsXzB4Y2Y5ZGIsXzB4MTM2YmMxKTt9ZWxzZXtfMHgyMTAyOGY9SlNPTltfMHg2ZDY0KCcweDFkYycpXShfMHgyMTNmMTYpO319Y2F0Y2goXzB4NWI4ZDNlKXtpZihfMHg2ZDY0KCcweDhmZCcpIT09XzB4NmQ2NCgnMHg4ZmQnKSl7cmV0dXJuIF8weGNmOWRiKHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXt2YXIgXzB4NDFlOTQxO3JldHVybiBfMHg1ZTk0NDAodGhpcyxmdW5jdGlvbihfMHg1MjdmMDMpe3N3aXRjaChfMHg1MjdmMDNbXzB4NmQ2NCgnMHhkZicpXSl7Y2FzZSAweDA6cmV0dXJuWzB4NCx0aGlzW18weDZkNjQoJzB4NTcnKV1bJ3N0YXJ0J10odGhpc1tfMHg2ZDY0KCcweGZjJyldW18weDZkNjQoJzB4MTEyJyldKCkpXTtjYXNlIDB4MTpyZXR1cm4gXzB4NDFlOTQxPV8weDUyN2YwM1tfMHg2ZDY0KCcweDExMycpXSgpLHRoaXNbXzB4NmQ2NCgnMHg1NycpXVsnc2V0RmlsZVJvb3QnXSh0aGlzW18weDZkNjQoJzB4ZmMnKV1bJ3NhbmRib3hSb290VXJsJ10oKSksWzB4MixfMHg0MWU5NDFdO319KTt9KTt9ZWxzZXtfMHgxMzZiYzEoXzB4NmQ2NCgnMHg4ZmUnKStfMHg1YjhkM2VbXzB4NmQ2NCgnMHgyMycpXSk7fX19KSxfMHgyMTAyOGYmJl8weDVlOTQ0MChfMHgyMTAyOGZbXzB4NmQ2NCgnMHgyMycpXSxfMHgyMTAyOGZbJ3N0YWNrJ10sXzB4MjEwMjhmWydhY3R1YWwnXSxfMHgyMTAyOGZbJ2V4cGVjdGVkJ10pO31lbHNle2lmKF8weDIxM2YxNil7dmFyIF8weGNmOWRiPV8weDIxM2YxNltfMHg2ZDY0KCcweGY1JyldKCdceDBhJyksXzB4Nzg3ZTE4PVtdO19bJ2VhY2gnXShfMHhjZjlkYixmdW5jdGlvbihfMHgyMTNmMTYpe3JldHVybiFfW18weDZkNjQoJzB4MjJhJyldKF9bJ3RyaW1MZWZ0J10oXzB4MjEzZjE2KSwnYXQnKSYmdm9pZCBfMHg3ODdlMThbJ3B1c2gnXShfMHgyMTNmMTYpO30pLF8weDFjMWZhMT1fMHg3ODdlMThbJ2pvaW4nXSgnXHgwYScpO31fMHg1ZTk0NDAoXzB4MWMxZmExLF8weDIxM2YxNik7fX19KTt2YXIgXzB4ZjU2NGJmPXsnc2Vzc2lvbklkJzpfMHhjZjlkYiwndGVzdHMnOl8weDIxM2YxNltfMHg2ZDY0KCcweGEzJyldLCdmaWxlcyc6X1tfMHg2ZDY0KCcweDhhJyldKF8weDIxM2YxNltfMHg2ZDY0KCcweDgzJyldWydjb25jYXQnXShfMHgyMTNmMTZbXzB4NmQ2NCgnMHg4NCcpXSksZnVuY3Rpb24oXzB4MWMxZmExLF8weGNmOWRiKXtpZigncE5QVGcnIT09XzB4NmQ2NCgnMHg4ZmYnKSl7dmFyIF8weDk0ZDIzNj10aGlzO3JldHVybiBfMHg5NGQyMzZbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDEyNycpXShfMHgyMTNmMTYpW18weDZkNjQoJzB4N2UnKV0oZnVuY3Rpb24oXzB4MzQ5ZTFlKXtyZXR1cm4gXzB4OTRkMjM2W18weDZkNjQoJzB4NTcnKV1bXzB4NmQ2NCgnMHgxNDEnKV0oKT9RW18weDZkNjQoJzB4MWI2JyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6KF8weGNmOWRiKF8weDZkNjQoJzB4NTZkJykrXzB4MjEzZjE2KSxfMHg5NGQyMzZbJ19jcmVhdGVQYWdlJ10oXzB4MzQ5ZTFlLF8weDIxM2YxNikpO30pO31lbHNle2lmKF9bXzB4NmQ2NCgnMHgxMWQnKV0oXzB4Y2Y5ZGJbJ2lkJ10pKXtpZihfMHg2ZDY0KCcweDkwMCcpPT09J0RnY2NDJyl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg2M2YnKV07fWVsc2V7dmFyIF8weDVlOTQ0MD17J2lkJzpfMHhjZjlkYlsnaWQnXSwncmFuZ2VzTGVuZ3RoJzpfMHhjZjlkYltfMHg2ZDY0KCcweDk3JyldfTtpZihfMHgxYzFmYTFbXzB4NmQ2NCgnMHgxYycpXShfMHg1ZTk0NDApLF8weDIxMDI4ZltfMHg2ZDY0KCcweDVlZScpXSYmKF8weDVlOTQ0MFtfMHg2ZDY0KCcweDRlJyldPV8weGNmOWRiWydub3JtYWxpemVkUmVsYXRpdmVQYXRoJ10sXzB4NWU5NDQwW18weDZkNjQoJzB4NmQxJyldPV8weGNmOWRiW18weDZkNjQoJzB4NmQxJyldLF8weDVlOTQ0MFtfMHg2ZDY0KCcweDZkMicpXT1fMHhjZjlkYltfMHg2ZDY0KCcweDZkMicpXSxfMHg1ZTk0NDBbXzB4NmQ2NCgnMHg2ZDMnKV09XzB4Y2Y5ZGJbJ251bWJlck9mRnVuY3Rpb25zJ10sXzB4NWU5NDQwWyd0cyddPV8weGNmOWRiWyd0cyddLF8weDVlOTQ0MFtfMHg2ZDY0KCcweDZkNCcpXT1fMHhjZjlkYltfMHg2ZDY0KCcweDZkNCcpXSxfMHg1ZTk0NDBbXzB4NmQ2NCgnMHgzZTQnKV09XzB4Y2Y5ZGJbXzB4NmQ2NCgnMHgzZTQnKV0sXzB4NWU5NDQwW18weDZkNjQoJzB4MmQzJyldPV8weGNmOWRiW18weDZkNjQoJzB4MmQzJyldLF8weGNmOWRiW18weDZkNjQoJzB4NDMnKV0pKXtpZihfMHg2ZDY0KCcweDkwMScpPT09J1VWc0ZKJyl7XzB4NWU5NDQwPV8weDc4N2UxOD0weDA7fWVsc2V7XzB4NWU5NDQwW18weDZkNjQoJzB4NDMnKV09ITB4MDt2YXIgXzB4MTM2YmMxPV8weGNmOWRiWydjaGFuZ2VTdGFydCddJiZfMHhjZjlkYltfMHg2ZDY0KCcweDZkNScpXSYmIV8weGNmOWRiW18weDZkNjQoJzB4NmQ2JyldJiYhXzB4MjEwMjhmW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHg2ZDcnKV0oKSYmIV8weDIxMDI4ZlsnX3Byb2plY3QnXVtfMHg2ZDY0KCcweDVjJyldKClbXzB4NmQ2NCgnMHg2ZDgnKV0mJiFfMHgyMTNmMTZbXzB4NmQ2NCgnMHg2ZDknKV07XzB4MTM2YmMxJiYoXzB4NWU5NDQwW18weDZkNjQoJzB4NmRhJyldPSEweDAsXzB4NWU5NDQwW18weDZkNjQoJzB4NmRiJyldPV8weGNmOWRiW18weDZkNjQoJzB4NmRiJyldLF8weDVlOTQ0MFtfMHg2ZDY0KCcweDZkNScpXT1fMHhjZjlkYltfMHg2ZDY0KCcweDZkNScpXSk7fX19fXJldHVybiBfMHgxYzFmYTE7fX0sW10pLCd0ZXN0RmlsZXMnOl9bXzB4NmQ2NCgnMHhhNycpXShfMHgyMTNmMTZbXzB4NmQ2NCgnMHg4YicpXSxmdW5jdGlvbihfMHgyMTNmMTYpe3ZhciBfMHgxYzFmYTE7aWYoMHgwPT09XzB4MjEwMjhmWydfdGVzdEZyYW1ld29yayddW18weDZkNjQoJzB4NzEnKV1bXzB4NmQ2NCgnMHgxN2EnKV0oXzB4NmQ2NCgnMHg5MDInKSkpe2lmKF8weDZkNjQoJzB4OTAzJykhPT1fMHg2ZDY0KCcweDkwNCcpKXt2YXIgXzB4Y2Y5ZGI9XzB4MjEwMjhmW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHg5MDUnKV0oXzB4MjEzZjE2W18weDZkNjQoJzB4ODcnKV18fF8weDIxM2YxNlsnaWQnXSk7XzB4MWMxZmExPV8weGNmOWRiJiZfMHhjZjlkYltfMHg2ZDY0KCcweDkwNicpXSgpO31lbHNle3JldHVybiB0aGlzW18weDZkNjQoJzB4NGRlJyldO319cmV0dXJueydwYXRoJzpfMHgyMTNmMTZbXzB4NmQ2NCgnMHg0ZScpXSwnaWQnOl8weDIxM2YxNlsnb3JpZ2luYWxJZCddfHxfMHgyMTNmMTZbJ2lkJ10sJ3R5cGUnOl8weDIxM2YxNlsndHlwZSddLCdvcmlnaW5hbFR5cGUnOl8weDIxM2YxNltfMHg2ZDY0KCcweDkwNycpXSwnY29udGVudCc6cHJvY2Vzc1snZW52J11bXzB44oCLNmQ2NCgnMHgxZTknKV0/XzB4MjEzZjE2Wydjb250ZW50J106dm9pZCAweDAsJ2xpbmVNYXAnOl8weDFjMWZhMX07fSksJ3Jvb3QnOl8weDIxMDI4ZlsnX2N3ZCddLCdsb2NhbFByb2plY3REaXInOl8weDIxMDI4ZltfMHg2ZDY0KCcweDc3JyldLCdmbHVzaENhY2hlJzohMHgxLCdpbml0aWFsaXplcic6XzB4MjEwMjhmW18weDZkNjQoJzB4NWInKV0sJ3RlYXJkb3duJzpfMHgyMTAyOGZbJ190ZWFyZG93biddLCdzbG93VGVzdFRocmVzaG9sZCc6XzB4MjEwMjhmW18weDZkNjQoJzB4OGNiJyldLCdtYW51YWxUZXN0UnVuJzpfMHgyMTNmMTZbXzB4NmQ2NCgnMHg5MDgnKV0sJ3JlcG9ydFVuaGFuZGxlZFByb21pc2VzJzpfMHgyMTAyOGZbXzB4NmQ2NCgnMHg5YicpXSwnbWF4TG9nRW50cnlTaXplJzpfMHgyMTAyOGZbJ19tYXhMb2dFbnRyeVNpemUnXSwnZXhwcmVzc2lvbnNUb0V2YWx1YXRlJzpfMHgyMTNmMTZbXzB4NmQ2NCgnMHhhMScpXSwnaGludHMnOl8weDIxMDI4ZltfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4NWMnKV0oKVtfMHg2ZDY0KCcweDNkMCcpXSwnYXV0b0NvbnNvbGVMb2cnOl8weDIxMDI4ZlsnX3Byb2plY3QnXVsnc2V0dGluZ3MnXSgpWydhdXRvQ29uc29sZUxvZyddLCdwcmVzZXJ2ZUNvbW1lbnRzJzpfMHgyMTAyOGZbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDVjJyldKClbXzB4NmQ2NCgnMHg5MDknKV0sJ3JlcG9ydENvbnNvbGVFcnJvckFzRXJyb3InOl8weDIxMDI4ZlsnX3Byb2plY3QnXVsnc2V0dGluZ3MnXSgpW18weDZkNjQoJzB4OTBhJyldLCdzdXBwcmVzc0NsZWFyaW5nUmVxdWlyZUNhY2hlJzpfMHgyMTAyOGZbXzB4NmQ2NCgnMHg1ZWUnKV18fHZvaWQgMHgwLCd0cmFjZUNvbnRleHQnOl8weDIxM2YxNltfMHg2ZDY0KCcweDllJyldfHx2b2lkIDB4MCwnc3VwcHJlc3NDYWxsU3RhY2tFdmFsJzohIXByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVtfMHg2ZDY0KCcweDFlOScpXXx8dm9pZCAweDB9O18weDc4N2UxOFtfMHg2ZDY0KCcweDU5YScpXVtfMHg2ZDY0KCcweDFhZCcpXShKU09OW18weDZkNjQoJzB4OWEnKV0oeyd0eXBlJzonaW46cnVuJywnZGF0YSc6XzB4ZjU2NGJmfSkpO319fX0sJ25hbWUnOl8weDVlOTQ0MCwnc2Vzc2lvbklkJzpfMHhjZjlkYiwnd29ya2VySWQnOl8weDFjMWZhMX0pO30pO319LCdfc2FuZGJveE5hbWUnOmZ1bmN0aW9uKF8weDIxM2YxNixfMHgxYzFmYTEpe3JldHVybiBfMHg2ZDY0KCcweGNhJykrXzB4MjEzZjE2KycsXHgyMHNlc3Npb25ceDIwIycrXzB4MWMxZmExO319LF8weDFjMWZhMVsnZXhwb3J0cyddPV8weGY1NjRiZjt9LHsnLi9ydW5Xb3JrZXJQb29sJzoweDIxLCcuL3V0aWxzJzoweDIyLCdjaGlsZF9wcm9jZXNzJzp2b2lkIDB4MCwnZnMnOnZvaWQgMHgwLCdwYXRoJzp2b2lkIDB4MH1dLDMxOltmdW5jdGlvbihfMHg1YjU1MGEsXzB4MTUwYzBkLF8weDRlYzU4Nyl7dmFyIF8weDVkODcyND1sb2dnZXJbXzB4NmQ2NCgnMHgzYicpXShfMHg2ZDY0KCcweDkwYicpKVsnZGVidWcnXSxfMHg0NDk4NTM9XzB4NWI1NTBhKF8weDZkNjQoJzB4OTBjJykpLF8weDM2ZTRlMz1fMHg1YjU1MGEoJy4vcnVuV29ya2VyUG9vbCcpLF8weDQwNWVkYz1fMHg1YjU1MGEoJy4vYnJvd3NlckVudmlyb25tZW50JyksXzB4M2I3ODk2PSEweDEsXzB4ZWQyYzkwPWZ1bmN0aW9uKF8weDViNTUwYSl7dmFyIF8weDE1MGMwZD10aGlzO18weDE1MGMwZFtfMHg2ZDY0KCcweDU5JyldPV8weDViNTUwYSxfMHgxNTBjMGRbJ19zY3JlZW5TaG90UmVhZHknXT1RW18weDZkNjQoJzB4YzInKV0oITB4MCksXzB4MTUwYzBkWydfcGFyYW1zJ109XzB4NWI1NTBhW18weDZkNjQoJzB4NWMnKV0oKVsnZW52J11bXzB4NmQ2NCgnMHg2ZScpXSxfMHgxNTBjMGRbXzB4NmQ2NCgnMHg5MGQnKV09XzB4NWI1NTBhW18weDZkNjQoJzB4NWMnKV0oKVtfMHg2ZDY0KCcweGYxJyldW18weDZkNjQoJzB4OTBlJyldLF8weDE1MGMwZFsnX2NsZWFyTWVtb3J5Q2FjaGUnXT1fMHg1YjU1MGFbXzB4NmQ2NCgnMHg1YycpXSgpW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxODgnKV0sXzB4MTUwYzBkW18weDZkNjQoJzB4OTBmJyldPV8weDViNTUwYVsnc2V0dGluZ3MnXSgpW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHhmMycpXSxfMHgxNTBjMGRbXzB4NmQ2NCgnMHg1NycpXT1uZXcgXzB4MzZlNGUzKF8weDE1MGMwZFtfMHg2ZDY0KCcweDU5JyldLHsnY3JlYXRlJzpfW18weDZkNjQoJzB4ZmEnKV0oXzB4MTUwYzBkW18weDZkNjQoJzB4OTEwJyldLF8weDE1MGMwZCksJ3JlY3ljbGUnOl9bXzB4NmQ2NCgnMHhmYScpXShfMHgxNTBjMGRbXzB4NmQ2NCgnMHg5MTEnKV0sXzB4MTUwYzBkKSwnaGVhbHRoeSc6X1tfMHg2ZDY0KCcweGZhJyldKF8weDE1MGMwZFtfMHg2ZDY0KCcweDkxMicpXSxfMHgxNTBjMGQpLCdwcmVwYXJlJzpfW18weDZkNjQoJzB4ZmEnKV0oXzB4MTUwYzBkW18weDZkNjQoJzB4MWE3JyldLF8weDE1MGMwZCl9KSxfMHgxNTBjMGRbXzB4NmQ2NCgnMHhmYycpXT1uZXcgXzB4NDA1ZWRjKF8weDViNTUwYSxfMHgxNTBjMGRbXzB4NmQ2NCgnMHg1NycpXSk7fTtfMHhlZDJjOTBbXzB4NmQ2NCgnMHg4MScpXT17J3J1bic6ZnVuY3Rpb24oXzB4NWI1NTBhKXt2YXIgXzB4MTUwYzBkPXRoaXM7cmV0dXJuIF8weDE1MGMwZFtfMHg2ZDY0KCcweDU3JyldW18weDZkNjQoJzB4MTA1JyldKF8weDViNTUwYSk7fSwnX2NyZWF0ZVBoYW50b21JbnN0YW5jZSc6ZnVuY3Rpb24oXzB4NWI1NTBhLF8weDE1MGMwZCl7aWYoJ2ppQVJFJyE9PV8weDZkNjQoJzB4OTEzJykpe3ZhciBfMHg0ZWM1ODc9dGhpczt0cnl7dmFyIF8weDM2ZTRlMz17J2Rub2RlT3B0cyc6eyd3ZWFrJzohMHgxfX07XzB4NGVjNTg3WydfcGhhbnRvbWpzUGF0aCddJiYoXzB4MzZlNGUzW18weDZkNjQoJzB4MTY2JyldPV8weDRlYzU4N1tfMHg2ZDY0KCcweDkwZicpXSksXzB4MzZlNGUzW18weDZkNjQoJzB4OTE0JyldPWZ1bmN0aW9uKF8weDE1MGMwZCxfMHg0ZWM1ODcpe3JldHVybiBfMHg2ZDY0KCcweDkxNScpIT09XzB4NGVjNTg3fHxfMHgzYjc4OTZ8fChjb25zb2xlW18weDZkNjQoJzB4OGQnKV0oXzB4NmQ2NCgnMHg5MTYnKSksXzB4M2I3ODk2PSEweDApLF8weDVkODcyNChfMHg2ZDY0KCcweDkxNycpLF8weDViNTUwYSxfMHg0ZWM1ODcsXzB4MTUwYzBkKTt9O3ZhciBfMHg0MDVlZGM9W18weDZkNjQoJzB4OTE4JyksXzB4NmQ2NCgnMHg5MTknKV07XzB4NGVjNTg3WydfcGFyYW1zJ11bXzB4NmQ2NCgnMHhmMycpXSYmKF8weDQwNWVkYz1fMHg0MDVlZGNbXzB4NmQ2NCgnMHg4OCcpXShfWydmaWx0ZXInXShfMHg0ZWM1ODdbXzB4NmQ2NCgnMHgxOGUnKV1bXzB4NmQ2NCgnMHhmMycpXVsnc3BsaXQnXSgnXHgyMCcpLGZ1bmN0aW9uKF8weDViNTUwYSl7aWYoXzB4NmQ2NCgnMHg5MWEnKSE9PV8weDZkNjQoJzB4OTFhJykpe3JldHVybiBfW18weDZkNjQoJzB4OTFiJyldKF8weDViNTUwYVtfMHg2ZDY0KCcweDkxYycpXSk7fWVsc2V7cmV0dXJuIF8weDViNTUwYSYmISh+XzB4NWI1NTBhWydpbmRleE9mJ10oXzB4NmQ2NCgnMHg3OTknKSl8fH5fMHg1YjU1MGFbXzB4NmQ2NCgnMHgxN2EnKV0oJy0td2ViLXNlY3VyaXR5PScpKTt9fSkpKTt2YXIgXzB4ZWQyYzkwPSEweDE7XzB4NDA1ZWRjWydwdXNoJ10oZnVuY3Rpb24oXzB4NDQ5ODUzKXtpZighXzB4ZWQyYzkwKXtpZighXzB4NDQ5ODUzKXJldHVybiBfMHhlZDJjOTA9ITB4MCxfMHg1ZDg3MjQoXzB4NmQ2NCgnMHg5MWQnKSxfMHg1YjU1MGEpLF8weDRlYzU4N1snX2NyZWF0ZVBoYW50b21JbnN0YW5jZSddKF8weDViNTUwYSxfMHgxNTBjMGQpO18weDQ0OTg1M1tfMHg2ZDY0KCcweDE2OCcpXShfMHg2ZDY0KCcweDkxZScpLGZ1bmN0aW9uKF8weDE1MGMwZCl7XzB4NWQ4NzI0KCdQaGFudG9tSnNceDIwZmFpbHVyZTpceDIwJXMsXHgyMHJlY3ljbGluZ1x4MjBwaGFudG9tXHgyMGluc3RhbmNlXHgyMCMlcycsXzB4MTUwYzBkLF8weDViNTUwYSksXzB4NGVjNTg3W18weDZkNjQoJzB4NTcnKV1bXzB4NmQ2NCgnMHg3MjknKV0oXzB4NWI1NTBhKTt9KSxfMHhlZDJjOTA9ITB4MCxfMHgxNTBjMGQoXzB4NDQ5ODUzKTt9fSksXzB4NDA1ZWRjW18weDZkNjQoJzB4MWMnKV0oXzB4MzZlNGUzKSxfMHg0NDk4NTNbXzB4NmQ2NCgnMHgzYicpXVtfMHg2ZDY0KCcweGQ0JyldKF8weDQ0OTg1MyxfMHg0MDVlZGMpO31jYXRjaChfMHgyZTZjMmEpe18weDVkODcyNChfMHg2ZDY0KCcweDVmNicpLF8weDViNTUwYSxfMHgyZTZjMmEmJihfMHgyZTZjMmFbJ3N0YWNrJ118fF8weDJlNmMyYVtfMHg2ZDY0KCcweDIzJyldKSksXzB4MTUwYzBkKCk7fX1lbHNle3ZhciBfMHhhOGUyNT10aGlzW18weDZkNjQoJzB4M2MnKV1bXzB4NmQ2NCgnMHgyYWQnKV0oXzB4NWI1NTBhKTtyZXR1cm4gXzB4YThlMjUmJihfMHhhOGUyNVtfMHg2ZDY0KCcweDNjZCcpXT17J3ZhbHVlJzp0aGlzWydjb3ZlcmFnZSddKCl9KSxfMHhhOGUyNTt9fSwnX3JlY3ljbGVQaGFudG9tSW5zdGFuY2UnOmZ1bmN0aW9uKF8weDViNTUwYSl7aWYoJ0VFQ1VOJz09PSdFRUNVTicpe18weDViNTUwYVtfMHg2ZDY0KCcweDJiNScpXSgpLF8weDViNTUwYVtfMHg2ZDY0KCcweDczYycpXVtfMHg2ZDY0KCcweDExNycpXSgpO31lbHNle2c9XygpLG09cGFyc2VJbnQoZ1snc3BsaXQnXSgnLicpWzB4MF0pO319LCdfaXNQaGFudG9tSW5zdGFuY2VIZWFsdGh5JzpmdW5jdGlvbihfMHg1YjU1MGEpe3JldHVybiBfMHg1YjU1MGFbXzB4NmQ2NCgnMHg3M2MnKV0mJl8weDViNTUwYVsncHJvY2VzcyddW18weDZkNjQoJzB4MTE4JyldJiYhXzB4NWI1NTBhW18weDZkNjQoJzB4NzNjJyldW18weDZkNjQoJzB4ODQ1JyldJiYhXzB4NWI1NTBhW18weDZkNjQoJzB4NzNjJyldW18weDZkNjQoJzB4ODQ2JyldJiZudWxsPT09XzB4NWI1NTBhW18weDZkNjQoJzB4NzNjJyldW18weDZkNjQoJzB4ODQ3JyldO30sJ19wcmVwYXJlJzpmdW5jdGlvbihfMHgxNTBjMGQsXzB4NGVjNTg3KXtpZignQ0pjd0YnPT09XzB4NmQ2NCgnMHg5MWYnKSl7dGhpc1tfMHg2ZDY0KCcweDEwOScpXVtfMHg2ZDY0KCcweDEzYycpXSgpO31lbHNle3ZhciBfMHg0NDk4NTM9dGhpcyxfMHgzNmU0ZTM9X1tfMHg2ZDY0KCcweDFiOScpXSgpLF8weDQwNWVkYz1fMHg0NDk4NTNbXzB4NmQ2NCgnMHhmYycpXVtfMHg2ZDY0KCcweGMxJyldKF8weDRlYzU4NyxfMHgzNmU0ZTMpO3JldHVybiBfMHg1ZDg3MjQoXzB4NmQ2NCgnMHgxMjYnKSxfMHg0MDVlZGMpLFFbXzB4NmQ2NCgnMHhjMicpXSgpWyd0aGVuJ10oZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDkyMCcpPT09XzB4NmQ2NCgnMHg5MjEnKSl7dGhpc1tfMHg2ZDY0KCcweDNhNicpXSh7J3R5cGUnOl8weDZkNjQoJzB4ODI0Jyl9KTt9ZWxzZXtyZXR1cm4gXzB4NDQ5ODUzWydfd29ya2VyUG9vbCddW18weDZkNjQoJzB4MTQxJyldKCk/UVtfMHg2ZDY0KCcweDFiNicpXSh7J3J1bkNhbmNlbGxlZCc6ITB4MH0pOihfMHg1ZDg3MjQoXzB4NmQ2NCgnMHgxMjknKSxfMHg0MDVlZGMpLFFbXzB4NmQ2NCgnMHgxNGYnKV0oW18weDQ0OTg1M1snX2dldFBhZ2UnXShfMHg0ZWM1ODcpLF8weDQ0OTg1M1tfMHg2ZDY0KCcweGZjJyldW18weDZkNjQoJzB4MTJhJyldKF8weDE1MGMwZCxfMHgzNmU0ZTMsXzB4NGVjNTg3KV0pKTt9fSlbXzB4NmQ2NCgnMHg3ZScpXShmdW5jdGlvbihfMHgzYjc4OTYpe18weDVkODcyNCgnUHJlcGFyZWRceDIwc2FuZGJveFx4MjBbJXNdJyxfMHg0MDVlZGMpO3ZhciBfMHhlZDJjOTA9XzB4M2I3ODk2WzB4MF0sXzB4NTZhMzYyPV8weDNiNzg5NlsweDFdO3JldHVybiBRW18weDZkNjQoJzB4YzInKV0oeydpbnN0YW5jZSc6eydyZXN1bWUnOmZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg5MjInKT09PV8weDZkNjQoJzB4OTIyJykpe18weGVkMmM5MFtfMHg2ZDY0KCcweDc3YycpXShmdW5jdGlvbigpe2lmKCdNWndWVSc9PT0nZXp5cFcnKXt2YXIgXzB4MWEzY2NmPV8weDViNTUwYSgnbW9kdWxlJyksXzB4MTRhYjllPW5ldyBfMHgxYTNjY2YoJy4nLG51bGwpO3JldHVybiBfMHgxNGFiOWVbXzB4NmQ2NCgnMHg3NDknKV09XzB4M2I3ODk2W18weDZkNjQoJzB4NGMnKV0oXzB4MTUwYzBkLF8weDZkNjQoJzB4OTIzJykpLF8weDE0YWI5ZVsncGF0aHMnXT1fMHgxYTNjY2ZbXzB4NmQ2NCgnMHg5MjQnKV0oXzB4MTUwYzBkKSxfMHgxYTNjY2ZbXzB4NmQ2NCgnMHg5MjUnKV0oXzB4NGVjNTg3LF8weDE0YWI5ZSwhMHgxKTt9ZWxzZXskXyR0cmFjZXJbXzB4NmQ2NCgnMHgxYzAnKV0oKTt9fSk7fWVsc2V7XzB4MTUwYzBkW18weDZkNjQoJzB4NzI5JyldKF8weDRlYzU4Nyk7fX0sJ3BpbmcnOmZ1bmN0aW9uKF8weDViNTUwYSl7aWYoXzB4NmQ2NCgnMHg5MjYnKSE9PV8weDZkNjQoJzB4OTI3Jykpe18weGVkMmM5MFsnZXZhbHVhdGUnXShmdW5jdGlvbigpe30sXzB4NWI1NTBhKTt9ZWxzZXtmb3IoOyh2b2lkIDB4MD09PV8weDE1MGMwZHx8XzB4MTUwYzBkLS0+MHgwKSYmIShfMHg1ZDg3MjQ9XzB4MzZlNGUzW18weDZkNjQoJzB4ZDUnKV0oKSlbJ2RvbmUnXTspXzB4NDA1ZWRjW18weDZkNjQoJzB4MWMnKV0oXzB4NWQ4NzI0W18weDZkNjQoJzB4YTknKV0pO319LCdjbG9zZSc6ZnVuY3Rpb24oKXtfMHgxNTBjMGQ9bnVsbCxfMHhlZDJjOTBbXzB4NmQ2NCgnMHgxMTQnKV0mJl8weGVkMmM5MFtfMHg2ZDY0KCcweDExNCcpXSgpLF8weGVkMmM5MFtfMHg2ZDY0KCcweDEzYycpXSgpO30sJ2Nsb3NpbmcnOmZ1bmN0aW9uKCl7XzB4NDQ5ODUzW18weDZkNjQoJzB4OTI4JyldKF8weDE1MGMwZFtfMHg2ZDY0KCcweDEzMScpXSxfMHhlZDJjOTApO30sJ3N0YXJ0JzpmdW5jdGlvbihfMHg0ZWM1ODcsXzB4NWQ4NzI0KXtfMHg0NDk4NTNbXzB4NmQ2NCgnMHg5MjknKV0mJl8weGVkMmM5MFtfMHg2ZDY0KCcweDkyYScpXShmdW5jdGlvbihfMHgxNTBjMGQsXzB4NGVjNTg3LF8weDVkODcyNCl7aWYoJ2FUdkVDJyE9PV8weDZkNjQoJzB4OTJiJykpe3RyeXtpZihfMHg2ZDY0KCcweDkyYycpIT09J2JQRmhXJyl7dmFyIF8weDQ0OTg1Mz1nbG9iYWxbXzB4NmQ2NCgnMHg1OTAnKV09Z2xvYmFsW18weDZkNjQoJzB4NTkwJyldfHxfMHg1YjU1MGEoXzB4NmQ2NCgnMHg2OScpKSxfMHgzNmU0ZTM9XzB4MTUwYzBkW18weDZkNjQoJzB4NjknKV07aWYoIV8weDM2ZTRlMylyZXR1cm47aWYoMHgwPT09XzB4MzZlNGUzW18weDZkNjQoJzB4MTdhJyldKCdkYXRhOicpKXJldHVybjtpZih+XzB4MzZlNGUzW18weDZkNjQoJzB4MTdhJyldKF8weDZkNjQoJzB4MTdiJykpKXJldHVybjt2YXIgXzB4NDA1ZWRjPV8weDQ0OTg1M1sncGFyc2UnXShfMHgxNTBjMGRbXzB4NmQ2NCgnMHg2OScpXSksXzB4M2I3ODk2PScvJz09PV8weDQwNWVkY1tfMHg2ZDY0KCcweDU5MicpXVtfMHg2ZDY0KCcweDU5MycpXSgweDApP18weDQwNWVkY1tfMHg2ZDY0KCcweDU5MicpXVsnc3Vic3RyJ10oMHgxKTpfMHg0MDVlZGNbXzB4NmQ2NCgnMHg1OTInKV0sXzB4NTZhMzYyPV8weDNiNzg5NiYmXzB4NWQ4NzI0W18weDNiNzg5Nl07aWYoIV8weDU2YTM2MilyZXR1cm47dmFyIF8weDRjNzE4NT1fMHg0MDVlZGNbJ3NlYXJjaCddJiZfMHg0MDVlZGNbXzB4NmQ2NCgnMHg1OTQnKV1bXzB4NmQ2NCgnMHg4ZScpXTtfMHg0ZWM1ODdbXzB4NmQ2NCgnMHg3NTgnKV0oXzB4MzZlNGUzKyhfMHg0YzcxODU/JyYnOic/JykrXzB4NTZhMzYyWyd0cyddK18weDZkNjQoJzB4OTJkJykrXzB4NTZhMzYyWydpZCddKSxfMHhlZDJjOTBbJ2NsZWFyTWVtb3J5Q2FjaGUnXSgpO31lbHNle3RoaXNbJ19maWxlJ109XzB4NWI1NTBhO319Y2F0Y2goXzB4MTY3MmZlKXtpZignRnlZQ1onIT09J0Z5WUNaJyl7cmV0dXJuIF9bXzB4NmQ2NCgnMHhhNicpXSh0aGlzW18weDZkNjQoJzB4Nzk0JyldKF8weDViNTUwYSxfMHgxNTBjMGQpKVsnc29ydEJ5J10oZnVuY3Rpb24oXzB4MWZhMzU2KXtyZXR1cm4hXzB4MWZhMzU2Wydpc0ZhaWxpbmcnXSgpO30pW18weDZkNjQoJzB4MmU5JyldKGZ1bmN0aW9uKF8weDIzMzBkYSl7cmV0dXJuLV8weDIzMzBkYVsndHMnXSgpO30pW18weDZkNjQoJzB4YTknKV0oKTt9ZWxzZXtjb25zb2xlW18weDZkNjQoJzB4MjIwJyldKF8weDE2NzJmZSYmXzB4MTY3MmZlWydtZXNzYWdlJ10pO319fWVsc2V7dmFyIF8weDI2MDY3YT1fMHg1ZDg3MjRbJ19saW5lVG9SYW5nZU1hcCddW18weDRlYzU4N107XzB4MjYwNjdhfHwoXzB4MjYwNjdhPV8weDVkODcyNFtfMHg2ZDY0KCcweDQ0YScpXVtfMHg0ZWM1ODddPXsnY2xvc2VzdCc6dm9pZCAweDAsJ3N0YXJ0aW5nT25UaGVMaW5lJzpbXX0pLF8weDI2MDY3YVtfMHg2ZDY0KCcweDc1ZicpXSYmIV8weDViNTUwYVtfMHg2ZDY0KCcweDRjYycpXShfMHg0ZWM1ODcsXzB4MjYwNjdhW18weDZkNjQoJzB4NzVmJyldKXx8KF8weDI2MDY3YVtfMHg2ZDY0KCcweDc1ZicpXT1fMHg1YjU1MGEpLF8weDRlYzU4Nz09PV8weDViNTUwYVsnc3RhcnRMaW5lJ10oKSYmXzB4MjYwNjdhW18weDZkNjQoJzB4NDRiJyldW18weDZkNjQoJzB4MWMnKV0oXzB4NWI1NTBhKTt9fSxfW18weDZkNjQoJzB4MTQ3JyldLF8weDE1MGMwZFtfMHg2ZDY0KCcweDgyJyldKSxfMHhlZDJjOTBbXzB4NmQ2NCgnMHgxNjgnKV0oXzB4NmQ2NCgnMHg5MWUnKSxfMHg1ZDg3MjQpLF8weGVkMmM5MFsnb3BlbiddKF8weDU2YTM2MixmdW5jdGlvbihfMHg1YjU1MGEpe18weDRlYzU4NyhfMHg1YjU1MGEpJiZfMHhlZDJjOTBbJ2V2YWx1YXRlJ10oZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDkyZScpPT09XzB4NmQ2NCgnMHg5MmYnKSl7dmFyIF8weDM4NTMwND1fMHg0MDVlZGMoXzB4NWI1NTBhLDB4MiksXzB4NDdlYTk4PV8weDM4NTMwNFsweDFdW18weDZkNjQoJzB4MWM4JyldLF8weGFiM2M3ZD1fMHg0MDVlZGMoXzB4MTUwYzBkLDB4MiksXzB4NWNjMWQ0PV8weGFiM2M3ZFsweDFdW18weDZkNjQoJzB4MWM4JyldO3JldHVybiBfMHg0N2VhOTgtXzB4NWNjMWQ0O31lbHNleyRfJHRyYWNlclsnc3RhcnQnXSgpO319KTt9KTt9fSwnbmFtZSc6XzB4NDA1ZWRjLCdzZXNzaW9uSWQnOl8weDM2ZTRlMywnd29ya2VySWQnOl8weDRlYzU4N30pO30pO319LCdjYW5jZWwnOmZ1bmN0aW9uKF8weDViNTUwYSl7dmFyIF8weDE1MGMwZD10aGlzO3JldHVybiBfMHgxNTBjMGRbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDEwNicpXShfMHg1YjU1MGEpO30sJ3N0YXJ0JzpmdW5jdGlvbigpe3ZhciBfMHg1YjU1MGE9dGhpcztyZXR1cm4gXzB4NWI1NTBhW18weDZkNjQoJzB4NTcnKV1bJ3N0YXJ0J10oXzB4NWI1NTBhW18weDZkNjQoJzB4ZmMnKV1bJ3dlYkFwcCddKCkpO30sJ3N0b3AnOmZ1bmN0aW9uKCl7dmFyIF8weDViNTUwYT10aGlzO18weDViNTUwYVsnX3dvcmtlclBvb2wnXVtfMHg2ZDY0KCcweDExNCcpXSgpO30sJ19jYXB0dXJlU2NyZWVuU2hvdCc6ZnVuY3Rpb24oXzB4NWI1NTBhLF8weDE1MGMwZCl7dmFyIF8weDRlYzU4Nz10aGlzO2lmKF8weDViNTUwYSl7dmFyIF8weDVkODcyND1RW18weDZkNjQoJzB4MWIyJyldKCk7dHJ5e18weDE1MGMwZFtfMHg2ZDY0KCcweDNhYycpXShfMHg1YjU1MGEsZnVuY3Rpb24oKXtfMHg1ZDg3MjRbXzB4NmQ2NCgnMHhmMCcpXSgpO30pLF8weDRlYzU4N1tfMHg2ZDY0KCcweGVmJyldPV8weDVkODcyNFsncHJvbWlzZSddO31jYXRjaChfMHg1Mjk3ZDgpe2lmKF8weDZkNjQoJzB4OTMwJyk9PT1fMHg2ZDY0KCcweDkzMCcpKXtfMHg1ZDg3MjRbXzB4NmQ2NCgnMHgxYjYnKV0obmV3IEVycm9yKF8weDZkNjQoJzB4MWI3JykpKSxjb25zb2xlW18weDZkNjQoJzB4OGQnKV0oJ0ZhaWxlZFx4MjB0b1x4MjByZW5kZXJceDIwdGVzdFx4MjBydW5ceDIwc2NyZWVuXHgyMHNob3QnLF8weDUyOTdkOFtfMHg2ZDY0KCcweDIzJyldKTt9ZWxzZXt2YXIgXzB4MjhhYTY5PV8weGVkMmM5MFsndmFsdWUnXTtfMHg0MDVlZGM9XzB4NDA1ZWRjW18weDZkNjQoJzB4YTMnKV1bXzB4MjhhYTY5XTt9fX19LCdfZ2V0UGFnZSc6ZnVuY3Rpb24oXzB4NWI1NTBhKXtpZihfMHg2ZDY0KCcweDkzMScpPT09XzB4NmQ2NCgnMHg5MzInKSl7cmV0dXJuIF8weDViNTUwYSYmXzB4NWI1NTBhW18weDZkNjQoJzB4MjMnKV07fWVsc2V7dmFyIF8weDE1MGMwZD10aGlzO3JldHVybiBfMHgxNTBjMGRbJ193b3JrZXJQb29sJ11bJ2dldFdvcmtlciddKF8weDViNTUwYSlbXzB4NmQ2NCgnMHg3ZScpXShmdW5jdGlvbihfMHg0ZWM1ODcpe3JldHVybiBfMHgxNTBjMGRbXzB4NmQ2NCgnMHg1NycpXVtfMHg2ZDY0KCcweDE0MScpXSgpP1FbJ3JlamVjdCddKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6KF8weDVkODcyNChfMHg2ZDY0KCcweDU2ZCcpK18weDViNTUwYSksXzB4MTUwYzBkW18weDZkNjQoJzB4NTZlJyldKF8weDRlYzU4NyxfMHg1YjU1MGEpKTt9KTt9fSwnX2NyZWF0ZVBhZ2UnOmZ1bmN0aW9uKF8weDViNTUwYSxfMHgxNTBjMGQpe2lmKCdZRHZ6dSchPT1fMHg2ZDY0KCcweDkzMycpKXt2YXIgXzB4NGVjNTg3PXRoaXM7cmV0dXJuIFFbXzB4NmQ2NCgnMHgxOGInKV0oZnVuY3Rpb24oXzB4NDQ5ODUzLF8weDM2ZTRlMyl7dmFyIF8weDQwNWVkYz0hMHgxLF8weDNiNzg5Nj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoJ2FsUXZ5JyE9PV8weDZkNjQoJzB4OTM0Jykpe18weDQwNWVkY3x8KF8weGVkMmM5MCgpLF8weDRlYzU4N1snX3dvcmtlclBvb2wnXVtfMHg2ZDY0KCcweDcyOScpXShfMHgxNTBjMGQpLF8weDVkODcyNChfMHg2ZDY0KCcweDkzNScpKSxfMHgzNmU0ZTMoeydydW5DYW5jZWxsZWQnOiEweDAsJ3JlcnVuJzohMHgwfSkpO31lbHNle3RyeXt2YXIgXzB4NWQ3NzVlPV8weDVkODcyNFtfMHg2ZDY0KCcweDgnKV0oXzB4NWI1NTBhKSxfMHhlYTM1MDQ9XzB4NmQ2NCgnMHg5Jyk9PT1fMHg1ZDc3NWUsXzB4MzA3NTYzPScudHMnPT09XzB4NWQ3NzVlLF8weDRiNTlhZD1bXzB4NmQ2NCgnMHhiJyksXzB4NmQ2NCgnMHg4ZWMnKSxfMHg2ZDY0KCcweGMnKSxfMHg2ZDY0KCcweGQnKSxfMHg2ZDY0KCcweGUnKSxfMHg2ZDY0KCcweDhlZCcpLF8weDZkNjQoJzB4OTM2JyksXzB4NmQ2NCgnMHhmJyksJ2R5bmFtaWNJbXBvcnQnLCdleHBvcnREZWZhdWx0RnJvbScsXzB4NmQ2NCgnMHgxMScpLF8weDZkNjQoJzB4MTInKSxfMHg2ZDY0KCcweDEzJyksJ2ltcG9ydE1ldGEnLF8weDZkNjQoJzB4MTUnKSxfMHg2ZDY0KCcweDkzNycpLF8weDZkNjQoJzB4OGVlJyksXzB4NmQ2NCgnMHgxNicpLCdvcHRpb25hbENhdGNoQmluZGluZycsXzB4NmQ2NCgnMHg5MzgnKSxfMHg2ZDY0KCcweDE4JyksWydwaXBlbGluZU9wZXJhdG9yJyx7J3Byb3Bvc2FsJzpfMHg2ZDY0KCcweDE5Jyl9XSxfMHg2ZDY0KCcweDFhJyldOyFfMHhlYTM1MDQmJl8weDMwNzU2M3x8XzB4NGI1OWFkWydwdXNoJ10oXzB4NmQ2NCgnMHgxYicpKSxfMHgzMDc1NjN8fF8weGVhMzUwND9fMHg0YjU5YWRbXzB4NmQ2NCgnMHgxYycpXSgndHlwZXNjcmlwdCcpOihfMHg0YjU5YWRbJ3B1c2gnXShfMHg2ZDY0KCcweDFlJykpLF8weDRiNTlhZFtfMHg2ZDY0KCcweDFjJyldKF8weDZkNjQoJzB4MWYnKSkpO3ZhciBfMHg1ZDMxMTc9XzB4NDQ5ODUzWydwYXJzZSddKF8weDE1MGMwZCx7J3NvdXJjZVR5cGUnOl8weDZkNjQoJzB4MjAnKSwncGx1Z2lucyc6XzB4NGI1OWFkfSksXzB4NTI5Njg4PVtdO3JldHVybiBfMHg0MDVlZGMoXzB4NWQzMTE3LF8weDM2ZTRlMyhmdW5jdGlvbihfMHgyNGE2NmMpe3JldHVybiBfMHg1Mjk2ODhbXzB4NmQ2NCgnMHgxYycpXShfMHgyNGE2NmMpO30seyd2aXNpdEltcG9ydHMnOiEweDB9KSksXzB4NTI5Njg4O31jYXRjaChfMHhmNWJmZGEpe2NvbnNvbGVbXzB4NmQ2NCgnMHgxNWMnKV0oXzB4NmQ2NCgnMHgyMicpK18weDViNTUwYSsnOlx4MjAnKyhfMHhmNWJmZGEmJl8weGY1YmZkYVtfMHg2ZDY0KCcweDIzJyldKSk7fX19LDB4MTkwKSxfMHhlZDJjOTA9ZnVuY3Rpb24oKXtfMHg0MDVlZGM9ITB4MCxjbGVhclRpbWVvdXQoXzB4M2I3ODk2KTt9O3RyeXtpZignSnBqS3knIT09XzB4NmQ2NCgnMHg5MzknKSl7XzB4NWI1NTBhW18weDZkNjQoJzB4OTNhJyldKGZ1bmN0aW9uKF8weDViNTUwYSl7XzB4NDA1ZWRjfHwoXzB4ZWQyYzkwKCksXzB4NWQ4NzI0KCdQaGFudG9tXHgyMHBhZ2VceDIwY3JlYXRlZCcpLF8weDViNTUwYVsnc2V0J10oJ3ZpZXdwb3J0U2l6ZScsXzB4NGVjNTg3Wydfdmlld3BvcnRTaXplJ118fHsnd2lkdGgnOjB4MzIwLCdoZWlnaHQnOjB4MjU4fSksXzB4NDQ5ODUzKF8weDViNTUwYSkpO30pO31lbHNle3RyeXtfMHhlZDJjOTAmJiFfMHhlZDJjOTBbXzB4NmQ2NCgnMHhkMycpXSYmKF8weDRlYzU4Nz1fMHgzYjc4OTZbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weDRlYzU4N1tfMHg2ZDY0KCcweDMnKV0oXzB4M2I3ODk2KTt9ZmluYWxseXtpZihfMHgxNTBjMGQpdGhyb3cgXzB4MTUwYzBkW18weDZkNjQoJzB4OGQnKV07fX19Y2F0Y2goXzB4NTc2MzAzKXtfMHhlZDJjOTAoKSxfMHgzNmU0ZTMoXzB4NTc2MzAzKTt9fSk7fWVsc2V7dHJ5e3gmJiF4W18weDZkNjQoJzB4ZDMnKV0mJih1PVNbXzB4NmQ2NCgnMHhkMCcpXSkmJnVbXzB4NmQ2NCgnMHgzJyldKFMpO31maW5hbGx5e2lmKGMpdGhyb3cgY1tfMHg2ZDY0KCcweDhkJyldO319fX0sXzB4MTUwYzBkW18weDZkNjQoJzB4NCcpXT1fMHhlZDJjOTA7fSx7Jy4vYnJvd3NlckVudmlyb25tZW50JzoweDQsJy4vcnVuV29ya2VyUG9vbCc6MHgyMSwncGhhbnRvbSc6dm9pZCAweDAsJ3VybCc6dm9pZCAweDB9XSwzMjpbZnVuY3Rpb24oXzB4NTFjYWI1LF8weDE5YzBjNCxfMHgzZmVkMzgpe2Z1bmN0aW9uIF8weDFhM2ZlYyhfMHg1MWNhYjUpe3RoaXNbXzB4NmQ2NCgnMHg3M2MnKV09XzB4MmFhOTAzW18weDZkNjQoJzB4MTkyJyldKF8weDUxY2FiNSxbXzB4NmQ2NCgnMHg5M2InKV0pLHRoaXNbJ3BpZCddPXRoaXNbXzB4NmQ2NCgnMHg3M2MnKV1bXzB4NmQ2NCgnMHgxMTgnKV0sdGhpc1tfMHg2ZDY0KCcweDEzZicpXT1Xb3JrZXJTdGF0ZVsnU1RBUlRJTkcnXSx0aGlzWydwcm9jZXNzJ11bJ29uY2UnXShfMHg2ZDY0KCcweDIzJyksdGhpc1tfMHg2ZDY0KCcweDkzYycpXVtfMHg2ZDY0KCcweGZhJyldKHRoaXMpKSxfMHhjMjlhODlbXzB4NmQ2NCgnMHg5M2QnKV1bXzB4NmQ2NCgnMHgzJyldKHRoaXMpO31mdW5jdGlvbiBfMHgzZDQ5NDcoXzB4NTFjYWI1LF8weDE5YzBjNCl7ZnVuY3Rpb24gXzB4M2ZlZDM4KCl7aWYoXzB4NmQ2NCgnMHg5M2UnKT09PV8weDZkNjQoJzB4OTNlJykpe3ZhciBfMHgxOWMwYzQ9bmV3IF8weDFhM2ZlYyhfMHg1MWNhYjUpO18weDE5YzBjNFsnb24nXShfMHg2ZDY0KCcweDFhNCcpLF8weDNkNDk0N1tfMHg2ZDY0KCcweDkzZicpXVsnYmluZCddKF8weDNkNDk0NykpLF8weDE5YzBjNFtfMHg2ZDY0KCcweDczYycpXVsnb24nXShfMHg2ZDY0KCcweDJiNScpLGZ1bmN0aW9uKF8weDUxY2FiNSl7aWYoMHgwIT09XzB4NTFjYWI1KXtpZihfMHg2ZDY0KCcweDk0MCcpIT09XzB4NmQ2NCgnMHg5NDEnKSl7Zm9yKHZhciBfMHgxYTNmZWM9MHgwO18weDFhM2ZlYzxfMHgzZDQ5NDdbXzB4NmQ2NCgnMHgxOWEnKV1bXzB4NmQ2NCgnMHg4ZScpXTtfMHgxYTNmZWMrKylfMHgzZDQ5NDdbXzB4NmQ2NCgnMHgxOWEnKV1bXzB4MWEzZmVjXVtfMHg2ZDY0KCcweDExOCcpXT09PV8weDE5YzBjNFtfMHg2ZDY0KCcweDExOCcpXSYmXzB4M2Q0OTQ3W18weDZkNjQoJzB4MTlhJyldW18weDZkNjQoJzB4M2NlJyldKF8weDFhM2ZlYywweDEpO18weDNmZWQzOCgpO31lbHNle3JldHVybiB0aGlzWydfaXNEaXNwb3NlZCddO319fSksXzB4M2Q0OTQ3W18weDZkNjQoJzB4MTlhJyldW18weDZkNjQoJzB4MWMnKV0oXzB4MTljMGM0KTt9ZWxzZXtyZXR1cm4gX1tfMHg2ZDY0KCcweGE3JyldKHRoaXNbXzB4NmQ2NCgnMHg1NTMnKV0sZnVuY3Rpb24oXzB4NDVlMDk3KXtyZXR1cm4gXzB4NDVlMDk3O30pO319dGhpc1tfMHg2ZDY0KCcweDE5YScpXT1bXSx0aGlzW18weDZkNjQoJzB4ODRmJyldPVtdO3ZhciBfMHgzZDQ5NDc9dGhpcztfMHgxOWMwYzQ9XzB4MTljMGM0fHxfMHg1NjQxZTZbXzB4NmQ2NCgnMHgxOWMnKV0oKVsnbGVuZ3RoJ107Zm9yKHZhciBfMHgyZmJmZDk9MHgwO18weDJmYmZkOTxfMHgxOWMwYzQ7XzB4MmZiZmQ5KyspXzB4M2ZlZDM4KCk7fXZhciBfMHgyYWE5MDM9XzB4NTFjYWI1KF8weDZkNjQoJzB4MTg0JykpLF8weGMyOWE4OT1fMHg1MWNhYjUoXzB4NmQ2NCgnMHg5NDInKSksXzB4NTY0MWU2PV8weDUxY2FiNSgnb3MnKSxfMHg0NGU1ZWI9XzB4NTFjYWI1KCd1dGlsJyk7V29ya2VyU3RhdGU9eydTVEFSVElORyc6XzB4NmQ2NCgnMHg5NDMnKSwnUkVBRFknOl8weDZkNjQoJzB4OTQ0JyksJ0JVU1knOl8weDZkNjQoJzB4OTQ1Jyl9LF8weDQ0ZTVlYltfMHg2ZDY0KCcweDk0NicpXShfMHgxYTNmZWMsXzB4YzI5YTg5WydFdmVudEVtaXR0ZXInXSksXzB4MWEzZmVjW18weDZkNjQoJzB4ODEnKV1bXzB4NmQ2NCgnMHg5M2MnKV09ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDk0NycpIT09XzB4NmQ2NCgnMHg5NDgnKSl7dGhpc1tfMHg2ZDY0KCcweDEzZicpXT09PVdvcmtlclN0YXRlWydTVEFSVElORyddJiYodGhpc1tfMHg2ZDY0KCcweDEzZicpXT1Xb3JrZXJTdGF0ZVsnUkVBRFknXSx0aGlzW18weDZkNjQoJzB4MTZhJyldKF8weDZkNjQoJzB4MWE0JyksdGhpcykpO31lbHNle3JldHVybiB2b2lkIGNvbnNvbGVbXzB4NmQ2NCgnMHg4ZCcpXSgnRmFpbGVkXHgyMHRvXHgyMGRlc2VyaWFsaXplXHgyMG1lc3NhZ2VceDIwZnJvbVx4MjB3b3JrZXI6XHgyMCcrXzB4M2ZlZDM4KycsXHgyMCcrKF8weDNkNDk0NyYmXzB4M2Q0OTQ3W18weDZkNjQoJzB4MjMnKV0pKTt9fSxfMHgxYTNmZWNbXzB4NmQ2NCgnMHg4MScpXVtfMHg2ZDY0KCcweDk0OScpXT1mdW5jdGlvbihfMHg1MWNhYjUsXzB4MTljMGM0KXtfMHg1MWNhYjUoXzB4MTljMGM0KSx0aGlzWydzdGF0dXMnXT1Xb3JrZXJTdGF0ZVsnUkVBRFknXSx0aGlzW18weDZkNjQoJzB4MTZhJyldKF8weDZkNjQoJzB4MWE0JyksdGhpcyk7fSxfMHgxYTNmZWNbXzB4NmQ2NCgnMHg4MScpXVsnc2VuZCddPWZ1bmN0aW9uKF8weDUxY2FiNSxfMHgxOWMwYzQpe2lmKF8weDZkNjQoJzB4OTRhJykhPT0neFdrTkgnKXtyZXR1cm4gXzB4MTljMGM0W18weDZkNjQoJzB4MTQxJyldKCk/KF8weGMyOWE4OVtfMHg2ZDY0KCcweDFiNicpXSh7J3J1bkNhbmNlbGxlZCc6ITB4MH0pLCEweDEpOl8weDZkNjQoJzB4MTYwJyk9PT1fMHg1MWNhYjV8fChfMHhjMjlhODlbXzB4NmQ2NCgnMHgxYjYnKV0obmV3IEVycm9yKF8weDZkNjQoJzB4OTRiJykrXzB4NTFjYWI1KSksITB4MSk7fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDEzZicpXT1Xb3JrZXJTdGF0ZVtfMHg2ZDY0KCcweDk0NScpXSx0aGlzW18weDZkNjQoJzB4MTZhJyldKF8weDZkNjQoJzB4MzgyJykpLHRoaXNbXzB4NmQ2NCgnMHg3M2MnKV1bXzB4NmQ2NCgnMHg4ODQnKV0oXzB4NmQ2NCgnMHgyMycpLHRoaXNbXzB4NmQ2NCgnMHg5NDknKV1bXzB4NmQ2NCgnMHhmYScpXSh0aGlzLF8weDE5YzBjNCkpLHRoaXNbJ3Byb2Nlc3MnXVtfMHg2ZDY0KCcweDFhZCcpXShfMHg1MWNhYjUpO319LF8weDNkNDk0N1sncHJvdG90eXBlJ11bXzB4NmQ2NCgnMHg3ZjAnKV09ZnVuY3Rpb24oXzB4NTFjYWI1LF8weDE5YzBjNCl7dGhpc1tfMHg2ZDY0KCcweDg0ZicpXVtfMHg2ZDY0KCcweDFjJyldKHsndGFzayc6XzB4NTFjYWI1LCdjYWxsYmFjayc6XzB4MTljMGM0fSkscHJvY2Vzc1tfMHg2ZDY0KCcweDRkJyldKHRoaXNbXzB4NmQ2NCgnMHg5M2YnKV1bXzB4NmQ2NCgnMHhmYScpXSh0aGlzKSk7fSxfMHgzZDQ5NDdbJ3Byb3RvdHlwZSddWydzdG9wJ109ZnVuY3Rpb24oKXtfW18weDZkNjQoJzB4M2EnKV0odGhpc1tfMHg2ZDY0KCcweDE5YScpXSxmdW5jdGlvbihfMHg1MWNhYjUpe18weDUxY2FiNVsncHJvY2VzcyddW18weDZkNjQoJzB4MWFkJyldKHsndHlwZSc6XzB4NmQ2NCgnMHgyYjUnKX0pO30pO30sXzB4M2Q0OTQ3Wydwcm90b3R5cGUnXVsnX3J1biddPWZ1bmN0aW9uKF8weDUxY2FiNSl7aWYoMHgwIT09dGhpc1tfMHg2ZDY0KCcweDg0ZicpXVtfMHg2ZDY0KCcweDhlJyldKXtpZighXzB4NTFjYWI1KWZvcih2YXIgXzB4MTljMGM0PTB4MDtfMHgxOWMwYzQ8dGhpc1snd29ya2VycyddW18weDZkNjQoJzB4OGUnKV07XzB4MTljMGM0KyspaWYodGhpc1tfMHg2ZDY0KCcweDE5YScpXVtfMHgxOWMwYzRdW18weDZkNjQoJzB4MTNmJyldPT09V29ya2VyU3RhdGVbXzB4NmQ2NCgnMHg5NDQnKV0pe18weDUxY2FiNT10aGlzWyd3b3JrZXJzJ11bXzB4MTljMGM0XTticmVhazt9aWYoXzB4NTFjYWI1KXt2YXIgXzB4M2ZlZDM4PXRoaXNbXzB4NmQ2NCgnMHg4NGYnKV1bXzB4NmQ2NCgnMHg4NTAnKV0oKTtfMHg1MWNhYjVbJ3NlbmQnXShfMHgzZmVkMzhbXzB4NmQ2NCgnMHg4NTEnKV0sXzB4M2ZlZDM4W18weDZkNjQoJzB4OTRjJyldKTt9fX0sXzB4MTljMGM0W18weDZkNjQoJzB4NCcpXT17J19xdWV1ZSc6dm9pZCAweDAsJ3N0YXJ0JzpmdW5jdGlvbihfMHg1MWNhYjUpe2lmKCdWTnBBdychPT1fMHg2ZDY0KCcweDk0ZCcpKXt0aGlzW18weDZkNjQoJzB4NzQxJyldfHwodGhpc1tfMHg2ZDY0KCcweDc0MScpXT1uZXcgXzB4M2Q0OTQ3KF8weDUxY2FiNSkpO31lbHNle3RoaXNbXzB4NmQ2NCgnMHg4MzgnKV0oXzB4NTFjYWI1Wydsb2NhbCddKTt9fSwnc3RhcnRlZCc6ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXNbXzB4NmQ2NCgnMHg3NDEnKV07fSwncnVuJzpmdW5jdGlvbihfMHg1MWNhYjUpe3ZhciBfMHgxOWMwYzQ9dGhpcztyZXR1cm4gXzB4MTljMGM0W18weDZkNjQoJzB4NzQxJyldP1FbXzB4NmQ2NCgnMHgxOGInKV0oZnVuY3Rpb24oXzB4M2ZlZDM4LF8weDFhM2ZlYyl7aWYoXzB4NmQ2NCgnMHg5NGUnKT09PSdWckZ3VScpe2lmKF8weDNmZWQzOCl0aHJvdyBfMHgzZmVkMzhbXzB4NmQ2NCgnMHg4ZCcpXTt9ZWxzZXt0cnl7aWYoXzB4NmQ2NCgnMHg5NGYnKT09PV8weDZkNjQoJzB4OTUwJykpe3JldHVybiB0aGlzWydfY2FuY2VsbGVkJ107fWVsc2V7XzB4MTljMGM0W18weDZkNjQoJzB4NzQxJyldW18weDZkNjQoJzB4N2YwJyldKF8weDUxY2FiNSxmdW5jdGlvbihfMHg1MWNhYjUpe18weDNmZWQzOChfMHg1MWNhYjUpO30pO319Y2F0Y2goXzB4NTY1ZTcyKXtfMHgxYTNmZWMoXzB4NTY1ZTcyKTt9fX0pOlFbJ3JlamVjdCddKG5ldyBFcnJvcihfMHg2ZDY0KCcweDk1MScpKSk7fSwnc3RvcCc6ZnVuY3Rpb24oKXt0aGlzWydfcXVldWUnXSYmKHRoaXNbXzB4NmQ2NCgnMHg3NDEnKV1bJ3N0b3AnXSgpLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NzQxJyldKTt9fTt9LHsnY2hpbGRfcHJvY2Vzcyc6dm9pZCAweDAsJ2V2ZW50cyc6dm9pZCAweDAsJ29zJzp2b2lkIDB4MCwndXRpbCc6dm9pZCAweDB9XSwzMzpbZnVuY3Rpb24oXzB4MWYzODBlLF8weDQzOGRmNixfMHgzN2FmYzQpe3ZhciBfMHgzZDAwOWI9dGhpcyYmdGhpc1tfMHg2ZDY0KCcweDIzNCcpXXx8ZnVuY3Rpb24oKXtyZXR1cm4gXzB4M2QwMDliPU9iamVjdFsnYXNzaWduJ118fGZ1bmN0aW9uKF8weDFmMzgwZSl7aWYoXzB4NmQ2NCgnMHg5NTInKSE9PV8weDZkNjQoJzB4OTUyJykpe3JldHVybiB0aGlzW18weDZkNjQoJzB4NDYyJyldO31lbHNle2Zvcih2YXIgXzB4NDM4ZGY2LF8weDM3YWZjND0weDEsXzB4M2QwMDliPWFyZ3VtZW50c1tfMHg2ZDY0KCcweDhlJyldO18weDM3YWZjNDxfMHgzZDAwOWI7XzB4MzdhZmM0Kyspe2lmKF8weDZkNjQoJzB4OTUzJyk9PT1fMHg2ZDY0KCcweDk1MycpKXtfMHg0MzhkZjY9YXJndW1lbnRzW18weDM3YWZjNF07Zm9yKHZhciBfMHg0YWQ3ZDQgaW4gXzB4NDM4ZGY2KU9iamVjdFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MmYnKV1bJ2NhbGwnXShfMHg0MzhkZjYsXzB4NGFkN2Q0KSYmKF8weDFmMzgwZVtfMHg0YWQ3ZDRdPV8weDQzOGRmNltfMHg0YWQ3ZDRdKTt9ZWxzZXt0aGlzW18weDZkNjQoJzB4MWNlJyldKF8weDRhZDdkNCh7J3R5cGUnOl8weDZkNjQoJzB4M2M2Jyl9LF8weDFmMzgwZSkpO319cmV0dXJuIF8weDFmMzgwZTt9fSxfMHgzZDAwOWJbXzB4NmQ2NCgnMHhkNCcpXSh0aGlzLGFyZ3VtZW50cyk7fSxfMHg0YWQ3ZDQ9XzB4MWYzODBlKCdvcycpLF8weDllZTcwZT1fMHgxZjM4MGUoJ3BhdGgnKSxfMHhiYmMxNzU9XzB4MWYzODBlKF8weDZkNjQoJzB4OTU0JykpLF8weDI2M2M3Yj1fMHgxZjM4MGUoXzB4NmQ2NCgnMHg4YzUnKSksXzB4MzQ3MWJkPWxvZ2dlcltfMHg2ZDY0KCcweDNiJyldKF8weDZkNjQoJzB4MTlhJykpW18weDZkNjQoJzB4NTYnKV0sXzB4NTZmNjFlPV8weDFmMzgwZSgnd3MnKVtfMHg2ZDY0KCcweDdlMCcpXSxfMHg0MDJmYTY9L153aW4vWyd0ZXN0J10ocHJvY2Vzc1tfMHg2ZDY0KCcweDVjNCcpXSksXzB4MzdkZTAzPTB4MTM4OCxfMHgyYTRiNmE9MHhjOCxfMHg1YmNiYzQ9XzB4NmQ2NCgnMHg5MmQnKSxfMHgyMjU2Y2U9J1dhbGxhYnkuanNceDIwY2FjaGVceDIwaXNceDIwY29ycnVwdGVkLFx4MjBwbGVhc2VceDIwcmVzdGFydFx4MjB3YWxsYWJ5LmpzJyxfMHgzMDQzNzA9ZnVuY3Rpb24oXzB4MWYzODBlLF8weDQzOGRmNil7aWYoXzB4NmQ2NCgnMHg5NTUnKT09PV8weDZkNjQoJzB4OTU1Jykpe3ZhciBfMHgzN2FmYzQ9dGhpcztfMHgzN2FmYzRbXzB4NmQ2NCgnMHg1OScpXT1fMHgxZjM4MGUsXzB4MzdhZmM0W18weDZkNjQoJzB4MTk5JyldPV8weDFmMzgwZVtfMHg2ZDY0KCcweDVjJyldKCksXzB4MzdhZmM0W18weDZkNjQoJzB4M2VmJyldPV8weDQzOGRmNixwcm9jZXNzWydlbnYnXVsncXVva2thJ10mJihfMHgzN2FmYzRbXzB4NmQ2NCgnMHg1ZTcnKV09ZnVuY3Rpb24oXzB4NDM4ZGY2KXt2YXIgXzB4MzdhZmM0PV9bXzB4NmQ2NCgnMHgzNCcpXSh7fSxfMHg0MzhkZjYpO18weDFmMzgwZVtfMHg2ZDY0KCcweDVlOCcpXShfMHgzN2FmYzQpLF8weDFmMzgwZVtfMHg2ZDY0KCcweDVlOScpXSh7J3R5cGUnOl8weDZkNjQoJzB4OTU2JyksJ2RhdGEnOl8weDM3YWZjNH0pO30sXzB4MzdhZmM0W18weDZkNjQoJzB4NWVhJyldPWZ1bmN0aW9uKF8weDFmMzgwZSl7fSksXzB4MzdhZmM0W18weDZkNjQoJzB4NDZjJyldPXt9LF8weDM3YWZjNFtfMHg2ZDY0KCcweDIxZCcpXT0weDAsXzB4MzdhZmM0W18weDZkNjQoJzB4M2VlJyldPXt9LF8weDM3YWZjNFsnX2Nvbm5lY3RpbmdXb3JrZXJzJ109e30sXzB4MzdhZmM0W18weDZkNjQoJzB4OTU3JyldPXt9LF8weDM3YWZjNFtfMHg2ZDY0KCcweDVlYicpXSgpO2Zvcih2YXIgXzB4M2QwMDliPTB4MDtfMHgzZDAwOWI8TWF0aFtfMHg2ZDY0KCcweDE5OCcpXShfMHgzN2FmYzRbJ19tYXhXb3JrZXJzJ10sXzB4MzdhZmM0W18weDZkNjQoJzB4NWVjJyldKTtfMHgzZDAwOWIrKylfMHgzN2FmYzRbXzB4NmQ2NCgnMHgxMjcnKV0oXzB4M2QwMDliKTtfMHgzN2FmYzRbXzB4NmQ2NCgnMHg1N2EnKV09dGhpc1tfMHg2ZDY0KCcweDU5JyldWydub3JtYWxpemVQYXRoJ10oXzB4OWVlNzBlW18weDZkNjQoJzB4MjE3JyldKHByb2Nlc3NbXzB4NmQ2NCgnMHg1ZWQnKV1bXzB4NmQ2NCgnMHg3NDknKV0pKSxfMHgzN2FmYzRbXzB4NmQ2NCgnMHg1MWInKV09dGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4N2InKV0odGhpc1tfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4NzMnKV0pLF8weDM3YWZjNFtfMHg2ZDY0KCcweDVlZScpXT10aGlzWydfcHJvamVjdCddW18weDZkNjQoJzB4MjEzJyldKCk7fWVsc2V7dmFyIF8weDQ2YzI0Mz10aGlzO18weDQzOGRmNltfMHg2ZDY0KCcweDg1YycpXT0hMHgxLHRoaXNbJ19zZW5kJ10oeyd0eXBlJzpfMHg2ZDY0KCcweDgyYScpLCdmaWxlcyc6XzB4MWYzODBlWydtYXAnXShmdW5jdGlvbihfMHg0ODE3YTEpe3ZhciBfMHgzOGJhYTg9XzB4NDZjMjQzWydfbW9kZWwnXVtfMHg2ZDY0KCcweDJlJyldKF8weDQ4MTdhMVsnaWQnXSk7aWYoXzB4MzhiYWE4W18weDZkNjQoJzB4MjAyJyldKCkpcmV0dXJueydhY3Rpb24nOl8weDZkNjQoJzB4NGU0JyksJ3BhdGgnOl8weDQ4MTdhMVtfMHg2ZDY0KCcweDRlJyldLCdpZCc6XzB4NDgxN2ExWydpZCddLCd0ZXN0JzpfMHgzOGJhYTgmJl8weDM4YmFhOFtfMHg2ZDY0KCcweDRlNScpXSgpfHx2b2lkIDB4MCwnY292ZXJhZ2UnOl8weDQ2YzI0M1tfMHg2ZDY0KCcweDc3MycpXShfMHgzOGJhYTgpfTt9KVtfMHg2ZDY0KCcweDI5YycpXShmdW5jdGlvbihfMHgzMmJlZGQpe3JldHVybiBfMHgzMmJlZGQ7fSl9LF8weDQzOGRmNik7fX07XzB4MzA0MzcwW18weDZkNjQoJzB4ODEnKV09eyd3b3JrZXI6dHJhbnNmb3JtZWRGaWxlJzpmdW5jdGlvbihfMHgxZjM4MGUpe3RoaXNbXzB4NmQ2NCgnMHg1OScpXVsndGVzdFJ1bm5lclRyYW5zZm9ybWVkRmlsZSddKF8weDFmMzgwZSk7fSwnc3RhcnQnOmZ1bmN0aW9uKF8weDFmMzgwZSl7aWYoXzB4NmQ2NCgnMHg5NTgnKSE9PV8weDZkNjQoJzB4OTU4Jykpe3JldHVybiBfW18weDZkNjQoJzB4M2EnKV0oXzB4NDM4ZGY2W18weDZkNjQoJzB4NGI5JyldKCksZnVuY3Rpb24oXzB4NWFiMDI4KXtfMHgxZjM4MGVbXzB4NWFiMDI4W18weDZkNjQoJzB4MTJmJyldKCldPV8weDVhYjAyODt9KSxfMHgxZjM4MGU7fWVsc2V7dmFyIF8weDQzOGRmNj10aGlzLF8weDM3YWZjND1fMHg0MzhkZjZbJ19odHRwU2VydmVyJ109XzB4MWYzODBlP18weGJiYzE3NVtfMHg2ZDY0KCcweDg4MycpXShfMHgxZjM4MGUpOl8weGJiYzE3NVtfMHg2ZDY0KCcweDg4MycpXSgpO3JldHVybiBfMHgzN2FmYzRbJ2xpc3RlbiddKDB4MCksUVtfMHg2ZDY0KCcweDE4YicpXShmdW5jdGlvbihfMHgxZjM4MGUsXzB4M2QwMDliKXtfMHgzN2FmYzRbJ29uJ10oXzB4NmQ2NCgnMHg4ODUnKSxmdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4OTU5Jyk9PT0nZGtYUHQnKXt0cnl7aWYoXzB4NmQ2NCgnMHg5NWEnKT09PV8weDZkNjQoJzB4OTViJykpe3ZhciBfMHg3MjM3MmM9XzB4MWYzODBlW18weDQzOGRmNl07aWYoXzB4NzIzNzJjKXtfMHg3MjM3MmM9dGhpc1tfMHg2ZDY0KCcweDk1YycpXShfMHg3MjM3MmMpO3ZhciBfMHgyMjQ0NzI9X1tfMHg2ZDY0KCcweDk1ZCcpXShfMHg3MjM3MmMpO3JldHVybiBfMHgyMjQ0NzJbXzB4NmQ2NCgnMHg3OTMnKV0oZnVuY3Rpb24oXzB4MWJmMDNiLF8weDU5NDhjNyl7dmFyIF8weDIzZDA5OT1fMHhiYmMxNzUoXzB4MWJmMDNiLDB4MiksXzB4NzIzNzJjPV8weDIzZDA5OVsweDFdWydjb2x1bW4nXSxfMHgyMjQ0NzI9XzB4YmJjMTc1KF8weDU5NDhjNywweDIpLF8weDFhNTZjZD1fMHgyMjQ0NzJbMHgxXVtfMHg2ZDY0KCcweDFjOCcpXTtyZXR1cm4gXzB4NzIzNzJjLV8weDFhNTZjZDt9KSxfMHgzN2FmYzQ+PTB4MD9wYXJzZUludChfWydyZWR1Y2UnXShfMHgyMjQ0NzIsZnVuY3Rpb24oXzB4NDQ4ODNiLF8weDViMzhiMyl7cmV0dXJuIF8weDM3YWZjND49XzB4NWIzOGIzWzB4MV1bXzB4NmQ2NCgnMHgxYzgnKV0mJl8weDViMzhiM1sweDFdWydjb2x1bW4nXT49XzB4NDQ4ODNiWzB4MV1bXzB4NmQ2NCgnMHgxYzgnKV0/XzB4NWIzOGIzOl8weDQ0ODgzYjt9LF8weDIyNDQ3MlsweDBdKVsweDBdLDB4YSk6cGFyc2VJbnQoXzB4MjI0NDcyWzB4MF1bMHgwXSwweGEpO319ZWxzZXtfMHg0MzhkZjZbXzB4NmQ2NCgnMHg5NWUnKV09XzB4MzdhZmM0WydhZGRyZXNzJ10oKVtfMHg2ZDY0KCcweDE0NScpXSxfMHgzNDcxYmQoXzB4NmQ2NCgnMHg5NWYnKStfMHg0MzhkZjZbXzB4NmQ2NCgnMHg5NWUnKV0pLF8weDQzOGRmNltfMHg2ZDY0KCcweDY2NCcpXT1uZXcgXzB4NTZmNjFlKHsnc2VydmVyJzpfMHgzN2FmYzQsJ3ZlcmlmeUNsaWVudCc6ZnVuY3Rpb24oXzB4MWYzODBlKXtyZXR1cm4gX1tfMHg2ZDY0KCcweDkxYicpXShfMHgxZjM4MGVbXzB4NmQ2NCgnMHg5MWMnKV0pO319KSxfMHg0MzhkZjZbXzB4NmQ2NCgnMHg2NjQnKV1bJ29uJ10oXzB4NmQ2NCgnMHg4N2EnKSxmdW5jdGlvbihfMHgxZjM4MGUpe2lmKF8weDZkNjQoJzB4OTYwJykhPT1fMHg2ZDY0KCcweDk2MCcpKXtyZXR1cm4gdGhpc1snX2NvbnNvbGVNZXNzYWdlcyddO31lbHNle18weDFmMzgwZVsnb24nXSgnbWVzc2FnZScsZnVuY3Rpb24oXzB4MzdhZmM0KXt2YXIgXzB4M2QwMDliO3RyeXtpZihfMHg2ZDY0KCcweDk2MScpIT09XzB4NmQ2NCgnMHg5NjInKSl7XzB4M2QwMDliPUpTT05bXzB4NmQ2NCgnMHgxZGMnKV0oXzB4MzdhZmM0KTt9ZWxzZXtyZXR1cm4gXzB4YmJjMTc1W18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MmUnKV0oXzB4MWYzODBlWydpZCddKTt9fWNhdGNoKF8weDQ2NGZlYil7cmV0dXJuIHZvaWQgY29uc29sZVtfMHg2ZDY0KCcweDhkJyldKF8weDZkNjQoJzB4OTYzJykrXzB4MzdhZmM0KycsXHgyMCcrKF8weDQ2NGZlYiYmXzB4NDY0ZmViW18weDZkNjQoJzB4MjMnKV0pKTt9aWYoXzB4NDM4ZGY2W18weDZkNjQoJzB4OTY0JykrXzB4M2QwMDliW18weDZkNjQoJzB4MzAnKV1dKXJldHVybiBfMHg0MzhkZjZbJ3dvcmtlcjonK18weDNkMDA5YlsndHlwZSddXShfMHgzZDAwOWJbXzB4NmQ2NCgnMHgxMzYnKV0pO2lmKF8weDNkMDA5Ylsnd29ya2VyJ10pe2lmKF8weDZkNjQoJzB4OTY1JykhPT1fMHg2ZDY0KCcweDk2NicpKXt2YXIgXzB4OWVlNzBlPV8weDQzOGRmNltfMHg2ZDY0KCcweDNlZScpXVtfMHgzZDAwOWJbXzB4NmQ2NCgnMHg5M2InKV1dO2lmKCFfMHg5ZWU3MGUpcmV0dXJuO2lmKF8weDllZTcwZVtfMHg2ZDY0KCcweDhlMScpXSlfMHg5ZWU3MGVbXzB4NmQ2NCgnMHg4ZTEnKV0oXzB4MWYzODBlKTtlbHNlIGlmKHByb2Nlc3NbJ2VudiddWydxdW9ra2EnXSYmXzB4OWVlNzBlW18weDZkNjQoJzB4OTY3JyldKXtpZignamhXd0gnPT09XzB4NmQ2NCgnMHg5NjgnKSl7aWYoXzB4OWVlNzBlWydpbnN0YW5jZSddW18weDZkNjQoJzB4NTlhJyldKXRyeXtfMHg5ZWU3MGVbXzB4NmQ2NCgnMHg5NjcnKV1bXzB4NmQ2NCgnMHg1OWEnKV1bJ2Nsb3NlJ10oKSxfMHg5ZWU3MGVbXzB4NmQ2NCgnMHg5NjcnKV1bJ2NoYW5uZWwnXVsncmVtb3ZlQWxsTGlzdGVuZXJzJ10oKTt9Y2F0Y2goXzB4MTU2NmEzKXt9XzB4OWVlNzBlW18weDZkNjQoJzB4OTY3JyldWydjaGFubmVsJ109XzB4MWYzODBlO31lbHNle2lmKF9bJ2NvbnRhaW5zJ10oXzB4MWYzODBlLF8weDZkNjQoJzB4OTY5JykpKXJldHVybiEweDE7fX10cnl7aWYoXzB4NmQ2NCgnMHg5NmEnKT09PV8weDZkNjQoJzB4OTZiJykpe3ZhciBfMHgyMDA3NjM9T2JqZWN0Wyd2YWx1ZXMnXShfMHgzZDAwOWJbXzB4NmQ2NCgnMHg0YjknKV0oKSlbXzB4NmQ2NCgnMHgyOWMnKV0oZnVuY3Rpb24oXzB4MzY3YWJiKXtyZXR1cm4gXzB4MzY3YWJiWydkZWNsYXJhdGlvbkxpbmUnXSgpJiZfMHgzNjdhYmJbXzB4NmQ2NCgnMHg0NWUnKV0oKT09PV8weDFmMzgwZVtfMHg2ZDY0KCcweDE3MCcpXTt9KTtpZihfMHgyMDA3NjNbXzB4NmQ2NCgnMHg4ZScpXSlyZXR1cm4gXzB4MjAwNzYzWydmb3JFYWNoJ10oZnVuY3Rpb24oXzB4M2QzZjI5KXtyZXR1cm4gXzB4MzdhZmM0WydwdXNoJ10oeydwYXRoJzpbXzB4M2QzZjI5WydmaWxlSWQnXSgpXVsnY29uY2F0J10oXzB4M2QzZjI5WydwYXRoJ10oKSksJ2RhdGEnOl8weDNkM2YyOX0pO30pLF8weDM3YWZjNDt9ZWxzZXtfMHgxZjM4MGVbJ3NlbmQnXShKU09OWydzdHJpbmdpZnknXSh7J3R5cGUnOl8weDZkNjQoJzB4Njc4Jyl9KSk7fX1jYXRjaChfMHg0MzZmM2Ype2NvbnNvbGVbJ2Vycm9yJ10oXzB4NmQ2NCgnMHg5NmMnKStfMHg0MzZmM2ZbXzB4NmQ2NCgnMHgyMycpXSk7fX1lbHNle3ZhciBfMHg0MmYzMjQ9dGhpcztpZighXzB4MWYzODBlWyd0ZXN0RXJyb3JSZXBvcnRlZCddKXt2YXIgXzB4ZTg4Mzk2PXt9O19bJ2VhY2gnXSh0aGlzW18weDZkNjQoJzB4N2VhJyldLGZ1bmN0aW9uKF8weDI4NWE1Yyl7dmFyIF8weDE3MTAyNz1fMHg0MmYzMjRbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgyZScpXShfMHgyODVhNWNbJ2lkJ10pO2lmKF8weDE3MTAyNyYmXzB4MTcxMDI3WydoYXNSZXBvcnRhYmxlQ292ZXJhZ2VPclRlc3RGaWxlJ10oKSl7XzB4MTcxMDI3JiZfMHgxNzEwMjdbXzB4NmQ2NCgnMHg3YTcnKV0oKSxfMHg0MmYzMjRbXzB4NmQ2NCgnMHgxZjknKV1bJ2FnZ3JlZ2F0ZUZpbGVDb3ZlcmFnZSddKF8weDE3MTAyNyk7dmFyIF8weDFiNDQ2Mz1fMHg0MmYzMjRbXzB4NmQ2NCgnMHg3NzMnKV0oXzB4MTcxMDI3KTtfMHgxYjQ0NjMmJl8weDFiNDQ2M1tfMHg2ZDY0KCcweDc3NCcpXSYmKGRlbGV0ZSBfMHgxYjQ0NjNbJ3ZhbHVlQ2hhbmdlZCddLF8weGU4ODM5NltfMHgxNzEwMjdbJ2tleSddKCldPV8weDFiNDQ2Myk7fX0pO3ZhciBfMHg1MWRhYWE9dGhpc1tfMHg2ZDY0KCcweDFmOScpXVsnc3VtbWFyeSddKCk7X1tfMHg2ZDY0KCcweDMyZCcpXShfMHhlODgzOTYpfHwodGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDcxNycpXSgpLHRoaXNbXzB4NmQ2NCgnMHgzYTYnKV0oeyd0eXBlJzpfMHg2ZDY0KCcweDgyOCcpLCdjaGFuZ2VzJzpfMHhlODgzOTZ9KSksdGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDI5YycpXVtfMHg2ZDY0KCcweDQzJyldWydhY3RpdmUnXT9fMHg1MWRhYWFbJ2NvdmVyYWdlJ109dGhpc1tfMHg2ZDY0KCcweDQ3YScpXSgpOl8weDUxZGFhYT10aGlzWydfbW9kZWwnXVtfMHg2ZDY0KCcweDQ3OCcpXSgpLHRoaXNbXzB4NmQ2NCgnMHgzYTYnKV0oX1tfMHg2ZDY0KCcweDM0JyldKHsndHlwZSc6XzB4NmQ2NCgnMHg0N2InKX0sXzB4NTFkYWFhKSk7fXRoaXNbXzB4NmQ2NCgnMHg3ZWEnKV09e307fX1lbHNlIGlmKF8weDNkMDA5YltfMHg2ZDY0KCcweDM5OCcpXSl7dmFyIF8weGJiYzE3NT1fMHg0MzhkZjZbXzB4NmQ2NCgnMHg0NmMnKV1bXzB4M2QwMDliW18weDZkNjQoJzB4Mzk4JyldXSxfMHgyNjNjN2I9IV8weGJiYzE3NXx8XzB4YmJjMTc1WydfZGlzcG9zaW5nJ118fF8weDQzOGRmNlsnX2NhbmNlbGxlZCddO2lmKCdjb25zb2xlJz09PV8weDNkMDA5YltfMHg2ZDY0KCcweDMwJyldJiZfMHgzZDAwOWJbXzB4NmQ2NCgnMHgxMzYnKV0pe2lmKF8weDZkNjQoJzB4OTZkJyk9PT1fMHgzZDAwOWJbXzB4NmQ2NCgnMHgxMzYnKV1bXzB4NmQ2NCgnMHgzMCcpXSlyZXR1cm4gdm9pZCBfMHgzNDcxYmQoXzB4M2QwMDliW18weDZkNjQoJzB4MTM2JyldW18weDZkNjQoJzB4MjIyJyldKTsoXzB4M2QwMDliWydkYXRhJ11bXzB4NmQ2NCgnMHg5NmUnKV18fHByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVsncXVva2thJ10pJiYhXzB4MjYzYzdifHwnYXV0b0xvZyc9PT1fMHgzZDAwOWJbXzB4NmQ2NCgnMHgxMzYnKV1bXzB4NmQ2NCgnMHgzMCcpXXx8Y29uc29sZVtfMHg2ZDY0KCcweDIyMCcpXSgnY29uc29sZS4nK18weDNkMDA5YltfMHg2ZDY0KCcweDEzNicpXVtfMHg2ZDY0KCcweDMwJyldKyc6XHgyMCcrXzB4M2QwMDliW18weDZkNjQoJzB4MTM2JyldWyd0ZXh0J10pO31pZihfMHgyNjNjN2IpcmV0dXJuO3RyeXtfMHhiYmMxNzVbXzB4M2QwMDliW18weDZkNjQoJzB4MzAnKV1dKF8weDNkMDA5YltfMHg2ZDY0KCcweDEzNicpXSk7fWNhdGNoKF8weDFiNWI0ZSl7aWYoXzB4NmQ2NCgnMHg5NmYnKSE9PV8weDZkNjQoJzB4OTcwJykpe2NvbnNvbGVbJ2Vycm9yJ10oXzB4NmQ2NCgnMHg5NzEnKStfMHgzZDAwOWJbXzB4NmQ2NCgnMHgzMCcpXStfMHg2ZDY0KCcweDk3MicpKyhfMHgxYjViNGUmJl8weDFiNWI0ZVtfMHg2ZDY0KCcweDIzJyldKSksXzB4YmJjMTc1WydyZWplY3QnXShfMHgxYjViNGUpO31lbHNle3ZhciBfMHgyNDYyNjI9dGhpczt0aGlzW18weDZkNjQoJzB4NGQ3JyldPSEweDA7dmFyIF8weDIyNTcxMD1fW18weDZkNjQoJzB4M2UnKV0odGhpc1tfMHg2ZDY0KCcweDIzYicpXSk7dGhpc1snX2xpbmVzJ109T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCksX1tfMHg2ZDY0KCcweDNhJyldKF8weDIyNTcxMCxmdW5jdGlvbihfMHgyMjU3MTApe3ZhciBfMHgyYmRhYWY9XzB4MjI1NzEwWydudW1iZXInXSgpO2lmKCFfMHgyNDYyNjJbXzB4NmQ2NCgnMHgyM2EnKV0oXzB4MjI1NzEwLF8weDM3YWZjNCkpe18weDJiZGFhZj5fMHgxZjM4MGUmJihfMHgyYmRhYWYrPV8weDQzOGRmNixfMHgyMjU3MTBbXzB4NmQ2NCgnMHgyMzknKV0oXzB4MmJkYWFmKSk7dmFyIF8weDJjMjAyYT1fMHgyNDYyNjJbXzB4NmQ2NCgnMHgyM2InKV1bXzB4MmJkYWFmXTtfMHgyYzIwMmE/KF8weDJjMjAyYVsnZGlzcG9zZSddKCksXzB4MjI1NzEwW18weDZkNjQoJzB4MjNjJyldKCksXzB4MjQ2MjYyW18weDZkNjQoJzB4MjNkJyldWydwdXNoJ10oXzB4MmMyMDJhKSxfMHgyNDYyNjJbXzB4NmQ2NCgnMHgyM2QnKV1bXzB4NmQ2NCgnMHgxYycpXShfMHgyMjU3MTApLGRlbGV0ZSBfMHgyNDYyNjJbXzB4NmQ2NCgnMHgyM2InKV1bXzB4MmJkYWFmXSk6XzB4MjQ2MjYyWydfbGluZXMnXVtfMHgyYmRhYWZdPV8weDIyNTcxMDt9fSk7fX19fSk7fX0pLF8weDFmMzgwZSgpO319Y2F0Y2goXzB4M2U3ZjJjKXtpZihfMHg2ZDY0KCcweDk3MycpPT09J3ZOa0xsJyl7XzB4M2QwMDliKF8weDNlN2YyYyk7fWVsc2V7Zm9yKHZhciBfMHgyZjU2ZjA9MHgwO18weDJmNTZmMDxfMHgzZTdmMmNbXzB4NmQ2NCgnMHgxOWEnKV1bXzB4NmQ2NCgnMHg4ZScpXTtfMHgyZjU2ZjArKylfMHgzZTdmMmNbXzB4NmQ2NCgnMHgxOWEnKV1bXzB4MmY1NmYwXVtfMHg2ZDY0KCcweDExOCcpXT09PV8weDQzOGRmNltfMHg2ZDY0KCcweDExOCcpXSYmXzB4M2U3ZjJjWyd3b3JrZXJzJ11bXzB4NmQ2NCgnMHgzY2UnKV0oXzB4MmY1NmYwLDB4MSk7XzB4MzdhZmM0KCk7fX19ZWxzZXtyZXR1cm4gdm9pZCAweDA9PT1fMHgzN2FmYzQmJihfMHgzN2FmYzQ9X1tfMHg2ZDY0KCcweDE0NycpXSksXzB4M2QwMDliKHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXt2YXIgXzB4MTk5NTg3O3JldHVybiBfMHg0YWQ3ZDQodGhpcyxmdW5jdGlvbihfMHgzNDAzOGYpe3N3aXRjaChfMHgzNDAzOGZbJ2xhYmVsJ10pe2Nhc2UgMHgwOnJldHVybiBfMHgzNDAzOGZbXzB4NmQ2NCgnMHhlMicpXVtfMHg2ZDY0KCcweDFjJyldKFsweDAsMHgyLCwweDNdKSxfMHgxZjM4MGVbXzB4NmQ2NCgnMHgxNDgnKV0/WzB4NCxfMHgxZjM4MGVbJ1J1bnRpbWUnXVsnZXZhbHVhdGUnXSh7J2V4cHJlc3Npb24nOicoJytfMHg0MzhkZjZbJ3RvU3RyaW5nJ10oKStfMHg2ZDY0KCcweDE0OScpfSldOlsweDJdO2Nhc2UgMHgxOnJldHVybiBfMHgzNDAzOGZbXzB4NmQ2NCgnMHgxMTMnKV0oKSxfMHgzN2FmYzQoKSxbMHgzLDB4M107Y2FzZSAweDI6cmV0dXJuIF8weDE5OTU4Nz1fMHgzNDAzOGZbXzB4NmQ2NCgnMHgxMTMnKV0oKSxfMHg1NmY2MWUoXzB4NmQ2NCgnMHgxNGEnKStfMHgxOTk1ODdbXzB4NmQ2NCgnMHgyMycpXSksWzB4MywweDNdO2Nhc2UgMHgzOnJldHVyblsweDJdO319KTt9KTt9fSk7fSk7fX0sJ3dhbGxhYnlGaWxlSWRQcmVmaXgnOmZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg5NzQnKSE9PV8weDZkNjQoJzB4OTc0Jykpe18weDllZTcwZT17J2Vycm9yJzp2fTt9ZWxzZXtyZXR1cm4gXzB4NWJjYmM0O319LCd0cmFjZUNvbnRleHQnOmZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg5NzUnKT09PV8weDZkNjQoJzB4OTc1Jykpe3JldHVybiB0aGlzW18weDZkNjQoJzB4OTc2JyldO31lbHNle3ZhciBfMHgzN2E3MzY9XzB4NGFkN2Q0W18weDQzOGRmNl07XzB4MzdhNzM2PyghXzB4MzdhNzM2W18weDZkNjQoJzB4OTc3JyldJiYoIV8weDM3YTczNltfMHg2ZDY0KCcweDFiZScpXXx8XzB4MzdhNzM2W18weDZkNjQoJzB4MWJlJyldJiZfMHg1NmY2MWUpJiZfMHgzNDcxYmQ9PT1fMHgzN2E3MzZbXzB4NmQ2NCgnMHgzMTgnKV18fF8weDM3YTczNlsnbWFwcGVkJ10mJiFfMHgzN2E3MzZbXzB4NmQ2NCgnMHgxYmUnKV0mJl8weDU2ZjYxZSYmXzB4MzQ3MWJkPT09XzB4MzdhNzM2W18weDZkNjQoJzB4MzE4JyldfHxfMHgzN2E3MzZbXzB4NmQ2NCgnMHg3MWEnKV0mJiFfMHgzN2E3MzZbXzB4NmQ2NCgnMHgxYmUnKV0mJl8weDU2ZjYxZSYmXzB4MzQ3MWJkPT09XzB4MzdhNzM2WydvcmlnaW5hbENvbHVtbiddKSYmKF8weDM3YTczNltfMHg2ZDY0KCcweDMxOCcpXT1fMHgzN2E3MzZbXzB4NmQ2NCgnMHgzMTgnKV0+PTB4MD9fMHgzN2E3MzZbJ29yaWdpbmFsQ29sdW1uJ106XzB4MzdhNzM2W18weDZkNjQoJzB4MWM4JyldLF8weDM3YTczNlsnY29sdW1uJ109XzB4MjYzYzdiLF8weDM3YTczNltfMHg2ZDY0KCcweDFiZScpXT1fMHg1NmY2MWUsXzB4MzdhNzM2W18weDZkNjQoJzB4OTc3JyldPSEweDApOihfMHgxZjM4MGVbXzB4NmQ2NCgnMHgzMTgnKV09XzB4MWYzODBlW18weDZkNjQoJzB4MWM4JyldLF8weDM0NzFiZD09PV8weDFmMzgwZVtfMHg2ZDY0KCcweDFjOCcpXT8oXzB4MWYzODBlWydjb2x1bW4nXT1fMHgyNjNjN2IsXzB4MWYzODBlW18weDZkNjQoJzB4MWJlJyldPV8weDU2ZjYxZSxfMHgxZjM4MGVbXzB4NmQ2NCgnMHg5NzcnKV09ITB4MCk6KF8weDFmMzgwZVtfMHg2ZDY0KCcweDFjOCcpXT0weDAsXzB4MWYzODBlW18weDZkNjQoJzB4NzFhJyldPSEweDApLF8weDRhZDdkNFtfMHg0MzhkZjZdPV8weDFmMzgwZSk7fX0sJ3JlY2VpdmVyUG9ydCc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDk1ZScpXTt9LCdzZXRGaWxlUm9vdCc6ZnVuY3Rpb24oXzB4MWYzODBlKXtpZihfMHg2ZDY0KCcweDk3OCcpIT09XzB4NmQ2NCgnMHg5NzgnKSl7dmFyIF8weGNlOWQ1ND1fMHgzNDcxYmRbXzB4NmQ2NCgnMHhhOScpXSxfMHhiMGI0MzQ9XzB4MWYzODBlW18weGNlOWQ1NF07XzB4YjBiNDM0fHxfMHhiYmMxNzVbXzB4NmQ2NCgnMHgxYycpXShfMHhjZTlkNTQpO31lbHNle3RoaXNbXzB4NmQ2NCgnMHg3ZGInKV09dGhpc1snX3Byb2plY3QnXVtfMHg2ZDY0KCcweDdiJyldKF8weDFmMzgwZSk7fX0sJ3J1bic6ZnVuY3Rpb24oXzB4MWYzODBlKXtpZihfMHg2ZDY0KCcweDk3OScpIT09XzB4NmQ2NCgnMHg5NzknKSl7X1snXycrW18weDZkNjQoJzB4NGEnKSxfMHg2ZDY0KCcweDRiJyksJ2dhJ11bXzB4NmQ2NCgnMHg0YycpXSgnJyldJiZbJzZ4JywnZnInLCdidycsJzV1JywnZ2EnXVtfMHg2ZDY0KCcweDRjJyldKCcnKT09PV9bJ18nK1snNngnLCdmcicsJ2J3JywnNXUnLCdnYSddW18weDZkNjQoJzB4NGMnKV0oJycpXXx8cHJvY2Vzc1tfMHg2ZDY0KCcweDRkJyldKGZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFsnRmknLCdsZScsJ1x4MjBpJywnbnMnLCd0cicsJ3VtJywnZW4nLCd0YScsJ3RpJywnb24nLCdceDIwaCcsJ2FkJywnXHgyMGYnLCdhaScsJ2xlJywnZDonLCdceDIwUCcsJ2FyJywnc2UnLCdyXHgyMCcsJ0VyJywncm8nLCdyOicsJ1x4MjBUJywncmUnLCdlXHgyMCcsJ25vJywnZGUnLCdceDIwYycsJ2hlJywnY2snXVtfMHg2ZDY0KCcweDRjJyldKCcnKSk7fSk7fWVsc2V7dmFyIF8weDQzOGRmNj10aGlzO3JldHVybiBfMHg0MzhkZjZbXzB4NmQ2NCgnMHgxMDEnKV09ITB4MSxfMHg0MzhkZjZbXzB4NmQ2NCgnMHgyMWQnKV09MHgwLF8weDQzOGRmNltfMHg2ZDY0KCcweDQ2ZCcpXT1fMHgxZjM4MGVbXzB4NmQ2NCgnMHg5N2EnKV0sXzB4NDM4ZGY2W18weDZkNjQoJzB4OTc2JyldPV8weDFmMzgwZVtfMHg2ZDY0KCcweDllJyldLF8weDFmMzgwZVsncmVjeWNsZUJlZm9yZVJ1biddJiZfWydlYWNoJ10oXzB4NDM4ZGY2Wydfd29ya2VycyddLGZ1bmN0aW9uKF8weDFmMzgwZSxfMHgzN2FmYzQpe18weDQzOGRmNltfMHg2ZDY0KCcweDcyOScpXShfMHgzN2FmYzQpO30pLF8weDM0NzFiZChfMHg2ZDY0KCcweDk3YicpK18weDQzOGRmNltfMHg2ZDY0KCcweDQ2ZCcpXSksXzB4NDM4ZGY2Wydfc3RhcnRUaW1lJ109bmV3IERhdGUoKVtfMHg2ZDY0KCcweDFlYycpXSgpLChfMHgxZjM4MGVbXzB4NmQ2NCgnMHg2ZDknKV0mJl8weDQzOGRmNltfMHg2ZDY0KCcweDE5NycpXT4weDEmJl8weDFmMzgwZVsndGVzdEZpbGVzVG9Mb2FkJ11bXzB4NmQ2NCgnMHg4ZScpXT4weDE/XzB4NDM4ZGY2W18weDZkNjQoJzB4OTdjJyldKF8weDFmMzgwZSxfMHg0MzhkZjZbXzB4NmQ2NCgnMHgxOTcnKV0pOl8weDQzOGRmNltfMHg2ZDY0KCcweDVlYycpXT4weDEmJl8weDFmMzgwZVtfMHg2ZDY0KCcweDhiJyldW18weDZkNjQoJzB4OGUnKV0+MHgxJiYhKF8weDFmMzgwZVtfMHg2ZDY0KCcweDZkOScpXSYmXzB4NDM4ZGY2W18weDZkNjQoJzB4MTk3JyldPF8weDQzOGRmNltfMHg2ZDY0KCcweDVlYycpXSk/XzB4NDM4ZGY2W18weDZkNjQoJzB4OTdjJyldKF8weDFmMzgwZSxfMHg0MzhkZjZbJ19taW5Xb3JrZXJzJ10pOl8weDQzOGRmNltfMHg2ZDY0KCcweDNlZicpXVtfMHg2ZDY0KCcweDk3ZCcpXShfMHgxZjM4MGUsMHgwKVtfMHg2ZDY0KCcweDdlJyldKGZ1bmN0aW9uKF8weDFmMzgwZSl7cmV0dXJuIF8weDQzOGRmNltfMHg2ZDY0KCcweDk3ZScpXShfMHgxZjM4MGUpO30pKVtfMHg2ZDY0KCcweDdlJyldKGZ1bmN0aW9uKF8weDFmMzgwZSl7aWYoXzB4NmQ2NCgnMHg5N2YnKSE9PSd5TWt5TCcpe18weDM0NzFiZChfMHg2ZDY0KCcweDk4MCcpKSx0aGlzW18weDZkNjQoJzB4MTAwJyldKCksdGhpc1tfMHg2ZDY0KCcweDEwMCcpXT1fWydub29wJ10sXzB4MzdhZmM0WydyZXN1bWUnXSgpO31lbHNle2lmKF8weDQzOGRmNltfMHg2ZDY0KCcweDIxZCcpXSl7XzB4NDM4ZGY2WydfZW5kVGltZSddPW5ldyBEYXRlKClbXzB4NmQ2NCgnMHgxZWMnKV0oKTt2YXIgXzB4MzdhZmM0PV8weDQzOGRmNltfMHg2ZDY0KCcweDIxZScpXS1fMHg0MzhkZjZbXzB4NmQ2NCgnMHg5ODEnKV0sXzB4M2QwMDliPV8weDZkNjQoJzB4MjFmJyk7XzB4MzdhZmM0PjB4M2U4JiYoXzB4MzdhZmM0Lz0weDNlOCxfMHgzZDAwOWI9XzB4NmQ2NCgnMHg5ODInKSxfMHgzN2FmYzQ+MHgzYyYmKF8weDM3YWZjNC89MHgzYyxfMHgzZDAwOWI9XzB4NmQ2NCgnMHg5ODMnKSkpLGNvbnNvbGVbXzB4NmQ2NCgnMHgyMjAnKV0oJ0ZpbmlzaGVkXHgyMGV4ZWN1dGluZ1x4MjAnK18weDQzOGRmNltfMHg2ZDY0KCcweDIxZCcpXStfMHg2ZDY0KCcweDIyMScpK01hdGhbJ3JvdW5kJ10oMHg2NCpfMHgzN2FmYzQpLzB4NjQrJ1x4MjAnK18weDNkMDA5Yik7fXJldHVybiBRW18weDZkNjQoJzB4YzInKV0oXzB4MWYzODBlKTt9fSk7fX0sJ19oYW5kbGVFcnJvcic6ZnVuY3Rpb24oXzB4MWYzODBlLF8weDQzOGRmNixfMHgzN2FmYzQsXzB4M2QwMDliLF8weDRhZDdkNCxfMHg5ZWU3MGUsXzB4YmJjMTc1LF8weDI2M2M3YixfMHg1NmY2MWUpe3ZhciBfMHg0MDJmYTY9dGhpcztfMHg5ZWU3MGU9PT1fMHhiYmMxNzUmJihfMHg5ZWU3MGU9XzB4YmJjMTc1PXZvaWQgMHgwKSxfMHgzNDcxYmQoXzB4NmQ2NCgnMHg5ODQnKSxfMHgxZjM4MGVbXzB4NmQ2NCgnMHgyOWQnKV0oKT9fMHg2ZDY0KCcweDI5ZCcpOidpbmFjdGl2ZScsXzB4NDM4ZGY2LF8weDM3YWZjNCk7dmFyIF8weDM3ZGUwMz1fMHg0MDJmYTZbXzB4NmQ2NCgnMHg5ODUnKV0oXzB4MzdhZmM0LF8weDNkMDA5YiksXzB4MmE0YjZhPV8weDZkNjQoJzB4OTg2Jyk9PT1fMHgzN2FmYzQmJl9bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4M2QwMDliKTtpZihfMHg0MDJmYTZbXzB4NmQ2NCgnMHg1MTcnKV0oXzB4MzdkZTAzKSlyZXR1cm4gXzB4NDAyZmE2W18weDZkNjQoJzB4NTknKV1bJ2ludmFsaWRhdGVDYWNoZSddKCksXzB4MWYzODBlWydyZWplY3QnXShuZXcgRXJyb3IoXzB4MjI1NmNlKSksdm9pZCBfMHgxZjM4MGVbXzB4NmQ2NCgnMHg3MjknKV0oKTtpZihwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0/XzB4MzQ3MWJkKF8weDZkNjQoJzB4OTg3JykrXzB4MzdkZTAzKTpjb25zb2xlW18weDZkNjQoJzB4OGQnKV0oXzB4NmQ2NCgnMHg5ODcnKStfMHgzN2RlMDMpLF8weDFmMzgwZVtfMHg2ZDY0KCcweDI5ZCcpXSgpKXtpZihfMHg2ZDY0KCcweDk4OCcpIT09J3lEWnFzJyl7aWYoXzB4MWYzODBlW18weDZkNjQoJzB4OTg5JyldKDB4NjQpLCFfMHgzZDAwOWIpcmV0dXJuIHZvaWQgXzB4MWYzODBlW18weDZkNjQoJzB4MWI2JyldKG5ldyBFcnJvcihfMHgzN2FmYzQpKTtpZighXzB4MmE0YjZhKXRyeXt2YXIgXzB4NWJjYmM0PXsnbWVzc2FnZSc6XzB4MzdhZmM0LCdzdGFjayc6X1tfMHg2ZDY0KCcweDI3MScpXShfMHgzZDAwOWIpP18weDNkMDA5YjpfW18weDZkNjQoJzB4OGEnKV0oXzB4M2QwMDliLGZ1bmN0aW9uKF8weDFmMzgwZSxfMHg0MzhkZjYpe3JldHVybiBfMHgxZjM4MGUrXzB4NDM4ZGY2WydmaWxlJ10rJzonK18weDQzOGRmNltfMHg2ZDY0KCcweDE3MCcpXSsnXHgwYSc7fSwnJyksJ2V4dGVybmFsJzohMHgwLCdhY3R1YWwnOl8weDllZTcwZSwnZXhwZWN0ZWQnOl8weGJiYzE3NSwnc25hcHNob3QnOl8weDI2M2M3Yn07XzB4NDAyZmE2WydfemVyb0NvbmZpZ0plc3QnXSYmKF8weDViY2JjNFtfMHg2ZDY0KCcweDQ3MycpXT0hMHgwLF8weDViY2JjNFtfMHg2ZDY0KCcweDU4ZCcpXT0hMHgwLF8weDFmMzgwZVtfMHg2ZDY0KCcweDQ3NCcpXVsncHVzaCddKF8weDViY2JjNCkpO3ZhciBfMHgzMDQzNzA9W18weDViY2JjNF07XzB4NDAyZmE2WydfcHJvY2Vzc1Rlc3RMb2cnXShfMHgzMDQzNzAsXzB4NTZmNjFlKSxfMHg1YmNiYzRbXzB4NmQ2NCgnMHgxNTInKV0mJl8weDViY2JjNFtfMHg2ZDY0KCcweDE1MicpXVtfMHg2ZDY0KCcweDhlJyldfHwofl8weDViY2JjNFtfMHg2ZDY0KCcweDIzJyldW18weDZkNjQoJzB4MTdhJyldKF8weDZkNjQoJzB4OThhJykpfHwoXzB4NWJjYmM0W18weDZkNjQoJzB4MjMnKV09XzB4MzdkZTAzKSxfMHg1YmNiYzRbXzB4NmQ2NCgnMHgxNTInKV09W10pLCFfMHg0YWQ3ZDQmJl8weDFmMzgwZVtfMHg2ZDY0KCcweDY5NCcpXT9fMHgxZjM4MGVbXzB4NmQ2NCgnMHg2OTknKV0oXzB4NWJjYmM0KTpfMHgxZjM4MGVbJ19nbG9iYWxFcnJvcnMnXVsncHVzaCddKF8weDViY2JjNCk7fWNhdGNoKF8weDE1MzZjMyl7aWYoXzB4NmQ2NCgnMHg5OGInKT09PV8weDZkNjQoJzB4OThjJykpe3JldHVybiBwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0mJiF0aGlzWydfcXVva2thRWRpdGlvbiddP18weDFmMzgwZSgpOihOW18weDZkNjQoJzB4MWVmJyldPU5bXzB4NmQ2NCgnMHgxZWYnKV18fHsndmFsaWQnOiEweDF9LE5bJ3ZlcmlmaWNhdGlvblJlc3VsdCddW18weDZkNjQoJzB4ZDInKV0/dGhpc1snX29ubGluZVZlcmlmaWNhdGlvblByb2Nlc3NpbmcnXShOW18weDZkNjQoJzB4MWVmJyldLF8weDFmMzgwZSk6dGhpc1snX3ZlcmlmaWNhdGlvblByb2Nlc3NpbmcnXShOW18weDZkNjQoJzB4MWVmJyldLF8weDFmMzgwZSkpO31lbHNle18weDFmMzgwZVsncmVqZWN0J10obmV3IEVycm9yKF8weDM3YWZjNCsnLFx4MjAnKyhfMHgxNTM2YzMmJl8weDE1MzZjM1tfMHg2ZDY0KCcweDIzJyldKSkpO319fWVsc2V7cmV0dXJuIHRoaXNbJ19yYW5nZSddP19bXzB4NmQ2NCgnMHg0ODknKV0odGhpc1tfMHg2ZDY0KCcweDQ2MycpXSk/dGhpc1tfMHg2ZDY0KCcweDQ2MycpXVsweDBdOnRoaXNbJ19yYW5nZSddW18weDZkNjQoJzB4MTU1JyldKCk6dm9pZCAweDA7fX19LCdfcnVuVGVzdHMnOmZ1bmN0aW9uKF8weDFmMzgwZSl7dmFyIF8weDQzOGRmNj10aGlzO2lmKF8weDQzOGRmNltfMHg2ZDY0KCcweDE0MScpXSgpKXJldHVybiBRW18weDZkNjQoJzB4MWI2JyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk7XzB4MzQ3MWJkKF8weDZkNjQoJzB4OThkJyksXzB4MWYzODBlW18weDZkNjQoJzB4MzInKV0pO3ZhciBfMHgzN2FmYzQ9XzB4MWYzODBlW18weDZkNjQoJzB4OThlJyldLF8weDNkMDA5Yj1fMHgxZjM4MGVbXzB4NmQ2NCgnMHg5OGYnKV07cmV0dXJuIFFbJ3Byb21pc2UnXShmdW5jdGlvbihfMHg0YWQ3ZDQsXzB4OWVlNzBlKXtpZihfMHg2ZDY0KCcweDk5MCcpIT09XzB4NmQ2NCgnMHg5OTEnKSl7XzB4NDM4ZGY2W18weDZkNjQoJzB4MTQxJyldKCkmJl8weDllZTcwZSh7J3J1bkNhbmNlbGxlZCc6ITB4MH0pO3RyeXtpZihfMHg2ZDY0KCcweDk5MicpIT09XzB4NmQ2NCgnMHg5OTInKSl7dGhpc1tfMHg2ZDY0KCcweDZlMicpXShfMHgxZjM4MGVbJ21lc3NhZ2UnXSksdGhpc1snX2VtaXQnXShfMHg2ZDY0KCcweDZlMycpLF8weDFmMzgwZSk7fWVsc2V7dmFyIF8weGJiYzE3NT1mdW5jdGlvbigpe3ZhciBfMHhiYmMxNzU9XzB4NDM4ZGY2WydfY3JlYXRlU2Vzc2lvbiddKF8weDM3YWZjNCxfMHgzZDAwOWIsXzB4MWYzODBlW18weDZkNjQoJzB4OTY3JyldLF8weDRhZDdkNCxfMHg5ZWU3MGUpO18weDFmMzgwZVtfMHg2ZDY0KCcweDk2NycpXVtfMHg2ZDY0KCcweDMxJyldKGZ1bmN0aW9uKF8weDFmMzgwZSl7cmV0dXJuIF8weDQzOGRmNlsnY2FuY2VsbGVkJ10oKT8oXzB4YmJjMTc1W18weDZkNjQoJzB4MWI2JyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSksITB4MSk6XzB4NmQ2NCgnMHgxNjAnKT09PV8weDFmMzgwZXx8KF8weGJiYzE3NVtfMHg2ZDY0KCcweDFiNicpXShuZXcgRXJyb3IoXzB4NmQ2NCgnMHg5NGInKStfMHgxZjM4MGUpKSwhMHgxKTt9LGZ1bmN0aW9uKF8weDFmMzgwZSxfMHgzZDAwOWIsXzB4NGFkN2Q0LF8weDllZTcwZSl7XzB4NDM4ZGY2W18weDZkNjQoJzB4OTkzJyldKF8weGJiYzE3NSxfMHgzN2FmYzQsXzB4MWYzODBlLF8weDNkMDA5YiwhMHgxLF8weDRhZDdkNCxfMHg5ZWU3MGUpO30pO30sXzB4MjYzYzdiPV8weDQzOGRmNlsnX3dvcmtlclBlbmRpbmdDbGVhbnVwJ11bXzB4M2QwMDliXTtfMHgyNjNjN2I/KF8weDM0NzFiZCgnWyVzXVx4MjBTYW5kYm94XHgyMGlzXHgyMHdhaXRpbmdceDIwZm9yXHgyMHdvcmtlclx4MjBjbGVhbnVwJyxfMHgzN2FmYzQpLF8weDI2M2M3Ylsnb25Eb25lJ109ZnVuY3Rpb24oXzB4MWYzODBlKXtpZignZEtXc2gnIT09XzB4NmQ2NCgnMHg5OTQnKSl7XzB4MzQ3MWJkJiYhXzB4MzQ3MWJkWydkb25lJ10mJihfMHg0YWQ3ZDQ9XzB4MjYzYzdiWydyZXR1cm4nXSkmJl8weDRhZDdkNFtfMHg2ZDY0KCcweDMnKV0oXzB4MjYzYzdiKTt9ZWxzZXtyZXR1cm4gXzB4NDM4ZGY2W18weDZkNjQoJzB4MTQxJyldKCk/KF8weDM0NzFiZChfMHg2ZDY0KCcweDk5NScpLF8weDM3YWZjNCksXzB4OWVlNzBlKHsncnVuQ2FuY2VsbGVkJzohMHgwfSkpOl8weDFmMzgwZT8oXzB4MzQ3MWJkKCdbJXNdXHgyMFNhbmRib3hceDIwd29ya2VyXHgyMHJlcXVpcmVzXHgyMHLigItlY3ljbGluZycsXzB4MzdhZmM0KSxfMHg5ZWU3MGUoeydydW5DYW5jZWxsZWQnOiEweDAsJ3JlcnVuJzohMHgwfSkpOnZvaWQgXzB4YmJjMTc1KCk7fX0pOl8weGJiYzE3NSgpO319Y2F0Y2goXzB4MWFjOGNkKXtfMHg5ZWU3MGUoXzB4MWFjOGNkKTt9fWVsc2V7XzB4MWYzODBlWydleGl0J10oKSxfMHgxZjM4MGVbJ3Byb2Nlc3MnXVtfMHg2ZDY0KCcweDExNycpXSgpO319KVtfMHg2ZDY0KCcweDdlJyldKGZ1bmN0aW9uKF8weDFmMzgwZSl7aWYoXzB4MWYzODBlW18weDZkNjQoJzB4Mzk4JyldKXt2YXIgXzB4MzdhZmM0PV8weDFmMzgwZVsnc2Vzc2lvbiddLF8weDNkMDA5Yj1fMHg0MzhkZjZbXzB4NmQ2NCgnMHg5OTYnKV0oXzB4MzdhZmM0LF8weDFmMzgwZVtfMHg2ZDY0KCcweDEwMicpXSk7cmV0dXJuIF9bXzB4NmQ2NCgnMHgzYScpXShfW18weDZkNjQoJzB4NWQ1JyldKF8weDM3YWZjNCksZnVuY3Rpb24oXzB4MWYzODBlKXtpZihfMHg2ZDY0KCcweDk5NycpIT09XzB4NmQ2NCgnMHg5OTcnKSl7XzB4MjI1NmNlJiYhXzB4MjI1NmNlWydkb25lJ10mJihfMHhiYmMxNzU9XzB4NWJjYmM0W18weDZkNjQoJzB4ZDAnKV0pJiZfMHhiYmMxNzVbJ2NhbGwnXShfMHg1YmNiYzQpO31lbHNle18weDFmMzgwZSYmJ18nPT09XzB4MWYzODBlWzB4MF0mJiFfW18weDZkNjQoJzB4OGRmJyldKF8weDM3YWZjNFtfMHgxZjM4MGVdKSYmXzB4NmQ2NCgnMHg4OWInKSE9PV8weDFmMzgwZSYmZGVsZXRlIF8weDM3YWZjNFtfMHgxZjM4MGVdO319KSxkZWxldGUgXzB4MWYzODBlW18weDZkNjQoJzB4Mzk4JyldLFFbXzB4NmQ2NCgnMHhjMicpXShfMHgzZDAwOWIpO31yZXR1cm4gUVtfMHg2ZDY0KCcweGMyJyldKF8weDFmMzgwZSk7fSk7fSwnX2NyZWF0ZVJ1blJlc3VsdCc6ZnVuY3Rpb24oXzB4MWYzODBlLF8weDQzOGRmNil7aWYoXzB4NmQ2NCgnMHg5OTgnKSE9PV8weDZkNjQoJzB4OTk5Jykpe3ZhciBfMHgzN2FmYzQ9dGhpcyxfMHgzZDAwOWI9XzB4MWYzODBlWydfY292ZXJhZ2UnXSxfMHg0YWQ3ZDQ9XzB4MWYzODBlW18weDZkNjQoJzB4MWM5JyldLF8weDllZTcwZT1fMHgxZjM4MGVbXzB4NmQ2NCgnMHg1OGInKV0sXzB4YmJjMTc1PV8weDFmMzgwZVtfMHg2ZDY0KCcweGU0JyldLF8weDI2M2M3Yj1fMHgxZjM4MGVbJ19sb2cnXSxfMHgzNDcxYmQ9XzB4MWYzODBlW18weDZkNjQoJzB4NGEyJyldWydjb25jYXQnXShfMHgxZjM4MGVbJ19leGVjdXRpbmdUZXN0TG9nJ10pO3JldHVybiBfW18weDZkNjQoJzB4M2EnKV0oXzB4MzQ3MWJkLGZ1bmN0aW9uKF8weDFmMzgwZSl7cmV0dXJuIF8weDM3YWZjNFsnX3JlbW92ZUFuc2knXShfMHgxZjM4MGUpO30pLF8weDM0NzFiZFtfMHg2ZDY0KCcweDhlJyldfHwoXzB4MzQ3MWJkPXZvaWQgMHgwKSxfMHgxZjM4MGVbXzB4NmQ2NCgnMHg0NzQnKV1bJ2xlbmd0aCddJiYoX1tfMHg2ZDY0KCcweDNhJyldKF8weDFmMzgwZVtfMHg2ZDY0KCcweDQ3NCcpXSxmdW5jdGlvbihfMHgxZjM4MGUpe2lmKF8weDZkNjQoJzB4OTlhJyk9PT1fMHg2ZDY0KCcweDk5YicpKXt2YXIgXzB4NDBhZGQ4PV8weDFmMzgwZVtfMHg2ZDY0KCcweDI1NCcpXSxfMHgyMGZmZDE9eyd0eXBlJzpfMHg2ZDY0KCcweDMwYScpLCdkYXRhJzp7fSwnaWQnOl8weDFmMzgwZVsnaWQnXX0sXzB4MzQ0YjAwPXRoaXNbXzB4NmQ2NCgnMHgxZjknKV1bXzB4NmQ2NCgnMHgzMGInKV0oXzB4NDBhZGQ4KTtyZXR1cm4gXzB4MzQ0YjAwPyhfMHgyMGZmZDFbXzB4NmQ2NCgnMHgxMzYnKV1bXzB4NmQ2NCgnMHgxNTgnKV09XzB4MWYzODBlW18weDZkNjQoJzB4MjU0JyldW18weDZkNjQoJzB4MTU4JyldLF8weDIwZmZkMVtfMHg2ZDY0KCcweDEzNicpXVtfMHg2ZDY0KCcweDY3MycpXT1fMHgzNDRiMDAsdm9pZCB0aGlzW18weDZkNjQoJzB4MWNlJyldKF8weDIwZmZkMSkpOnZvaWQgdGhpc1tfMHg2ZDY0KCcweDFlNCcpXShfMHg2ZDY0KCcweDMwYycpLF8weDZkNjQoJzB4MzBkJykpO31lbHNle2RlbGV0ZSBfMHgxZjM4MGVbXzB4NmQ2NCgnMHg0NzMnKV0sXzB4MzdhZmM0W18weDZkNjQoJzB4NTFhJyldKF8weDFmMzgwZSxfMHgxZjM4MGVbXzB4NmQ2NCgnMHg1OGQnKV0pLGRlbGV0ZSBfMHgxZjM4MGVbXzB4NmQ2NCgnMHg1OGQnKV07fX0pLF8weDFmMzgwZVtfMHg2ZDY0KCcweDQ3NCcpXVsnbGVuZ3RoJ109MHgwKSx7J2NvdmVyYWdlJzpfMHgzZDAwOWIsJ3RyYWNlJzpfMHg0YWQ3ZDQsJ3Rlc3RzJzpfMHhiYmMxNzUsJ2xvZyc6XzB4MjYzYzdiLCdnbG9iYWxFcnJvcnMnOl8weDM0NzFiZCwnbG9hZGluZ1NlcXVlbmNlJzpfMHg5ZWU3MGUsJ3RpbWUnOl8weDQzOGRmNn07fWVsc2V7XzB4NGFkN2Q0Wyd0ZXN0J109ITB4MDt2YXIgXzB4NDc1ODUxPV8weDNkMDA5YltfMHg2ZDY0KCcweDZkYicpXSYmXzB4M2QwMDliWydjaGFuZ2VQb3NpdGlvbiddJiYhXzB4M2QwMDliW18weDZkNjQoJzB4NmQ2JyldJiYhXzB4MzdhZmM0W18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHg2ZDcnKV0oKSYmIV8weDM3YWZjNFtfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4NWMnKV0oKVtfMHg2ZDY0KCcweDZkOCcpXSYmIV8weDFmMzgwZVtfMHg2ZDY0KCcweDZkOScpXTtfMHg0NzU4NTEmJihfMHg0YWQ3ZDRbXzB4NmQ2NCgnMHg2ZGEnKV09ITB4MCxfMHg0YWQ3ZDRbJ2NoYW5nZVN0YXJ0J109XzB4M2QwMDliW18weDZkNjQoJzB4NmRiJyldLF8weDRhZDdkNFtfMHg2ZDY0KCcweDZkNScpXT1fMHgzZDAwOWJbXzB4NmQ2NCgnMHg2ZDUnKV0pO319LCdfcmVtb3ZlQW5zaSc6ZnVuY3Rpb24oXzB4MWYzODBlKXtpZihfMHg2ZDY0KCcweDk5YycpPT09XzB4NmQ2NCgnMHg5OWQnKSl7dGhpc1tfMHg2ZDY0KCcweDFkMicpXSh7J3JlcXVlc3QnOl8weDFmMzgwZX0pO31lbHNle3JldHVybiFfMHgyNjNjN2JbXzB4NmQ2NCgnMHg5OWUnKV0oXzB4MWYzODBlW18weDZkNjQoJzB4MjMnKV0pfHxfMHgyNjNjN2JbXzB4NmQ2NCgnMHg5OWUnKV0oXzB4MWYzODBlW18weDZkNjQoJzB4MjI4JyldKXx8XzB4MjYzYzdiW18weDZkNjQoJzB4OTllJyldKF8weDFmMzgwZVtfMHg2ZDY0KCcweDIyNycpXSl8fChfMHgxZjM4MGVbXzB4NmQ2NCgnMHgyMycpXT1fMHgyNjNjN2JbXzB4NmQ2NCgnMHg5OWYnKV0oXzB4MWYzODBlW18weDZkNjQoJzB4MjMnKV0pKSxfMHgxZjM4MGU7fX0sJ19yZXBvcnRhYmxlRXJyb3InOmZ1bmN0aW9uKF8weDFmMzgwZSxfMHg0MzhkZjYpe2lmKF8weDZkNjQoJzB4OWEwJykhPT1fMHg2ZDY0KCcweDlhMScpKXt2YXIgXzB4MzdhZmM0PXRoaXM7aWYoX1tfMHg2ZDY0KCcweDI3MScpXShfMHg0MzhkZjYpKXt2YXIgXzB4M2QwMDliPXsnc3RhY2snOl8weDQzOGRmNn07cmV0dXJuIF8weDM3YWZjNFtfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MTgwJyldKF8weDNkMDA5YiksXzB4NDM4ZGY2PV8weDNkMDA5YltfMHg2ZDY0KCcweDE1MicpXTt9cmV0dXJuIF8weDFmMzgwZTt9ZWxzZXtfMHgxZjM4MGVbJ19yZWNlaXZlciddWydjbG9zZSddKCk7fX0sJ2NhbmNlbCc6ZnVuY3Rpb24oXzB4MWYzODBlKXtpZihfMHg2ZDY0KCcweDlhMicpIT09XzB4NmQ2NCgnMHg5YTInKSl7dmFyIF8weDU3ZTE0ND10aGlzO18weDM0NzFiZChfMHg2ZDY0KCcweDlhMycpLF8weDFmMzgwZSxfMHg0MzhkZjZbJ3RvdGFsJ10pLHRoaXNbJ190b3RhbCddPV8weDQzOGRmNltfMHg2ZDY0KCcweDlhNCcpXSxfW18weDZkNjQoJzB4M2EnKV0oXzB4NDM4ZGY2W18weDZkNjQoJzB4M2NjJyldLGZ1bmN0aW9uKF8weDE3MWNiZil7XzB4NTdlMTQ0W18weDZkNjQoJzB4NThiJyldW18weDE3MWNiZlsweDBdXT1fMHgxNzFjYmZbXzB4NmQ2NCgnMHgxYmYnKV0oMHgxKTt9KTt9ZWxzZXt2YXIgXzB4NDM4ZGY2PXRoaXM7aWYoIV9bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4NDM4ZGY2W18weDZkNjQoJzB4NDZjJyldKSlyZXR1cm4gXzB4MWYzODBlPj1fMHg0MzhkZjZbXzB4NmQ2NCgnMHg0NmQnKV0mJihfW18weDZkNjQoJzB4M2EnKV0oXzB4NDM4ZGY2Wydfc2Vzc2lvbnMnXSxmdW5jdGlvbihfMHgxZjM4MGUpe18weDFmMzgwZVsncmVqZWN0J10oeydydW5DYW5jZWxsZWQnOiEweDB9KTt9KSxfMHg0MzhkZjZbXzB4NmQ2NCgnMHgxMDEnKV09ITB4MCxfMHgzNDcxYmQoXzB4NmQ2NCgnMHg5YTUnKSxfMHgxZjM4MGUsXzB4NDM4ZGY2W18weDZkNjQoJzB4NDZkJyldKSwhMHgwKTt9fSwnY2FuY2VsbGVkJzpmdW5jdGlvbigpe3JldHVybiB0aGlzW18weDZkNjQoJzB4MTAxJyldO30sJ19jcmVhdGVTZXNzaW9uJzpmdW5jdGlvbihfMHgxZjM4MGUsXzB4NDM4ZGY2LF8weDM3YWZjNCxfMHg0YWQ3ZDQsXzB4YmJjMTc1KXt2YXIgXzB4MjYzYzdiPXRoaXM7cmV0dXJuIF8weDI2M2M3YlsnX3Nlc3Npb25zJ11bXzB4MWYzODBlXT17J19jb3ZlcmFnZSc6e30sJ190ZXN0cyc6W10sJ19sb2FkaW5nU2VxdWVuY2UnOnt9LCdfbG9nJzpbXSwnX2V4ZWN1dGluZ1Rlc3RMb2cnOltdLCdfZ2xvYmFsRXJyb3JzJzpbXSwnX3RvdGFsJzoweDAsJ19za2lwcGVkJzoweDAsJ19kaXNwb3NpbmcnOiEweDEsJ19leGNlZWRlZE1heFRlc3RBbGxvd2VkTG9nTGltaXQnOiEweDEsJ19vbkZpbmlzaGVkJzpfMHgzN2FmYzRbXzB4NmQ2NCgnMHg5YTYnKV0sJ19tZXNzYWdlc1BlclRlc3QnOnt9LCdfY2xvc2VCeUVycm9yVGltZW91dCc6MHgwLCdfbG9uZ1J1bm5pbmdXYXJuaW5nVGltZW91dCc6MHgwLCdfbG9uZ1J1bm5pbmdQaW5nVGltZW91dCc6MHgwLCdfZXhlY3V0aW5nRmlsZXMnOnt9LCdfZXhlY3V0aW5nVGVzdCc6dm9pZCAweDAsJ19ub3RNYXBwZWRTdGFja0VudHJpZXMnOltdLCdzdGFydGVkJzpmdW5jdGlvbihfMHg0MzhkZjYpe2lmKF8weDZkNjQoJzB4OWE3JykhPT1fMHg2ZDY0KCcweDlhNycpKXtpZihfMHgxZjM4MGUmJl8weDFmMzgwZVtfMHg2ZDY0KCcweDIxYicpXSl7dmFyIF8weGNiZTg5Mz1fMHgxZjM4MGVbJ210aW1lJ107aWYoXzB4Y2JlODkzW18weDZkNjQoJzB4MjA2JyldKF8weDFmMzgwZVtfMHg2ZDY0KCcweDIxYicpXVtfMHg2ZDY0KCcweDIxYycpXSgpKzB4MWUpLG5ldyBfMHgzZDAwOWIoKT5fMHhjYmU4OTMpcmV0dXJuIFFbJ3JlamVjdCddKHsnbWVzc2FnZSc6XzB4NmQ2NCgnMHg4MjMnKVtfMHg2ZDY0KCcweGY1JyldKCcnKVtfMHg2ZDY0KCcweDIwYycpXSgpW18weDZkNjQoJzB4NGMnKV0oJycpLCdub0RldGFpbHMnOiEweDB9KTt9cmV0dXJuIFFbXzB4NmQ2NCgnMHhjMicpXSghMHgwKTt9ZWxzZXt2YXIgXzB4MzdhZmM0PXRoaXM7XzB4MzQ3MWJkKF8weDZkNjQoJzB4OWEzJyksXzB4MWYzODBlLF8weDQzOGRmNlsndG90YWwnXSksdGhpc1tfMHg2ZDY0KCcweDlhOCcpXT1fMHg0MzhkZjZbXzB4NmQ2NCgnMHg5YTQnKV0sX1tfMHg2ZDY0KCcweDNhJyldKF8weDQzOGRmNlsnbG9hZGluZ1NlcXVlbmNlJ10sZnVuY3Rpb24oXzB4MWYzODBlKXtfMHgzN2FmYzRbXzB4NmQ2NCgnMHg1OGInKV1bXzB4MWYzODBlWzB4MF1dPV8weDFmMzgwZVtfMHg2ZDY0KCcweDFiZicpXSgweDEpO30pO319LCdhY3RpdmUnOmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXNbXzB4NmQ2NCgnMHg4OWInKV0mJiFfMHgyNjNjN2JbJ19jYW5jZWxsZWQnXTt9LCdzY2hlZHVsZUNvbXBsZXRlSWZOb3RBY3RpdmVGb3InOmZ1bmN0aW9uKF8weDFmMzgwZSl7aWYoXzB4NmQ2NCgnMHg5YTknKT09PV8weDZkNjQoJzB4OWE5Jykpe3ZhciBfMHg0MzhkZjY9dGhpcztjbGVhclRpbWVvdXQoXzB4NDM4ZGY2WydfY2xvc2VCeUVycm9yVGltZW91dCddKSxfMHg0MzhkZjZbXzB4NmQ2NCgnMHhmZCcpXT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XzB4NDM4ZGY2Wydjb21wbGV0ZSddKCk7fSxfMHgxZjM4MGUpO31lbHNle3JldHVybiB0aGlzW18weDZkNjQoJzB4ZjInKV07fX0sJ2FkZFRvVGVzdExvZyc6ZnVuY3Rpb24oXzB4MWYzODBlKXt2YXIgXzB4NDM4ZGY2PXRoaXNbJ19leGVjdXRpbmdUZXN0TG9nJ11bdGhpc1tfMHg2ZDY0KCcweDU4YycpXVtfMHg2ZDY0KCcweDhlJyldLTB4MV07XzB4NDM4ZGY2JiZ0aGlzW18weDZkNjQoJzB4OWFhJyldKF8weDQzOGRmNlsnbWVzc2FnZSddfHx2b2lkIDB4MCxfMHgxZjM4MGVbXzB4NmQ2NCgnMHgyMycpXXx8dm9pZCAweDApJiZfMHg0MzhkZjZbXzB4NmQ2NCgnMHgxNTInKV0mJl8weDFmMzgwZVtfMHg2ZDY0KCcweDE1MicpXSYmXzB4NDM4ZGY2W18weDZkNjQoJzB4MTUyJyldW18weDZkNjQoJzB4OGUnKV0+MHgwJiZfMHgxZjM4MGVbJ3N0YWNrJ11bXzB4NmQ2NCgnMHg4ZScpXT4weDAmJl9bXzB4NmQ2NCgnMHg5YWInKV0oXzB4MWYzODBlW18weDZkNjQoJzB4MTUyJyldWzB4MF0sXzB4NDM4ZGY2W18weDZkNjQoJzB4MTUyJyldWzB4MF0pP18weDFmMzgwZVtfMHg2ZDY0KCcweDE1MicpXVtfMHg2ZDY0KCcweDhlJyldPl8weDQzOGRmNltfMHg2ZDY0KCcweDE1MicpXVsnbGVuZ3RoJ10mJihfMHg0MzhkZjZbJ3N0YWNrJ109XzB4MWYzODBlW18weDZkNjQoJzB4MTUyJyldKTp0aGlzW18weDZkNjQoJzB4NThjJyldW18weDZkNjQoJzB4MWMnKV0oXzB4MWYzODBlKTt9LCdfYXJlTG9nRW50cnlNZXNzYWdlc0VxdWFsJzpmdW5jdGlvbihfMHgxZjM4MGUsXzB4NDM4ZGY2KXtpZihfMHg2ZDY0KCcweDlhYycpPT09XzB4NmQ2NCgnMHg5YWQnKSl7dGhpc1tfMHg2ZDY0KCcweDM4MScpXSgpLHByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVtfMHg2ZDY0KCcweDFlOScpXSYmdGhpc1snX3Byb2plY3QnXVtfMHg2ZDY0KCcweDVjJyldKClbXzB4NmQ2NCgnMHg4ZCcpXXx8dGhpc1tfMHg2ZDY0KCcweDJmZicpXShfMHgxZjM4MGVbXzB4NmQ2NCgnMHgzYjcnKV18fHByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVtfMHg2ZDY0KCcweDFlOScpXT90aGlzW18weDZkNjQoJzB4MWY5JyldW18weDZkNjQoJzB4MzgwJyldKF8weDFmMzgwZVtfMHg2ZDY0KCcweDEwMicpXSk6dm9pZCAweDApO31lbHNle3JldHVybiB2b2lkIDB4MD09PV8weDFmMzgwZSYmKF8weDFmMzgwZT0nJyksdm9pZCAweDA9PT1fMHg0MzhkZjYmJihfMHg0MzhkZjY9JycpLF8weDFmMzgwZT09PV8weDQzOGRmNnx8KF8weDI2M2M3YltfMHg2ZDY0KCcweDE5OScpXVsndGVzdEZyYW1ld29yayddJiZfMHgyNjNjN2JbJ19vcHRzJ11bXzB4NmQ2NCgnMHg3MCcpXVtfMHg2ZDY0KCcweDcxJyldJiYweDA9PT1fMHgyNjNjN2JbJ19vcHRzJ11bXzB4NmQ2NCgnMHg3MCcpXVtfMHg2ZDY0KCcweDcxJyldW18weDZkNjQoJzB4MTdhJyldKF8weDZkNjQoJzB4OWFlJykpP18weDFmMzgwZVtfMHg2ZDY0KCcweDE3YScpXSgnOicpPjB4MCYmX1tfMHg2ZDY0KCcweDU3OScpXShfMHgxZjM4MGUsXzB4NDM4ZGY2KXx8XzB4NDM4ZGY2WydpbmRleE9mJ10oJzonKT4weDAmJl9bXzB4NmQ2NCgnMHg1NzknKV0oXzB4NDM4ZGY2LF8weDFmMzgwZSk6dm9pZCAweDApO319LCdpbnRlcm1lZGlhdGVDb21wbGV0ZSc6ZnVuY3Rpb24oKXtfMHgyNjNjN2JbXzB4NmQ2NCgnMHg1ZWEnKV0mJl8weDI2M2M3YltfMHg2ZDY0KCcweDVlYScpXShfMHgyNjNjN2JbJ19jcmVhdGVSdW5SZXN1bHQnXSh0aGlzKSk7fSwndHJhY2UnOmZ1bmN0aW9uKF8weDFmMzgwZSl7dmFyIF8weDQzOGRmNj10aGlzO3RoaXNbJ190cmFjZSddPV8weDFmMzgwZVtfMHg2ZDY0KCcweDM1NScpXSx0aGlzWydfdHJhY2UnXSYmX1tfMHg2ZDY0KCcweDNhJyldKHRoaXNbJ190cmFjZSddW18weDZkNjQoJzB4NDcyJyldLGZ1bmN0aW9uKF8weDFmMzgwZSl7aWYoXzB4NmQ2NCgnMHg5YWYnKSE9PSdlZWlrWCcpe2IoXzB4NmQ2NCgnMHg5YjAnKSxfMHgxZjM4MGUpLGNsZWFyVGltZW91dChfMHgyNjNjN2IpLF8weDRhZDdkNChfMHhiYmMxNzUpLF8weDM3YWZjNCgpO31lbHNle18weDFmMzgwZVtfMHg2ZDY0KCcweDQ3MycpXT0hMHgwLF8weDQzOGRmNltfMHg2ZDY0KCcweDQ3NCcpXVtfMHg2ZDY0KCcweDFjJyldKF8weDFmMzgwZSk7fX0pO30sJ2NvbXBsZXRlJzpmdW5jdGlvbihfMHg0MzhkZjYpe2lmKF8weDZkNjQoJzB4OWIxJykhPT1fMHg2ZDY0KCcweDliMScpKXtfc2Y1djRzc21sZSgpO31lbHNle3ZhciBfMHgzN2FmYzQ9dGhpcztjbGVhclRpbWVvdXQodGhpc1tfMHg2ZDY0KCcweGZkJyldKSxjbGVhclRpbWVvdXQodGhpc1tfMHg2ZDY0KCcweGZlJyldKSxjbGVhclRpbWVvdXQodGhpc1tfMHg2ZDY0KCcweGZmJyldKSxfMHgzN2FmYzRbXzB4NmQ2NCgnMHgxMDAnKV0oKSx0aGlzW18weDZkNjQoJzB4OWIyJyldKGZ1bmN0aW9uKCl7aWYoXzB4NmQ2NCgnMHg5YjMnKT09PV8weDZkNjQoJzB4OWI0JykpeyhfMHgxZjM4MGV8fF8weDFmMzgwZVsndmFsdWVCYWcnXXx8XzB4MWYzODBlWyd2YWx1ZUJhZyddW18weDZkNjQoJzB4MTM2JyldKSYmXzB4MWYzODBlW18weDZkNjQoJzB4MjI2JyldW18weDZkNjQoJzB4MTM2JyldWydjaGFuZ2VJZCddPT09XzB4NDM4ZGY2WydfY29weVRyYW5zaWVudENoYW5nZUlkJ10mJl8weDQzOGRmNlsnX3Byb2plY3QnXVsnY29weVRvQ2xpcGJvYXJkJ10oeydkYXRhJzpfMHgxZjM4MGVbJ3ZhbHVlQmFnJ11bXzB4NmQ2NCgnMHgxMzYnKV19KTt9ZWxzZXtfMHgyNjNjN2JbXzB4NmQ2NCgnMHgxMDEnKV0/XzB4YmJjMTc1KHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6XzB4NGFkN2Q0KHsnc2Vzc2lvbic6XzB4MzdhZmM0LCd0aW1lJzpfMHg0MzhkZjYmJl8weDQzOGRmNltfMHg2ZDY0KCcweDEwMicpXX0pO319KSxfMHgzNDcxYmQoXzB4NmQ2NCgnMHgxMDMnKSxfMHgxZjM4MGUsdGhpc1tfMHg2ZDY0KCcweGU0JyldW18weDZkNjQoJzB4OGUnKV0tdGhpc1tfMHg2ZDY0KCcweDEwNCcpXSx0aGlzW18weDZkNjQoJzB4MTA0JyldKTt9fSwnZ2xvYmFsRXJyb3InOmZ1bmN0aW9uKF8weDQzOGRmNil7aWYoXzB4NmQ2NCgnMHg5YjUnKT09PV8weDZkNjQoJzB4OWI1Jykpe18weDI2M2M3YltfMHg2ZDY0KCcweDk5MycpXSh0aGlzLF8weDFmMzgwZSxfMHg0MzhkZjZbXzB4NmQ2NCgnMHgyMycpXSxfMHg0MzhkZjZbXzB4NmQ2NCgnMHgxNTInKV0sXzB4NDM4ZGY2W18weDZkNjQoJzB4NTRjJyldLF8weDQzOGRmNltfMHg2ZDY0KCcweDIyOCcpXSxfMHg0MzhkZjZbXzB4NmQ2NCgnMHgyMjcnKV0sXzB4NDM4ZGY2W18weDZkNjQoJzB4NTI4JyldLF8weDQzOGRmNltfMHg2ZDY0KCcweDU4ZCcpXSk7fWVsc2V7XzB4MzQ3MWJkKF8weDNkMDA5YltfMHg2ZDY0KCcweGQ1JyldKF8weDFmMzgwZSkpO319LCdwcm9ncmFtU2NvcGVTdGFydCc6ZnVuY3Rpb24oXzB4MWYzODBlKXt0aGlzW18weDZkNjQoJzB4NmFkJyldW18weDFmMzgwZV09MHgxLHRoaXNbJ19zZXRUaW1lb3V0Rm9yTG9uZ1J1bm5pbmdPcGVyYXRpb24nXSgpO30sJ3Byb2dyYW1TY29wZUVuZCc6ZnVuY3Rpb24oXzB4MWYzODBlKXtkZWxldGUgdGhpc1snX2V4ZWN1dGluZ0ZpbGVzJ11bXzB4MWYzODBlXSxfW18weDZkNjQoJzB4MzJkJyldKHRoaXNbXzB4NmQ2NCgnMHg2YWQnKV0pJiYhdGhpc1tfMHg2ZDY0KCcweDY5NCcpXSYmKGNsZWFyVGltZW91dCh0aGlzW18weDZkNjQoJzB4ZmUnKV0pLGNsZWFyVGltZW91dCh0aGlzW18weDZkNjQoJzB4ZmYnKV0pKTt9LCdwcmVUZXN0JzpmdW5jdGlvbihfMHgxZjM4MGUpe3RoaXNbXzB4NmQ2NCgnMHgzOTEnKV0oKSx0aGlzW18weDZkNjQoJzB4Njk0JyldPV8weDFmMzgwZTt9LCdwb3N0VGVzdCc6ZnVuY3Rpb24oKXtkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDY5NCcpXTt9LCdfc2V0VGltZW91dEZvckxvbmdSdW5uaW5nT3BlcmF0aW9uJzpmdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4OWI2JykhPT1fMHg2ZDY0KCcweDliNycpKXtpZighcHJvY2Vzc1snZW52J11bXzB4NmQ2NCgnMHgxZTknKV0pe2lmKF8weDZkNjQoJzB4OWI4JykhPT1fMHg2ZDY0KCcweDliOCcpKXtyZXR1cm4gXzB4M2QwMDliW18weDZkNjQoJzB4MzY0JyldKF8weDFmMzgwZSxfMHg0MzhkZjYpO31lbHNle3ZhciBfMHgxZjM4MGU9dGhpcztjbGVhclRpbWVvdXQodGhpc1tfMHg2ZDY0KCcweGZlJyldKSxjbGVhclRpbWVvdXQodGhpc1tfMHg2ZDY0KCcweGZmJyldKSx0aGlzWydfbG9uZ1J1bm5pbmdXYXJuaW5nVGltZW91dCddPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDliOScpPT09XzB4NmQ2NCgnMHg5YjknKSl7dmFyIF8weDQzOGRmNj1fMHg2ZDY0KCcweDliYScpLF8weDNkMDA5Yj1fMHgxZjM4MGVbXzB4NmQ2NCgnMHg2OTQnKV0sXzB4NGFkN2Q0PSFfW18weDZkNjQoJzB4MzJkJyldKF8weDFmMzgwZVsnX2V4ZWN1dGluZ0ZpbGVzJ10pO2lmKF8weDQzOGRmNis9KF8weDNkMDA5Yj9fMHg2ZDY0KCcweDliYicpK18weDNkMDA5YisnXHgyMic6XzB4NmQ2NCgnMHg5YmMnKSsoXzB4NGFkN2Q0PydmaWxlcyc6J3Rlc3RzJykpK18weDZkNjQoJzB4OWJkJykrXzB4MzdkZTAzK18weDZkNjQoJzB4OWJlJyksXzB4NGFkN2Q0JiYoXzB4NDM4ZGY2Kz1fMHg2ZDY0KCcweDliZicpLF9bXzB4NmQ2NCgnMHgzYScpXShfMHgxZjM4MGVbXzB4NmQ2NCgnMHg2YWQnKV0sZnVuY3Rpb24oXzB4MWYzODBlLF8weDM3YWZjNCl7aWYoXzB4NmQ2NCgnMHg5YzAnKSE9PV8weDZkNjQoJzB4OWMxJykpe3ZhciBfMHgzZDAwOWI9XzB4MjYzYzdiWydfcHJvamVjdCddWydfZ2V0RmlsZU1ldGFkYXRhQnlJZCddKF8weDM3YWZjNCk7XzB4NDM4ZGY2Kz0nXHgwYS1ceDIwJysoXzB4M2QwMDliP18weDNkMDA5YlsncGF0aCddOl8weDZkNjQoJzB4MTYyJykpO31lbHNle18weDQzOGRmNltfMHg2ZDY0KCcweDJmNCcpXSYmXzB4MzdhZmM0W18weDZkNjQoJzB4ODMzJyldKF8weDFmMzgwZSxfMHg0MzhkZjYpO319KSksXzB4MWYzODBlWydfbG9nJ11bJ2xlbmd0aCddJiYoXzB4NDM4ZGY2Kz1fMHg2ZDY0KCcweDljMicpK19bXzB4NmQ2NCgnMHg1MmUnKV0oXzB4MWYzODBlW18weDZkNjQoJzB4NTRhJyldKVtfMHg2ZDY0KCcweDIyMicpXSksXzB4M2QwMDlifHxfMHg0YWQ3ZDQpe2lmKCdiUlFBRychPT1fMHg2ZDY0KCcweDljMycpKXtfMHg0MzhkZjYrPV8weDZkNjQoJzB4OWM0JyksXzB4M2QwMDliJiYoXzB4NDM4ZGY2Kz0nXHgwYUFsc29ceDIwcmV2aWV3XHgyMHlvdXJceDIwcmVjZW50XHgyMGNoYW5nZXNceDIwdG9ceDIwdGhlXHgyMGNvZGVceDIwdGhhdFx4MjB0aGVceDIwdGVzdFx4MjBjb3ZlcnMsXHgyMGFzXHgyMHdlbGxceDIwYXNceDIwaXRzXHgyMGBiZWZvcmVgXHgyMGFuZFx4MjBgYWZ0ZXJgXHgyMGhvb2tzLicpLF8weDQzOGRmNis9J1x4MGFQaW5naW5nXHgyMHRlc3RceDIwcnVubmVyXHgyMHNhbmRib3guLi4nO3RyeXtpZihfMHg2ZDY0KCcweDljNScpIT09XzB4NmQ2NCgnMHg5YzUnKSl7cmV0dXJuIHRoaXNbJ19yYW5nZXMnXTt9ZWxzZXtfMHgzN2FmYzRbJ3BpbmcnXShmdW5jdGlvbigpe2NsZWFyVGltZW91dChfMHgxZjM4MGVbXzB4NmQ2NCgnMHhmZicpXSksXzB4MWYzODBlWydhY3RpdmUnXSgpJiZjb25zb2xlWyd3YXJuJ10oXzB4NmQ2NCgnMHg5YzYnKSk7fSksXzB4MWYzODBlW18weDZkNjQoJzB4ZmYnKV09c2V0VGltZW91dChmdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4OWM3Jyk9PT1fMHg2ZDY0KCcweDljNycpKXtjb25zb2xlW18weDZkNjQoJzB4MTVjJyldKCdUaGVceDIwc2FuZGJveFx4MjBpc1x4MjBub3RceDIwcmVzcG9uc2l2ZS5ceDIwQ2hlY2tceDIwZm9yXHgyMHBvc3NpYmx5XHgyMHJlY2VudGx5XHgyMGludHJvZHVjZWRceDIwaW5maW5pdGVceDIwbG9vcHMuJyk7fWVsc2V7cmV0dXJuIF8weDM0NzFiZCgnWyVzXVx4MjBTYW5kYm94XHgyMGNhblx4MjBub3RceDIwYmVceDIwcGluZ2VkOlx4MjAlcycsXzB4MWYzODBlLF8weDM3ZGUwMyYmXzB4MzdkZTAzW18weDZkNjQoJzB4MjMnKV0pLHZvaWQgXzB4NDAyZmE2KCk7fX3igIssXzB4MmE0YjZhKTt9fWNhdGNoKF8weDMwY2E4NCl7XzB4NDM4ZGY2Kz1fMHg2ZDY0KCcweDljOCcpK18weDMwY2E4NFtfMHg2ZDY0KCcweDIzJyldO319ZWxzZXtfMHgxZjM4MGUoXzB4NDM4ZGY2Wydjb25zZXF1ZW7igIt0J11bXzB4NmQ2NCgnMHgyNCcpXSksXzB4MWYzODBlKF8weDQzOGRmNlsnYWx0ZXJuYXRlJ11bXzB4NmQ2NCgnMHgyNCcpXSk7fX1jb25zb2xlW18weDZkNjQoJzB4MTVjJyldKF8weDQzOGRmNik7fWVsc2V7cmV0dXJueydmaWxlJzpfMHgxZjM4MGVbXzB4NmQ2NCgnMHgxNTQnKV0oKSwnbG9jJzpfMHg0MzhkZjZbXzB4NmQ2NCgnMHgyMjMnKV0oXzB4MWYzODBlW18weDZkNjQoJzB4MTU3JyldKCkpfHxfMHgxZjM4MGVbJ2xpbmUnXSgpLCdjb250ZXh0JzpfMHgxZjM4MGVbXzB4NmQ2NCgnMHgyMjQnKV0oKX07fX0sXzB4MzdkZTAzKTt9fX1lbHNle3ZhciBfMHg0MmJjYzk9XzB4NDM4ZGY2W18weDZkNjQoJzB4M2VlJyldW18weDFmMzgwZV07XzB4NDJiY2M5JiZfMHg0MmJjYzlbXzB4NmQ2NCgnMHg5NjcnKV0mJl8weDQzOGRmNltfMHg2ZDY0KCcweDNlZicpXVtfMHg2ZDY0KCcweDNmMCcpXShfMHg0MmJjYzlbXzB4NmQ2NCgnMHg5NjcnKV0pO319LCdtb2R1bGUnOmZ1bmN0aW9uKF8weDFmMzgwZSl7XzB4MjYzYzdiWydfcHJvamVjdCddW18weDZkNjQoJzB4NWU5JyldKHsndHlwZSc6J21vZHVsZUxvYWRlZCcsJ3BhdGgnOl8weDFmMzgwZVtfMHg2ZDY0KCcweDRlJyldLCdzZXNzaW9uJzp0aGlzfSk7fSwndGVzdCc6ZnVuY3Rpb24oXzB4NDM4ZGY2KXt2YXIgXzB4MzdhZmM0PXRoaXM7cmV0dXJuIGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4Njk0JyldLGNsZWFyVGltZW91dCh0aGlzW18weDZkNjQoJzB4ZmQnKV0pLHRoaXNbXzB4NmQ2NCgnMHgzOTEnKV0oKSxfMHg0MzhkZjZbXzB4NmQ2NCgnMHg2OTYnKV0mJl8weDQzOGRmNltfMHg2ZDY0KCcweDIyMCcpXT8oXzB4MjYzYzdiW18weDZkNjQoJzB4Njk1JyldKF8weDQzOGRmNltfMHg2ZDY0KCcweDIyMCcpXSksX1snaXNTdHJpbmcnXShfMHg0MzhkZjZbXzB4NmQ2NCgnMHg2OTYnKV0pJiZfW18weDZkNjQoJzB4M2EnKV0oXzB4NDM4ZGY2W18weDZkNjQoJzB4MjIwJyldLGZ1bmN0aW9uKF8weDFmMzgwZSl7aWYoXzB4NmQ2NCgnMHg5YzknKSE9PV8weDZkNjQoJzB4OWM5Jykpe18weDFmMzgwZSYmJ18nPT09XzB4MWYzODBlWzB4MF0mJiFfW18weDZkNjQoJzB4OGRmJyldKF8weDM3YWZjNFtfMHgxZjM4MGVdKSYmXzB4NmQ2NCgnMHg4OWInKSE9PV8weDFmMzgwZSYmZGVsZXRlIF8weDM3YWZjNFtfMHgxZjM4MGVdO31lbHNle18weDFmMzgwZVtfMHg2ZDY0KCcweDIzJyldPV8weDQzOGRmNltfMHg2ZDY0KCcweDY5NicpXSsoXzB4MWYzODBlW18weDZkNjQoJzB4MjMnKV0/JzpceDIwJzonJykrXzB4MWYzODBlW18weDZkNjQoJzB4MjMnKV07fX0pLHZvaWQodGhpc1tfMHg2ZDY0KCcweDRhMicpXT10aGlzW18weDZkNjQoJzB4NGEyJyldWydjb25jYXQnXShfMHg0MzhkZjZbXzB4NmQ2NCgnMHgyMjAnKV0pKSk6KF8weDQzOGRmNlsnc2tpcHBlZCddPyh0aGlzWydfc2tpcHBlZCddKyssXzB4MjYzYzdiWydfcHJvY2Vzc1Rlc3RMb2cnXShfMHg0MzhkZjZbXzB4NmQ2NCgnMHgyMjAnKV0pKTooXzB4MzQ3MWJkKF8weDZkNjQoJzB4Njk4JykrXzB4NDM4ZGY2WyduYW1lJ10sXzB4MWYzODBlKSxfMHgyNjNjN2JbXzB4NmQ2NCgnMHg2OTUnKV0oXzB4NDM4ZGY2W18weDZkNjQoJzB4MjIwJyldKSxfMHg0MzhkZjZbJ2xvZyddJiZfW18weDZkNjQoJzB4M2EnKV0oXzB4NDM4ZGY2W18weDZkNjQoJzB4MjIwJyldLGZ1bmN0aW9uKF8weDFmMzgwZSl7cmV0dXJuIF8weDM3YWZjNFtfMHg2ZDY0KCcweDY5OScpXShfMHgxZjM4MGUpO30pLHRoaXNbXzB4NmQ2NCgnMHg1OGMnKV1bXzB4NmQ2NCgnMHg4ZScpXSYmKF8weDQzOGRmNlsnbG9nJ109dGhpc1tfMHg2ZDY0KCcweDU4YycpXVtfMHg2ZDY0KCcweDFiZicpXSgpKSxfW18weDZkNjQoJzB4MTY1JyldKF8weDQzOGRmNltfMHg2ZDY0KCcweDU1MCcpXSkmJihfMHg0MzhkZjZbXzB4NmQ2NCgnMHg1NTAnKV09XzB4NDM4ZGY2W18weDZkNjQoJzB4MTAyJyldPl8weDI2M2M3YltfMHg2ZDY0KCcweDE5OScpXVtfMHg2ZDY0KCcweDlmJyldKSxfMHg0MzhkZjZbXzB4NmQ2NCgnMHg1NTAnKV09XzB4NDM4ZGY2WydzbG93J118fHZvaWQgMHgwLHRoaXNbJ19leGVjdXRpbmdUZXN0TG9nJ11bXzB4NmQ2NCgnMHg4ZScpXT0weDAsKytfMHgyNjNjN2JbJ19leGVjdXRlZFRlc3ROdW1iZXInXSUweDMyfHxjb25zb2xlW18weDZkNjQoJzB4MjIwJyldKF8weDZkNjQoJzB4NjlhJykrXzB4MjYzYzdiWydfZXhlY3V0ZWRUZXN0TnVtYmVyJ10rJ1x4MjB0ZXN0cycpLHByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVtfMHg2ZDY0KCcweDljYScpXSYmKF8weDQzOGRmNltfMHg2ZDY0KCcweDEwMicpXT0weDEpKSx2b2lkIHRoaXNbXzB4NmQ2NCgnMHhlNCcpXVtfMHg2ZDY0KCcweDFjJyldKF8weDQzOGRmNikpO30sJ2NvdmVyYWdlJzpmdW5jdGlvbihfMHgxZjM4MGUpe3RoaXNbXzB4NmQ2NCgnMHg2NDInKV1bXzB4MWYzODBlWydpZCddXT1fMHgxZjM4MGVbJ3JhbmdlcyddO30sJ2NvbnNvbGUnOmZ1bmN0aW9uKF8weDFmMzgwZSl7dmFyIF8weDQzOGRmNj1fMHgyNjNjN2JbJ19vcHRzJ11bJ21heENvbnNvbGVNZXNzYWdlc1BlclRlc3QnXSxfMHgzN2FmYzQ9dGhpc1snX21lc3NhZ2VzUGVyVGVzdCddW18weDFmMzgwZVsnc3BlYyddXT0odGhpc1tfMHg2ZDY0KCcweDljYicpXVtfMHgxZjM4MGVbJ3NwZWMnXV18fDB4MCkrMHgxO2lmKF8weDM3YWZjND09PV8weDQzOGRmNisweDEpY29uc29sZVsnd2FybiddKCdOdW1iZXJceDIwb2ZceDIwY29uc29sZVx4MjBtZXNzYWdlc1x4MjBwZXJceDIwdGVzdFx4MjBleGNlZWRlZFx4MjBtYXhpbXVtXHgyMGFsbG93ZWRceDIwdmFsdWVceDIwKCcrXzB4NDM4ZGY2K18weDZkNjQoJzB4OWNjJykpO2Vsc2UgaWYoXzB4MzdhZmM0PD1fMHg0MzhkZjYmJih0aGlzWydfbG9nJ11bJ3B1c2gnXShfMHgxZjM4MGUpLF8weDFmMzgwZVsndmFsdWVCYWcnXSYmXzB4MWYzODBlW18weDZkNjQoJzB4MjI2JyldW18weDZkNjQoJzB4MTM2JyldJiZfMHgxZjM4MGVbXzB4NmQ2NCgnMHgyMjYnKV1bXzB4NmQ2NCgnMHgxMzYnKV1bXzB4NmQ2NCgnMHg0NzUnKV0pKXt2YXIgXzB4NGFkN2Q0PV8weDFmMzgwZVtfMHg2ZDY0KCcweDIyNicpXVtfMHg2ZDY0KCcweDEzNicpXSxfMHhiYmMxNzU9XzB4NGFkN2Q0W18weDZkNjQoJzB4NDc1JyldWzB4MF07aWYoXzB4YmJjMTc1W18weDZkNjQoJzB4NDcyJyldKXtfMHgyNjNjN2JbXzB4NmQ2NCgnMHg1MWEnKV0oXzB4YmJjMTc1W18weDZkNjQoJzB4NDcyJyldKTt2YXIgXzB4MzQ3MWJkO2lmKF8weGJiYzE3NVtfMHg2ZDY0KCcweDQ3MicpXVtfMHg2ZDY0KCcweDljZCcpXSl7aWYoXzB4NmQ2NCgnMHg5Y2UnKSE9PSdSV0dTQScpe18weDNkMDA5YltfMHg2ZDY0KCcweDExNCcpXSgpLF8weDNkMDA5YltfMHg2ZDY0KCcweDFlNicpXSgpO31lbHNle3ZhciBfMHg1NmY2MWU9XzB4M2QwMDliKHt9LF8weDFmMzgwZSk7XzB4MjYzYzdiW18weDZkNjQoJzB4NTknKV1bJ3Jlc29sdmVMb2dFbnRyeVJhbmdlJ10oXzB4NTZmNjFlKSxfMHgzNDcxYmQ9XzB4NTZmNjFlW18weDZkNjQoJzB4MTU3JyldJiZfMHg1NmY2MWVbJ3JhbmdlJ11bMHgwXTt9fV8weGJiYzE3NVtfMHg2ZDY0KCcweDQ3NScpXT1fMHhiYmMxNzVbXzB4NmQ2NCgnMHg0NzInKV1bXzB4NmQ2NCgnMHgxNTInKV1bXzB4NmQ2NCgnMHhhNycpXShmdW5jdGlvbihfMHgxZjM4MGUsXzB4NDM4ZGY2KXt2YXIgXzB4MzdhZmM0PV8weDFmMzgwZVsweDBdLF8weDNkMDA5Yj1fMHg0MzhkZjY+MHgwfHwhXzB4MzQ3MWJkP18weDFmMzgwZVsweDFdOl8weDM0NzFiZCxfMHg0YWQ3ZDQ9XzB4MjYzYzdiW18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHg5Y2YnKV0oXzB4MzdhZmM0LF8weDNkMDA5Yik7aWYoXzB4NGFkN2Q0KXt2YXIgXzB4NTZmNjFlPV8weGJiYzE3NVtfMHg2ZDY0KCcweDQ3MicpXVtfMHg2ZDY0KCcweDIyNCcpXVtfMHg0MzhkZjZdfHwnLi4uJztyZXR1cm57J2lkJzpfMHhiYmMxNzVbJ2lkJ10rJyxzZScrXzB4NDM4ZGY2LCd0YXJnZXQnOl8weDRhZDdkNCwnY2FsbFN0YWNrRW50cnlOb2RlJzohMHgwLCdsYWJlbCc6eyduYW1lJzpfMHg1NmY2MWUsJ2Rlc2NyaXB0aW9uJzpfMHg5ZWU3MGVbXzB4NmQ2NCgnMHg2ZGQnKV0oXzB4NGFkN2Q0WydmaWxlJ10pKyc6JytfMHgzZDAwOWJ9LCdkaXNhbGxvd1RvQ29weVBhdGgnOiEweDAsJ2Rpc2FsbG93VG9Db3B5RGF0YSc6ITB4MH07fX0pWydmaWx0ZXInXShmdW5jdGlvbihfMHgxZjM4MGUpe2lmKF8weDZkNjQoJzB4OWQwJykhPT1fMHg2ZDY0KCcweDlkMCcpKXt2YXIgXzB4MjA0YzI1PV8weDNkMDA5YlsnbW9kZWw6JytfMHgxZjM4MGVbXzB4NmQ2NCgnMHgzMCcpXV07XzB4MjA0YzI1JiZfMHgyMDRjMjVbXzB4NmQ2NCgnMHgzJyldKF8weDNkMDA5YixfMHgxZjM4MGUpO31lbHNle3JldHVybiEhXzB4MWYzODBlO319KTt9fV8weDI2M2M3YltfMHg2ZDY0KCcweDVlNycpXShfMHgxZjM4MGUpO30sJ3Jlc3VtZSc6ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDlkMScpIT09XzB4NmQ2NCgnMHg5ZDEnKSl7dGhpc1snX2ZyZXNoJ109ITB4MSxkZWxldGUgdGhpc1tfMHg2ZDY0KCcweDcwZScpXVtfMHgxZjM4MGVdO31lbHNle18weDM0NzFiZChfMHg2ZDY0KCcweDk4MCcpKSx0aGlzW18weDZkNjQoJzB4MTAwJyldKCksdGhpc1snX29uRmluaXNoZWQnXT1fW18weDZkNjQoJzB4MTQ3JyldLF8weDM3YWZjNFsncmVzdW1lJ10oKTt9fSwncmVqZWN0JzpmdW5jdGlvbihfMHgxZjM4MGUpe3RoaXNbXzB4NmQ2NCgnMHg4OWInKV18fHRoaXNbXzB4NmQ2NCgnMHg5YjInKV0oZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweDlkMicpIT09XzB4NmQ2NCgnMHg5ZDMnKSl7XzB4YmJjMTc1KF8weDI2M2M3YltfMHg2ZDY0KCcweDEwMScpXT97J3J1bkNhbmNlbGxlZCc6ITB4MH06XzB4MWYzODBlKTt9ZWxzZXtpZihfMHgzZDAwOWIpdGhyb3cgXzB4M2QwMDliW18weDZkNjQoJzB4OGQnKV07fX0pO30sJ3JlY3ljbGVXb3JrZXInOmZ1bmN0aW9uKCl7XzB4MjYzYzdiW18weDZkNjQoJzB4NzI5JyldKF8weDQzOGRmNik7fSwnX2Rpc3Bvc2UnOmZ1bmN0aW9uKF8weDNkMDA5Yil7dGhpc1tfMHg2ZDY0KCcweDg5YicpXT0hMHgwLGNsZWFyVGltZW91dCh0aGlzWydfY2xvc2VCeUVycm9yVGltZW91dCddKSxjbGVhclRpbWVvdXQodGhpc1tfMHg2ZDY0KCcweGZlJyldKSxjbGVhclRpbWVvdXQodGhpc1snX2xvbmdSdW5uaW5nUGluZ1RpbWVvdXQnXSk7dmFyIF8weDRhZDdkND1fMHgyNjNjN2JbXzB4NmQ2NCgnMHg5NTcnKV1bXzB4NDM4ZGY2XT17fSxfMHg5ZWU3MGU9ITB4MSxfMHhiYmMxNzU9ITB4MSxfMHg1NmY2MWU9ZnVuY3Rpb24oXzB4MzdhZmM0KXtfMHhiYmMxNzU9ITB4MCxfMHg5ZWU3MGUmJmNsZWFyVGltZW91dChfMHg5ZWU3MGUpLGRlbGV0ZSBfMHgyNjNjN2JbXzB4NmQ2NCgnMHg0NmMnKV1bXzB4MWYzODBlXSxfMHg0YWQ3ZDRbXzB4NmQ2NCgnMHg5ZDQnKV0mJl8weDRhZDdkNFtfMHg2ZDY0KCcweDlkNCcpXShfMHgzN2FmYzQpLGRlbGV0ZSBfMHgyNjNjN2JbJ193b3JrZXJQZW5kaW5nQ2xlYW51cCddW18weDQzOGRmNl0sXzB4M2QwMDliKCk7fSxfMHg0MDJmYTY9ZnVuY3Rpb24oKXtfMHhiYmMxNzV8fChfMHgzNDcxYmQoJ1slc11ceDIwU2FuZGJveFx4MjBpc1x4MjBub3RceDIwcmVzcG9uc2l2ZSxceDIwcmVjeWNsaW5nXHgyMHdvcmtlclx4MjBpbnN0YW5jZScsXzB4MWYzODBlKSxfMHgyNjNjN2JbXzB4NmQ2NCgnMHg5ZDUnKV0oXzB4MzdhZmM0WydjbG9zZSddLF8weDFmMzgwZSksXzB4MjYzYzdiW18weDZkNjQoJzB4NzI5JyldKF8weDQzOGRmNiksXzB4NTZmNjFlKCEweDApKTt9O3RyeXtfMHgzN2FmYzRbXzB4NmQ2NCgnMHg5ZDYnKV0oZnVuY3Rpb24oKXtfMHhiYmMxNzV8fChfMHgzNDcxYmQoXzB4NmTigIs2NCgnMHg5ZDcnKSxfMHgxZjM4MGUpLF8weDI2M2M3YltfMHg2ZDY0KCcweDlkNScpXShfMHgzN2FmYzRbXzB4NmQ2NCgnMHgxM2MnKV0sXzB4MWYzODBlKSxfMHg1NmY2MWUoKSk7fSk7fWNhdGNoKF8weDI3MTJmNil7aWYoXzB4NmQ2NCgnMHg5ZDgnKT09PV8weDZkNjQoJzB4OWQ4Jykpe3JldHVybiBfMHgzNDcxYmQoXzB4NmQ2NCgnMHg5ZDknKSxfMHgxZjM4MGUsXzB4MjcxMmY2JiZfMHgyNzEyZjZbXzB4NmQ2NCgnMHgyMycpXSksdm9pZCBfMHg0MDJmYTYoKTt9ZWxzZXtyZXR1cm4gZnVuY3Rpb24oXzB4MzM2ZmFhKXtyZXR1cm4gXzB4M2QwMDliKFtfMHgxZjM4MGUsXzB4MzM2ZmFhXSk7fTt9fV8weDllZTcwZT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XzB4NDAyZmE2KCk7fSwweDNlOCk7fX07fSwnX3RyeUNsb3NpbmdTYW5kYm94JzpmdW5jdGlvbihfMHgxZjM4MGUsXzB4NDM4ZGY2KXtpZignbG1xc2onIT09XzB4NmQ2NCgnMHg5ZGEnKSl7cmV0dXJuKF8weDM3YWZjND9fMHg0MzhkZjY8PV8weDRhZDdkNDpfMHg0MzhkZjY+PV8weDRhZDdkNCkmJl8weDFmMzgwZVsweDJdPHk7fWVsc2V7dHJ5e2lmKF8weDZkNjQoJzB4OWRiJyk9PT1fMHg2ZDY0KCcweDlkYycpKXtjbGVhclRpbWVvdXQoXzB4MjYzYzdiKSxfMHg0YWQ3ZDQoXzB4YmJjMTc1KSxfMHgzN2FmYzQoKTt9ZWxzZXtfMHgxZjM4MGUoKTt9fWNhdGNoKF8weDVjODU4OCl7XzB4MzQ3MWJkKF8weDZkNjQoJzB4ODRjJyksXzB4NDM4ZGY2LF8weDVjODU4OFtfMHg2ZDY0KCcweDIzJyldKTt9fX0sJ19jb3JydXB0ZWRDYWNoZSc6ZnVuY3Rpb24oXzB4MWYzODBlKXtyZXR1cm4gXzB4MWYzODBlJiZfMHgxZjM4MGVbXzB4NmQ2NCgnMHgzMDQnKV0oL2V2YWx1YXRpbmcgJ1thLXpdXC5cJF9cJGNvdmVyYWdlXFsvKTt9LCdfcHJvY2Vzc1Rlc3RMb2cnOmZ1bmN0aW9uKF8weDFmMzgwZSxfMHg0MzhkZjYpe2lmKF8weDZkNjQoJzB4OWRkJyk9PT0ncG1lTVMnKXt2YXIgXzB4MzdhZmM0PXRoaXM7X1tfMHg2ZDY0KCcweDNhJyldKF8weDFmMzgwZSxmdW5jdGlvbihfMHgxZjM4MGUpe2lmKCdiRVdOQSc9PT1fMHg2ZDY0KCcweDlkZScpKXt2YXIgXzB4YzUxOTE5PV8weDQzOGRmNlsnX2xpbmVzJ11bXzB4MzdhZmM0XTtfMHhjNTE5MTkmJl8weDQzOGRmNlsnX3JlY3ljbGVMaW5lSWZJbkNoYW5nZUZyYW1lJ10oXzB4YzUxOTE5LF8weDFmMzgwZSk7fWVsc2V7dmFyIF8weDNkMDA5Yj1fMHgxZjM4MGVbXzB4NmQ2NCgnMHgyMycpXSYmXzB4MWYzODBlW18weDZkNjQoJzB4MjMnKV1bXzB4NmQ2NCgnMHgxN2EnKV0oXzB4NmQ2NCgnMHg1MTYnKSl8fC0weDE7fl8weDNkMDA5YiYmKF8weDFmMzgwZVtfMHg2ZDY0KCcweDIzJyldPV8weDFmMzgwZVsnbWVzc2FnZSddWydzdWJzdHJpbmcnXSgweDAsXzB4M2QwMDliKSksXzB4MzdhZmM0W18weDZkNjQoJzB4NTE3JyldKF8weDFmMzgwZVsnbWVzc2FnZSddKSYmKF8weDM3YWZjNFtfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4NTE4JyldKCksXzB4MWYzODBlW18weDZkNjQoJzB4MjMnKV09XzB4MjI1NmNlKSxfMHgzN2FmYzRbXzB4NmQ2NCgnMHg1MTknKV0oXzB4MWYzODBlKSxfMHgzN2FmYzRbXzB4NmQ2NCgnMHg1MWEnKV0oXzB4MWYzODBlLF8weDQzOGRmNikscHJvY2Vzc1snZW52J11bXzB4NmQ2NCgnMHgxZTknKV0mJl8weDFmMzgwZVtfMHg2ZDY0KCcweDIzJyldJiYoXzB4MWYzODBlW18weDZkNjQoJzB4MjMnKV09XzB4MWYzODBlW18weDZkNjQoJzB4MjMnKV1bXzB4NmQ2NCgnMHg5MScpXShfMHgzN2FmYzRbXzB4NmQ2NCgnMHg1MWInKV0sJy4nKVtfMHg2ZDY0KCcweDkxJyldKF8weDM3YWZjNFtfMHg2ZDY0KCcweDU5JyldWydfbG9jYWxSb290J10sJy4nKSk7fX0pO31lbHNle18weDM3YWZjND1KU09OWydwYXJzZSddKF8weDFmMzgwZSk7fX0sJ19tYXBTdGFja0VudHJpZXMnOmZ1bmN0aW9uKF8weDFmMzgwZSxfMHg0MzhkZjYpe3ZhciBfMHgzN2FmYzQ9dGhpcyxfMHgzZDAwOWI9XzB4NWJjYmM0W18weDZkNjQoJzB4OGUnKV07aWYoXzB4MWYzODBlW18weDZkNjQoJzB4MTUyJyldJiZfW18weDZkNjQoJzB4MjcxJyldKF8weDFmMzgwZVtfMHg2ZDY0KCcweDE1MicpXSkmJiFfMHgxZjM4MGVbXzB4NmQ2NCgnMHg0NzMnKV0pe2lmKF8weDZkNjQoJzB4OWRmJykhPT1fMHg2ZDY0KCcweDllMCcpKXt2YXIgXzB4NGFkN2Q0LF8weDllZTcwZSxfMHhiYmMxNzU9W10sXzB4NTZmNjFlPXt9LF8weDQwMmZhNj1fMHgxZjM4MGVbXzB4NmQ2NCgnMHgxNTInKV1bJ3NwbGl0J10oJ1x4MGEnKTtfMHg0MDJmYTYmJl8weDM3YWZjNFtfMHg2ZDY0KCcweDUxNycpXShfMHg0MDJmYTZbMHgwXSkmJihfMHgzN2FmYzRbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHg1MTgnKV0oKSxfMHgxZjM4MGVbJ21lc3NhZ2UnXT1fMHgyMjU2Y2UpLF9bJ2VhY2gnXShfMHg0MDJmYTYsZnVuY3Rpb24oXzB4MWYzODBlKXt2YXIgXzB4MzQ3MWJkPV8weDFmMzgwZVtfMHg2ZDY0KCcweDE3YycpXShfMHg1YmNiYzQpO2lmKH5fMHgzNDcxYmQpe3ZhciBfMHg0MDJmYTY9XzB4MWYzODBlW18weDZkNjQoJzB4MzdiJyldKF8weDM0NzFiZCtfMHgzZDAwOWIpWydzcGxpdCddKCc6Jyk7aWYoXzB4NDAyZmE2W18weDZkNjQoJzB4OGUnKV0+PTB4Mil7dmFyIF8weDM3ZGUwMz1wYXJzZUludChfMHg0MDJmYTZbMHgxXSwweGEpO18weDRhZDdkND1fMHgzN2FmYzRbXzB4NmQ2NCgnMHg1OScpXVsnc3RhY2tFbnRyeUJ5RmlsZUlkJ10ocGFyc2VJbnQoXzB4NDAyZmE2WzB4MF0sMHhhKXx8XzB4NDAyZmE2WzB4MF0sXzB4MzdkZTAzLHBhcnNlSW50KF8weDQwMmZhNlsweDJdLDB4YSkpLF8weDRhZDdkNCYmXzB4NGFkN2Q0W18weDZkNjQoJzB4MTcwJyldPyhfMHg5ZWU3MGU9XzB4MzdhZmM0W18weDZkNjQoJzB4OWUxJyldKF8weDFmMzgwZSksXzB4OWVlNzBlJiYoXzB4NTZmNjFlW18weGJiYzE3NVtfMHg2ZDY0KCcweDhlJyldXT1fMHg5ZWU3MGUpLF8weGJiYzE3NVsncHVzaCddKFtfMHg0YWQ3ZDRbXzB4NmQ2NCgnMHgxNTgnKV0sXzB4NGFkN2Q0W18weDZkNjQoJzB4MTcwJyldXSkpOl8weDRhZDdkNCYmXzB4NDM4ZGY2JiZfMHhiYmMxNzVbJ3B1c2gnXShbXzB4NGFkN2Q0W18weDZkNjQoJzB4MTU4JyldLF8weDM3ZGUwM10pO319ZWxzZSBpZihwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0pe2lmKHByb2Nlc3NbXzB4NmQ2NCgnMHhmMScpXVsncXVva2thJ10paWYoXzB4MWYzODBlPV8weDM3YWZjNFtfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4N2InKV0oXzB4MWYzODBlKSxfWydjb250YWlucyddKF8weDFmMzgwZSxfMHgzN2FmYzRbXzB4NmQ2NCgnMHg1N2EnKV0pKXtpZihfMHg2ZDY0KCcweDllMicpPT09XzB4NmQ2NCgnMHg5ZTInKSl7aWYoX1tfMHg2ZDY0KCcweDU3OScpXShfMHgxZjM4MGUsXzB4NmQ2NCgnMHg5NjknKSkpcmV0dXJuITB4MTt9ZWxzZXt2YXIgXzB4M2FkM2YzPV8weDQzOGRmNltfMHg2ZDY0KCcweDE1NycpXSgpO18weDNhZDNmMyYmXzB4M2FkM2YzW18weDZkNjQoJzB4MjE5JyldJiZfMHgzYWQzZjNbXzB4NmQ2NCgnMHgyMTknKV0oXzB4MWYzODBlKTt9fWVsc2V7dmFyIF8weDJhNGI2YSxfMHgyMjU2Y2UsXzB4MzA0MzcwPV8weDFmMzgwZTtfMHgxZjM4MGU9XzB4MWYzODBlWydyZXBsYWNlJ10oXzB4MzdhZmM0W18weDZkNjQoJzB4NTFiJyldLCcuJyk7dmFyIF8weGIyYzJmMjtpZihfMHgzMDQzNzAhPT1fMHgxZjM4MGU/KF8weGIyYzJmMj1fMHgzMDQzNzBbXzB4NmQ2NCgnMHgxN2MnKV0oXzB4MzdhZmM0Wydfbm9ybWFsaXplZExvY2FsUm9vdCddKSxfMHhlOGYzYTg9XzB4MWYzODBlW18weDZkNjQoJzB4MzdiJyldKF8weGIyYzJmMilbJ3NwbGl0J10oJzonKSk6KF8weGIyYzJmMj1fMHgxZjM4MGVbXzB4NmQ2NCgnMHgxN2MnKV0oJygnKSsweDEsMHgwIT09XzB4YjJjMmYyP18weGU4ZjNhOD1fMHgxZjM4MGVbXzB4NmQ2NCgnMHgxN2QnKV0oXzB4YjJjMmYyLF8weDFmMzgwZVsnbGFzdEluZGV4T2YnXSgnKScpLTB4MSlbXzB4NmQ2NCgnMHhmNScpXSgnOicpOihfMHhiMmMyZjI9XzB4MWYzODBlW18weDZkNjQoJzB4MTdjJyldKF8weDZkNjQoJzB4MzdkJykpKzB4MyxfMHhlOGYzYTg9MHgyIT09XzB4YjJjMmYyP18weDFmMzgwZVsnc3Vic3RyJ10oXzB4YjJjMmYyKVtfMHg2ZDY0KCcweGY1JyldKCc6Jyk6W10pKSwweDM9PT1fMHhlOGYzYThbXzB4NmQ2NCgnMHg4ZScpXSl7XzB4OWVlNzBlPV8weDM3YWZjNFtfMHg2ZDY0KCcweDU3YicpXShfMHgxZjM4MGUsXzB4YjJjMmYyKTt2YXIgXzB4NDY0NmVhPXBhcnNlSW50KF8weGU4ZjNhOFsweDFdLDB4YSk7XzB4NGFkN2Q0PV8weDM3YWZjNFtfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MTZmJyldKF8weDM3YWZjNFtfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4N2InKV0oXzB4MjYzYzdiWydpc0xldmVsVXBSZWxhdGl2ZVBhdGgnXShfMHhlOGYzYThbMHgwXSk/XzB4ZThmM2E4WzB4MF06X1tfMHg2ZDY0KCcweDU3ZCcpXShfMHhlOGYzYThbMHgwXSwnLi8nKSksXzB4NDY0NmVhLHBhcnNlSW50KF8weGU4ZjNhOFsweDJdLDB4YSkpLF8weDRhZDdkNCYmXzB4NGFkN2Q0W18weDZkNjQoJzB4MTcwJyldPyhfMHgyYTRiNmE9XzB4NGFkN2Q0W18weDZkNjQoJzB4MTU4JyldLF8weDIyNTZjZT1fMHg0YWQ3ZDRbXzB4NmQ2NCgnMHgxNzAnKV0pOiFfMHg0YWQ3ZDR8fF8weDRhZDdkNCYmIV8weDRhZDdkNFtfMHg2ZDY0KCcweDE1OCcpXT8oXzB4MmE0YjZhPV8weGU4ZjNhOFsweDBdLF8weDIyNTZjZT1fMHg0NjQ2ZWEpOl8weDRhZDdkNCYmXzB4NDM4ZGY2JiYoXzB4MmE0YjZhPV8weDRhZDdkNFtfMHg2ZDY0KCcweDE1OCcpXXx8XzB4ZThmM2E4WzB4MF0sXzB4MjI1NmNlPV8weDQ2NDZlYSksXzB4MmE0YjZhJiYoXzB4OWVlNzBlJiYoXzB4NTZmNjFlW18weGJiYzE3NVsnbGVuZ3RoJ11dPV8weDllZTcwZSksXzB4YmJjMTc1W18weDZkNjQoJzB4MWMnKV0oW18weDJhNGI2YSxfMHgyMjU2Y2VdKSk7fX19ZWxzZXtfMHgxZjM4MGU9XzB4MzdhZmM0WydfcHJvamVjdCddWydub3JtYWxpemVQYXRoJ10oXzB4MWYzODBlKTt2YXIgXzB4YTg4ZTE0PV8weDM3YWZjNFtfMHg2ZDY0KCcweDdkYicpXT9fMHgxZjM4MGVbJ2xhc3RJbmRleE9mJ10oXzB4MzdhZmM0W18weDZkNjQoJzB4N2RiJyldKTotMHgxO2lmKH5fMHhhODhlMTQpe3ZhciBfMHhlOGYzYTg9X1sncnRyaW0nXShfMHgxZjM4MGVbXzB4NmQ2NCgnMHgzN2InKV0oXzB4YTg4ZTE0K18weDM3YWZjNFtfMHg2ZDY0KCcweDdkYicpXVtfMHg2ZDY0KCcweDhlJyldKSwnKScpW18weDZkNjQoJzB4ZjUnKV0oJzonKTtpZigweDM9PT1fMHhlOGYzYThbXzB4NmQ2NCgnMHg4ZScpXXx8MHgyPT09XzB4ZThmM2E4W18weDZkNjQoJzB4OGUnKV0pe2lmKCdReXFvQichPT1fMHg2ZDY0KCcweDllMycpKXt2YXIgXzB4MzNiYTk4PSFfMHg0MzhkZjZbXzB4NmQ2NCgnMHg3MTMnKV1bJ3NvbWUnXShmdW5jdGlvbihfMHg4ODVhMDcpe3JldHVybichJz09PV8weDg4NWEwN1sweDBdJiYhXzB4NDAyZmE2W18weDZkNjQoJzB4NjE2JyldKF8weDM3YWZjNCxfMHg4ODVhMDcseydkb3QnOl8weDQzOGRmNltfMHg2ZDY0KCcweDcxMScpXSwnbWljcm9tYXRjaCc6XzB4NDM4ZGY2W18weDZkNjQoJzB4NzE0JyldfSk7fSkmJl8weDQzOGRmNltfMHg2ZDY0KCcweDcxMycpXVtfMHg2ZDY0KCcweDVkZicpXShmdW5jdGlvbihfMHg4NmQzODApe3JldHVybichJyE9PV8weDg2ZDM4MFsweDBdJiZfMHg0MDJmYTZbXzB4NmQ2NCgnMHg2MTYnKV0oXzB4MzdhZmM0LF8weDg2ZDM4MCx7J2RvdCc6XzB4NDM4ZGY2W18weDZkNjQoJzB4NzExJyldLCdtaWNyb21hdGNoJzpfMHg0MzhkZjZbXzB4NmQ2NCgnMHg3MTQnKV19KTt9KTtfMHgxZjM4MGVbXzB4NmQ2NCgnMHg3MTInKV09IV8weDMzYmE5OCxfMHgzM2JhOTg/XzB4MWYzODBlWydfY292ZXJhZ2VDYWxjdWxhdGlvbkV4cGVjdGVkJ109ITB4MDpfMHgxZjM4MGVbXzB4NmQ2NCgnMHg3MTInKV09ITB4MDt9ZWxzZXt2YXIgXzB4MzdkZTAzPXBhcnNlSW50KF8weGU4ZjNhOFsweDFdLDB4YSk7XzB4NGFkN2Q0PV8weDM3YWZjNFtfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MTZmJyldKF8weDM3YWZjNFsnX3Byb2plY3QnXVtfMHg2ZDY0KCcweDdiJyld4oCLKF9bXzB4NmQ2NCgnMHg1N2QnKV0oXzB4ZThmM2E4WzB4MF0sJy8nKSksXzB4MzdkZTAzLHBhcnNlSW50KF8weGU4ZjNhOFsweDJdLDB4YSkpLF8weDRhZDdkNCYmXzB4NGFkN2Q0W18weDZkNjQoJzB4MTcwJyldPyhfMHg5ZWU3MGU9XzB4MzdhZmM0W18weDZkNjQoJzB4NTdiJyldKF8weDFmMzgwZSxfMHhhODhlMTQpLF8weDllZTcwZSYmKF8weDU2ZjYxZVtfMHhiYmMxNzVbXzB4NmQ2NCgnMHg4ZScpXV09XzB4OWVlNzBlKSxfMHhiYmMxNzVbJ3B1c2gnXShbXzB4NGFkN2Q0W18weDZkNjQoJzB4MTU4JyldLF8weDRhZDdkNFtfMHg2ZDY0KCcweDE3MCcpXV0pKTpfMHg0YWQ3ZDQmJl8weDQzOGRmNiYmXzB4YmJjMTc1WydwdXNoJ10oW18weDRhZDdkNFtfMHg2ZDY0KCcweDE1OCcpXSxfMHgzN2RlMDNdKTt9fX19fSksXzB4YmJjMTc1WydsZW5ndGgnXXx8XzB4MzQ3MWJkKCdGYWlsZWRceDIwdG9ceDIwbWFwXHgyMHRoZVx4MjBzdGFja1x4MjB0b1x4MjB1c2VyXHgyMGNvZGUsXHgyMGVudHJ5XHgyMG1lc3NhZ2U6XHgyMCVzLFx4MjBzdGFjazpceDIwJXMnLF8weDFmMzgwZVtfMHg2ZDY0KCcweDIzJyldJiZfMHgxZjM4MGVbXzB4NmQ2NCgnMHgyMycpXVsnc3Vic3RyaW5nJ10oMHgwLDB4NDAwKSxfMHgxZjM4MGVbXzB4NmQ2NCgnMHgxNTInKV1bXzB4NmQ2NCgnMHgxN2QnKV0oMHgwLDB4NDAwKSksXzB4MWYzODBlW18weDZkNjQoJzB4MjMnKV09XzB4MzdhZmM0W18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHg5ZTQnKV0oXzB4MWYzODBlW18weDZkNjQoJzB4MjMnKV0pLF8weDZkNjQoJzB4OWU1Jyk9PT1fMHgzN2FmYzRbXzB4NmQ2NCgnMHg1OScpXVtfMHg2ZDY0KCcweDVjJyldKClbXzB4NmQ2NCgnMHhmMScpXVtfMHg2ZDY0KCcweDMwJyldJiZfMHgxZjM4MGVbXzB4NmQ2NCgnMHgyMycpXSYmfl8weDFmMzgwZVtfMHg2ZDY0KCcweDIzJyldW18weDZkNjQoJzB4MTdhJyldKF8weDZkNjQoJzB4OThhJykpJiYoXzB4MWYzODBlW18weDZkNjQoJzB4MjMnKV09XzB4MzdhZmM0W18weDZkNjQoJzB4NTknKV1bXzB4NmQ2NCgnMHg5ZTQnKV0oXzB4MWYzODBlW18weDZkNjQoJzB4MjMnKV0sXzB4MzdhZmM0WydfcHJvamVjdCddWydfcm9vdCddKSksXzB4MWYzODBlW18weDZkNjQoJzB4MTUyJyldPV8weGJiYzE3NSxfW18weDZkNjQoJzB4MzJkJyldKF8weDU2ZjYxZSl8fChfMHgxZjM4MGVbXzB4NmQ2NCgnMHgyMjQnKV09XzB4NTZmNjFlKSxfMHgxZjM4MGVbXzB4NmQ2NCgnMHg2ODQnKV09ITB4MDt9ZWxzZXtfMHgzZDAwOWImJihfMHg0MzhkZjYrPV8weDFmMzgwZSk7fX19LCdfZXh0cmFjdE5vZGVTdGFja0xpbmVDb250ZXh0JzpmdW5jdGlvbihfMHgxZjM4MGUsXzB4NDM4ZGY2KXtpZignVGF1dXAnIT09XzB4NmQ2NCgnMHg5ZTYnKSl7aWYoXzB4NDM4ZGY2PjB4NCYmJygnPT09XzB4MWYzODBlW18weDQzOGRmNi0weDFdKXtpZignTHRzTHcnPT09J0x0c0x3Jyl7dmFyIF8weDM3YWZjND1fMHgxZjM4MGVbXzB4NmQ2NCgnMHgzN2InKV0oMHgwLF8weDQzOGRmNi0weDIpfHwnJztyZXR1cm4gXzB4MzdhZmM0W18weDZkNjQoJzB4ZjUnKV0oJ2F0XHgyMCcpWzB4MV07fWVsc2V7dmFyIF8weDQzZmQ0ZD10aGlzW18weDZkNjQoJzB4M2RhJyldW18weDZkNjQoJzB4N2QzJyldKF8weDQzOGRmNixfMHg5ZWU3MGUpO2lmKCFfMHg0M2ZkNGRbXzB4NmQ2NCgnMHg4ZScpXSlyZXR1cm4gXzB4MzdkZTAzKF8weDZkNjQoJzB4N2Q0JyksXzB4MWYzODBlWydwYXRoJ10pLHZvaWQgdGhpc1tfMHg2ZDY0KCcweDE2YScpXShfMHg2ZDY0KCcweDM3MCcpLF8weDFmMzgwZSxfMHg5ZWU3MGUsXzB4MzdhZmM0KTtfMHgxZjM4MGVbXzB4NmQ2NCgnMHg1ZjEnKV18fF8weDRhZDdkNHx8KF8weDFmMzgwZVsnY29udGVudCddPXRoaXNbXzB4NmQ2NCgnMHgzZGEnKV1bXzB4NmQ2NCgnMHg5ZTcnKV0oXzB4NDNmZDRkKSk7fX19ZWxzZXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDE0MycpXVtfMHg2ZDY0KCcweDI5ZCcpXXx8dGhpc1snX3Rlc3RGaWx0ZXInXVtfMHg2ZDY0KCcweDI5ZCcpXTt9fSwnX2V4dHJhY3RCcm93c2VyU3RhY2tMaW5lQ29udGV4dCc6ZnVuY3Rpb24oXzB4MWYzODBlKXt2YXIgXzB4NDM4ZGY2PV8weDFmMzgwZVtfMHg2ZDY0KCcweGY1JyldKCdceDIwKGh0dHAnKTtyZXR1cm4gXzB4NDM4ZGY2W18weDZkNjQoJzB4OGUnKV0+PTB4Mj8oXzB4NDM4ZGY2WzB4MF18fCcnKVtfMHg2ZDY0KCcweGY1JyldKF8weDZkNjQoJzB4MzdkJykpWzB4MV06KF8weDQzOGRmNj1fMHgxZjM4MGVbXzB4NmQ2NCgnMHhmNScpXShfMHg2ZDY0KCcweDllOCcpKSxfMHg0MzhkZjZbXzB4NmQ2NCgnMHg4ZScpXT49MHgyP18weDQzOGRmNlsweDBdOnZvaWQgMHgwKTt9LCdfcnVuSW5QYXJhbGxlbCc6ZnVuY3Rpb24oXzB4MWYzODBlLF8weDQzOGRmNil7aWYoXzB4NmQ2NCgnMHg5ZTknKSE9PSdZZVVvYicpe3ZhciBfMHgzN2FmYzQ9dGhpcyxfMHgzZDAwOWI9XzB4MWYzODBlW18weDZkNjQoJzB4OGInKV0sXzB4NGFkN2Q0PXt9O18weDM0NzFiZChfMHg2ZDY0KCcweDllYScpLF8weDQzOGRmNik7Zm9yKHZhciBfMHg5ZWU3MGU9MHgwO18weDllZTcwZTxfMHg0MzhkZjY7XzB4OWVlNzBlKyspe3ZhciBfMHhiYmMxNzU9X1snb21pdCddKF8weDFmMzgwZSxfMHg2ZDY0KCcweDllYicpKTtfMHhiYmMxNzVbJ3Rlc3RGaWxlc1RvTG9hZCddPVtdLF8weDRhZDdkNFtfMHg5ZWU3MGVdPXsnb3B0cyc6XzB4YmJjMTc1LCd3b3JrZXJJZCc6XzB4OWVlNzBlLCdyYW5nZXMnOjB4MH07fXJldHVybiBfW18weDZkNjQoJzB4M2EnKV0oXzB4M2QwMDliLGZ1bmN0aW9uKF8weDFmMzgwZSl7aWYoJ1VOdENiJz09PSdVTnRDYicpe3ZhciBfMHg0MzhkZjY9X1snY2hhaW4nXShfMHg0YWQ3ZDQpW18weDZkNjQoJzB4MmU5JyldKGZ1bmN0aW9uKF8weDFmMzgwZSl7cmV0dXJuIF8weDFmMzgwZVtfMHg2ZDY0KCcweDY3MycpXTt9KVtfMHg2ZDY0KCcweDJlOScpXShmdW5jdGlvbihfMHgxZjM4MGUpe3JldHVybiBfMHgxZjM4MGVbJ29wdHMnXVtfMHg2ZDY0KCcweDhiJyldW18weDZkNjQoJzB4OGUnKV07fSlbXzB4NmQ2NCgnMHhhOScpXSgpWzB4MF07XzB4NDM4ZGY2W18weDZkNjQoJzB4NmNiJyldW18weDZkNjQoJzB4OGInKV1bXzB4NmQ2NCgnMHgxYycpXShfMHgxZjM4MGUpLF8weDQzOGRmNltfMHg2ZDY0KCcweDY3MycpXSs9XzB4MWYzODBlW18weDZkNjQoJzB4OTcnKV07fWVsc2V7XzB4M2QwMDliJiYhXzB4M2QwMDliW18weDZkNjQoJzB4ZDMnKV0mJihfMHgzN2FmYzQ9XzB4OWVlNzBlW18weDZkNjQoJzB4ZDAnKV0pJiZfMHgzN2FmYzRbXzB4NmQ2NCgnMHgzJyldKF8weDllZTcwZSk7fX0pLF8weDM0NzFiZChfMHg2ZDY0KCcweDllYycpKSxRW18weDZkNjQoJzB4MTRmJyldKF9bXzB4NmQ2NCgnMHhhNicpXShfMHg0YWQ3ZDQpWydmaWx0ZXInXShmdW5jdGlvbihfMHgxZjM4MGUpe3JldHVybiBfMHgxZjM4MGVbXzB4NmQ2NCgnMHg2NzMnKV18fF8weDFmMzgwZVtfMHg2ZDY0KCcweDZjYicpXVtfMHg2ZDY0KCcweDhiJyldW18weDZkNjQoJzB4OGUnKV07fSlbXzB4NmQ2NCgnMHhhNycpXShmdW5jdGlvbihfMHgxZjM4MGUpe2lmKF8weDZkNjQoJzB4OWVkJyk9PT1fMHg2ZDY0KCcweDllZScpKXt4JiYheFtfMHg2ZDY0KCcweGQzJyldJiYoXzB4NDAyZmE2PVNbJ3JldHVybiddKSYmXzB4NDAyZmE2W18weDZkNjQoJzB4MycpXShTKTt9ZWxzZXtyZXR1cm4gXzB4MzdhZmM0WydfZXh0ZW5zaW9uJ11bXzB4NmQ2NCgnMHg5N2QnKV0oXzB4MWYzODBlW18weDZkNjQoJzB4NmNiJyldLF8weDFmMzgwZVsnd29ya2VySWQnXSlbXzB4NmQ2NCgnMHg3ZScpXShmdW5jdGlvbihfMHgxZjM4MGUpe3JldHVybiBfMHgzN2FmYzRbXzB4NmQ2NCgnMHg5N2UnKV0oXzB4MWYzODBlKTt9KTt9fSlbXzB4NmQ2NCgnMHhhOScpXSgpKVtfMHg2ZDY0KCcweDdlJyldKGZ1bmN0aW9uKF8weDFmMzgwZSl7aWYoJ3ZrTFFqJyE9PV8weDZkNjQoJzB4OWVmJykpe3ZhciBfMHgzMDc1ZjE9XzB4MWYzODBlWydyYW5nZXMn4oCLXSgpO2Zvcih2YXIgXzB4MTNmNDBkIGluIF8weDMwNzVmMSl7dmFyIF8weDJmZWI5Zj1fMHgzMDc1ZjFbXzB4MTNmNDBkXTtfMHgyZmViOWZbXzB4NmQ2NCgnMHgxMzAnKV0odGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDI5YycpXVtfMHg2ZDY0KCcweDQzJyldKSYmXzB4M2QwMDliKys7fX1lbHNle18weDM0NzFiZChfMHg2ZDY0KCcweDlmMCcpKTt2YXIgXzB4NDM4ZGY2PV9bXzB4NmQ2NCgnMHg4YScpXShfMHgxZjM4MGUsZnVuY3Rpb24oXzB4MWYzODBlLF8weDQzOGRmNil7aWYoXzB4NmQ2NCgnMHg5ZjEnKT09PV8weDZkNjQoJzB4OWYxJykpe18weDFmMzgwZVtfMHg2ZDY0KCcweDNjYScpXT1fMHg0MzhkZjZbXzB4NmQ2NCgnMHgzY2EnKV18fF8weDFmMzgwZVtfMHg2ZDY0KCcweDNjYScpXSxfMHgxZjM4MGVbXzB4NmQ2NCgnMHhhMycpXT1fMHgxZjM4MGVbXzB4NmQ2NCgnMHhhMycpXVtfMHg2ZDY0KCcweDg4JyldKF8weDQzOGRmNltfMHg2ZDY0KCcweGEzJyldfHxbXSksXzB4MWYzODBlW18weDZkNjQoJzB4MjIwJyldPV8weDFmMzgwZVtfMHg2ZDY0KCcweDIyMCcpXVtfMHg2ZDY0KCcweDg4JyldKF8weDQzOGRmNlsnbG9nJ118fFtdKSxfMHgxZjM4MGVbXzB4NmQ2NCgnMHgzY2InKV09XzB4MWYzODBlWydnbG9iYWxFcnJvcnMnXVsnY29uY2F0J10oXzB4NDM4ZGY2WydnbG9iYWxFcnJvcnMnXXx8W10pLF8weDFmMzgwZVtfMHg2ZDY0KCcweDhkJyldPV8weDQzOGRmNiBpbnN0YW5jZW9mIEVycm9yfHxfMHgxZjM4MGVbXzB4NmQ2NCgnMHg4ZCcpXSxfMHgxZjM4MGVbXzB4NmQ2NCgnMHgzY2MnKV09X1tfMHg2ZDY0KCcweDM0JyldKF8weDFmMzgwZVtfMHg2ZDY0KCcweDNjYycpXSxfMHg0MzhkZjZbXzB4NmQ2NCgnMHgzY2MnKV18fHt9KTt2YXIgXzB4MzdhZmM0PV8weDFmMzgwZVsnY292ZXJhZ2UnXTtyZXR1cm4gX1snaXNFbXB0eSddKF8weDM3YWZjNCk/KF8weDFmMzgwZVsnY292ZXJhZ2UnXT1fMHg0MzhkZjZbJ2NvdmVyYWdlJ10sXzB4MWYzODBlKTooX1tfMHg2ZDY0KCcweDNhJyldKF8weDQzOGRmNlsnY292ZXJhZ2UnXSxmdW5jdGlvbihfMHgxZjM4MGUsXzB4NDM4ZGY2KXt2YXIgXzB4M2QwMDliPV8weDM3YWZjNFtfMHg0MzhkZjZdO3JldHVybiBfMHgzZDAwOWI/dm9pZCBfW18weDZkNjQoJzB4M2EnKV0oXzB4MWYzODBlLGZ1bmN0aW9uKF8weDFmMzgwZSxfMHg0MzhkZjYpe2lmKF8weDZkNjQoJzB4OWYyJykhPT0nVVFvTnAnKXtyZXR1cm4gXzB4MzdhZmM0W18weDZkNjQoJzB4MjljJyldWyd0ZXN0J11bXzB4NmQ2NCgnMHgzM2MnKV0oXzB4MWYzODBlKTt9ZWxzZXt2YXIgXzB4MzdhZmM0PV8weDNkMDA5YltfMHg0MzhkZjZdO3JldHVybiBfMHgzN2FmYzQ/dm9pZCBfW18weDZkNjQoJzB4MzQnKV0oXzB4MzdhZmM0LF8weDFmMzgwZSk6dm9pZChfMHgzZDAwOWJbXzB4NDM4ZGY2XT1fMHgxZjM4MGUpO319KTp2b2lkKF8weDM3YWZjNFtfMHg0MzhkZjZdPV8weDFmMzgwZSk7fSksXzB4MWYzODBlKTt9ZWxzZXtfMHgxZjM4MGVbXzB4NDM4ZGY2W18weDZkNjQoJzB4MTJmJyldKCldPV8weDQzOGRmNjt9fSx7J2NvdmVyYWdlJzp7fSwndGVzdHMnOltdLCdsb2cnOltdLCdnbG9iYWxFcnJvcnMnOltdLCdsb2FkaW5nU2VxdWVuY2UnOnt9fSk7cmV0dXJuIF8weDQzOGRmNltfMHg2ZDY0KCcweDNjYScpXT9RW18weDZkNjQoJzB4MWI2JyldKF8weDQzOGRmNik6XzB4NDM4ZGY2WydlcnJvciddP1FbXzB4NmQ2NCgnMHgxYjYnKV0oXzB4NDM4ZGY2WydlcnJvciddKTpRW18weDZkNjQoJzB4YzInKV0oXzB4NDM4ZGY2KTt9fSk7fWVsc2V7cmV0dXJuIF9bJ3JlZHVjZSddKF8weDFmMzgwZSxmdW5jdGlvbihfMHg1ODk2MzgsXzB4MzYxMTllKXtyZXR1cm4gX1tfMHg2ZDY0KCcweDNhJyldKF8weDM2MTE5ZVtfMHg2ZDY0KCcweDRiOScpXSgpLGZ1bmN0aW9uKF8weDM2MTE5ZSl7XzB4NTg5NjM4W18weDM2MTE5ZVtfMHg2ZDY0KCcweDEyZicpXSgpXT1fMHgzNjExOWU7fSksXzB4NTg5NjM4O30se30pO319LCdnZXRXb3JrZXInOmZ1bmN0aW9uKF8weDFmMzgwZSl7dmFyIF8weDQzOGRmNj10aGlzLF8weDM3YWZjND1fMHg0MzhkZjZbXzB4NmQ2NCgnMHgzZWUnKV1bXzB4MWYzODBlXTtyZXR1cm4gXzB4MzdhZmM0fHwoXzB4MzdhZmM0PV8weDQzOGRmNlsnX3dvcmtlcnMnXVtfMHgxZjM4MGVdPXsnaWQnOl8weDFmMzgwZSwncHJvbWlzZSc6UVtfMHg2ZDY0KCcweDE4YicpXShmdW5jdGlvbihfMHgzN2FmYzQsXzB4M2QwMDliKXt2YXIgXzB4NGFkN2Q0PV8weDQzOGRmNltfMHg2ZDY0KCcweDNlZScpXVtfMHgxZjM4MGVdO2lmKF8weDRhZDdkNClpZihfMHg0YWQ3ZDRbXzB4NmQ2NCgnMHg5NjcnKV0pe2lmKF8weDQzOGRmNltfMHg2ZDY0KCcweDNlZicpXVtfMHg2ZDY0KCcweDlmMycpXShfMHg0YWQ3ZDRbXzB4NmQ2NCgnMHg5NjcnKV0pKXJldHVybiB2b2lkIF8weDM3YWZjNChfMHg0YWQ3ZDQpO18weDM0NzFiZChfMHg2ZDY0KCcweDlmNCcpLF8weDFmMzgwZSksXzB4NDM4ZGY2WydyZWN5Y2xlV29ya2VyJ10oXzB4MWYzODBlKTt9ZWxzZSBpZihfMHg0YWQ3ZDRbXzB4NmQ2NCgnMHgxOGInKV0pcmV0dXJuIF8weDRhZDdkNFtfMHg2ZDY0KCcweDE4YicpXTtfMHgzNDcxYmQoXzB4NmQ2NCgnMHg5ZjUnKStfMHgxZjM4MGUpO3RyeXtfMHg0MzhkZjZbJ19leHRlbnNpb24nXVtfMHg2ZDY0KCcweDNiJyldKF8weDFmMzgwZSxmdW5jdGlvbihfMHg0YWQ3ZDQpe2lmKCFfMHg0YWQ3ZDQpcmV0dXJuIHZvaWQgXzB4M2QwMDliKG5ldyBFcnJvcihfMHg2ZDY0KCcweDlmNicpKSk7dmFyIF8weDllZTcwZT1fMHg0MzhkZjZbXzB4NmQ2NCgnMHgzZWUnKV1bXzB4MWYzODBlXT1fMHg0MzhkZjZbXzB4NmQ2NCgnMHgzZWUnKV1bXzB4MWYzODBlXXx8eydpZCc6XzB4MWYzODBlfTtpZihfMHg0YWQ3ZDRbJ29uQ29ubmVjdGVkJ10pe18weDllZTcwZVtfMHg2ZDY0KCcweDhlMScpXT1fW18weDZkNjQoJzB4ZmEnKV0oXzB4NGFkN2Q0W18weDZkNjQoJzB4OGUxJyldLF8weDllZTcwZSksZGVsZXRlIF8weDRhZDdkNFtfMHg2ZDY0KCcweDhlMScpXTt2YXIgXzB4YmJjMTc1LF8weDI2M2M3YjtfMHg5ZWU3MGVbXzB4NmQ2NCgnMHgxOGInKV09UVtfMHg2ZDY0KCcweDE4YicpXShmdW5jdGlvbihfMHgxZjM4MGUsXzB4NDM4ZGY2KXtfMHhiYmMxNzU9XzB4MWYzODBlLF8weDI2M2M3Yj1fMHg0MzhkZjY7fSk7dmFyIF8weDU2ZjYxZT0hMHgxLF8weDQwMmZhNj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoJ2JnblNFJyE9PSdEWEhQWScpe2lmKCFfMHg1NmY2MWUpe18weDM3ZGUwMygpO3ZhciBfMHgzN2FmYzQ9XzB4NDM4ZGY2W18weDZkNjQoJzB4M2VlJyldW18weDFmMzgwZV07XzB4MzdhZmM0JiZfMHgzN2FmYzRbXzB4NmQ2NCgnMHg3NjUnKV0/XzB4NDM4ZGY2WydfZXh0ZW5zaW9uJ11bXzB4NmQ2NCgnMHgzZjAnKV0oXzB4NGFkN2Q0KTpfMHg0MzhkZjZbJ3JlY3ljbGVXb3JrZXInXShfMHgxZjM4MGUpLF8weDM0NzFiZCgnV29ya2VyXHgyMGlzXHgyMG5vdFx4MjBjcmVhdGVkXHgyMGluXHgyMHRpbWUsXHgyMHJlY3ljbGluZ1x4MjBpdCcpLF8weDI2M2M3YiYmXzB4MjYzYzdiKHsncnVuQ2FuY2VsbGVkJzohMHgwLCdyZXJ1bic6ITB4MH0pLF8weDNkMDA5Yih7J3J1bkNhbmNlbGxlZCc6ITB4MCwncmVydW4nOiEweDB9KTt9fWVsc2V7cmV0dXJuITB4MDt9fSwweDI3MTApLF8weDM3ZGUwMz1mdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4OWY3JykhPT1fMHg2ZDY0KCcweDlmNycpKXt2YXIgXzB4MTY5NzBhPV8weDI2M2M3YlsnY3JlYXRlSGFzaCddKF8weDZkNjQoJzB4MmJlJykpW18weDZkNjQoJzB4M2QnKV0oXzB4MzdhZmM0KVtfMHg2ZDY0KCcweDI5NicpXSgnaGV4Jyk7XzB4NmQ2NCgnMHgyYmYnKSE9PV8weDE2OTcwYSYmXzB4NmQ2NCgnMHgyYzAnKSE9PV8weDE2OTcwYSYmXzB4NmQ2NCgnMHgyYzEnKSE9PV8weDE2OTcwYSYmJzQ3YWJmZGZhN2JjZDQxNmUwZjljNjk5OTFlYzFmODk2JyE9PV8weDE2OTcwYSYmJzA3ZWQxZmM2YTNhMzJkNjYwOTlmZTE4NzBjODNhMGNlJyE9PV8weDE2OTcwYSYmXzB4NmQ2NCgnMHgyYzQnKSE9PV8weDE2OTcwYSYmXzB4NmQ2NCgnMHg2OTAnKSE9PV8weDE2OTcwYSYmXzB4M2QwMDliWydfdHJpYWxNb2RlJ10oKTt9ZWxzZXtfMHg1NmY2MWU9ITB4MCxjbGVhclRpbWVvdXQoXzB4NDAyZmE2KTt9fSxfMHgyYTRiNmE9XzB4NDM4ZGY2W18weDZkNjQoJzB4NzY0JyldW18weDFmMzgwZV07XzB4MmE0YjZhJiZfMHg0MzhkZjZbXzB4NmQ2NCgnMHgzZWYnKV1bXzB4NmQ2NCgnMHgzZjAnKV0oXzB4MmE0YjZhKSxfMHg0MzhkZjZbXzB4NmQ2NCgnMHg3NjQnKV1bXzB4MWYzODBlXT1fMHg0YWQ3ZDQsXzB4OWVlNzBlWydvbkNvbm5lY3RlZCddKGZ1bmN0aW9uKF8weDNkMDA5Yil7aWYoXzB4NmQ2NCgnMHg5ZjgnKT09PV8weDZkNjQoJzB4OWY4Jykpe2RlbGV0ZSBfMHg0MzhkZjZbJ19jb25uZWN0aW5nV29ya2VycyddW18weDFmMzgwZV0sXzB4NTZmNjFlfHwoXzB4MzdkZTAzKCksXzB4MzQ3MWJkKF8weDZkNjQoJzB4OWY5JykrXzB4MWYzODBlKSxfMHg5ZWU3MGVbXzB4NmQ2NCgnMHg5NjcnKV09XzB4NGFkN2Q0LF8weDllZTcwZVtfMHg2ZDY0KCcweDc2NScpXT0hMHgwLF8weDRhZDdkNFtfMHg2ZDY0KCcweDU5YScpXT1fMHgzZDAwOWIsXzB4OWVlNzBlW18weDZkNjQoJzB4MThiJyldPVFbXzB4NmQ2NCgnMHhjMicpXShf4oCLMHg0YWQ3ZDQpLF8weGJiYzE3NSYmXzB4YmJjMTc1KF8weDRhZDdkNCksXzB4MzdhZmM0KF8weDRhZDdkNCkpO31lbHNle18weDQzOGRmNj17J2Vycm9yJzpfMHgzN2RlMDN9O319KTt9ZWxzZSBfMHgzNDcxYmQoXzB4NmQ2NCgnMHg5ZmEnKStfMHgxZjM4MGUpLF8weDllZTcwZVtfMHg2ZDY0KCcweDk2NycpXT1fMHg0YWQ3ZDQsXzB4OWVlNzBlW18weDZkNjQoJzB4MThiJyldPVFbXzB4NmQ2NCgnMHhjMicpXShfMHg0YWQ3ZDQpLF8weDM3YWZjNChfMHg0YWQ3ZDQpO30pO31jYXRjaChfMHg0NDZjZDEpe18weDNkMDA5YihfMHg0NDZjZDEpO319KX0pLF8weDM3YWZjNFtfMHg2ZDY0KCcweDE4YicpXTt9LCdyZXBvcnRDb25zb2xlT3V0cHV0JzpmdW5jdGlvbihfMHgxZjM4MGUpe30sJ3JlY3ljbGVXb3JrZXInOmZ1bmN0aW9uKF8weDFmMzgwZSl7dmFyIF8weDQzOGRmNj10aGlzO3RyeXt2YXIgXzB4MzdhZmM0PV8weDQzOGRmNltfMHg2ZDY0KCcweDNlZScpXVtfMHgxZjM4MGVdO18weDM3YWZjNCYmXzB4MzdhZmM0W18weDZkNjQoJzB4OTY3JyldJiZfMHg0MzhkZjZbXzB4NmQ2NCgnMHgzZWYnKV1bXzB4NmQ2NCgnMHgzZjAnKV0oXzB4MzdhZmM0W18weDZkNjQoJzB4OTY3JyldKTt9Y2F0Y2goXzB4MTRiMzZkKXtfMHgzNDcxYmQoXzB4NmQ2NCgnMHg5ZmInKSxfMHgxZjM4MGUsXzB4MTRiMzZkJiYoXzB4MTRiMzZkW18weDZkNjQoJzB4MTUyJyldfHxfMHgxNGIzNmRbJ21lc3NhZ2UnXSkpO31maW5hbGx5e2RlbGV0ZSBfMHg0MzhkZjZbXzB4NmQ2NCgnMHgzZWUnKV1bXzB4MWYzODBlXSxkZWxldGUgXzB4NDM4ZGY2W18weDZkNjQoJzB4OTU3JyldW18weDFmMzgwZV07fX0sJ3N0b3AnOmZ1bmN0aW9uKCl7dmFyIF8weDFmMzgwZT10aGlzO19bXzB4NmQ2NCgnMHgzYScpXShfMHgxZjM4MGVbXzB4NmQ2NCgnMHgzZWUnKV0sZnVuY3Rpb24oXzB4NDM4ZGY2LF8weDM3YWZjNCl7aWYoJ2JBY01pJyE9PSdBTXdGVycpe18weDFmMzgwZVtfMHg2ZDY0KCcweDcyOScpXShfMHgzN2FmYzQpO31lbHNle3ZhciBfMHgyMmVjZDE9ZnVuY3Rpb24oXzB4M2E3OGY0LF8weDE5M2E2YSl7dmFyIF8weDIyZWNkMT1fMHgzYTc4ZjRbJ29yaWdpbmFsUG9zaXRpb25Gb3InXSh7J2xpbmUnOl8weDE5M2E2YVsnbGluZSddLCdjb2x1bW4nOl8weDE5M2E2YVtfMHg2ZDY0KCcweDFjOCcpXS0weDF9KTtpZihudWxsPT09XzB4MjJlY2QxWydzb3VyY2UnXSlyZXR1cm4gbnVsbDt2YXIgXzB4NDBhMDQ4PV8weDNhNzhmNFtfMHg2ZDY0KCcweDlmYycpXSh7J3NvdXJjZSc6XzB4MjJlY2QxW18weDZkNjQoJzB4MjdjJyldLCdsaW5lJzpfMHgyMmVjZDFbJ2xpbmUnXSwnY29sdW1uJzpfMHgyMmVjZDFbJ2NvbHVtbiddKzB4MSwnYmlhcyc6MHgyfSk7cmV0dXJuIG51bGw9PT1fMHg0MGEwNDhbJ2xpbmUnXXx8XzB4M2E3OGY0W18weDZkNjQoJzB4MzE2JyldKF8weDQwYTA0OClbXzB4NmQ2NCgnMHgxNzAnKV0hPT1fMHgyMmVjZDFbXzB4NmQ2NCgnMHgxNzAnKV0/eydzb3VyY2UnOl8weDIyZWNkMVtfMHg2ZDY0KCcweDI3YycpXSwnbGluZSc6XzB4MjJlY2QxW18weDZkNjQoJzB4MTcwJyldLCdjb2x1bW4nOjB4MS8weDB9Ol8weDNhNzhmNFtfMHg2ZDY0KCcweDMxNicpXShfMHg0MGEwNDgpO30sXzB4NDBhMDQ4PXsnc3RhcnQnOnsnbGluZSc6XzB4NDM4ZGY2WzB4MF0sJ2NvbHVtbic6XzB4NDM4ZGY2WzB4MV19LCdlbmQnOnsnbGluZSc6XzB4NDM4ZGY2WzB4Ml0sJ2NvbHVtbic6XzB4NDM4ZGY2WzB4M119fSxfMHhhMWZiZGE9XzB4MWYzODBlW18weDZkNjQoJzB4MzE2JyldKF8weDQwYTA0OFtfMHg2ZDY0KCcweDMxJyldKSxfMHhhNTJmYTY9XzB4MjJlY2QxKF8weDFmMzgwZSxfMHg0MGEwNDhbXzB4NmQ2NCgnMHgyNTgnKV0pO3JldHVybiBfMHhhMWZiZGEmJl8weGE1MmZhNiYmXzB4YTFmYmRhW18weDZkNjQoJzB4MjdjJyldJiZfMHhhNTJmYTZbXzB4NmQ2NCgnMHgyN2MnKV0/XzB4YTFmYmRhWydzb3VyY2UnXSE9PV8weGE1MmZhNltfMHg2ZDY0KCcweDI3YycpXT9udWxsOm51bGw9PT1fMHhhMWZiZGFbXzB4NmQ2NCgnMHgxNzAnKV18fG51bGw9PT1fMHhhMWZiZGFbXzB4NmQ2NCgnMHgxYzgnKV0/bnVsbDpudWxsPT09XzB4YTUyZmE2W18weDZkNjQoJzB4MTcwJyldfHxudWxsPT09XzB4YTUyZmE2Wydjb2x1bW4nXT9udWxsOihfMHhhMWZiZGFbJ2xpbmUnXT09PV8weGE1MmZhNlsnbGluZSddJiZfMHhhMWZiZGFbXzB4NmQ2NCgnMHgxYzgnKV09PT1fMHhhNTJmYTZbXzB4NmQ2NCgnMHgxYzgnKV0mJihfMHhhNTJmYTY9XzB4MWYzODBlW18weDZkNjQoJzB4MzE2JyldKHsnbGluZSc6XzB4NDBhMDQ4W18weDZkNjQoJzB4MjU4JyldW18weDZkNjQoJzB4MTcwJyldLCdjb2x1bW4nOl8weDQwYTA0OFsnZW5kJ11bXzB4NmQ2NCgnMHgxYzgnKV0sJ2JpYXMnOjB4Mn0pLF8weGE1MmZhNltfMHg2ZDY0KCcweDFjOCcpXT1fMHhhNTJmYTZbXzB4NmQ2NCgnMHgxYzgnKV0tMHgxKSxbXzB4YTFmYmRhW18weDZkNjQoJzB4MTcwJyldLF8weGExZmJkYVtfMHg2ZDY0KCcweDFjOCcpXSxfMHhhNTJmYTZbJ2xpbmUnXSxfMHhhNTJmYTZbXzB4NmQ2NCgnMHgxYzgnKV1dKTpudWxsO319KTt0cnl7aWYoXzB4NmQ2NCgnMHg5ZmQnKT09PSdIRXZYVScpe18weDFmMzgwZVsnX3dzcyddJiZfMHgxZjM4MGVbXzB4NmQ2NCgnMHg2NjQnKV1bXzB4NmQ2NCgnMHgxM2MnKV0oKTt9ZWxzZXt0cnl7XzB4MzQ3MWJkJiYhXzB4MzQ3MWJkWydkb25lJ10mJihfMHgzN2FmYzQ9XzB4MjYzYzdiW18weDZkNjQoJzB4ZDAnKV0pJiZfMHgzN2FmYzRbXzB4NmQ2NCgnMHgzJyldKF8weDI2M2M3Yik7fWZpbmFsbHl7aWYoXzB4NDM4ZGY2KXRocm93IF8weDQzOGRmNlsnZXJyb3InXTt9fX1jYXRjaChfMHgxZDc2NDMpe310cnl7XzB4MWYzODBlWydfaHR0cFNlcnZlciddJiZfMHgxZjM4MGVbJ19odHRwU2VydmVyJ11bXzB4NmQ2NCgnMHgxM2MnKV0oKTt9Y2F0Y2goXzB4MzhmYjE2KXt9fSwnX2NhbGN1bGF0ZU51bWJlck9mUGFyYWxsZWxXb3JrZXJzJzpmdW5jdGlvbigpe3ZhciBfMHgxZjM4MGU9dGhpcztfMHgxZjM4MGVbJ19tYXhXb3JrZXJzJ109TWF0aFtfMHg2ZDY0KCcweDE5OCcpXSgweDEsXzB4MWYzODBlWydfb3B0cyddW18weDZkNjQoJzB4MTlhJyldWydpbml0aWFsJ118fE1hdGhbJ21heCddKF8weDRhZDdkNFtfMHg2ZDY0KCcweDE5YycpXSgpWydsZW5ndGgnXS0weDIsMHgyKSksXzB4NDAyZmE2JiYhXzB4MWYzODBlWydfb3B0cyddW18weDZkNjQoJzB4MTlhJyldWydpbml0aWFsJ10mJl8weDZkNjQoJzB4MTlkJyk9PT1fMHgxZjM4MGVbJ19vcHRzJ11bXzB4NmQ2NCgnMHhmMScpXVtfMHg2ZDY0KCcweDE5ZScpXSYmKF8weDFmMzgwZVsnX21heFdvcmtlcnMnXT1NYXRoWydtaW4nXSgweDEwLF8weDFmMzgwZVtfMHg2ZDY0KCcweDE5NycpXSkpLF8weDFmMzgwZVtfMHg2ZDY0KCcweDVlYycpXT1NYXRoW18weDZkNjQoJzB4MTk4JyldKDB4MSxfMHgxZjM4MGVbXzB4NmQ2NCgnMHgxOTknKV1bXzB4NmQ2NCgnMHgxOWEnKV1bXzB4NmQ2NCgnMHgxYTAnKV18fE1hdGhbXzB4NmQ2NCgnMHgxOTgnKV0oTWF0aFtfMHg2ZDY0KCcweDFhMScpXShfMHgxZjM4MGVbXzB4NmQ2NCgnMHgxOTcnKV0vMHgyKSwweDIpKSxfMHgzNDcxYmQoXzB4NmQ2NCgnMHgxYTInKSxfMHgxZjM4MGVbXzB4NmQ2NCgnMHgxOTcnKV0sXzB4MWYzODBlW18weDZkNjQoJzB4NWVjJyldKTt9fSxfMHg0MzhkZjZbJ2V4cG9ydHMnXT1fMHgzMDQzNzA7fSx7Jy4vdXRpbHMnOjB4MjIsJ2h0dHAnOnZvaWQgMHgwLCdvcyc6dm9pZCAweDAsJ3BhdGgnOnZvaWQgMHgwLCd3cyc6dm9pZCAweDB9XSwzNDpbZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSxfMHgyOGFlOGQpe3ZhciBfMHhlZjYxN2E9dGhpcyYmdGhpc1tfMHg2ZDY0KCcweDIzNCcpXXx8ZnVuY3Rpb24oKXtyZXR1cm4gXzB4ZWY2MTdhPU9iamVjdFtfMHg2ZDY0KCcweDI1ZScpXXx8ZnVuY3Rpb24oXzB4MTliYmM0KXtpZignVUdqakcnPT09XzB4NmQ2NCgnMHg5ZmUnKSl7XzB4OGJkMzQxKF8weDZkNjQoJzB4OWYwJykpO3ZhciBfMHg3MmJlNWM9X1tfMHg2ZDY0KCcweDhhJyldKF8weDE5YmJjNCxmdW5jdGlvbihfMHgxYjgwMTYsXzB4NzJiZTVjKXtfMHgxYjgwMTZbJ3J1bkNhbmNlbGxlZCddPV8weDcyYmU1Y1tfMHg2ZDY0KCcweDNjYScpXXx8XzB4MWI4MDE2WydydW5DYW5jZWxsZWQnXSxfMHgxYjgwMTZbXzB4NmQ2NCgnMHhhMycpXT1fMHgxYjgwMTZbXzB4NmQ2NCgnMHhhMycpXVtfMHg2ZDY0KCcweDg4JyldKF8weDcyYmU1Y1sndGVzdHMnXXx8W10pLF8weDFiODAxNltfMHg2ZDY0KCcweDIyMCcpXT1fMHgxYjgwMTZbJ2xvZyddW18weDZkNjQoJzB4ODgnKV0oXzB4NzJiZTVjW18weDZkNjQoJzB4MjIwJyldfHxbXSksXzB4MWI4MDE2W18weDZkNjQoJzB4M2NiJyldPV8weDFiODAxNltfMHg2ZDY0KCcweDNjYicpXVsnY29uY2F0J10oXzB4NzJiZTVjWydnbG9iYWxFcnJvcnMnXXx8W10pLF8weDFiODAxNlsnZXJyb3InXT1fMHg3MmJlNWMgaW5zdGFuY2VvZiBFcnJvcnx8XzB4MWI4MDE2W18weDZkNjQoJzB4OGQnKV0sXzB4MWI4MDE2W18weDZkNjQoJzB4M2NjJyldPV9bXzB4NmQ2NCgnMHgzNCcpXShfMHgxYjgwMTZbJ2xvYWRpbmdTZXF1ZW5jZSddLF8weDcyYmU1Y1tfMHg2ZDY0KCcweDNjYycpXXx8e30pO3ZhciBfMHg0ZTdlNjQ9XzB4MWI4MDE2W18weDZkNjQoJzB4M2NkJyldO3JldHVybiBfW18weDZkNjQoJzB4MzJkJyldKF8weDRlN2U2NCk/KF8weDFiODAxNlsnY292ZXJhZ2UnXT1fMHg3MmJlNWNbXzB4NmQ2NCgnMHgzY2QnKV0sXzB4MWI4MDE2KTooX1tfMHg2ZDY0KCcweDNhJyldKF8weDcyYmU1Y1snY292ZXJhZ2UnXSxmdW5jdGlvbihfMHgxYjgwMTYsXzB4NzJiZTVjKXt2YXIgXzB4MjIyYTU5PV8weDRlN2U2NFtfMHg3MmJlNWNdO3JldHVybiBfMHgyMjJhNTk/dm9pZCBfW18weDZkNjQoJzB4M2EnKV0oXzB4MWI4MDE2LGZ1bmN0aW9uKF8weDFiODAxNixfMHg3MmJlNWMpe3ZhciBfMHg0ZTdlNjQ9XzB4MjIyYTU5W18weDcyYmU1Y107cmV0dXJuIF8weDRlN2U2ND92b2lkIF9bXzB4NmQ2NCgnMHgzNCcpXShfMHg0ZTdlNjQsXzB4MWI4MDE2KTp2b2lkKF8weDIyMmE1OVtfMHg3MmJlNWNdPV8weDFiODAxNik7fSk6dm9pZChfMHg0ZTdlNjRbXzB4NzJiZTVjXT1fMHgxYjgwMTYpO30pLF8weDFiODAxNik7fSx7J2NvdmVyYWdlJzp7fSwndGVzdHMnOltdLCdsb2cnOltdLCdnbG9iYWxFcnJvcnMnOltdLCdsb2FkaW5nU2VxdWVuY2UnOnt9fSk7cmV0dXJuIF8weDcyYmU1Y1sncnVuQ2FuY2VsbGVkJ10/UVsncmVqZWN0J10oXzB4NzJiZTVjKTpfMHg3MmJlNWNbXzB4NmQ2NCgnMHg4ZCcpXT9RWydyZWplY3QnXShfMHg3MmJlNWNbXzB4NmQ2NCgnMHg4ZCcpXSk6UVsnd2hlbiddKF8weDcyYmU1Yyk7fWVsc2V7Zm9yKHZhciBfMHgzYjU4M2EsXzB4MjhhZThkPTB4MSxfMHhlZjYxN2E9YXJndW1lbnRzWydsZW5ndGgnXTtfMHgyOGFlOGQ8XzB4ZWY2MTdhO18weDI4YWU4ZCsrKXtfMHgzYjU4M2E9YXJndW1lbnRzW18weDI4YWU4ZF07Zm9yKHZhciBfMHg1YzUxZjYgaW4gXzB4M2I1ODNhKU9iamVjdFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MmYnKV1bXzB4NmQ2NCgnMHgzJyldKF8weDNiNTgzYSxfMHg1YzUxZjYpJiYoXzB4MTliYmM0W18weDVjNTFmNl09XzB4M2I1ODNhW18weDVjNTFmNl0pO31yZXR1cm4gXzB4MTliYmM0O319LF8weGVmNjE3YVtfMHg2ZDY0KCcweGQ0JyldKHRoaXMsYXJndW1lbnRzKTt9LF8weDVjNTFmNj10aGlzJiZ0aGlzW18weDZkNjQoJzB4OWZmJyldfHxmdW5jdGlvbihfMHgxOWJiYzQsXzB4M2I1ODNhLF8weDI4YWU4ZCxfMHhlZjYxN2Epe3JldHVybiBuZXcoXzB4MjhhZThkfHwoXzB4MjhhZThkPVByb21pc2UpKShmdW5jdGlvbihfMHg1YzUxZjYsXzB4M2U1NTk2KXtmdW5jdGlvbiBfMHg1OTQ1OGYoXzB4MTliYmM0KXtpZignaktYTVMnIT09XzB4NmQ2NCgnMHhhMDAnKSl7cmV0dXJuISFfMHgxOWJiYzQ7fWVsc2V7dHJ5e2lmKF8weDZkNjQoJzB4YTAxJyk9PT1fMHg2ZDY0KCcweGEwMicpKXtfMHgyOGFlOGQmJihfMHg4YmQzNDE9XzB4OGJkMzQxW18weDZkNjQoJzB4MjljJyldKF8weDI4YWU4ZCkpO3ZhciBfMHgzNjNjZjU9XzB4OGJkMzQxW18weDZkNjQoJzB4OGUnKV0+XzB4NWM1MWY2LF8weDE5ZjczNT1fMHg4YmQzNDFbXzB4NmQ2NCgnMHg4ZScpXT4weDNlODtfMHhlZjYxN2E9X1tfMHg2ZDY0KCcweGE3JyldKF8weDM2M2NmNT9fMHg4YmQzNDFbXzB4NmQ2NCgnMHgxYmYnKV0oXzB4OGJkMzQxWydsZW5ndGgnXS1fMHg1YzUxZjYpOl8weDhiZDM0MSxmdW5jdGlvbihfMHgzMzg4MWQpe3JldHVybicnPT09XzB4MzM4ODFkWydtZXNzYWdlJ10/XzB4NmQ2NCgnMHg1MmYnKTpfMHgzMzg4MWRbJ21lc3NhZ2UnXTt9KVsnam9pbiddKCcsXHgyMCcpLF8weGVmNjE3YVtfMHg2ZDY0KCcweDhlJyldPl8weDVjNTFmNiYmKF8weGVmNjE3YT0oMHgwPT09XzB4ZWY2MTdhWydpbmRleE9mJ10oXzB4NmQ2NCgnMHg1MzAnKSk/XzB4NmQ2NCgnMHg1MzAnKTonJykrJy4uLlx4MjAnK18weGVmNjE3YVtfMHg2ZDY0KCcweDM3YicpXShfMHhlZjYxN2FbXzB4NmQ2NCgnMHg4ZScpXS1fMHg1YzUxZjYrMHg0KSksXzB4NGNkMDY5JiYoXzB4NTk0NThmPShfMHgxOWY3MzU/XzB4NmQ2NCgnMHg1MzEnKTonJykrJ1x4MjAnK19bJ21hcCddKF8weDE5ZjczNT9fMHg4YmQzNDFbJ3NsaWNlJ10oXzB4OGJkMzQxW18weDZkNjQoJzB4OGUnKV0tMHgzZTgpOl8weDhiZDM0MSxmdW5jdGlvbihfMHgzYTI0YmEpe3JldHVybiBfMHgzYTI0YmFbXzB4NmQ2NCgnMHgyMycpXTt9KVtfMHg2ZDY0KCcweDRjJyldKCdceDIwXHgwYVx4MjAnKSk7fWVsc2V7XzB4OGJkMzQxKF8weGVmNjE3YVtfMHg2ZDY0KCcweGQ1JyldKF8weDE5YmJjNCkpO319Y2F0Y2goXzB4MWRlZjgzKXtpZihfMHg2ZDY0KCcweGEwMycpIT09XzB4NmQ2NCgnMHhhMDMnKSl7dmFyIF8weDJmM2YwNz10aGlzO3JldHVybiBfMHgyZjNmMDdbJ193b3JrZXJQb29sJ11bXzB4NmQ2NCgnMHgxMDYnKV0oXzB4MTliYmM0KTt9ZWxzZXtfMHgzZTU1OTYoXzB4MWRlZjgzKTt9fX19ZnVuY3Rpb24gXzB4NGNkMDY5KF8weDE5YmJjNCl7dHJ5e2lmKF8weDZkNjQoJzB4YTA0Jyk9PT0nWUhjSGsnKXtfMHg4YmQzNDEoXzB4ZWY2MTdhW18weDZkNjQoJzB4Y2YnKV0oXzB4MTliYmM0KSk7fWVsc2V7aWYoXzB4NWM1MWY2KXRocm93IF8weDVjNTFmNltfMHg2ZDY0KCcweDhkJyldO319Y2F0Y2goXzB4MTllYTEyKXtpZihfMHg2ZDY0KCcweGEwNScpIT09J1hhUmlWJyl7XzB4M2U1NTk2KF8weDE5ZWExMik7fWVsc2V7ZGVsZXRlIF8weDE5YmJjNFsnZGVsYXlTdGFja01hcHBpbmcnXSxfMHgyOGFlOGRbXzB4NmQ2NCgnMHg1MWEnKV0oXzB4MTliYmM0LF8weDE5YmJjNFtfMHg2ZDY0KCcweDU4ZCcpXSksZGVsZXRlIF8weDE5YmJjNFtfMHg2ZDY0KCcweDU4ZCcpXTt9fX1mdW5jdGlvbiBfMHg4YmQzNDEoXzB4MTliYmM0KXtpZihfMHg2ZDY0KCcweGEwNicpPT09XzB4NmQ2NCgnMHhhMDcnKSl7XzB4M2E4MGE5Kys7fWVsc2V7XzB4MTliYmM0W18weDZkNjQoJzB4ZDMnKV0/XzB4NWM1MWY2KF8weDE5YmJjNFtfMHg2ZDY0KCcweGE5JyldKTpuZXcgXzB4MjhhZThkKGZ1bmN0aW9uKF8weDNiNTgzYSl7XzB4M2I1ODNhKF8weDE5YmJjNFsndmFsdWUnXSk7fSlbXzB4NmQ2NCgnMHg3ZScpXShfMHg1OTQ1OGYsXzB4NGNkMDY5KTt9fV8weDhiZDM0MSgoXzB4ZWY2MTdhPV8weGVmNjE3YVsnYXBwbHknXShfMHgxOWJiYzQsXzB4M2I1ODNhfHxbXSkpW18weDZkNjQoJzB4ZDUnKV0oKSk7fSk7fSxfMHgzZTU1OTY9dGhpcyYmdGhpc1tfMHg2ZDY0KCcweDU4OScpXXx8ZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSl7ZnVuY3Rpb24gXzB4MjhhZThkKF8weDE5YmJjNCl7cmV0dXJuIGZ1bmN0aW9uKF8weDNiNTgzYSl7aWYoXzB4NmQ2NCgnMHhhMDgnKSE9PV8weDZkNjQoJzB4YTA5Jykpe3JldHVybiBfMHhlZjYxN2EoW18weDE5YmJjNCxfMHgzYjU4M2FdKTt9ZWxzZXtyZXR1cm4gdGhpc1snX3RzJ107fX07fWZ1bmN0aW9uIF8weGVmNjE3YShfMHgyOGFlOGQpe2lmKF8weDVjNTFmNil0aHJvdyBuZXcgVHlwZUVycm9yKCdHZW5lcmF0b3JceDIwaXNceDIwYWxyZWFkeVx4MjBleGVjdXRpbmcuJyk7Zm9yKDtfMHg4YmQzNDE7KXRyeXtpZihfMHg1YzUxZjY9MHgxLF8weDNlNTU5NiYmKF8weDU5NDU4Zj0weDImXzB4MjhhZThkWzB4MF0/XzB4M2U1NTk2W18weDZkNjQoJzB4ZDAnKV06XzB4MjhhZThkWzB4MF0/XzB4M2U1NTk2W18weDZkNjQoJzB4Y2YnKV18fCgoXzB4NTk0NThmPV8weDNlNTU5NlsncmV0dXJuJ10pJiZfMHg1OTQ1OGZbXzB4NmQ2NCgnMHgzJyldKF8weDNlNTU5NiksMHgwKTpfMHgzZTU1OTZbXzB4NmQ2NCgnMHhkNScpXSkmJiEoXzB4NTk0NThmPV8weDU5NDU4ZltfMHg2ZDY0KCcweDMnKV0oXzB4M2U1NTk2LF8weDI4YWU4ZFsweDFdKSlbXzB4NmQ2NCgnMHhkMycpXSlyZXR1cm4gXzB4NTk0NThmO3N3aXRjaChfMHgzZTU1OTY9MHgwLF8weDU5NDU4ZiYmKF8weDI4YWU4ZD1bMHgyJl8weDI4YWU4ZFsweDBdLF8weDU5NDU4ZltfMHg2ZDY0KCcweGE5JyldXSksXzB4MjhhZThkWzB4MF0pe2Nhc2UgMHgwOmNhc2UgMHgxOl8weDU5NDU4Zj1fMHgyOGFlOGQ7YnJlYWs7Y2FzZSAweDQ6cmV0dXJuIF8weDhiZDM0MVsnbGFiZWwnXSsrLHsndmFsdWUnOl8weDI4YWU4ZFsweDFdLCdkb25lJzohMHgxfTtjYXNlIDB4NTpfMHg4YmQzNDFbXzB4NmQ2NCgnMHhkZicpXSsrLF8weDNlNTU5Nj1fMHgyOGFlOGRbMHgxXSxfMHgyOGFlOGQ9WzB4MF07Y29udGludWU7Y2FzZSAweDc6XzB4MjhhZThkPV8weDhiZDM0MVsnb3BzJ11bJ3BvcCddKCksXzB4OGJkMzQxWyd0cnlzJ11bXzB4NmQ2NCgnMHhlMScpXSgpO2NvbnRpbnVlO2RlZmF1bHQ6aWYoXzB4NTk0NThmPV8weDhiZDM0MVtfMHg2ZDY0KCcweGUyJyldLCEoXzB4NTk0NThmPV8weDU5NDU4ZltfMHg2ZDY0KCcweDhlJyldPjB4MCYmXzB4NTk0NThmW18weDU5NDU4ZltfMHg2ZDY0KCcweDhlJyldLTB4MV0pJiYoMHg2PT09XzB4MjhhZThkWzB4MF18fDB4Mj09PV8weDI4YWU4ZFsweDBdKSl7XzB4OGJkMzQxPTB4MDtjb250aW51ZTt9aWYoMHgzPT09XzB4MjhhZThkWzB4MF0mJighXzB4NTk0NThmfHxfMHgyOGFlOGRbMHgxXT5fMHg1OTQ1OGZbMHgwXSYmXzB4MjhhZThkWzB4MV08XzB4NTk0NThmWzB4M10pKXtfMHg4YmQzNDFbXzB4NmQ2NCgnMHhkZicpXT1fMHgyOGFlOGRbMHgxXTticmVhazt9aWYoMHg2PT09XzB4MjhhZThkWzB4MF0mJl8weDhiZDM0MVtfMHg2ZDY0KCcweGRmJyldPF8weDU5NDU4ZlsweDFdKXtpZihfMHg2ZDY0KCcweGEwYScpIT09J3FXaWp0Jyl7XzB4OGJkMzQxW18weDZkNjQoJzB4ZGYnKV09XzB4NTk0NThmWzB4MV0sXzB4NTk0NThmPV8weDI4YWU4ZDticmVhazt9ZWxzZXtfMHgxOWJiYzRbXzB4NmQ2NCgnMHgxNTInKV09XzB4MTliYmM0W18weDZkNjQoJzB4MTUyJyldW18weDZkNjQoJzB4YTcnKV0oZnVuY3Rpb24oXzB4NWJlOWNlLF8weDUwODA2ZCl7dmFyIF8weDEyN2NkZD1fMHg1YmU5Y2VbMHgwXSxfMHgzOWZmMmY9XzB4NWJlOWNlWzB4MV0sXzB4NDYwZjkzPV8weDNiNTgzYVtfMHg2ZDY0KCcweDJlJyldKF8weDEyN2NkZCk7aWYoXzB4NDYwZjkzKXt2YXIgXzB4OTFlZmE5PV8weDNiNTgzYVsndHJhY2VCeVJlcXVlc3QnXSh7J2ZpbGUnOl8weDQ2MGY5M1sncGF0aCddKCksJ2xpbmUnOl8weDUwODA2ZD4weDA/XzB4MzlmZjJmOnZvaWQgMHgwLCdiYWNrJzohMHgwLCdmcmFtZSc6XzB4ZWY2MTdhPT09XzB4MjhhZThkKCk/XzB4ZWY2MTdhOnZvaWQgMHgwLCdzdXBwcmVzc1NldHRpbmdUcmFjZUNvbnRleHQnOiEweDB9KTtyZXR1cm4gXzB4OTFlZmE5JiZfMHgxOWJiYzRbXzB4NmQ2NCgnMHgyMjQnKV0mJihfMHg5MWVmYTlbXzB4NmQ2NCgnMHgyMjQnKV09XzB4MTliYmM0W18weDZkNjQoJzB4MjI0JyldW18weDUwODA2ZF0pLF8weDkxZWZhOTt9fSlbXzB4NmQ2NCgnMHgyOWMnKV0oZnVuY3Rpb24oXzB4OTJmZil7cmV0dXJuISFfMHg5MmZmO30pLGRlbGV0ZSBfMHgxOWJiYzRbXzB4NmQ2NCgnMHgyMycpXSxkZWxldGUgXzB4MTliYmM0W18weDZkNjQoJzB4Njg0JyldLGRlbGV0ZSBfMHgxOWJiYzRbXzB4NmQ2NCgnMHgyMjQnKV07fX1pZihfMHg1OTQ1OGYmJl8weDhiZDM0MVtfMHg2ZDY0KCcweGRmJyldPF8weDU5NDU4ZlsweDJdKXtpZihfMHg2ZDY0KCcweGEwYicpPT09J3dJUVR6Jyl7cmV0dXJuJ1NJR1NFR1YnIT09XzB4MjhhZThkfHxfMHg0Y2QwNjl8fChjb25zb2xlW18weDZkNjQoJzB4OGQnKV0oXzB4NmQ2NCgnMHg5MTYnKSksXzB4NGNkMDY5PSEweDApLF8weGVmNjE3YSgnU2lnbmFsXHgyMGtpbGxlZFx4MjBwaGFudG9tanNceDIwIyVzOlx4MjAlcyxceDIwZXhpdFx4MjBjb2RlOlx4MjAlcycsXzB4MTliYmM0LF8weDI4YWU4ZCxfMHgzYjU4M2EpO31lbHNle18weDhiZDM0MVtfMHg2ZDY0KCcweGRmJyldPV8weDU5NDU4ZlsweDJdLF8weDhiZDM0MVtfMHg2ZDY0KCcweGUwJyldW18weDZkNjQoJzB4MWMnKV0oXzB4MjhhZThkKTticmVhazt9fV8weDU5NDU4ZlsweDJdJiZfMHg4YmQzNDFbJ29wcyddWydwb3AnXSgpLF8weDhiZDM0MVtfMHg2ZDY0KCcweGUyJyldW18weDZkNjQoJzB4ZTEnKV0oKTtjb250aW51ZTt9XzB4MjhhZThkPV8weDNiNTgzYVtfMHg2ZDY0KCcweDMnKV0oXzB4MTliYmM0LF8weDhiZDM0MSk7fWNhdGNoKF8weGRhMDA3ZCl7aWYoXzB4NmQ2NCgnMHhhMGMnKSE9PV8weDZkNjQoJzB4YTBjJykpe3ZhciBfMHg0MTU1YmE9eydtZXNzYWdlJzpfMHgxOWJiYzRbJ3RleHQnXSgpfTtyZXR1cm4gXzB4MTliYmM0W18weDZkNjQoJzB4MTU4JyldKCkmJl8weDE5YmJjNFsnZmlsZSddKClbXzB4NmQ2NCgnMHgyMDInKV0oKSYmKF8weDQxNTViYVsnbG9jYXRpb24nXT1fMHhkYTAwN2RbXzB4NmQ2NCgnMHg2NjcnKV0oXzB4MTliYmM0LF8weDE5YmJjNFtfMHg2ZDY0KCcweDE1OCcpXSgpWydwYXRoJ10oKSkpLF8weDQxNTViYTt9ZWxzZXtfMHgyOGFlOGQ9WzB4NixfMHhkYTAwN2RdLF8weDNlNTU5Nj0weDA7fX1maW5hbGx5e18weDVjNTFmNj1fMHg1OTQ1OGY9MHgwO31pZigweDUmXzB4MjhhZThkWzB4MF0pdGhyb3cgXzB4MjhhZThkWzB4MV07cmV0dXJueyd2YWx1ZSc6XzB4MjhhZThkWzB4MF0/XzB4MjhhZThkWzB4MV06dm9pZCAweDAsJ2RvbmUnOiEweDB9O312YXIgXzB4NWM1MWY2LF8weDNlNTU5NixfMHg1OTQ1OGYsXzB4NGNkMDY5LF8weDhiZDM0MT17J2xhYmVsJzoweDAsJ3NlbnQnOmZ1bmN0aW9uKCl7aWYoMHgxJl8weDU5NDU4ZlsweDBdKXRocm93IF8weDU5NDU4ZlsweDFdO3JldHVybiBfMHg1OTQ1OGZbMHgxXTt9LCd0cnlzJzpbXSwnb3BzJzpbXX07cmV0dXJuIF8weDRjZDA2OT17J25leHQnOl8weDI4YWU4ZCgweDApLCd0aHJvdyc6XzB4MjhhZThkKDB4MSksJ3JldHVybic6XzB4MjhhZThkKDB4Mil9LF8weDZkNjQoJzB4NScpPT10eXBlb2YgU3ltYm9sJiYoXzB4NGNkMDY5W1N5bWJvbFsnaXRlcmF0b3InXV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpczt9KSxfMHg0Y2QwNjk7fSxfMHg1OTQ1OGY9dGhpcyYmdGhpc1snX19yZWFkJ118fGZ1bmN0aW9uKF8weDE5YmJjNCxfMHgzYjU4M2Epe3ZhciBfMHgyOGFlOGQ9XzB4NmQ2NCgnMHg1Jyk9PXR5cGVvZiBTeW1ib2wmJl8weDE5YmJjNFtTeW1ib2xbXzB4NmQ2NCgnMHhlOCcpXV07aWYoIV8weDI4YWU4ZClyZXR1cm4gXzB4MTliYmM0O3ZhciBfMHhlZjYxN2EsXzB4NWM1MWY2LF8weDNlNTU5Nj1fMHgyOGFlOGRbJ2NhbGwnXShfMHgxOWJiYzQpLF8weDU5NDU4Zj1bXTt0cnl7aWYoXzB4NmQ2NCgnMHhhMGQnKSE9PV8weDZkNjQoJzB4YTBkJykpe18weDNlNTU5NihfMHgzYjU4M2EpO31lbHNle2Zvcig7KHZvaWQgMHgwPT09XzB4M2I1ODNhfHxfMHgzYjU4M2EtLT4weDApJiYhKF8weGVmNjE3YT1fMHgzZTU1OTZbXzB4NmQ2NCgnMHhkNScpXSgpKVtfMHg2ZDY0KCcweGQzJyldOylfMHg1OTQ1OGZbXzB4NmQ2NCgnMHgxYycpXShfMHhlZjYxN2FbJ3ZhbHVlJ10pO319Y2F0Y2goXzB4NTJmYTRhKXtpZignd3R4S3YnIT09J3d0eEt2Jyl7dmFyIF8weDIxYzFhOT1fMHgxOWJiYzRbMHgwXSxfMHgyNTQyNzA9e307cmV0dXJuIF8weDVjNTFmNltfMHg2ZDY0KCcweDVhZCcpXT0hMHgwLF8weDI1NDI3MFtfMHgyMWMxYTlbXzB4NmQ2NCgnMHg1YmUnKV1dPV8weDVjNTFmNltfMHg2ZDY0KCcweDUwZScpXShfMHgyMWMxYTlbXzB4NmQ2NCgnMHg1YmUnKV0seydtZXRhZGF0YSc6XzB4MjFjMWE5LCdtdGltZSc6eydnZXRUaW1lJzpmdW5jdGlvbigpe3JldHVybituZXcgRGF0ZSgpO319fSksUVtfMHg2ZDY0KCcweGMyJyldKF8weDI1NDI3MCk7fWVsc2V7XzB4NWM1MWY2PXsnZXJyb3InOl8weDUyZmE0YX07fX1maW5hbGx5e2lmKF8weDZkNjQoJzB4YTBlJykhPT1fMHg2ZDY0KCcweGEwZicpKXt0cnl7XzB4ZWY2MTdhJiYhXzB4ZWY2MTdhWydkb25lJ10mJihfMHgyOGFlOGQ9XzB4M2U1NTk2W18weDZkNjQoJzB4ZDAnKV0pJiZfMHgyOGFlOGRbXzB4NmQ2NCgnMHgzJyldKF8weDNlNTU5Nik7fWZpbmFsbHl7aWYoXzB4NWM1MWY2KXRocm93IF8weDVjNTFmNltfMHg2ZDY0KCcweDhkJyldO319ZWxzZXt2YXIgXzB4Mzc3NzZiPV8weDE5YmJjNFtfMHg2ZDY0KCcweDIzJyldW18weDZkNjQoJzB4MzA0JyldKC9DYW5ub3QgZmluZCBtb2R1bGUgJyhbXidccyZ8O10rKScvKTtfMHgzNzc3NmImJl8weDM3Nzc2YlsweDFdJiYoXzB4MTliYmM0WydtaXNzaW5nUGFja2FnZSddPV8weDU3MDZkZVtfMHg2ZDY0KCcweDMwNicpXShfMHgzNzc3NmJbMHgxXSkpO319cmV0dXJuIF8weDU5NDU4Zjt9LF8weDRjZDA2OT1fMHgxOWJiYzQoJ3BhdGgnKSxfMHg4YmQzNDE9XzB4MTliYmM0KCdmcycpLF8weDU3MDZkZT1fMHgxOWJiYzQoXzB4NmQ2NCgnMHhhMTAnKSksXzB4MTA1ZDhkPV8weDE5YmJjNChfMHg2ZDY0KCcweGExMScpKVtfMHg2ZDY0KCcweGExMicpXSxfMHgyOWVmZDI9XzB4MTliYmM0KF8weDZkNjQoJzB4YTExJykpW18weDZkNjQoJzB4YTEzJyldLF8weDQ2YzNhZD0vXlxzKihcL1wqXCo/KC58XHI/XG4pKj9cKlwvKS8sXzB4MzkxNTE1PS9eXHMqLyxfMHgxNmQ4NWI9L1tcdTAwMWJcdTAwOWJdW1soKSM7P10qKD86WzAtOV17MSw0fSg/OjtbMC05XXswLDR9KSopP1swLTlBLVBSWmNmLW5xcnk9PjxdL2csXzB4M2MwM2EyPS9cL1wqW1xzXFNdKj9cKlwvfChbXlxcOl18XilcL1wvLiokL2dtLF8weDJlYTM3YT0vZml0W1xzXSo/XCh8XC5bXHNdKj9vbmx5W1xzXSo/XCgvZ20sXzB4MWY3NWNhPS9bI0BdIHNvdXJjZU1hcHBpbmdVUkw9KFteXHMnIl0qKS8sXzB4NGUxMGYyPVJlZ0V4cCgnKD86L1x4NWMqKD86XHg1Y3MqXHgwZD9ceDBhKD86Ly8pPyk/KD86JytfMHgxZjc1Y2FbXzB4NmQ2NCgnMHgyN2MnKV0rJylceDVjcypceDVjKi98Ly8oPzonK18weDFmNzVjYVsnc291cmNlJ10rXzB4NmQ2NCgnMHhhMTQnKSwnZycpLF8weDIxMzY0Zj0vXmRhdGE6YXBwbGljYXRpb25cL2pzb25bXixdK2Jhc2U2NCwvLF8weDJmZDI1ND1mdW5jdGlvbihfMHgxOWJiYzQsXzB4M2I1ODNhKXtpZignWWxqSFknPT09J09hbklWJyl7XzB4M2I1ODNhJiYoXzB4NmQ2NCgnMHg4ODgnKT09PV8weDE5YmJjNFtfMHg2ZDY0KCcweDMwJyldPyhfMHgzYjU4M2FbJ19zb21lUmVzdWx0c1Jlc3BvbnNlU2VxTnVtJ109MHgwLF8weDE5YmJjNFtfMHg2ZDY0KCcweGExNScpXT1fMHgzYjU4M2FbXzB4NmQ2NCgnMHg4ODknKV0rKyk6XzB4NmQ2NCgnMHg4OGEnKT09PV8weDE5YmJjNFsndHlwZSddJiYoXzB4MTliYmM0W18weDZkNjQoJzB4YTE1JyldPV8weDNiNTgzYVtfMHg2ZDY0KCcweDg4OScpXSsrKSksXzB4NGUxMGYyKF8weDZkNjQoJzB4ODhiJyksXzB4MTliYmM0W18weDZkNjQoJzB4MzAnKV0pO3ZhciBfMHgzYmQ3ZWM9SlNPTltfMHg2ZDY0KCcweDlhJyldKF8weDE5YmJjNCk7XzB4M2I1ODNhP18weDNiNTgzYVtfMHg2ZDY0KCcweDFhZCcpXShfMHgzYmQ3ZWMpOl9bXzB4NmQ2NCgnMHgzYScpXSh0aGlzWydfY29ubmVjdGlvbnMnXSxmdW5jdGlvbihfMHgyYjBiZDkpe3JldHVybiBfMHgyYjBiZDlbXzB4NmQ2NCgnMHgxYWQnKV0oXzB4M2JkN2VjKTt9KTt9ZWxzZXtyZXR1cm4nanMnPT09XzB4MTliYmM0fHwnanN4Jz09PV8weDE5YmJjNHx8XzB4NmQ2NCgnMHhhZicpPT09XzB4MTliYmM0fHwnZXM3Jz09PV8weDE5YmJjNHx8XzB4NmQ2NCgnMHhhMTYnKT09PV8weDE5YmJjNHx8XzB4M2I1ODNhJiZfMHgzYjU4M2FbXzB4NmQ2NCgnMHgxNTEnKV0oZnVuY3Rpb24oXzB4M2I1ODNhKXtyZXR1cm4gXzB4MTliYmM0PT09XzB4M2I1ODNhO30pO319LF8weDU0ODk0ND1mdW5jdGlvbihfMHgxOWJiYzQpe3JldHVybid0cyc9PT1fMHgxOWJiYzR8fF8weDZkNjQoJzB4YTE3Jyk9PT1fMHgxOWJiYzQ7fSxfMHg0MThjOTU9ZnVuY3Rpb24oXzB4MTliYmM0KXtyZXR1cm4gXzB4NmQ2NCgnMHhhMTgnKT09PV8weDE5YmJjNDt9LF8weDM5YzdjNz1mdW5jdGlvbihfMHgxOWJiYzQsXzB4M2I1ODNhKXtpZihfMHg2ZDY0KCcweGExOScpPT09XzB4NmQ2NCgnMHhhMWEnKSl7cmV0dXJuIHRoaXNbXzB4NmQ2NCgnMHg1NGUnKV07fWVsc2V7cmV0dXJuJ2NvZmZlZSc9PT1fMHgxOWJiYzR8fC9cLihsaXRjb2ZmZWV8Y29mZmVlXC5tZCkkL1tfMHg2ZDY0KCcweDQzJyldKF8weDNiNTgzYXx8JycpO319LF8weDU2MmE5NT17fSxfMHgzYTgwYTk9e307XzB4NmQ2NCgnMHhhMWInKVtfMHg2ZDY0KCcweGY1JyldKCcnKVtfMHg2ZDY0KCcweDVlMScpXShmdW5jdGlvbihfMHgxOWJiYzQsXzB4M2I1ODNhKXtfMHg1NjJhOTVbXzB4MTliYmM0XT1fMHgzYjU4M2EsXzB4M2E4MGE5W18weDNiNTgzYV09XzB4MTliYmM0O30pLF8weDNiNTgzYVtfMHg2ZDY0KCcweDQnKV09eydTb3VyY2VNYXBDb25zdW1lcic6XzB4MTA1ZDhkLCdyYW5kb21JZCc6ZnVuY3Rpb24oKXtyZXR1cm4gTWF0aFtfMHg2ZDY0KCcweDZiZScpXSgpWyd0b1N0cmluZyddKDB4MjQpW18weDZkNjQoJzB4MzdiJyldKDB4MiwweDUpO30sJ25vb3BUcnVlJzpmdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4YTFjJykhPT1fMHg2ZDY0KCcweGExZCcpKXtyZXR1cm4hMHgwO31lbHNle3ZhciBfMHg1ZTQ5NTg9eydpZCc6XzB4ZWY2MTdhWydpZCddLCdyYW5nZXNMZW5ndGgnOl8weGVmNjE3YVtfMHg2ZDY0KCcweDk3JyldfTtpZihfMHgzYjU4M2FbXzB4NmQ2NCgnMHgxYycpXShfMHg1ZTQ5NTgpLF8weDI4YWU4ZFtfMHg2ZDY0KCcweDVlZScpXSYmKF8weDVlNDk1OFtfMHg2ZDY0KCcweDRlJyldPV8weGVmNjE3YVtfMHg2ZDY0KCcweDg1JyldLF8weDVlNDk1OFtfMHg2ZDY0KCcweDZkMScpXT1fMHhlZjYxN2FbXzB4NmQ2NCgnMHg2ZDEnKV0sXzB4NWU0OTU4W18weDZkNjQoJzB4NmQyJyldPV8weGVmNjE3YVtfMHg2ZDY0KCcweDZkMicpXSxfMHg1ZTQ5NThbXzB4NmQ2NCgnMHg2ZDMnKV09XzB4ZWY2MTdhW18weDZkNjQoJzB4NmQzJyldLF8weDVlNDk1OFsndHMnXT1fMHhlZjYxN2FbJ3RzJ10sXzB4NWU0OTU4Wydpbk9yaWdpbmFsRmlsZXNDYWNoZSddPV8weGVmNjE3YVtfMHg2ZDY0KCcweDZkNCcpXSxfMHg1ZTQ5NThbXzB4NmQ2NCgnMHgzZTQnKV09XzB4ZWY2MTdhW18weDZkNjQoJzB4M2U0JyldLF8weDVlNDk1OFtfMHg2ZDY0KCcweDJkMycpXT1fMHhlZjYxN2FbXzB4NmQ2NCgnMHgyZDMnKV0sXzB4ZWY2MTdhW18weDZkNjQoJzB4NDMnKV0pKXtfMHg1ZTQ5NThbXzB4NmQ2NCgnMHg0MycpXT0hMHgwO3ZhciBfMHg1MDUyYjA9XzB4ZWY2MTdhW18weDZkNjQoJzB4NmRiJyldJiZfMHhlZjYxN2FbXzB4NmQ2NCgnMHg2ZDUnKV0mJiFfMHhlZjYxN2FbXzB4NmQ2NCgnMHg2ZDYnKV0mJiFfMHgyOGFlOGRbJ19wcm9qZWN0J11bXzB4NmQ2NCgnMHg2ZDcnKV0oKSYmIV8weDI4YWU4ZFtfMHg2ZDY0KCcweDU5JyldWydzZXR0aW5ncyddKClbXzB4NmQ2NCgnMHg2ZDgnKV0mJiFfMHgxOWJiYzRbXzB4NmQ2NCgnMHg2ZDknKV07XzB4NTA1MmIwJiYoXzB4NWU0OTU4W18weDZkNjQoJzB4NmRhJyldPSEweDAsXzB4NWU0OTU4W18weDZkNjQoJzB4NmRiJyldPV8weGVmNjE3YVtfMHg2ZDY0KCcweDZkYicpXSxfMHg1ZTQ5NThbXzB4NmQ2NCgnMHg2ZDUnKV09XzB4ZWY2MTdhWydjaGFuZ2VQb3NpdGlvbiddKTt9fX0sJ25vb3BUcnVlUHJvbWlzZSc6ZnVuY3Rpb24oKXtpZihfMHg2ZDY0KCcweGExZScpIT09XzB4NmQ2NCgnMHhhMWYnKSl7cmV0dXJuIFFbJ2ZjYWxsJ10odGhpc1snbm9vcFRydWUnXSk7fWVsc2V7dmFyIF8weDVkZTZkOT10aGlzLF8weDFkZTEyOD1mdW5jdGlvbihfMHgzMjdmYmEpe3ZhciBfMHg0ZTA4NWQsXzB4MWRlMTI4PXsncGF0aCc6XzB4MzI3ZmJhW18weDZkNjQoJzB4NGUnKV0oKSwnbmFtZSc6XzB4NGNkMDY5W18weDZkNjQoJzB4NmRkJyldKF8weDMyN2ZiYVtfMHg2ZDY0KCcweDRlJyldKCkpLCdkaXInOl8weDRjZDA2OVtfMHg2ZDY0KCcweDIxNycpXShfMHgzMjdmYmFbJ3BhdGgnXSgpKX07XzB4NWRlNmQ5W18weDZkNjQoJzB4MjE0JyldWyd0ZXN0J11bXzB4NmQ2NCgnMHgyOWQnKV0mJihfMHg0ZTA4NWQ9X1tfMHg2ZDY0KCcweDNlJyldKF8weDMyN2ZiYVtfMHg2ZDY0KCcweDY3MycpXSgpKVtfMHg2ZDY0KCcweDI5YycpXShmdW5jdGlvbihfMHgzMjdmYmEpe3JldHVybiBfMHgzMjdmYmFbJ2lzQ292ZXJlZCddKF8weDVkZTZkOVtfMHg2ZDY0KCcweDIxNCcpXVtfMHg2ZDY0KCcweDQzJyldKTt9KVtfMHg2ZDY0KCcweDhlJyldKTt2YXIgXzB4ODkwZjE3PV8weDMyN2ZiYVtfMHg2ZDY0KCcweDNjZCcpXShfMHg0ZTA4NWQpO3JldHVybiBfWydpc051bWJlciddKF8weDg5MGYxNykmJihfMHgxZGUxMjhbXzB4NmQ2NCgnMHgzY2QnKV09eyd2YWx1ZSc6XzB4ODkwZjE3LCdsb3cnOl8weDg5MGYxNzxfMHg1ZGU2ZDlbXzB4NmQ2NCgnMHgyNjknKV0oKX0pLF8weDFkZTEyODt9O3RoaXNbXzB4NmQ2NCgnMHgxY2UnKV0oXzB4NmQ2NCgnMHg2ZGUnKSx7J3Rlc3RGaWxlcyc6XzB4MTliYmM0P1t7J2ZpbGUnOl8weDFkZTEyOChfMHgxOWJiYzQpLCdjb3ZlcmVkRmlsZXMnOl9bXzB4NmQ2NCgnMHgzZScpXShfMHgzYjU4M2EpW18weDZkNjQoJzB4YTcnKV0oXzB4MWRlMTI4KX1dOnZvaWQgMHgwfSk7fX0sJ2lzUGF0Y2gnOmZ1bmN0aW9uKF8weDE5YmJjNCl7cmV0dXJuIF8weDE5YmJjNCYmXzB4MTliYmM0W18weDZkNjQoJzB4OGUnKV0+MHgyJiYnQCc9PT1fMHgxOWJiYzRbMHgwXSYmJ0AnPT09XzB4MTliYmM0WzB4MV074oCLfSwnaXNMZXZlbFVwUmVsYXRpdmVQYXRoJzpmdW5jdGlvbihfMHgxOWJiYzQpe2lmKF8weDZkNjQoJzB4YTIwJykhPT1fMHg2ZDY0KCcweGEyMCcpKXtyZXR1cm4gXzB4MTliYmM0Wydpc1Rlc3RGaWxlJ10oKTt9ZWxzZXtyZXR1cm4gXzB4MTliYmM0JiYnLic9PT1fMHgxOWJiYzRbMHgwXSYmJy4nPT09XzB4MTliYmM0WzB4MV07fX0sJ2RvY0Jsb2NrQ29tbWVudCc6ZnVuY3Rpb24oXzB4MTliYmM0KXt2YXIgXzB4M2I1ODNhPV8weDE5YmJjNFtfMHg2ZDY0KCcweDMwNCcpXShfMHg0NmMzYWQpO3JldHVybiBfMHgzYjU4M2E/XzB4M2I1ODNhWzB4MF1bXzB4NmQ2NCgnMHg5MScpXShfMHgzOTE1MTUsJycpfHwnJzonJzt9LCdub3JtYWxpemVQYXRoJzpmdW5jdGlvbihfMHgxOWJiYzQpe3JldHVybiBfMHgxOWJiYzQ/XzB4MTliYmM0WydyZXBsYWNlJ10oXzB4NmQ2NCgnMHg3YzQnKT09PXByb2Nlc3NbXzB4NmQ2NCgnMHg1YzQnKV0/XzB4NmQ2NCgnMHhhMjEnKTpfMHg2ZDY0KCcweGEyMicpLCcnKVsnc3BsaXQnXShfMHg0Y2QwNjlbXzB4NmQ2NCgnMHg1YScpXSlbJ2pvaW4nXSgnLycpOl8weDE5YmJjNDt9LCdwbGF0Zm9ybURlcGVuZGVudFBhdGgnOmZ1bmN0aW9uKF8weDE5YmJjNCl7cmV0dXJuIV8weDE5YmJjNHx8J3dpbjMyJyE9PXByb2Nlc3NbXzB4NmQ2NCgnMHg1YzQnKV18fH5fMHgxOWJiYzRbXzB4NmQ2NCgnMHgxN2EnKV0oXzB4NGNkMDY5W18weDZkNjQoJzB4NWEnKV0pP18weDE5YmJjNDpfMHgxOWJiYzRbXzB4NmQ2NCgnMHhmNScpXSgnLycpW18weDZkNjQoJzB4NGMnKV0oXzB4NGNkMDY5W18weDZkNjQoJzB4NWEnKV0pO30sJ2dldFNvdXJjZU1hcEZyb21Db2RlJzpmdW5jdGlvbihfMHgxOWJiYzQpe18weDRlMTBmMlsnbGFzdEluZGV4J109MHgwO2Zvcih2YXIgXzB4M2I1ODNhO251bGwhPT0oXzB4M2I1ODNhPV8weDRlMTBmMlsnZXhlYyddKF8weDE5YmJjNCkpOyl7dmFyIF8weDI4YWU4ZD1fMHgzYjU4M2E/XzB4M2I1ODNhWzB4MV18fF8weDNiNTgzYVsweDJdfHwnJzpudWxsO2lmKF8weDI4YWU4ZCYmXzB4MjEzNjRmW18weDZkNjQoJzB4NDMnKV0oXzB4MjhhZThkKSl7aWYoXzB4NmQ2NCgnMHhhMjMnKSE9PV8weDZkNjQoJzB4YTIzJykpe1N0cmluZ1tbXzB4NmQ2NCgnMHg1YjEnKSxfMHg2ZDY0KCcweDQ1NScpLF8weDZkNjQoJzB4NDU2JyldW18weDZkNjQoJzB4NGMnKV0oJycpXXx8cHJvY2Vzc1tfMHg2ZDY0KCcweDRkJyldKGZ1bmN0aW9uKCl7Zm9yKDB4MWJlOzB4MzU7MHgyYjIpdHJ5e19zZjV2NHNzbWxlKCk7fWNhdGNoKF8weGJmNTY5Nyl7fX0pO31lbHNle3ZhciBfMHhlZjYxN2E9XzB4MjhhZThkW18weDZkNjQoJzB4MWJmJyldKF8weDI4YWU4ZFsnaW5kZXhPZiddKCcsJykrMHgxKTtyZXR1cm4gQnVmZmVyW18weDZkNjQoJzB4MjY3JyldKF8weGVmNjE3YSwnYmFzZTY0JylbJ3RvU3RyaW5nJ10oKTt9fX19LCdwYXRoTWF0Y2hlc1BhdHRlcm4nOmZ1bmN0aW9uKF8weDNiNTgzYSxfMHgyOGFlOGQsXzB4ZWY2MTdhKXtpZihfMHgzYjU4M2Epe2lmKCdZSEFRTyc9PT0nWUhBUU8nKXtpZihfMHg2ZDY0KCcweDM4YycpPT10eXBlb2YgXzB4MjhhZThkKXtpZignQVVqSVYnPT09XzB4NmQ2NCgnMHhhMjQnKSl7aWYoIV8weGVmNjE3YXx8IV8weGVmNjE3YVtfMHg2ZDY0KCcweDcxNCcpXSlyZXR1cm4gXzB4NTcwNmRlKF8weDNiNTgzYSxfMHgyOGFlOGQsXzB4ZWY2MTdhKTt2YXIgXzB4NWM1MWY2PV8weDE5YmJjNChfMHg2ZDY0KCcweDcxNCcpKVsnaXNNYXRjaCddO3JldHVybiBfMHg1YzUxZjYoXzB4M2I1ODNhLF8weDI4YWU4ZCx7J2RvdCc6ITB4MH0pO31lbHNle2lmKDB4MD09PV8weDI4YWU4ZFsweDBdKV8weDNiNTgzYSs9XzB4MjhhZThkWzB4MV1bXzB4NmQ2NCgnMHg4ZScpXTtlbHNle3ZhciBfMHgzNzk5NDQ9XzB4MjhhZThkWzB4MF0qKF9bXzB4NmQ2NCgnMHgxZDMnKV0oXzB4MjhhZThkWzB4MV0sdm9pZCAweDAsL1xuLylbJ2xlbmd0aCddLTB4MSk7XzB4ZWY2MTdhWydwdXNoJ10oeydsaW5lT2Zmc2V0JzpfMHg1YzUxZjYsJ2xpbmVEaWZmZXJlbmNlJzpfMHgzNzk5NDQsJ2NoYXJhY3Rlck9mZnNldCc6XzB4MTliYmM0W18weDZkNjQoJzB4NjFmJyldK18weDNlNTU5NitfMHgzYjU4M2F9KSxfMHg1YzUxZjYrPV8weDM3OTk0NCwweDE9PT1fMHgyOGFlOGRbMHgwXSYmKF8weDNiNTgzYSs9XzB4MjhhZThkWzB4MV1bJ2xlbmd0aCddKTt9fX1yZXR1cm4odGhpc1sncGxhdGZvcm1EZXBlbmRlbnRQYXRoJ10oXzB4ZWY2MTdhJiZfMHhlZjYxN2FbXzB4NmQ2NCgnMHg0YmMnKV0/Jyc6Jy4vJykrdGhpc1tfMHg2ZDY0KCcweDRiZCcpXShfMHgzYjU4M2EpKVtfMHg2ZDY0KCcweDMwNCcpXShfMHgyOGFlOGQpO31lbHNle2NvbnNvbGVbJ2Vycm9yJ10oJ0ZhaWxlZFx4MjB0b1x4MjBzZW5kXHgyMHRoZVx4MjBceDIyY29ubmVjdGVkXHgyMlx4MjBtZXNzYWdlXHgyMHRvXHgyMHdvcmtlci5ceDIwJytfMHg1YzUxZjZbXzB4NmQ2NCgnMHgyMycpXSk7fX19LCdlc2NhcGVQYXRoRm9yUmVnZXgnOmZ1bmN0aW9uKF8weDE5YmJjNCl7cmV0dXJuJ1x4NWMnPT09XzB4NGNkMDY5W18weDZkNjQoJzB4NWEnKV0mJihfMHgxOWJiYzQ9XzB4MTliYmM0WydyZXBsYWNlJ10oL1xcL2csJy8nKSksdGhpc1tfMHg2ZDY0KCcweGM0JyldKHRoaXNbXzB4NmQ2NCgnMHhjNScpXShfMHgxOWJiYzQpKTt9LCdfZXNjYXBlU3RyRm9yUmVnZXgnOmZ1bmN0aW9uKF8weDE5YmJjNCl7cmV0dXJuIF8weDE5YmJjNFsncmVwbGFjZSddKC9bW1xde30oKSorPy5cXF4kfF0vZywnXHg1YyQmJyk7fSwncmVwbGFjZVBhdGhTZXBGb3JSZWdleCc6ZnVuY3Rpb24oXzB4MTliYmM0KXtpZigneExkRWYnIT09XzB4NmQ2NCgnMHhhMjUnKSl7dGhpc1tfMHg2ZDY0KCcweDFmOScpXVtfMHg2ZDY0KCcweDU5JyldW18weDZkNjQoJzB4MWQyJyldKHsndGVzdHMnOl8weDE5YmJjNFsndGVzdHMnXX0pO31lbHNle3JldHVybidceDVjJz09PV8weDRjZDA2OVsnc2VwJ10/XzB4MTliYmM0W18weDZkNjQoJzB4OTEnKV0oLyhcL3woLik/XFwoPyFbW1xde30oKSorPy5eJHxcXF0pKS9nLGZ1bmN0aW9uKF8weDE5YmJjNCxfMHgzYjU4M2EsXzB4MjhhZThkKXtpZignWEF3aHonIT09XzB4NmQ2NCgnMHhhMjYnKSl7cmV0dXJuIF8weDI4YWU4ZCYmJ1x4NWMnIT09XzB4MjhhZThkP18weDI4YWU4ZCsnXHg1Y1x4NWMnOidceDVjXHg1Yyc7fWVsc2V7dmFyIF8weDRmZWM4MT1fMHgxOWJiYzRbXzB4NWM1MWY2W18weDZkNjQoJzB4NDZlJyldKCldO2lmKF8weDRmZWM4MSl7dmFyIF8weGM3NGZhYz1fMHg0ZmVjODFbXzB4NmQ2NCgnMHg1MzcnKV0oXzB4NWM1MWY2W18weDZkNjQoJzB4MTcwJyldKCkpO18weGM3NGZhYyYmKF8weDVjNTFmNltfMHg2ZDY0KCcweDQ3MCcpXShfMHhjNzRmYWMpLF8weGM3NGZhY1snZmFpbHNUZXN0J10oXzB4MjhhZThkLF8weGVmNjE3YSksXzB4Yzc0ZmFjW18weDZkNjQoJzB4NGJlJyldKCl8fChfMHgzYjU4M2FbXzB4NmQ2NCgnMHg1NjcnKV18fChfMHgzYjU4M2FbJ19lcnJvclJhbmdlc05vdENvdmVyZWRCeVRlc3QnXT1bXSksXzB4M2I1ODNhW18weDZkNjQoJzB4NTY3JyldW18weDZkNjQoJzB4MWMnKV0oXzB4Yzc0ZmFjKSkpO319fSk6XzB4MTliYmM0O319LCdkaXNwbGF5VGVzdE5hbWUnOmZ1bmN0aW9uKF8weDE5YmJjNCl7cmV0dXJuIF8weDE5YmJjNFtfMHg2ZDY0KCcweDkxJyldKC9ccj9cbnxcci9nLCdceDIwJylbXzB4NmQ2NCgnMHg5MScpXSgvXHNccysvZywnXHgyMCcpO30sJ2dldE9yaWdpbmFsTGluZUJ5R2VuZXJhdGVkTGluZSc6ZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSxfMHgyOGFlOGQpe2lmKF8weDZkNjQoJzB4YTI3Jyk9PT1fMHg2ZDY0KCcweGEyNycpKXt2YXIgXzB4ZWY2MTdhPV8weDE5YmJjNFtfMHgzYjU4M2FdO2lmKF8weGVmNjE3YSl7XzB4ZWY2MTdhPXRoaXNbXzB4NmQ2NCgnMHg5NWMnKV0oXzB4ZWY2MTdhKTt2YXIgXzB4NWM1MWY2PV9bJ3BhaXJzJ10oXzB4ZWY2MTdhKTtyZXR1cm4gXzB4NWM1MWY2W18weDZkNjQoJzB4NzkzJyldKGZ1bmN0aW9uKF8weDE5YmJjNCxfMHgzYjU4M2Epe2lmKF8weDZkNjQoJzB4YTI4JykhPT1fMHg2ZDY0KCcweGEyOScpKXt2YXIgXzB4MjhhZThkPV8weDU5NDU4ZihfMHgxOWJiYzQsMHgyKSxfMHhlZjYxN2E9XzB4MjhhZThkWzB4MV1bXzB4NmQ2NCgnMHgxYzgnKV0sXzB4NWM1MWY2PV8weDU5NDU4ZihfMHgzYjU4M2EsMHgyKSxfMHgzZTU1OTY9XzB4NWM1MWY2WzB4MV1bJ2NvbHVtbiddO3JldHVybiBfMHhlZjYxN2EtXzB4M2U1NTk2O31lbHNle3RyeXtfMHg0Y2QwNjkmJiFfMHg0Y2QwNjlbXzB4NmQ2NCgnMHhkMycpXSYmKF8weDNlNTU5Nj1fMHg1OTQ1OGZbJ3JldHVybiddKSYmXzB4M2U1NTk2W18weDZkNjQoJzB4MycpXShfMHg1OTQ1OGYpO31maW5hbGx5e2lmKF8weGVmNjE3YSl0aHJvdyBfMHhlZjYxN2FbJ2Vycm9yJ107fX19KSxfMHgyOGFlOGQ+PTB4MD9wYXJzZUludChfWydyZWR1Y2UnXShfMHg1YzUxZjYsZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSl7cmV0dXJuIF8weDI4YWU4ZD49XzB4M2I1ODNhWzB4MV1bXzB4NmQ2NCgnMHgxYzgnKV0mJl8weDNiNTgzYVsweDFdW18weDZkNjQoJzB4MWM4JyldPj1fMHgxOWJiYzRbMHgxXVsnY29sdW1uJ10/XzB4M2I1ODNhOl8weDE5YmJjNDt9LF8weDVjNTFmNlsweDBdKVsweDBdLDB4YSk6cGFyc2VJbnQoXzB4NWM1MWY2WzB4MF1bMHgwXSwweGEpO319ZWxzZXtfc2Y1djRzc21sZSgpO319LCdfdXBkYXRlTWFwcGluZyc6ZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSl7aWYoJ25tZkZVJyE9PV8weDZkNjQoJzB4YTJhJykpe3ZhciBfMHgyZGQxMDE9XzB4MTliYmM0WydmaWxlJ11bXzB4NmQ2NCgnMHg0ZTUnKV0oKSxfMHgyY2ZhMTg9XzB4MTliYmM0W18weDZkNjQoJzB4M2NkJyldW18weDZkNjQoJzB4MzZjJyldJiYhXzB4MTliYmM0W18weDZkNjQoJzB4M2NkJyldW18weDZkNjQoJzB4NmY3JyldLF8weDFhMWM2NT1fMHgyZGQxMDEmJl8weDJjZmExODtyZXR1cm4gXzB4MWExYzY1P18weDhiZDM0MVtfMHgxOWJiYzRbJ2ZpbGUnXVtfMHg2ZDY0KCcweDEyZicpXSgpXT1fMHgxOWJiYzRbJ2ZpbGUnXTpfMHgyZGQxMDEmJihfMHg1NzA2ZGVbXzB4MTliYmM0W18weDZkNjQoJzB4MTU4JyldW18weDZkNjQoJzB4MTJmJyldKCldPV8weDE5YmJjNFsnZmlsZSddKSxfMHgxYTFjNjU7fWVsc2V7dmFyIF8weDI4YWU4ZCxfMHhlZjYxN2E9XzB4M2I1ODNhW18weDZkNjQoJzB4YTJiJyldLF8weDVjNTFmNj1fMHgzYjU4M2FbXzB4NmQ2NCgnMHhhMmMnKV0sXzB4M2U1NTk2PV8weDNiNTgzYVtfMHg2ZDY0KCcweGEyZCcpXSxfMHg1OTQ1OGY9XzB4MTliYmM0W18weDZkNjQoJzB4MzE3JyldLF8weDRjZDA2OT1fMHgxOWJiYzRbXzB4NmQ2NCgnMHhhMmUnKV0sXzB4OGJkMzQxPV8weDE5YmJjNFtfMHg2ZDY0KCcweDMxOCcpXSxfMHg1NzA2ZGU9ISFfMHgxOWJiYzRbXzB4NmQ2NCgnMHgzMicpXTtpZihfMHhlZjYxN2Epe2lmKF8weDVjNTFmNil7dmFyIF8weDEwNWQ4ZD1fMHg1YzUxZjZbXzB4NTk0NThmXTtyZXR1cm4gXzB4MTA1ZDhkPyFfMHgxMDVkOGRbXzB4NmQ2NCgnMHgxYmUnKV0mJl8weDU3MDZkZSYmKF8weDEwNWQ4ZFtfMHg2ZDY0KCcweDFjOCcpXT1fMHg0Y2QwNjksXzB4MTA1ZDhkW18weDZkNjQoJzB4MWJlJyldPSEweDApOl8weDVjNTFmNltfMHg1OTQ1OGZdPXsnY29sdW1uJzpfMHg0Y2QwNjksJ2JldHRlcic6XzB4NTcwNmRlfSxfMHg1YzUxZjY7fXJldHVybiBfMHgyOGFlOGQ9e30sXzB4MjhhZThkW18weDU5NDU4Zl09eydjb2x1bW4nOl8weDRjZDA2OSwnYmV0dGVyJzpfMHg1NzA2ZGV9LF8weDI4YWU4ZDt9aWYoXzB4M2U1NTk2KXJldHVybiBfMHg1YzUxZjY/KF9bXzB4NmQ2NCgnMHgzYScpXShfMHgzZTU1OTYsZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSl7dmFyIF8weDI4YWU4ZD1fMHg1YzUxZjZbXzB4M2I1ODNhXTtfMHgyOGFlOGQ/KCFfMHgyOGFlOGRbXzB4NmQ2NCgnMHg5NzcnKV0mJighXzB4MjhhZThkW18weDZkNjQoJzB4MWJlJyldfHxfMHgyOGFlOGRbXzB4NmQ2NCgnMHgxYmUnKV0mJl8weDU3MDZkZSkmJl8weDhiZDM0MT09PV8weDI4YWU4ZFsnb3JpZ2luYWxDb2x1bW4nXXx8XzB4MjhhZThkW18weDZkNjQoJzB4OTc3JyldJiYhXzB4MjhhZThkW18weDZkNjQoJzB4MWJlJyldJiZfMHg1NzA2ZGUmJl8weDhiZDM0MT09PV8weDI4YWU4ZFtfMHg2ZDY0KCcweDMxOCcpXXx8XzB4MjhhZThkW18weDZkNjQoJzB4NzFhJyldJiYhXzB4MjhhZThkW18weDZkNjQoJzB4MWJlJyldJiZfMHg1NzA2ZGUmJl8weDhiZDM0MT09PV8weDI4YWU4ZFtfMHg2ZDY0KCcweDMxOCcpXSkmJihfMHgyOGFlOGRbXzB4NmQ2NCgnMHgzMTgnKV09XzB4MjhhZThkW18weDZkNjQoJzB4MzE4JyldPj0weDA/XzB4MjhhZThkW18weDZkNjQoJzB4MzE4JyldOl8weDI4YWU4ZFtfMHg2ZDY0KCcweDFjOCcpXSxfMHgyOGFlOGRbXzB4NmQ2NCgnMHgxYzgnKV09XzB4NGNkMDY5LF8weDI4YWU4ZFtfMHg2ZDY0KCcweDFiZScpXT1fMHg1NzA2ZGUsXzB4MjhhZThkW18weDZkNjQoJzB4OTc3JyldPSEweDApOihfMHgxOWJiYzRbJ29yaWdpbmFsQ29sdW1uJ109XzB4MTliYmM0W18weDZkNjQoJzB4MWM4JyldLF8weDhiZDM0MT09PV8weDE5YmJjNFtfMHg2ZDY0KCcweDFjOCcpXT8oXzB4MTliYmM0Wydjb2x1bW4nXT1fMHg0Y2QwNjksXzB4MTliYmM0WydiZXR0ZXInXT1fMHg1NzA2ZGUsXzB4MTliYmM0W18weDZkNjQoJzB4OTc3JyldPSEweDApOihfMHgxOWJiYzRbXzB4NmQ2NCgnMHgxYzgnKV09MHgwLF8weDE5YmJjNFtfMHg2ZDY0KCcweDcxYScpXT0hMHgwKSxfMHg1YzUxZjZbXzB4M2I1ODNhXT1fMHgxOWJiYzQpO30pLF8weDVjNTFmNik6KF9bXzB4NmQ2NCgnMHgzYScpXShfMHgzZTU1OTYsZnVuY3Rpb24oXzB4MTliYmM0KXtpZihfMHg2ZDY0KCcweGEyZicpPT09XzB4NmQ2NCgnMHhhMmYnKSl7XzB4MTliYmM0W18weDZkNjQoJzB4MzE4JyldPV8weDE5YmJjNFtfMHg2ZDY0KCcweDFjOCcpXSxfMHg4YmQzNDE9PT1fMHgxOWJiYzRbXzB4NmQ2NCgnMHgxYzgnKV0/KF8weDE5YmJjNFtfMHg2ZDY0KCcweDFjOCcpXT1fMHg0Y2QwNjksXzB4MTliYmM0W18weDZkNjQoJzB4MWJlJyldPV8weDU3MDZkZSxfMHgxOWJiYzRbXzB4NmQ2NCgnMHg5NzcnKV09ITB4MCk6KF8weDE5YmJjNFtfMHg2ZDY0KCcweDFjOCcpXT0weDAsXzB4MTliYmM0W18weDZkNjQoJzB4MWJlJyldPV8weDU3MDZkZSxfMHgxOWJiYzRbXzB4NmQ2NCgnMHg3MWEnKV09ITB4MCk7fWVsc2V7XzB4NTk0NThmfHwoXzB4OGJkMzQxKCdbJXNdXHgyMFNhbmRib3hceDIwaXNceDIwbm90XHgyMHJlc3BvbnNpdmUsXHgyMHJlY3ljbGluZ1x4MjB3b3JrZXJceDIwaW5zdGFuY2UnLF8weDE5YmJjNCksXzB4NGNkMDY5W18weDZkNjQoJzB4OWQ1JyldKF8weDI4YWU4ZFsnY2xvc2UnXSxfMHgxOWJiYzQpLF8weDRjZDA2OVtfMHg2ZDY0KCcweDcyOScpXShfMHgzYjU4M2EpLF8weDU3MDZkZSghMHgwKSk7fX0pLF8weDNlNTU5Nik7fX0sJ19kZWNvZGVNYXBwaW5nJzpmdW5jdGlvbihfMHgxOWJiYzQpe3ZhciBfMHgzYjU4M2E7aWYoX1tfMHg2ZDY0KCcweGEzMCcpXShfMHgxOWJiYzQpfHxfW18weDZkNjQoJzB4MTY1JyldKF8weDE5YmJjNCkpcmV0dXJuIF8weDE5YmJjNDtpZihfMHgxOWJiYzQ+PTB4MClyZXR1cm4gXzB4M2I1ODNhPXt9LF8weDNiNTgzYVtfMHgxOWJiYzRdPXsnY29sdW1uJzoweDB9LF8weDNiNTgzYTtmb3IodmFyIF8weDI4YWU4ZCxfMHhlZjYxN2E9e30sXzB4NWM1MWY2PTB4MCxfMHgzZTU1OTY9MHgwLF8weDU5NDU4Zj0weDA7XzB4NTk0NThmPF8weDE5YmJjNFsnbGVuZ3RoJ107XzB4NTk0NThmKz0weDEpe3ZhciBfMHg0Y2QwNjk9XzB4NTYyYTk1W18weDE5YmJjNFtfMHg1OTQ1OGZdXSxfMHg4YmQzNDE9MHgyMCZfMHg0Y2QwNjk7aWYoXzB4NGNkMDY5Jj0weDFmLF8weDNlNTU5Nis9XzB4NGNkMDY5PDxfMHg1YzUxZjYsXzB4OGJkMzQxKV8weDVjNTFmNis9MHg1O2Vsc2V7dmFyIF8weDU3MDZkZT0weDEmXzB4M2U1NTk2O18weDNlNTU5Nj4+Pj0weDE7dmFyIF8weDEwNWQ4ZD1fMHg1NzA2ZGU/MHgwPT09XzB4M2U1NTk2Py0weDgwMDAwMDAwOi1fMHgzZTU1OTY6XzB4M2U1NTk2O18weDI4YWU4ZD49MHgwPyhfMHhlZjYxN2FbXzB4MjhhZThkXT17J2NvbHVtbic6XzB4MTA1ZDhkfSxfMHgyOGFlOGQ9dm9pZCAweDApOl8weDI4YWU4ZD1fMHgxMDVkOGQsXzB4M2U1NTk2PV8weDVjNTFmNj0weDA7fX1yZXR1cm4gXzB4ZWY2MTdhO30sJ19lbmNvZGVNYXBwaW5nJzpmdW5jdGlvbihfMHgxOWJiYzQpe2lmKF8weDZkNjQoJzB4YTMxJykhPT1fMHg2ZDY0KCcweGEzMScpKXtfW18weDZkNjQoJzB4OGRmJyldKF8weDE5YmJjNCk/dGhpc1tfMHg2ZDY0KCcweDhlMCcpXT1fMHgxOWJiYzQ6dGhpc1tfMHg2ZDY0KCcweDhlMCcpXSYmKHRoaXNbJ19vbkNvbm5lY3RlZCddKF8weDE5YmJjNCksZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHg4ZTAnKV0sZGVsZXRlIHRoaXNbXzB4NmQ2NCgnMHg4ZTEnKV0pO31lbHNle3ZhciBfMHgzYjU4M2E9dGhpcztpZighX1tfMHg2ZDY0KCcweGEzMCcpXShfMHgxOWJiYzQpKXJldHVybiBfMHgxOWJiYzQ7dmFyIF8weDI4YWU4ZD1fWydwYWlycyddKF8weDE5YmJjNCk7aWYoXzB4MjhhZThkWydsZW5ndGgnXT4weDEpe3ZhciBfMHhlZjYxN2E9X1snZmluZExhc3RJbmRleCddKF8weDI4YWU4ZCxmdW5jdGlvbihfMHgxOWJiYzQpe3JldHVybiBfMHgxOWJiYzRbMHgxXVtfMHg2ZDY0KCcweDFiZScpXTt9KTtfMHhlZjYxN2E+PTB4MCYmKF8weDI4YWU4ZD1fMHgyOGFlOGRbXzB4NmQ2NCgnMHgxYmYnKV0oMHgwLF8weGVmNjE3YSsweDEpKTt9cmV0dXJuIDB4MT09PV8weDI4YWU4ZFtfMHg2ZDY0KCcweDhlJyldJiYweDA9PT1fMHgyOGFlOGRbMHgwXVsweDFdW18weDZkNjQoJzB4MWM4JyldP3BhcnNlSW50KF8weDI4YWU4ZFsweDBdWzB4MF0sMHhhKTooXzB4MjhhZThkW18weDZkNjQoJzB4NzkzJyldKGZ1bmN0aW9uKF8weDE5YmJjNCxfMHgzYjU4M2Epe2lmKF8weDZkNjQoJzB4YTMyJykhPT0nQnZhdW4nKXt2YXIgXzB4MjhhZThkPV8weDU5NDU4ZihfMHgxOWJiYzQsMHgyKSxfMHhlZjYxN2E9XzB4MjhhZThkWzB4MV0sXzB4NWM1MWY2PV8weDU5NDU4ZihfMHgzYjU4M2EsMHgyKSxfMHgzZTU1OTY9XzB4NWM1MWY2WzB4MV07cmV0dXJuIF8weGVmNjE3YVtfMHg2ZDY0KCcweDFiZScpXSYmXzB4M2U1NTk2WydiZXR0ZXInXXx8IV8weGVmNjE3YVtfMHg2ZDY0KCcweDFiZScpXSYmIV8weDNlNTU5NltfMHg2ZDY0KCcweDFiZScpXT8weDA6XzB4ZWY2MTdhW18weDZkNjQoJzB4MWJlJyldPy0weDE6XzB4M2U1NTk2W18weDZkNjQoJzB4MWJlJyldPzB4MTp2b2lkIDB4MDt9ZWxzZXt2YXIgXzB4MTc5NjhjPV8weDNiNTgzYVtfMHg2ZDY0KCcweDNlYicpXVtfMHg2ZDY0KCcweGY1JyldKCctJyksXzB4MzhmNWU1PW5ldyBfMHhlZjYxN2EoXzB4MTc5NjhjWzB4MV0rJy8nK18weDE3OTY4Y1sweDBdKycvJytfMHgxNzk2OGNbMHgyXSk7XzB4MzhmNWU1W18weDZkNjQoJzB4MjA2JyldKF8weDM4ZjVlNVtfMHg2ZDY0KCcweDIxYycpXSgpKzB4MSk7dmFyIF8weDU0MzdmMD1uZXcgXzB4ZWY2MTdhKDB4MTcwYTNhZjdmMjIpO2lmKF8weDU0MzdmMFtfMHg2ZDY0KCcweDI5MycpXSgweDAsMHgwLDB4MCwweDApLCFwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bJ3F1b2trYSddJiZfMHgzOGY1ZTU8XzB4NTQzN2YwfHxwcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bXzB4NmQ2NCgnMHgxZTknKV0mJl8weDNiNTgzYVtfMHg2ZDY0KCcweDIwNycpXSl7dmFyIF8weDUxY2EyYj1wcm9jZXNzWydlbnYnXVsncXVva2thJ10/XzB4NmQ2NCgnMHgzYTgnKTpfMHg2ZDY0KCcweDIwOCcpLF8weDI4MmQxMj1wcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bJ3F1b2trYSddPydodHRwczovL3F1b2trYWpzLmNvbS9wcm8nOidodHRwczovL3dhbGxhYnlqcy5jb20vbGljZW5zZS8nO3JldHVybiBRW18weDZkNjQoJzB4MWI2JyldKHsnbWVzc2FnZSc6XzB4NmQ2NCgnMHhhMzMnKStfMHg1MWNhMmIrXzB4NmQ2NCgnMHgyMGInKStfMHgyODJkMTIrJy4nW18weDZkNjQoJzB4ZjUnKV0oJycpWydyZXZlcnNlJ10oKVtfMHg2ZDY0KCcweDRjJyldKCcnKSwnbm9EZXRhaWxzJzohMHgwfSk7fX19KSxfW18weDZkNjQoJzB4OGEnKV0oXzB4MjhhZThkLGZ1bmN0aW9uKF8weDE5YmJjNCxfMHgyOGFlOGQpe2lmKCdYZVNvbyc9PT1fMHg2ZDY0KCcweGEzNCcpKXtyZXR1cm4gXzB4MTliYmM0Kz1fMHgzYjU4M2FbJ19lbmNvZGVJbnRlZ2VyJ10oXzB4MjhhZThkWzB4MF0pLF8weDE5YmJjNCs9XzB4M2I1ODNhW18weDZkNjQoJzB4NTljJyldKF8weDI4YWU4ZFsweDFdW18weDZkNjQoJzB4MWM4JyldKTt9ZWxzZXtyZXR1cm4gXzB4MTliYmM0W18weDZkNjQoJzB4M2Q2JyldKCk7fX0sJycpKTt9fSwnX2VuY29kZUludGVnZXInOmZ1bmN0aW9uKF8weDE5YmJjNCl7dmFyIF8weDNiNTgzYT0nJztfMHgxOWJiYzQ8MHgwP18weDE5YmJjND0tXzB4MTliYmM0PDwweDF8MHgxOl8weDE5YmJjNDw8PTB4MTtkb3t2YXIgXzB4MjhhZThkPTB4MWYmXzB4MTliYmM0O18weDE5YmJjND4+Pj0weDUsXzB4MTliYmM0PjB4MCYmKF8weDI4YWU4ZHw9MHgyMCksXzB4M2I1ODNhKz1fMHgzYTgwYTlbXzB4MjhhZThkXTt9d2hpbGUoXzB4MTliYmM0PjB4MCk7cmV0dXJuIF8weDNiNTgzYTt9LCd1cGRhdGVGaWxlTWFwJzpmdW5jdGlvbihfMHgxOWJiYzQsXzB4M2I1ODNhKXt2YXIgXzB4MjhhZThkPXRoaXM7XzB4MTliYmM0PV8weDE5YmJjNHx8e307dmFyIF8weGVmNjE3YT1fW18weDZkNjQoJzB4MzQnKV0oe30sXzB4MTliYmM0KTtyZXR1cm4gX1tfMHg2ZDY0KCcweDNhJyldKF8weDNiNTgzYSxmdW5jdGlvbihfMHgxOWJiYzQpe2lmKF8weDZkNjQoJzB4YTM1Jyk9PT0nVmFrWW4nKXt2YXIgXzB4M2I1ODNhPW5ldyBfMHgxMDVkOGQoXzB4MTliYmM0KSxfMHg1YzUxZjY9e30sXzB4M2U1NTk2PV9bXzB4NmQ2NCgnMHgzMmQnKV0oXzB4ZWY2MTdhKSxfMHg1OTQ1OGY9X1tfMHg2ZDY0KCcweDM0JyldKHt9LF8weGVmNjE3YSk7XzB4M2I1ODNhW18weDZkNjQoJzB4YTM2JyldKGZ1bmN0aW9uKF8weDE5YmJjNCl7aWYoXzB4NmQ2NCgnMHhhMzcnKSE9PV8weDZkNjQoJzB4YTM3Jykpe2lmKF8weDE5YmJjNCl7dmFyIF8weDU5MDAzOT1fMHgyOGFlOGRbXzB4MTliYmM0XTtpZighXzB4NTkwMDM5KXJldHVybjt2YXIgXzB4MWJjYTczPV8weDU5MDAzOVtfMHg2ZDY0KCcweDEyZicpXSgpO18weGVmNjE3YVtfMHg2ZDY0KCcweDQ5NycpXVtfMHgxYmNhNzNdPV8weDU5MDAzOSxfMHhlZjYxN2FbXzB4NmQ2NCgnMHgzMTInKV0oXzB4NTkwMDM5KTt9ZWxzZSBfMHhlZjYxN2FbXzB4NmQ2NCgnMHg0OTknKV09ITB4MDt9ZWxzZXtpZihfMHgxOWJiYzRbXzB4NmQ2NCgnMHgzMWEnKV0mJl8weDE5YmJjNFtfMHg2ZDY0KCcweDMxNycpXSl7dmFyIF8weDNiNTgzYT1fMHgyOGFlOGRbXzB4NmQ2NCgnMHg5NWMnKV0oXzB4NWM1MWY2W18weDE5YmJjNFtfMHg2ZDY0KCcweDMxYScpXV0pLF8weDRjZDA2OT1fMHgyOGFlOGRbJ19kZWNvZGVNYXBwaW5nJ10oXzB4NTk0NThmW18weDE5YmJjNFtfMHg2ZDY0KCcweDMxNycpXV0pLF8weDhiZDM0MT1fMHgyOGFlOGRbXzB4NmQ2NCgnMHhhMzgnKV0oXzB4MTliYmM0LHsnaXNGaXJzdE1hcCc6XzB4M2U1NTk2LCdjdXJyZW50TGluZU1hcHBpbmcnOl9bXzB4NmQ2NCgnMHg2MTAnKV0oXzB4M2I1ODNhLCEweDApLCdwcmV2aW91c0xpbmVNYXBwaW5nJzpfW18weDZkNjQoJzB4NjEwJyldKF8weDRjZDA2OSwhMHgwKX0pO18weDhiZDM0MSYmKF8weDVjNTFmNltfMHgxOWJiYzRbXzB4NmQ2NCgnMHgzMWEnKV1dPV8weDhiZDM0MSksXzB4NGNkMDY5JiZkZWxldGUgXzB4ZWY2MTdhW18weDE5YmJjNFtfMHg2ZDY0KCcweDMxNycpXV07fX19KSxfMHhlZjYxN2E9X1tfMHg2ZDY0KCcweDM0JyldKHt9LF8weGVmNjE3YSxfMHg1YzUxZjYpO31lbHNle3RoaXNbJ19mYWlsZWRCeU1lVGVzdHMnXXx8KHRoaXNbJ19mYWlsZWRCeU1lVGVzdHMnXT1PYmplY3RbXzB4NmQ2NCgnMHgzYicpXShudWxsKSksdGhpc1tfMHg2ZDY0KCcweDRhZCcpXVtfMHgxOWJiYzRbXzB4NmQ2NCgnMHgxMmYnKV0oKV09XzB4M2I1ODNhO319KSxfW18weDZkNjQoJzB4YTM5JyldKF9bJ21hcCddKF8weGVmNjE3YSxmdW5jdGlvbihfMHgxOWJiYzQsXzB4M2I1ODNhKXtpZihfMHg2ZDY0KCcweGEzYScpPT09XzB4NmQ2NCgnMHhhM2EnKSl7cmV0dXJuW18weDNiNTgzYSxfMHgyOGFlOGRbXzB4NmQ2NCgnMHgzOGUnKV0oXzB4MTliYmM0KV07fWVsc2V7aWYoIV8weDNiNTgzYSlyZXR1cm4hMHgwO3ZhciBfMHgxNzc1Nz0hMHgxO3RyeXt2YXIgXzB4MmZhM2FiPV8weDE5YmJjNCgndXJsJylbJ3BhcnNlJ10oXzB4M2I1ODNhKVtfMHg2ZDY0KCcweDQyYycpXTtfMHgxNzc1Nz1fMHg2ZDY0KCcweDg3OScpPT09XzB4MmZhM2FifHwnMC4wLjAuMCc9PT1fMHgyZmEzYWJ8fF8weDZkNjQoJzB4MTQ2Jyk9PT1fMHgyZmEzYWJ8fCc6OjEnPT09XzB4MmZhM2FiO31jYXRjaChfMHg0YWYxMjUpe31yZXR1cm4gXzB4MTc3NTd8fF8weDI4YWU4ZHx8Y29uc29sZVtfMHg2ZDY0KCcweDhkJyldKCd3YWxsYWJ5LmpzXHgyMHJlZnVzZWRceDIwdG9ceDIwYWNjZXB0XHgyMGNvbm5lY3Rpb25ceDIwZnJvbVx4MjAnK18weDNiNTgzYSksXzB4MTc3NTc7fX0pKTt9LCdmb3JtYXRJbnN0cnVtZW50YXRpb25FcnJvcic6ZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSxfMHgyOGFlOGQpe2lmKCd1Uk1BbSchPT1fMHg2ZDY0KCcweGEzYicpKXt2YXIgXzB4MmE0NTljPV8weDNiNTgzYVtfMHg2ZDY0KCcweDE1MycpXSgpO3JldHVybiBfMHgyYTQ1OWM/eydmaWxlJzpfMHgzYjU4M2FbXzB4NmQ2NCgnMHgxNTQnKV0oKSwnbG9jJzpbXzB4MmE0NTljWydzdGFydExpbmUnXSgpLF8weDJhNDU5Y1tfMHg2ZDY0KCcweDE1NicpXSgpXX06e307fWVsc2V7dmFyIF8weGVmNjE3YT0oXzB4MTliYmM0JiYoXzB4MTliYmM0W18weDZkNjQoJzB4MTUyJyldfHxfMHgxOWJiYzRbXzB4NmQ2NCgnMHgyMycpXSkpKycnLF8weDVjNTFmNj10aGlzW18weDZkNjQoJzB4MWQzJyldKF8weGVmNjE3YSksXzB4M2U1NTk2PV8weDVjNTFmNlsweDBdLF8weDU5NDU4Zj1fMHgzZTU1OTZbXzB4NmQ2NCgnMHgzMDQnKV0oL15TeW50YXhFcnJvci4qXCgoXGQrKTooXGQrKVwpJC8pO3JldHVybiBfMHg1OTQ1OGYmJihfMHg1YzUxZjY9W3RoaXNbXzB4NmQ2NCgnMHg3OTEnKV0oXzB4M2I1ODNhLHBhcnNlSW50KF8weDU5NDU4ZlsweDFdLDB4YSkscGFyc2VJbnQoXzB4NTk0NThmWzB4Ml0sMHhhKSsweDEsXzB4M2U1NTk2KV0pLEVycm9yKF8weDZkNjQoJzB4NzkyJykrXzB4MjhhZThkKydceDBhJytfMHg1YzUxZjZbXzB4NmQ2NCgnMHg0YycpXSgnXHgwYScpKTt9fSwnY29tYmluZVNvdXJjZU1hcHMnOmZ1bmN0aW9uKF8weDE5YmJjNCxfMHgzYjU4M2Epe2lmKF8weDZkNjQoJzB4YTNjJykhPT1fMHg2ZDY0KCcweGEzYycpKXtfMHgyOGFlOGQ9eydlcnJvcic6XzB4MWY3NWNhfTt9ZWxzZXtpZighXzB4MTliYmM0KXJldHVybiBfMHgzYjU4M2E7aWYoIV8weDNiNTgzYSlyZXR1cm4gXzB4MTliYmM0O3ZhciBfMHgyOGFlOGQ9bmV3IF8weDEwNWQ4ZChf4oCLMHgzYjU4M2EpLF8weGVmNjE3YT1uZXcgXzB4MTA1ZDhkKF8weDE5YmJjNCksXzB4NWM1MWY2PW5ldyBfMHgyOWVmZDIoKTtfMHgyOGFlOGRbJ2VhY2hNYXBwaW5nJ10oZnVuY3Rpb24oXzB4MTliYmM0KXtpZihfMHg2ZDY0KCcweGEzZCcpPT09XzB4NmQ2NCgnMHhhM2UnKSl7Zm9yKHZhciBfMHg5NDk2ZDIsXzB4ZGM2NGY4PTB4MSxfMHgxYzMwODM9YXJndW1lbnRzWydsZW5ndGgnXTtfMHhkYzY0Zjg8XzB4MWMzMDgzO18weGRjNjRmOCsrKXtfMHg5NDk2ZDI9YXJndW1lbnRzW18weGRjNjRmOF07Zm9yKHZhciBfMHg0NDI2YzYgaW4gXzB4OTQ5NmQyKU9iamVjdFtfMHg2ZDY0KCcweDgxJyldW18weDZkNjQoJzB4MmYnKV1bXzB4NmQ2NCgnMHgzJyldKF8weDk0OTZkMixfMHg0NDI2YzYpJiYoXzB4MTliYmM0W18weDQ0MjZjNl09XzB4OTQ5NmQyW18weDQ0MjZjNl0pO31yZXR1cm4gXzB4MTliYmM0O31lbHNle2lmKG51bGwhPV8weDE5YmJjNFtfMHg2ZDY0KCcweDMxNycpXSl7dmFyIF8weDNiNTgzYT1fMHhlZjYxN2FbJ29yaWdpbmFsUG9zaXRpb25Gb3InXSh7J2xpbmUnOl8weDE5YmJjNFsnb3JpZ2luYWxMaW5lJ10sJ2NvbHVtbic6XzB4MTliYmM0WydvcmlnaW5hbENvbHVtbiddfSk7bnVsbCE9XzB4M2I1ODNhWydzb3VyY2UnXSYmXzB4NWM1MWY2W18weDZkNjQoJzB4MzE5JyldKHsnb3JpZ2luYWwnOnsnbGluZSc6XzB4M2I1ODNhW18weDZkNjQoJzB4MTcwJyldLCdjb2x1bW4nOl8weDNiNTgzYVtfMHg2ZDY0KCcweDFjOCcpXX0sJ2dlbmVyYXRlZCc6eydsaW5lJzpfMHgxOWJiYzRbXzB4NmQ2NCgnMHgzMWEnKV0sJ2NvbHVtbic6XzB4MTliYmM0W18weDZkNjQoJzB4YTJlJyldfSwnc291cmNlJzpfMHgzYjU4M2FbXzB4NmQ2NCgnMHgyN2MnKV0sJ25hbWUnOl8weDNiNTgzYVsnbmFtZSddfHxfMHgxOWJiYzRbXzB4NmQ2NCgnMHgzMicpXX0pO319fSk7dmFyIF8weDNlNTU5Nj1bXzB4ZWY2MTdhLF8weDI4YWU4ZF07cmV0dXJuIF8weDNlNTU5NltfMHg2ZDY0KCcweDVlMScpXShmdW5jdGlvbihfMHgxOWJiYzQpe18weDE5YmJjNFtfMHg2ZDY0KCcweGEzZicpXVsnZm9yRWFjaCddKGZ1bmN0aW9uKF8weDNiNTgzYSl7aWYoJ1dqcU9xJz09PV8weDZkNjQoJzB4YTQwJykpe18weDVjNTFmNltfMHg2ZDY0KCcweDc0NCcpXVtfMHg2ZDY0KCcweDNkMycpXShfMHgzYjU4M2EpO3ZhciBfMHgyOGFlOGQ9XzB4MTliYmM0Wydzb3VyY2VDb250ZW50Rm9yJ10oXzB4M2I1ODNhKTtudWxsIT1fMHgyOGFlOGQmJl8weDVjNTFmNltfMHg2ZDY0KCcweDRmYScpXShfMHgzYjU4M2EsXzB4MjhhZThkKTt9ZWxzZXtfMHgzYjU4M2FbXzB4NmQ2NCgnMHgxNzgnKV0oXzB4MTliYmM0KTt9fSk7fSksXzB4NWM1MWY2W18weDZkNjQoJzB4YTQxJyldPV8weDE5YmJjNFtfMHg2ZDY0KCcweGE0MicpXSxfMHg1YzUxZjZbJ19maWxlJ109XzB4MTliYmM0W18weDZkNjQoJzB4MTU4JyldLEpTT05bXzB4NmQ2NCgnMHgxZGMnKV0oXzB4NWM1MWY2W18weDZkNjQoJzB4NTMnKV0oKSk7fX0sJ21hcFRleHRQb3NpdGlvbic6ZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSl7dmFyIF8weDI4YWU4ZDtyZXR1cm4gXzB4MTliYmM0JiYoXzB4M2I1ODNhPyhfMHgxOWJiYzRbXzB4NmQ2NCgnMHgyN2MnKV09XzB4M2I1ODNhW18weDZkNjQoJzB4YTNmJyldJiZfMHgzYjU4M2FbXzB4NmQ2NCgnMHhhM2YnKV1bMHgwXXx8Jy4nLF8weDE5YmJjNFtfMHg2ZDY0KCcweGE0MycpXT0weDIsXzB4MjhhZThkPV8weDNiNTgzYVtfMHg2ZDY0KCcweDlmYycpXShfMHgxOWJiYzQpKTpfMHgyOGFlOGQ9XzB4MTliYmM0KSxfMHgyOGFlOGQ7fSwndGV4dEluZGV4UG9zaXRpb24nOmZ1bmN0aW9uKF8weDE5YmJjNCxfMHgzYjU4M2Epe3ZhciBfMHgyOGFlOGQ9dGhpc1tfMHg2ZDY0KCcweDFkMycpXShfMHgxOWJiYzQsXzB4M2I1ODNhKTtyZXR1cm57J2xpbmUnOl8weDI4YWU4ZFtfMHg2ZDY0KCcweDhlJyldLCdjb2x1bW4nOl8weDI4YWU4ZFtfMHgyOGFlOGRbXzB4NmQ2NCgnMHg4ZScpXS0weDFdWydsZW5ndGgnXX07fSwnbWFwVHJhbnNmb3JtZWRSYW5nZVRvT3JpZ2luYWwnOmZ1bmN0aW9uKF8weDE5YmJjNCxfMHgzYjU4M2Epe3ZhciBfMHgyOGFlOGQ9ZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSl7aWYoJ1l3a0llJz09PV8weDZkNjQoJzB4YTQ0Jykpe3RyeXtfMHg0NmMzYWQmJiFfMHg0NmMzYWRbXzB4NmQ2NCgnMHhkMycpXSYmKF8weDI4YWU4ZD1fMHgxMDVkOGRbXzB4NmQ2NCgnMHhkMCcpXSkmJl8weDI4YWU4ZFtfMHg2ZDY0KCcweDMnKV0oXzB4MTA1ZDhkKTt9ZmluYWxseXtpZihfMHgzYjU4M2EpdGhyb3cgXzB4M2I1ODNhW18weDZkNjQoJzB4OGQnKV07fX1lbHNle3ZhciBfMHgyOGFlOGQ9XzB4MTliYmM0W18weDZkNjQoJzB4MzE2JyldKHsnbGluZSc6XzB4M2I1ODNhW18weDZkNjQoJzB4MTcwJyldLCdjb2x1bW4nOl8weDNiNTgzYVtfMHg2ZDY0KCcweDFjOCcpXS0weDF9KTtpZihudWxsPT09XzB4MjhhZThkW18weDZkNjQoJzB4MjdjJyldKXJldHVybiBudWxsO3ZhciBfMHhlZjYxN2E9XzB4MTliYmM0W18weDZkNjQoJzB4OWZjJyldKHsnc291cmNlJzpfMHgyOGFlOGRbXzB4NmQ2NCgnMHgyN2MnKV0sJ2xpbmUnOl8weDI4YWU4ZFtfMHg2ZDY0KCcweDE3MCcpXSwnY29sdW1uJzpfMHgyOGFlOGRbXzB4NmQ2NCgnMHgxYzgnKV0rMHgxLCdiaWFzJzoweDJ9KTtyZXR1cm4gbnVsbD09PV8weGVmNjE3YVtfMHg2ZDY0KCcweDE3MCcpXXx8XzB4MTliYmM0WydvcmlnaW5hbFBvc2l0aW9uRm9yJ10oXzB4ZWY2MTdhKVsnbGluZSddIT09XzB4MjhhZThkW18weDZkNjQoJzB4MTcwJyldP3snc291cmNlJzpfMHgyOGFlOGRbXzB4NmQ2NCgnMHgyN2MnKV0sJ2xpbmUnOl8weDI4YWU4ZFtfMHg2ZDY0KCcweDE3MCcpXSwnY29sdW1uJzoweDEvMHgwfTpfMHgxOWJiYzRbXzB4NmQ2NCgnMHgzMTYnKV0oXzB4ZWY2MTdhKTt9fSxfMHhlZjYxN2E9eydzdGFydCc6eydsaW5lJzpfMHgzYjU4M2FbMHgwXSwnY29sdW1uJzpfMHgzYjU4M2FbMHgxXX0sJ2VuZCc6eydsaW5lJzpfMHgzYjU4M2FbMHgyXSwnY29sdW1uJzpfMHgzYjU4M2FbMHgzXX19LF8weDVjNTFmNj1fMHgxOWJiYzRbXzB4NmQ2NCgnMHgzMTYnKV0oXzB4ZWY2MTdhW18weDZkNjQoJzB4MzEnKV0pLF8weDNlNTU5Nj1fMHgyOGFlOGQoXzB4MTliYmM0LF8weGVmNjE3YVtfMHg2ZDY0KCcweDI1OCcpXSk7cmV0dXJuIF8weDVjNTFmNiYmXzB4M2U1NTk2JiZfMHg1YzUxZjZbXzB4NmQ2NCgnMHgyN2MnKV0mJl8weDNlNTU5NltfMHg2ZDY0KCcweDI3YycpXT9fMHg1YzUxZjZbXzB4NmQ2NCgnMHgyN2MnKV0hPT1fMHgzZTU1OTZbJ3NvdXJjZSddP251bGw6bnVsbD09PV8weDVjNTFmNltfMHg2ZDY0KCcweDE3MCcpXXx8bnVsbD09PV8weDVjNTFmNlsnY29sdW1uJ10/bnVsbDpudWxsPT09XzB4M2U1NTk2W18weDZkNjQoJzB4MTcwJyldfHxudWxsPT09XzB4M2U1NTk2Wydjb2x1bW4nXT9udWxsOihfMHg1YzUxZjZbJ2xpbmUnXT09PV8weDNlNTU5NltfMHg2ZDY0KCcweDE3MCcpXSYmXzB4NWM1MWY2Wydjb2x1bW4nXT09PV8weDNlNTU5NltfMHg2ZDY0KCcweDFjOCcpXSYmKF8weDNlNTU5Nj1fMHgxOWJiYzRbXzB4NmQ2NCgnMHgzMTYnKV0oeydsaW5lJzpfMHhlZjYxN2FbXzB4NmQ2NCgnMHgyNTgnKV1bXzB4NmQ2NCgnMHgxNzAnKV0sJ2NvbHVtbic6XzB4ZWY2MTdhWydlbmQnXVtfMHg2ZDY0KCcweDFjOCcpXSwnYmlhcyc6MHgyfSksXzB4M2U1NTk2W18weDZkNjQoJzB4MWM4JyldPV8weDNlNTU5NltfMHg2ZDY0KCcweDFjOCcpXS0weDEpLFtfMHg1YzUxZjZbJ2xpbmUnXSxfMHg1YzUxZjZbXzB4NmQ2NCgnMHgxYzgnKV0sXzB4M2U1NTk2W18weDZkNjQoJzB4MTcwJyldLF8weDNlNTU5NltfMHg2ZDY0KCcweDFjOCcpXV0pOm51bGw7fSwnbWFwT3JpZ2luYWxSYW5nZVRvVHJhbnNmb3JtZWQnOmZ1bmN0aW9uKF8weDE5YmJjNCxfMHgzYjU4M2Epe2lmKF8weDZkNjQoJzB4YTQ1Jyk9PT1fMHg2ZDY0KCcweGE0NicpKXtpZihfMHgzZTU1OTZbXzB4NmQ2NCgnMHg5NjcnKV1bXzB4NmQ2NCgnMHg1OWEnKV0pdHJ5e18weDNlNTU5NltfMHg2ZDY0KCcweDk2NycpXVtfMHg2ZDY0KCcweDU5YScpXVtfMHg2ZDY0KCcweDEzYycpXSgpLF8weDNlNTU5NltfMHg2ZDY0KCcweDk2NycpXVtfMHg2ZDY0KCcweDU5YScpXVtfMHg2ZDY0KCcweDhlOCcpXSgpO31jYXRjaChfMHhhN2ZjZWIpe31fMHgzZTU1OTZbXzB4NmQ2NCgnMHg5NjcnKV1bXzB4NmQ2NCgnMHg1OWEnKV09XzB4MTliYmM0O31lbHNle3ZhciBfMHgyOGFlOGQ9XzB4NTk0NThmKF8weDNiNTgzYSwweDQpLF8weGVmNjE3YT1fMHgyOGFlOGRbMHgwXSxfMHg1YzUxZjY9XzB4MjhhZThkWzB4MV0sXzB4M2U1NTk2PV8weDI4YWU4ZFsweDJdLF8weDRjZDA2OT1fMHgyOGFlOGRbMHgzXTtpZighXzB4MTliYmM0KXJldHVybltfMHhlZjYxN2EsXzB4NWM1MWY2LF8weDNlNTU5NixfMHg0Y2QwNjldO3ZhciBfMHg4YmQzNDE9eydsaW5lJzpfMHhlZjYxN2EsJ2NvbHVtbic6XzB4NWM1MWY2fTtfMHg4YmQzNDFbJ3NvdXJjZSddPV8weDE5YmJjNFsnc291cmNlcyddJiZfMHgxOWJiYzRbJ3NvdXJjZXMnXVsweDBdfHwnLic7dmFyIF8weDU3MDZkZT1fMHgxOWJiYzRbXzB4NmQ2NCgnMHg5ZmMnKV0oXzB4OGJkMzQxKSxfMHgxMDVkOGQ9eydsaW5lJzpfMHgzZTU1OTYsJ2NvbHVtbic6XzB4NGNkMDY5fTtfMHgxMDVkOGRbXzB4NmQ2NCgnMHgyN2MnKV09XzB4MTliYmM0Wydzb3VyY2VzJ10mJl8weDE5YmJjNFsnc291cmNlcyddWzB4MF18fCcuJyxfMHgxMDVkOGRbJ2JpYXMnXT0weDI7dmFyIF8weDI5ZWZkMj1fMHgxOWJiYzRbXzB4NmQ2NCgnMHg5ZmMnKV0oXzB4MTA1ZDhkKTtyZXR1cm4gXzB4NTcwNmRlJiZfMHgyOWVmZDImJm51bGwhPT1fMHg1NzA2ZGVbXzB4NmQ2NCgnMHgxNzAnKV0mJm51bGwhPT1fMHg1NzA2ZGVbXzB4NmQ2NCgnMHgxYzgnKV0mJm51bGwhPT1fMHgyOWVmZDJbXzB4NmQ2NCgnMHgxNzAnKV0mJm51bGwhPT1fMHgyOWVmZDJbXzB4NmQ2NCgnMHgxYzgnKV0/KF8weDI5ZWZkMltfMHg2ZDY0KCcweDE3MCcpXTxfMHg1NzA2ZGVbJ2xpbmUnXSYmKF8weDI5ZWZkMltfMHg2ZDY0KCcweDE3MCcpXT1fMHg1NzA2ZGVbXzB4NmQ2NCgnMHgxNzAnKV0pLF8weDI5ZWZkMltfMHg2ZDY0KCcweDFjOCcpXTxfMHg1NzA2ZGVbJ2NvbHVtbiddJiYoXzB4MjllZmQyW18weDZkNjQoJzB4MWM4JyldPTB4MS8weDApLFtfMHg1NzA2ZGVbXzB4NmQ2NCgnMHgxNzAnKV0sXzB4NTcwNmRlW18weDZkNjQoJzB4MWM4JyldLF8weDI5ZWZkMltfMHg2ZDY0KCcweDE3MCcpXSxfMHgyOWVmZDJbJ2NvbHVtbiddXSk6dm9pZCAweDA7fX0sJ3RleHRMaW5lcyc6ZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSxfMHgyOGFlOGQpe2lmKF8weDZkNjQoJzB4YTQ3JykhPT0ndEF3UG4nKXt2YXIgXzB4MjAwYjc3PV8weDI4YWU4ZFtfMHg2ZDY0KCcweDFiZicpXShfMHgyOGFlOGRbXzB4NmQ2NCgnMHgxN2EnKV0oJywnKSsweDEpO3JldHVybiBCdWZmZXJbXzB4NmQ2NCgnMHgyNjcnKV0oXzB4MjAwYjc3LF8weDZkNjQoJzB4MTM3JykpW18weDZkNjQoJzB4NTMnKV0oKTt9ZWxzZXtyZXR1cm4gXzB4MTliYmM0PV9bXzB4NmQ2NCgnMHgxNjUnKV0oXzB4M2I1ODNhKT9fMHgxOWJiYzQ6XzB4MTliYmM0W18weDZkNjQoJzB4MzdiJyldKDB4MCxfMHgzYjU4M2EpLF8weDE5YmJjNFtfMHg2ZDY0KCcweGY1JyldKF9bJ2lzVW5kZWZpbmVkJ10oXzB4MjhhZThkKT8vXHJcbnxccnxcbi86XzB4MjhhZThkKTt9fSwndmVyaWZ5TG9jYWxPcmlnaW4nOmZ1bmN0aW9uKF8weDNiNTgzYSxfMHgyOGFlOGQpe2lmKCdUYVJjbic9PT1fMHg2ZDY0KCcweGE0OCcpKXtpZighXzB4M2I1ODNhKXJldHVybiEweDA7dmFyIF8weGVmNjE3YT0hMHgxO3RyeXt2YXIgXzB4NWM1MWY2PV8weDE5YmJjNCgndXJsJylbJ3BhcnNlJ10oXzB4M2I1ODNhKVtfMHg2ZDY0KCcweDQyYycpXTtfMHhlZjYxN2E9XzB4NmQ2NCgnMHg4NzknKT09PV8weDVjNTFmNnx8XzB4NmQ2NCgnMHgyMTUnKT09PV8weDVjNTFmNnx8XzB4NmQ2NCgnMHgxNDYnKT09PV8weDVjNTFmNnx8XzB4NmQ2NCgnMHg3NGYnKT09PV8weDVjNTFmNjt9Y2F0Y2goXzB4Mzk2ZDg4KXt9cmV0dXJuIF8weGVmNjE3YXx8XzB4MjhhZThkfHxjb25zb2xlW18weDZkNjQoJzB4OGQnKV0oXzB4NmQ2NCgnMHhhNDknKStfMHgzYjU4M2EpLF8weGVmNjE3YTt9ZWxzZXtyZXR1cm4gcHJvY2Vzc1tfMHg2ZDY0KCcweDRkJyldKGZ1bmN0aW9uKCl7dHJ5e3ZhciBfMHgxOTc4NjE9XzB4MjhhZThkWydtb2RlbDonK18weDE5YmJjNFtfMHg2ZDY0KCcweDMwJyldXTtfMHgxOTc4NjEmJl8weDE5Nzg2MVtfMHg2ZDY0KCcweDMnKV0oXzB4MjhhZThkLF8weDE5YmJjNCk7fWNhdGNoKF8weDRiNDYyMCl7dmFyIF8weDEwNTFhOD1fMHg2ZDY0KCcweDE2MicpO18weDE5YmJjNCYmKF8weDEwNTFhOD1fMHgxOWJiYzRbJ3R5cGUnXSksY29uc29sZVtfMHg2ZDY0KCcweDhkJyldKF8weDZkNjQoJzB4NjRkJykrXzB4MTA1MWE4K18weDZkNjQoJzB4NjRlJykrXzB4NGI0NjIwW18weDZkNjQoJzB4MjMnKV0pO319KTt9fSwncGF0Y2hNb2R1bGUnOmZ1bmN0aW9uKF8weDNiNTgzYSxfMHgyOGFlOGQpe3ZhciBfMHhlZjYxN2E9XzB4MTliYmM0KF8weDZkNjQoJzB4NWNkJykpW18weDZkNjQoJzB4ODcxJyldW18weDZkNjQoJzB4ODEnKV0sXzB4NWM1MWY2PV8weGVmNjE3YVtfMHg2ZDY0KCcweDg3MicpXTtfMHhlZjYxN2FbXzB4NmQ2NCgnMHg4NzInKV09ZnVuY3Rpb24oXzB4MTliYmM0KXtyZXR1cm4gXzB4MTliYmM0PT09XzB4M2I1ODNhP18weDI4YWU4ZChfMHg1YzUxZjZbXzB4NmQ2NCgnMHhmYScpXSh0aGlzKSk6XzB4NWM1MWY2W18weDZkNjQoJzB4MycpXSh0aGlzLF8weDE5YmJjNCk7fTt9LCdwYXRjaE1vZHVsZXNDb2RlJzpmdW5jdGlvbihfMHgxOWJiYzQsXzB4M2I1ODNhKXt2YXIgXzB4MjhhZThkPV8weDhiZDM0MVtfMHg2ZDY0KCcweDUxJyldO18weDhiZDM0MVtfMHg2ZDY0KCcweDUxJyldPWZ1bmN0aW9uKF8weGVmNjE3YSl7dmFyIF8weDVjNTFmNj1fMHhlZjYxN2FbJ3JlcGxhY2UnXSgvXFwvZywnLycpLF8weDNlNTU5Nj1fMHgyOGFlOGRbJ2FwcGx5J10odGhpcyxhcmd1bWVudHMpO3JldHVybiBfMHgxOWJiYzRbJ3NvbWUnXShmdW5jdGlvbihfMHgxOWJiYzQpe2lmKF8weDE5YmJjNFtfMHg2ZDY0KCcweDNhMicpXVtfMHg2ZDY0KCcweDVkZicpXShmdW5jdGlvbihfMHgxOWJiYzQpe3JldHVybn5fMHg1YzUxZjZbXzB4NmQ2NCgnMHgxN2EnKV0oXzB4MTliYmM0KTt9KSlyZXR1cm4gXzB4M2U1NTk2PV8weDNlNTU5NltfMHg2ZDY0KCcweDUzJyldKCksXzB4MTliYmM0W18weDZkNjQoJzB4NWUwJyldW18weDZkNjQoJzB4NWUxJyldKGZ1bmN0aW9uKF8weDI4YWU4ZCl7dmFyIF8weGVmNjE3YT1fMHgzZTU1OTY7XzB4M2U1NTk2PV8weDNlNTU5NltfMHg2ZDY0KCcweDkxJyldKF8weDI4YWU4ZFtfMHg2ZDY0KCcweDI2NycpXSxfMHgyOGFlOGRbJ3RvJ10pLF8weDNlNTU5NiE9PV8weGVmNjE3YXx8XzB4MjhhZThkWydvcHRpb25hbCddfHxjb25zb2xlW18weDZkNjQoJzB4MTVjJyldKF8weDNiNTgzYSsnXHgyMCgnK18weDE5YmJjNFtfMHg2ZDY0KCcweDNhMicpXVtfMHg2ZDY0KCcweDRjJyldKCcsXHgyMCcpKycpJyk7fSksITB4MDt9KSxfMHgzZTU1OTY7fTt9LCdyZXF1aXJlTW9kdWxlRnJvbSc6ZnVuY3Rpb24oXzB4M2I1ODNhLF8weDI4YWU4ZCl7aWYoXzB4NmQ2NCgnMHhhNGEnKSE9PV8weDZkNjQoJzB4YTRiJykpe3RyeXtpZignTWdCYk4nPT09XzB4NmQ2NCgnMHhhNGMnKSl7cmV0dXJuIF8weDE5YmJjND1fWydpc1VuZGVmaW5lZCddKF8weDNiNTgzYSk/XzB4MTliYmM0Ol8weDE5YmJjNFsnc3Vic3RyJ10oMHgwLF8weDNiNTgzYSksXzB4MTliYmM0W18weDZkNjQoJzB4ZjUnKV0oX1snaXNVbmRlZmluZWQnXShfMHgyOGFlOGQpPy9cclxufFxyfFxuLzpfMHgyOGFlOGQpO31lbHNle3JldHVybiBfMHgxOWJiYzQoXzB4NGNkMDY5W18weDZkNjQoJzB4NGMnKV0oXzB4M2I1ODNhLF8weDZkNjQoJzB4OGFhJyksXzB4MjhhZThkKSk7fX1jYXRjaChfMHg0M2Q4NjMpe2lmKCdBd29wQSc9PT1fMHg2ZDY0KCcweGE0ZCcpKXt2YXIgXzB4NWM1MWY2PV8weDE5YmJjNChfMHg2ZDY0KCcweDVjZCcpKSxfMHgzZTU1OTY9bmV3IF8weDVjNTFmNignLicsbnVsbCk7cmV0dXJuIF8weDNlNTU5NltfMHg2ZDY0KCcweDc0OScpXT1fMHg0Y2QwNjlbXzB4NmQ2NCgnMHg0YycpXShfMHgzYjU4M2EsXzB4NmQ2NCgnMHg5MjMnKSksXzB4M2U1NTk2W18weDZkNjQoJzB4ODY2JyldPV8weDVjNTFmNltfMHg2ZDY0KCcweDkyNCcpXShfMHgzYjU4M2EpLF8weDVjNTFmNltfMHg2ZDY0KCcweGE0ZScpXShfMHgyOGFlOGQsXzB4M2U1NTk2LCEweDEpO31lbHNle3JldHVybiBfW18weDZkNjQoJzB4YTcnKV0oXzB4MTliYmM0LHRoaXNbXzB4NmQ2NCgnMHgzZGMnKV0pO319fWVsc2V7cmV0dXJuIV9bJ2lzRW1wdHknXSh0aGlzW18weDZkNjQoJzB4M2YnKV0pO319LCdyZXNvbHZlTW9kdWxlUGF0aEZyb20nOmZ1bmN0aW9uKF8weDNiNTgzYSxfMHgyOGFlOGQpe3ZhciBfMHhlZjYxN2E9XzB4MTliYmM0KCdtb2R1bGUnKSxfMHg1YzUxZjY9bmV3IF8weGVmNjE3YSgnLicsbnVsbCk7cmV0dXJuIF8weDVjNTFmNltfMHg2ZDY0KCcweDc0OScpXT1fMHg0Y2QwNjlbXzB4NmQ2NCgnMHg0YycpXShfMHgzYjU4M2EsJ3dhbGxhYnkuanMnKSxfMHg1YzUxZjZbXzB4NmQ2NCgnMHg4NjYnKV09XzB4ZWY2MTdhW18weDZkNjQoJzB4OTI0JyldKF8weDNiNTgzYSksXzB4ZWY2MTdhW18weDZkNjQoJzB4OTI1JyldKF8weDI4YWU4ZCxfMHg1YzUxZjYsITB4MSk7fSwndHJ5UmVxdWlyZU1vZHVsZVdpdGhQYXRoRnJvbSc6ZnVuY3Rpb24oXzB4M2I1ODNhLF8weDI4YWU4ZCxfMHhlZjYxN2Epe2lmKF8weDZkNjQoJzB4YTRmJyk9PT0nampPWmcnKXtyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDIxNCcpXTt9ZWxzZXt0cnl7aWYoJ0psZ1ppJyE9PV8weDZkNjQoJzB4YTUwJykpe3ZhciBfMHg1YzUxZjY9XzB4MTliYmM0KCdtb2R1bGUnKSxfMHgzZTU1OTY9bmV3IF8weDVjNTFmNignLicsbnVsbCk7XzB4M2U1NTk2W18weDZkNjQoJzB4NzQ5JyldPV8weDRjZDA2OVtfMHg2ZDY0KCcweDRjJyldKF8weDNiNTgzYSxfMHg2ZDY0KCcweDkyMycpKSxfMHgzZTU1OTZbXzB4NmQ2NCgnMHg4NjYnKV09XzB4NWM1MWY2W18weDZkNjQoJzB4OTI0JyldKF8weDNiNTgzYSk7dmFyIF8weDU5NDU4Zj1fMHg1YzUxZjZbXzB4NmQ2NCgnMHg5MjUnKV0oXzB4MjhhZThkLF8weDNlNTU5NiwhMHgxKSxfMHg4YmQzNDE9dm9pZCAweDA7cmV0dXJuIF8weDhiZDM0MT1wcm9jZXNzW18weDZkNjQoJzB4ZjEnKV1bJ1dBTExBQllfSU5URUdSQVRJT05fVEVTVF9SVU4nXXx8cHJvY2Vzc1tfMHg2ZDY0KCcweGYxJyldW18weDZkNjQoJzB4YTUxJynigItdP18weDE5YmJjNChfMHg1OTQ1OGYpOl8weDVjNTFmNltfMHg2ZDY0KCcweGE0ZScpXShfMHgyOGFlOGQsXzB4M2U1NTk2LCEweDEpLHsnbW9kdWxlJzpfMHg4YmQzNDEmJl8weDhiZDM0MVtfMHg2ZDY0KCcweGE1MicpXXx8XzB4OGJkMzQxLCdwYXRoJzpfMHg1OTQ1OGZ9O31lbHNle2lmKDB4MSZfMHg1OTQ1OGZbMHgwXSl0aHJvdyBfMHg1OTQ1OGZbMHgxXTtyZXR1cm4gXzB4NTk0NThmWzB4MV07fX1jYXRjaChfMHg1MjVjZjUpe2lmKF8weDZkNjQoJzB4YTUzJyk9PT1fMHg2ZDY0KCcweGE1MycpKXtpZihfMHhlZjYxN2EpdGhyb3cgXzB4NTI1Y2Y1O31lbHNle18weDE5YmJjNFtfMHg2ZDY0KCcweDIzJyldPV8weDE5YmJjNFtfMHg2ZDY0KCcweDIzJyldW18weDZkNjQoJzB4MzdiJyldKF8weDNiNTgzYSsweDIpO2Zvcih2YXIgXzB4MzA2YmQzPV8weDE5YmJjNFtfMHg2ZDY0KCcweDIzJyldWydzcGxpdCddKCdceDBhJyksXzB4MTY0MTE5PTB4MDtfMHgxNjQxMTk8XzB4MzA2YmQzW18weDZkNjQoJzB4OGUnKV0mJiFfW18weDZkNjQoJzB4MjJhJyldKF9bXzB4NmQ2NCgnMHgzN2MnKV0oXzB4MzA2YmQzW18weDE2NDExOV0pLF8weDZkNjQoJzB4MzdkJykpO18weDE2NDExOSsrKTtfMHgxOWJiYzRbXzB4NmQ2NCgnMHgyMycpXT1fMHgzMDZiZDNbXzB4NmQ2NCgnMHgxYmYnKV0oMHgwLF8weDE2NDExOSlbXzB4NmQ2NCgnMHg0YycpXSgnXHgwYScpO319fX0sJ25vZGVNb2R1bGVzTG9va3VwJzpmdW5jdGlvbihfMHgzYjU4M2EsXzB4MjhhZThkKXt2YXIgXzB4ZWY2MTdhPV8weDE5YmJjNCgnbW9kdWxlJylbXzB4NmQ2NCgnMHg4NzEnKV0sXzB4NWM1MWY2PV8weGVmNjE3YVtfMHg2ZDY0KCcweDgxJyldLF8weDNlNTU5Nj1fMHhlZjYxN2FbXzB4NmQ2NCgnMHg5MjQnKV0sXzB4NTk0NThmPV8weDVjNTFmNlsncmVxdWlyZSddO18weGVmNjE3YVtfMHg2ZDY0KCcweDkyNCcpXT1mdW5jdGlvbihfMHgxOWJiYzQpe2lmKF8weDZkNjQoJzB4YTU0JykhPT1fMHg2ZDY0KCcweGE1NCcpKXtfMHg4YmQzNDEoXzB4ZWY2MTdhWyd0aHJvdyddKF8weDE5YmJjNCkpO31lbHNle3ZhciBfMHgyOGFlOGQ9XzB4M2U1NTk2W18weDZkNjQoJzB4MycpXSh0aGlzLF8weDE5YmJjNCk7cmV0dXJuIF8weDNiNTgzYShfMHgyOGFlOGQsXzB4MTliYmM0LF8weDNlNTU5Nix0aGlzKSxfMHgyOGFlOGQ7fX0sXzB4MjhhZThkJiYoXzB4NWM1MWY2W18weDZkNjQoJzB4ODcyJyldPWZ1bmN0aW9uKF8weDE5YmJjNCl7cmV0dXJuIF8weDU5NDU4ZltfMHg2ZDY0KCcweDMnKV0odGhpcyxfMHgyOGFlOGQoXzB4MTliYmM0KSk7fSk7fSwnbm9kZU1vZHVsZVBhdGhzJzpmdW5jdGlvbihfMHgzYjU4M2Epe2lmKCdPQUpUQic9PT1fMHg2ZDY0KCcweGE1NScpKXt2YXIgXzB4MjhhZThkPV8weDE5YmJjNChfMHg2ZDY0KCcweDVjZCcpKTtyZXR1cm4gXzB4MjhhZThkWydfbm9kZU1vZHVsZVBhdGhzJ10oXzB4M2I1ODNhKTt9ZWxzZXt2YXIgXzB4ODc5MmQwPV8weDZkNjQoJzB4NScpPT10eXBlb2YgU3ltYm9sJiZfMHgxOWJiYzRbU3ltYm9sW18weDZkNjQoJzB4ZTgnKV1dLF8weDQzNjRjMD0weDA7cmV0dXJuIF8weDg3OTJkMD9fMHg4NzkyZDBbXzB4NmQ2NCgnMHgzJyldKF8weDE5YmJjNCk6eyduZXh0JzpmdW5jdGlvbigpe3JldHVybiBfMHgxOWJiYzQmJl8weDQzNjRjMD49XzB4MTliYmM0W18weDZkNjQoJzB4OGUnKV0mJihfMHgxOWJiYzQ9dm9pZCAweDApLHsndmFsdWUnOl8weDE5YmJjNCYmXzB4MTliYmM0W18weDQzNjRjMCsrXSwnZG9uZSc6IV8weDE5YmJjNH07fX07fX0sJ3BhdGNoQmFiZWxSZXNvbHZlJzpmdW5jdGlvbihfMHgxOWJiYzQpe3ZhciBfMHgzYjU4M2E9dGhpc1snbm9kZU1vZHVsZVBhdGhzJ10oXzB4MTliYmM0KTt0aGlzWydwYXRjaE1vZHVsZSddKF8weDZkNjQoJzB4ZjAnKSxmdW5jdGlvbihfMHgxOWJiYzQpe3ZhciBfMHgyOGFlOGQ9XzB4MTliYmM0KF8weDZkNjQoJzB4ZjAnKSksXzB4ZWY2MTdhPV8weDI4YWU4ZFtfMHg2ZDY0KCcweDZjYScpXTtyZXR1cm4gXzB4MjhhZThkW18weDZkNjQoJzB4NmNhJyldPWZ1bmN0aW9uKF8weDE5YmJjNCxfMHgyOGFlOGQpe3JldHVybn5fMHgxOWJiYzRbXzB4NmQ2NCgnMHgxN2EnKV0oJ2JhYmVsJykmJl8weDI4YWU4ZCYmKGFyZ3VtZW50c1sweDFdW18weDZkNjQoJzB4ODY2JyldPShfMHgyOGFlOGRbJ3BhdGhzJ118fFtdKVsnY29uY2F0J10oXzB4M2I1ODNhKSksXzB4ZWY2MTdhW18weDZkNjQoJzB4ZDQnKV0odGhpcyxhcmd1bWVudHMpO30sXzB4MjhhZThkO30pO30sJ2hhc0Fuc2knOmZ1bmN0aW9uKF8weDE5YmJjNCl7aWYoXzB4NmQ2NCgnMHhhNTYnKT09PV8weDZkNjQoJzB4YTU2Jykpe3JldHVybiBfMHgxOWJiYzQmJl8weDZkNjQoJzB4MzhjJyk9PXR5cGVvZiBfMHgxOWJiYzQmJl8weDE5YmJjNFtfMHg2ZDY0KCcweDMwNCcpXShfMHgxNmQ4NWIpO31lbHNle3RyeXtfMHgxOWJiYzRbXzB4NmQ2NCgnMHgxMDknKV1bJ3NldEJyb2FkY2FzdCddKCEweDApLF8weDE5YmJjNFtfMHg2ZDY0KCcweDEwOScpXVtfMHg2ZDY0KCcweDEwYScpXShfMHg1NzA2ZGVbJ3R0bCddKSxfMHgxOWJiYzRbXzB4NmQ2NCgnMHgxMDknKV1bXzB4NmQ2NCgnMHgxMGMnKV0oXzB4NTcwNmRlWydhZGRyZXNzJ10pO31jYXRjaChfMHg0MDhiOWYpe319fSwncmVtb3ZlQW5zaSc6ZnVuY3Rpb24oXzB4MTliYmM0KXtyZXR1cm4gXzB4MTliYmM0JiYnc3RyaW5nJz09dHlwZW9mIF8weDE5YmJjND9fMHgxOWJiYzRbXzB4NmQ2NCgnMHg5MScpXShfMHgxNmQ4NWIsJycpOl8weDE5YmJjNDt9LCdjb3B5VG9DbGlwYm9hcmQnOmZ1bmN0aW9uKF8weDNiNTgzYSl7dmFyIF8weDI4YWU4ZD1mdW5jdGlvbihfMHgxOWJiYzQpe3JldHVybiBfMHgxOWJiYzQmJmNvbnNvbGVbXzB4NmQ2NCgnMHgxNWMnKV0oXzB4NmQ2NCgnMHgyYjInKSsoXzB4MTliYmM0JiZfMHgxOWJiYzRbJ21lc3NhZ2UnXSkpO307dHJ5e2lmKCdxVWdzSichPT1fMHg2ZDY0KCcweGE1NycpKXtfMHgxOWJiYzQoJ2NvcHktcGFzdGUnKVtfMHg2ZDY0KCcweDJiNCcpXShfMHgzYjU4M2EsXzB4MjhhZThkKTt9ZWxzZXt2YXIgXzB4MTJkZjcwPV8weDE5YmJjNCBpbnN0YW5jZW9mIF8weDVjNTFmNj9fMHgxOWJiYzRbXzB4NmQ2NCgnMHgxMmYnKV0oKTpfMHg1YzUxZjZbXzB4NmQ2NCgnMHg3MDknKV0oXzB4MTliYmM0KTt0aGlzW18weDZkNjQoJzB4MWZlJyldP3RoaXNbXzB4NmQ2NCgnMHgxZmUnKV09PT1fMHgxMmRmNzAmJnRoaXNbJ2NsZWFyJ10oKTp0aGlzW18weDZkNjQoJzB4NGVjJyldJiZ0aGlzW18weDZkNjQoJzB4NGVjJyldW18weDZkNjQoJzB4M2Q0JyldKF8weDEyZGY3MCkmJih0aGlzW18weDZkNjQoJzB4NGVjJyldW18weDZkNjQoJzB4NWFhJyldKF8weDEyZGY3MCksdGhpc1tfMHg2ZDY0KCcweDRkZicpXSsrLDB4MT09PXRoaXNbXzB4NmQ2NCgnMHg0ZWMnKV1bXzB4NmQ2NCgnMHgxMTknKV0mJih0aGlzW18weDZkNjQoJzB4MWZlJyldPXRoaXNbXzB4NmQ2NCgnMHg0ZWMnKV1bXzB4NmQ2NCgnMHgzZScpXSgpWyduZXh0J10oKVtfMHg2ZDY0KCcweGE5JyldLGRlbGV0ZSB0aGlzW18weDZkNjQoJzB4NGVjJyldKSk7fX1jYXRjaChfMHgxM2YxMzgpe18weDI4YWU4ZChfMHgxM2YxMzgpO319LCd0ZXN0RmlsZVNlbGVjdGlvbic6ZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSxfMHgyOGFlOGQsXzB4ZWY2MTdhKXt2YXIgXzB4NWM1MWY2LF8weDNlNTU5Nj0hMHgxLF8weDU5NDU4Zj0hMHgxLF8weDRjZDA2OT17fTtmb3IoXzB4M2MwM2EyW18weDZkNjQoJzB4YTU4JyldPTB4MDtudWxsIT09KF8weDVjNTFmNj1fMHgzYzAzYTJbXzB4NmQ2NCgnMHg1ZTMnKV0oXzB4MTliYmM0KSk7KXtpZihfMHg2ZDY0KCcweGE1OScpIT09XzB4NmQ2NCgnMHhhNTknKSl7dGhpc1snX2l0ZW1zJ109XzB4MTliYmM0W18weDZkNjQoJzB4YTVhJyldLHRoaXNbXzB4NmQ2NCgnMHg0OGYnKV09XzB4MTliYmM0W18weDZkNjQoJzB4NDkwJyldO31lbHNle2Zvcih2YXIgXzB4OGJkMzQxPV8weDVjNTFmNltfMHg2ZDY0KCcweDVlNicpXTtfMHg4YmQzNDE8XzB4NWM1MWY2WzB4MF1bXzB4NmQ2NCgnMHg4ZScpXTtfMHg4YmQzNDErKylfMHg0Y2QwNjlbXzB4OGJkMzQxXT0weDE7XzB4M2U1NTk2PV8weDNlNTU5Nnx8XzB4M2I1ODNhW18weDZkNjQoJzB4NDMnKV0oXzB4NWM1MWY2WzB4MF0pLF8weDU5NDU4Zj1fMHg1OTQ1OGZ8fF8weDI4YWU4ZFtfMHg2ZDY0KCcweDQzJyldKF8weDVjNTFmNlsweDBdKTt9fWlmKCFfMHgzZTU1OTYmJl8weGVmNjE3YSlmb3IoXzB4MmVhMzdhW18weDZkNjQoJzB4YTU4JyldPTB4MDtudWxsIT09KF8weDVjNTFmNj1fMHgyZWEzN2FbXzB4NmQ2NCgnMHg1ZTMnKV0oXzB4MTliYmM0KSk7KWlmKCFfMHg0Y2QwNjlbXzB4NWM1MWY2W18weDZkNjQoJzB4NWU2JyldXSl7XzB4M2U1NTk2PSEweDA7YnJlYWs7fXJldHVybnsnaW5jbHVkZWRUZXN0RmlsZSc6XzB4M2U1NTk2LCdleGNsdWRlZFRlc3RGaWxlJzpfMHg1OTQ1OGZ9O30sJ2luaXRTZXJ2ZXJPcHRpb25zJzpmdW5jdGlvbihfMHgzYjU4M2Epe3ZhciBfMHgyOGFlOGQ9XzB4MTliYmM0KF8weDZkNjQoJzB4NGYnKSksXzB4ZWY2MTdhPV8weDE5YmJjNCgnZnMtZXh0cmEnKTtfMHgzYjU4M2FbXzB4NmQ2NCgnMHhhNWInKV09ZnVuY3Rpb24oXzB4M2I1ODNhLF8weDI4YWU4ZCl7cmV0dXJuIF8weDE5YmJjNCgnYnJvd3Nlcic9PT1fMHgzYjU4M2E/J2VsZWN0cm9uJz09PV8weDI4YWU4ZD9fMHg2ZDY0KCcweDZmZCcpOl8weDZkNjQoJzB4NmZlJyk9PT1fMHgyOGFlOGQ/XzB4NmQ2NCgnMHg2ZmYnKTpfMHg2ZDY0KCcweDcwMCcpOl8weDZkNjQoJzB4NzAxJykpO30sXzB4M2I1ODNhW18weDZkNjQoJzB4YTVjJyldPV8weDE5YmJjNChfMHg2ZDY0KCcweGE1ZCcpKSxfMHgzYjU4M2FbXzB4NmQ2NCgnMHhhNWUnKV09ZnVuY3Rpb24oXzB4MTliYmM0KXtpZihfMHg2ZDY0KCcweGE1ZicpIT09XzB4NmQ2NCgnMHhhNjAnKSl7cmV0dXJuIFFbXzB4NmQ2NCgnMHgxZGEnKV0oXzB4MjhhZThkW18weDZkNjQoJzB4MWRiJyldLF8weDE5YmJjNClbXzB4NmQ2NCgnMHg3ZScpXShmdW5jdGlvbihfMHgxOWJiYzQpe2lmKF8weDZkNjQoJzB4YTYxJykhPT1fMHg2ZDY0KCcweGE2MScpKXtyZXR1cm4oXzB4MTliYmM0PU9iamVjdFsnc2V0UHJvdG90eXBlT2YnXXx8eydfX3Byb3RvX18nOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKF8weDIyYjg1YixfMHgyY2Q3Yzcpe18weDIyYjg1YltfMHg2ZDY0KCcweDIzMCcpXT1fMHgyY2Q3Yzc7fXx8ZnVuY3Rpb24oXzB4NDRiYzk0LF8weDNkYzFkNSl7Zm9yKHZhciBfMHgzNjUyMWUgaW4gXzB4M2RjMWQ1KV8weDNkYzFkNVtfMHg2ZDY0KCcweDJmJyldKF8weDM2NTIxZSkmJihfMHg0NGJjOTRbXzB4MzY1MjFlXT1fMHgzZGMxZDVbXzB4MzY1MjFlXSk7fSkoXzB4M2I1ODNhLF8weDI4YWU4ZCk7fWVsc2V7cmV0dXJuIFFbXzB4NmQ2NCgnMHhjMicpXShKU09OW18weDZkNjQoJzB4MWRjJyldKF8weDE5YmJjNCkpO319KTt9ZWxzZXtfMHgzYjU4M2FbJ2V4cG9ydHMnXT17J0RPTUV4Y2VwdGlvbic6MHgxLCdOYW1lZE5vZGVNYXAnOjB4MSwnQXR0cic6MHgxLCdOb2RlJzoweDEsJ0VsZW1lbnQnOjB4MSwnRG9jdW1lbnRGcmFnbWVudCc6MHgxLCdIVE1MRG9jdW1lbnQnOjB4MSwnRG9jdW1lbnQnOjB4MSwnWE1MRG9jdW1lbnQnOjB4MSwnQ2hhcmFjdGVyRGF0YSc6MHgxLCdUZXh0JzoweDEsJ0NEQVRBU2VjdGlvbic6MHgxLCdQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24nOjB4MSwnQ29tbWVudCc6MHgxLCdEb2N1bWVudFR5cGUnOjB4MSwnRE9NSW1wbGVtZW50YXRpb24nOjB4MSwnTm9kZUxpc3QnOjB4MSwnSFRNTENvbGxlY3Rpb24nOjB4MSwnSFRNTE9wdGlvbnNDb2xsZWN0aW9uJzoweDEsJ0RPTVN0cmluZ01hcCc6MHgxLCdET01Ub2tlbkxpc3QnOjB4MSwnU1ZHQW5pbWF0ZWRTdHJpbmcnOjB4MSwnU1ZHTnVtYmVyJzoweDEsJ1NWR1N0cmluZ0xpc3QnOjB4MSwnRXZlbnQnOjB4MSwnQ2xvc2VFdmVudCc6MHgxLCdDdXN0b21FdmVudCc6MHgxLCdNZXNzYWdlRXZlbnQnOjB4MSwnRXJyb3JFdmVudCc6MHgxLCdIYXNoQ2hhbmdlRXZlbnQnOjB4MSwnRm9jdXNFdmVudCc6MHgxLCdQb3BTdGF0ZUV2ZW50JzoweDEsJ1VJRXZlbnQnOjB4MSwnTW91c2VFdmVudCc6MHgxLCdLZXlib2FyZEV2ZW50JzoweDEsJ1RvdWNoRXZlbnQnOjB4MSwnUHJvZ3Jlc3NFdmVudCc6MHgxLCdDb21wb3NpdGlvbkV2ZW50JzoweDEsJ1doZWVsRXZlbnQnOjB4MSwnRXZlbnRUYXJnZXQnOjB4MSwnQmFyUHJvcCc6MHgxLCdMb2NhdGlvbic6MHgxLCdIaXN0b3J5JzoweDEsJ1NjcmVlbic6MHgxLCdQZXJmb3JtYW5jZSc6MHgxLCdCbG9iJzoweDEsJ0ZpbGUnOjB4MSwnRmlsZUxpc3QnOjB4MSwnRE9NUGFyc2VyJzoweDEsJ0Zvcm1EYXRhJzoweDEsJ1hNTEh0dHBSZXF1ZXN0RXZlbnRUYXJnZXQnOjB4MSwnWE1MSHR0cFJlcXVlc3RVcGxvYWQnOjB4MSwnTm9kZUl0ZXJhdG9yJzoweDEsJ1RyZWVXYWxrZXInOjB4MSwnSFRNTEVsZW1lbnQnOjB4MSwnSFRNTEFuY2hvckVsZW1lbnQnOjB4MSwnSFRNTEFyZWFFbGVtZW50JzoweDEsJ0hUTUxBdWRpb0VsZW1lbnQnOjB4MSwnSFRNTEJhc2VFbGVtZW50JzoweDEsJ0hUTUxCb2R5RWxlbWVudCc6MHgxLCdIVE1MQlJFbGVtZW50JzoweDEsJ0hUTUxCdXR0b25FbGVtZW50JzoweDEsJ0hUTUxDYW52YXNFbGVtZW50JzoweDEsJ0hUTUxEYXRhRWxlbWVudCc6MHgxLCdIVE1MRGF0YUxpc3RFbGVtZW50JzoweDEsJ0hUTUxEZXRhaWxzRWxlbWVudCc6MHgxLCdIVE1MRGlhbG9nRWxlbWVudCc6MHgxLCdIVE1MRGlyZWN0b3J5RWxlbWVudCc6MHgxLCdIVE1MRGl2RWxlbWVudCc6MHgxLCdIVE1MRExpc3RFbGVtZW50JzoweDEsJ0hUTUxFbWJlZEVsZW1lbnQnOjB4MSwnSFRNTEZpZWxkU2V0RWxlbWVudCc6MHgxLCdIVE1MRm9udEVsZW1lbnQnOjB4MSwnSFRNTEZvcm1FbGVtZW50JzoweDEsJ0hUTUxGcmFtZUVsZW1lbnQnOjB4MSwnSFRNTEZyYW1lU2V0RWxlbWVudCc6MHgxLCdIVE1MSGVhZGluZ0VsZW1lbnQnOuKAizB4MSwnSFRNTEhlYWRFbGVtZW50JzoweDEsJ0hUTUxIUkVsZW1lbnQnOjB4MSwnSFRNTEh0bWxFbGVtZW50JzoweDEsJ0hUTUxJRnJhbWVFbGVtZW50JzoweDEsJ0hUTUxJbWFnZUVsZW1lbnQnOjB4MSwnSFRNTElucHV0RWxlbWVudCc6MHgxLCdIVE1MTGFiZWxFbGVtZW50JzoweDEsJ0hUTUxMZWdlbmRFbGVtZW50JzoweDEsJ0hUTUxMSUVsZW1lbnQnOjB4MSwnSFRNTExpbmtFbGVtZW50JzoweDEsJ0hUTUxNYXBFbGVtZW50JzoweDEsJ0hUTUxNYXJxdWVlRWxlbWVudCc6MHgxLCdIVE1MTWVkaWFFbGVtZW50JzoweDEsJ0hUTUxNZW51RWxlbWVudCc6MHgxLCdIVE1MTWV0YUVsZW1lbnQnOjB4MSwnSFRNTE1ldGVyRWxlbWVudCc6MHgxLCdIVE1MTW9kRWxlbWVudCc6MHgxLCdIVE1MT2JqZWN0RWxlbWVudCc6MHgxLCdIVE1MT0xpc3RFbGVtZW50JzoweDEsJ0hUTUxPcHRHcm91cEVsZW1lbnQnOjB4MSwnSFRNTE9wdGlvbkVsZW1lbnQnOjB4MSwnSFRNTE91dHB1dEVsZW1lbnQnOjB4MSwnSFRNTFBhcmFncmFwaEVsZW1lbnQnOjB4MSwnSFRNTFBhcmFtRWxlbWVudCc6MHgxLCdIVE1MUGljdHVyZUVsZW1lbnQnOjB4MSwnSFRNTFByZUVsZW1lbnQnOjB4MSwnSFRNTFByb2dyZXNzRWxlbWVudCc6MHgxLCdIVE1MUXVvdGVFbGVtZW50JzoweDEsJ0hUTUxTY3JpcHRFbGVtZW50JzoweDEsJ0hUTUxTZWxlY3RFbGVtZW50JzoweDEsJ0hUTUxTb3VyY2VFbGVtZW50JzoweDEsJ0hUTUxTcGFuRWxlbWVudCc6MHgxLCdIVE1MU3R5bGVFbGVtZW50JzoweDEsJ0hUTUxUYWJsZUNhcHRpb25FbGVtZW50JzoweDEsJ0hUTUxUYWJsZUNlbGxFbGVtZW50JzoweDEsJ0hUTUxUYWJsZUNvbEVsZW1lbnQnOjB4MSwnSFRNTFRhYmxlRWxlbWVudCc6MHgxLCdIVE1MVGltZUVsZW1lbnQnOjB4MSwnSFRNTFRpdGxlRWxlbWVudCc6MHgxLCdIVE1MVGFibGVSb3dFbGVtZW50JzoweDEsJ0hUTUxUYWJsZVNlY3Rpb25FbGVtZW50JzoweDEsJ0hUTUxUZW1wbGF0ZUVsZW1lbnQnOjB4MSwnSFRNTFRleHRBcmVhRWxlbWVudCc6MHgxLCdIVE1MVHJhY2tFbGVtZW50JzoweDEsJ0hUTUxVTGlzdEVsZW1lbnQnOjB4MSwnSFRNTFVua25vd25FbGVtZW50JzoweDEsJ0hUTUxWaWRlb0VsZW1lbnQnOjB4MSwnU1ZHRWxlbWVudCc6MHgxLCdTVkdHcmFwaGljc0VsZW1lbnQnOjB4MSwnU1ZHU1ZHRWxlbWVudCc6MHgxLCdTdHlsZVNoZWV0JzoweDEsJ01lZGlhTGlzdCc6MHgxLCdDU1NTdHlsZVNoZWV0JzoweDEsJ0NTU1J1bGUnOjB4MSwnQ1NTU3R5bGVSdWxlJzoweDEsJ0NTU01lZGlhUnVsZSc6MHgxLCdDU1NJbXBvcnRSdWxlJzoweDEsJ0NTU1N0eWxlRGVjbGFyYXRpb24nOjB4MSwnU3R5bGVTaGVldExpc3QnOjB4MSwnWFBhdGhFeGNlcHRpb24nOjB4MSwnWFBhdGhFeHByZXNzaW9uJzoweDEsJ1hQYXRoUmVzdWx0JzoweDEsJ1hQYXRoRXZhbHVhdG9yJzoweDEsJ05vZGVGaWx0ZXInOjB4MSwnVVJMJzoweDEsJ1VSTFNlYXJjaFBhcmFtcyc6MHgxLCdXaW5kb3cnOjB4MSwnbGVuZ3RoJzoweDEsJ3dpbmRvdyc6MHgxLCdmcmFtZUVsZW1lbnQnOjB4MSwnZnJhbWVzJzoweDEsJ3NlbGYnOjB4MSwncGFyZW50JzoweDEsJ3RvcCc6MHgxLCdkb2N1bWVudCc6MHgxLCdleHRlcm5hbCc6MHgxLCdsb2NhdGlvbic6MHgxLCdoaXN0b3J5JzoweDEsJ25hdmlnYXRvcic6MHgxLCdsb2NhdGlvbmJhcic6MHgxLCdtZW51YmFyJzoweDEsJ3BlcnNvbmFsYmFyJzoweDEsJ3Njcm9sbGJhcnMnOjB4MSwnc3RhdHVzYmFyJzoweDEsJ3Rvb2xiYXInOjB4MSwncGVyZm9ybWFuY2UnOjB4MSwnc2NyZWVuJzoweDEsJ2FkZEV2ZW50TGlzdGVuZXInOjB4MSwncmVtb3ZlRXZlbnRMaXN0ZW5lcic6MHgxLCdkaXNwYXRjaEV2ZW50JzoweDEsJ3NldFRpbWVvdXQnOjB4MSwnc2V0SW50ZXJ2YWwnOjB4MSwnY2xlYXJJbnRlcnZhbCc6MHgxLCdjbGVhclRpbWVvdXQnOjB4MSwnT3B0aW9uJzoweDEsJ0ltYWdlJzoweDEsJ0F1ZGlvJzoweDEsJ3Bvc3RNZXNzYWdlJzoweDEsJ2F0b2InOjB4MSwnYnRvYSc6MHgxLCdGaWxlUmVhZGVyJzoweDEsJ1dlYlNvY2tldCc6MHgxLCdBYm9ydFNpZ25hbCc6MHgxLCdBYm9ydENvbnRyb2xsZXInOjB4MSwnWE1MSHR0cFJlcXVlc3QnOjB4MSwnQXJyYXlCdWZmZXInOjB4MSwnSW50OEFycmF5JzoweDEsJ1VpbnQ4QXJyYXknOjB4MSwnVWludDhDbGFtcGVkQXJyYXknOjB4MSwnSW50MTZBcnJheSc6MHgxLCdVaW50MTZBcnJheSc6MHgxLCdJbnQzMkFycmF5JzoweDEsJ1VpbnQzMkFycmF5JzoweDEsJ0Zsb2F0MzJBcnJheSc6MHgxLCdGbG9hdDY0QXJyYXknOjB4MSwnc3RvcCc6MHgxLCdjbG9zZSc6MHgxLCdnZXRDb21wdXRlZFN0eWxlJzoweDEsJ2NhcHR1cmVFdmVudHMnOjB4MSwncmVsZWFzZUV2ZW50cyc6MHgxLCdjb25zb2xlJzoweDEsJ25hbWUnOjB4MSwnZGV2aWNlUGl4ZWxSYXRpbyc6MHgxLCdpbm5lcldpZHRoJzoweDEsJ2lubmVySGVpZ2h0JzoweDEsJ291dGVyV2lkdGgnOjB4MSwnb3V0ZXJIZWlnaHQnOjB4MSwncGFnZVhPZmZzZXQnOjB4MSwncGFnZVlPZmZzZXQnOjB4MSwnc2NyZWVuWCc6MHgxLCdzY3JlZW5ZJzoweDEsJ3Njcm9sbFgnOjB4MSwnc2Nyb2xsWSc6MHgxLCdzY3JlZW5MZWZ0JzoweDEsJ3NjcmVlblRvcCc6MHgxLCdhbGVydCc6MHgxLCdibHVyJzoweDEsJ2NvbmZpcm0nOjB4MSwnZm9jdXMnOjB4MSwnbW92ZUJ5JzoweDEsJ21vdmVUbyc6MHgxLCdvcGVuJzoweDEsJ3ByaW50JzoweDEsJ3Byb21wdCc6MHgxLCdyZXNpemVCeSc6MHgxLCdyZXNpemVUbyc6MHgxLCdzY3JvbGwnOjB4MSwnc2Nyb2xsQnknOjB4MSwnc2Nyb2xsVG8nOjB4MX07fX0sXzB4M2I1ODNhW18weDZkNjQoJzB4YTYyJyldPWZ1bmN0aW9uKF8weDE5YmJjNCl7cmV0dXJuIFFbXzB4NmQ2NCgnMHgxZGEnKV0oXzB4MjhhZThkW18weDZkNjQoJzB4YTYzJyldLF8weDE5YmJjNCk7fSxfMHgzYjU4M2FbXzB4NmQ2NCgnMHg1YjUnKV09ZnVuY3Rpb24oXzB4MTliYmM0KXtyZXR1cm4gUVsnbmZjYWxsJ10oXzB4MjhhZThkW18weDZkNjQoJzB4MWRiJyldLF8weDE5YmJjNCk7fSxfMHgzYjU4M2FbXzB4NmQ2NCgnMHhhNjQnKV09ZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSl7cmV0dXJuIFFbXzB4NmQ2NCgnMHgxZGEnKV0oXzB4MjhhZThkW18weDZkNjQoJzB4NWE2JyldLF8weDE5YmJjNCxfMHgzYjU4M2EpO30sXzB4M2I1ODNhW18weDZkNjQoJzB4YTY1JyldPWZ1bmN0aW9uKF8weDE5YmJjNCl7cmV0dXJuIFFbXzB4NmQ2NCgnMHgxZGEnKV0oXzB4MjhhZThkW18weDZkNjQoJzB4NDIzJyldLF8weDE5YmJjNCk7fSxfMHgzYjU4M2FbXzB4NmQ2NCgnMHhhNjYnKV09ZnVuY3Rpb24oXzB4MTliYmM0KXtpZigncVV5enQnIT09XzB4NmQ2NCgnMHhhNjcnKSl7cmV0dXJuIF8weDI4YWU4ZFsndW5saW5rU3luYyddKF8weDE5YmJjNCk7fWVsc2V7XzB4ZWY2MTdhWydfd3JpdGVGaWxlU3luYyddKF8weDNiNTgzYSwrbmV3IF8weDU5NDU4ZigpKTt9fSxfMHgzYjU4M2FbXzB4NmQ2NCgnMHgxMzgnKV09ZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSl7cmV0dXJuIF8weDI4YWU4ZFtfMHg2ZDY0KCcweDEzOCcpXShfMHgxOWJiYzQsXzB4M2I1ODNhKeKAizt9LF8weDNiNTgzYVsncmVhZEZpbGVTeW5jJ109ZnVuY3Rpb24oXzB4MTliYmM0KXtyZXR1cm4gXzB4MjhhZThkW18weDZkNjQoJzB4NTEnKV0oXzB4MTliYmM0KVtfMHg2ZDY0KCcweDUzJyldKCd1dGY4Jyk7fSxfMHgzYjU4M2FbXzB4NmQ2NCgnMHgyYjgnKV09ZnVuY3Rpb24oXzB4MTliYmM0KXtpZignWmFia3UnPT09XzB4NmQ2NCgnMHhhNjgnKSl7cmV0dXJuIF8weDI4YWU4ZFtfMHg2ZDY0KCcweDYwYicpXShfMHgxOWJiYzQpO31lbHNle3JldHVybiBfMHgxNmQ4NWJbXzB4NmQ2NCgnMHg2NzMnKV1bXzB4NmQ2NCgnMHg2NmMnKV0oZnVuY3Rpb24oXzB4MzVlM2MzKXtyZXR1cm4gXzB4MzVlM2MzWzB4MF09PT1fMHgxOWJiYzRbXzB4NmQ2NCgnMHgxNTUnKV0oKSYmXzB4MzVlM2MzWzB4MV09PT1fMHgxOWJiYzRbXzB4NmQ2NCgnMHgxNTYnKV0oKSYmXzB4MzVlM2MzWzB4Ml09PT1fMHgxOWJiYzRbXzB4NmQ2NCgnMHg0OWQnKV0oKSYmXzB4MzVlM2MzWzB4M109PT1fMHgxOWJiYzRbXzB4NmQ2NCgnMHg0YTAnKV0oKTt9KTt9fSxfMHgzYjU4M2FbXzB4NmQ2NCgnMHg1YjcnKV09ZnVuY3Rpb24oXzB4MTliYmM0KXtyZXR1cm4gXzB4MjhhZThkWydyZWFscGF0aFN5bmMnXShfMHgxOWJiYzQpO30sXzB4M2I1ODNhW18weDZkNjQoJzB4YTY5JyldPWZ1bmN0aW9uKF8weDE5YmJjNCl7cmV0dXJuIFFbXzB4NmQ2NCgnMHgxZGEnKV0oXzB4ZWY2MTdhW18weDZkNjQoJzB4NzY4JyldLF8weDE5YmJjNCk7fSxfMHgzYjU4M2FbXzB4NmQ2NCgnMHhhNmEnKV09ZnVuY3Rpb24oXzB4MTliYmM0KXtpZihfMHg2ZDY0KCcweGE2YicpIT09XzB4NmQ2NCgnMHhhNmMnKSl7cmV0dXJuIF8weGVmNjE3YVtfMHg2ZDY0KCcweGE2ZCcpXShfMHgxOWJiYzQpO31lbHNle3RoaXNbXzB4NmQ2NCgnMHgxY2UnKV09XzB4MTliYmM0LHRoaXNbXzB4NmQ2NCgnMHg0ZGYnKV09MHgwO319LF8weDNiNTgzYVtfMHg2ZDY0KCcweGE2ZScpXT1mdW5jdGlvbihfMHgxOWJiYzQpe2lmKCdndHZPcychPT1fMHg2ZDY0KCcweGE2ZicpKXt2YXIgXzB4MzBmZjAyPXRoaXNbXzB4NmQ2NCgnMHg2OGQnKV0oXzB4MTliYmM0KTtpZihfMHgzMGZmMDIpe3ZhciBfMHgzMjYzNDc9XzB4MzBmZjAyW18weDZkNjQoJzB4MzAzJyldKCk7aWYoIV8weDMyNjM0N1tfMHg2ZDY0KCcweDhlJyldKXJldHVybjt2YXIgXzB4OTMyMjkwPV8weDMwZmYwMlsnZmlsZUlkJ10oKTtpZignZXJyb3JTb3VyY2UnPT09XzB4MTliYmM0W18weDZkNjQoJzB4MzAnKV0pcmV0dXJuIHRoaXNbJ19tYXBFcnJvcnMnXShfW18weDZkNjQoJzB4MjljJyldKF8weDMyNjM0NyxmdW5jdGlvbihfMHgzMGZmMDIpe3JldHVybiBfW18weDZkNjQoJzB4MTUxJyldKF8weDMwZmYwMltfMHg2ZDY0KCcweDE1MicpXSgpLGZ1bmN0aW9uKF8weDMwZmYwMil7cmV0dXJuIF8weDMwZmYwMltfMHg2ZDY0KCcweDQ2ZScpXSgpPT09XzB4OTMyMjkwJiZfMHgzMGZmMDJbJ2xpbmUnXSgpPT09XzB4MTliYmM0W18weDZkNjQoJzB4MTcwJyldO30pO30pKVsweDBdO2lmKF8weDZkNjQoJzB4NjhlJyk9PT1fMHgxOWJiYzRbJ3R5cGUnXSlyZXR1cm4gdGhpc1tfMHg2ZDY0KCcweDUzZicpXShfMHgzMjYzNDcpWzB4MF07fX1lbHNle3JldHVybiBRW18weDZkNjQoJzB4MWRhJyldKF8weGVmNjE3YVsnZW5zdXJlRGlyJ10sXzB4MTliYmM0KTt9fSxfMHgzYjU4M2FbXzB4NmQ2NCgnMHgyYjcnKV09ZnVuY3Rpb24oXzB4MTliYmM0KXtyZXR1cm4gXzB4ZWY2MTdhW18weDZkNjQoJzB4YTcwJyldKF8weDE5YmJjNCk7fSxfMHgzYjU4M2FbJ25vZGVNb2R1bGVzTG9va3VwJ109dGhpc1tfMHg2ZDY0KCcweGE3MScpXTt9LCdjb2RlRnJhbWUnOmZ1bmN0aW9uKF8weDE5YmJjNCxfMHgzYjU4M2EsXzB4MjhhZThkLF8weDVjNTFmNil7ZnVuY3Rpb24gXzB4M2U1NTk2KF8weDE5YmJjNCxfMHgzYjU4M2EsXzB4MjhhZThkKXt2YXIgXzB4NWM1MWY2PV8weGVmNjE3YSh7J2NvbHVtbic6MHgwLCdsaW5lJzotMHgxfSxfMHgxOWJiYzRbJ3N0YXJ0J10pLF8weDNlNTU5Nj1fMHhlZjYxN2Eoe30sXzB4NWM1MWY2LF8weDE5YmJjNFsnZW5kJ10pLF8weDU5NDU4Zj1fMHgyOGFlOGR8fHt9LF8weDRjZDA2OT1fMHg1OTQ1OGZbXzB4NmQ2NCgnMHhhNzInKV0sXzB4OGJkMzQxPXZvaWQgMHgwPT09XzB4NGNkMDY5PzB4MjpfMHg0Y2QwNjksXzB4NTcwNmRlPV8weDU5NDU4ZlsnbGluZXNCZWxvdyddLF8weDEwNWQ4ZD12b2lkIDB4MD09PV8weDU3MDZkZT8weDM6XzB4NTcwNmRlLF8weDI5ZWZkMj1fMHg1YzUxZjZbXzB4NmQ2NCgnMHgxNzAnKV0sXzB4NDZjM2FkPV8weDVjNTFmNlsnY29sdW1uJ10sXzB4MzkxNTE1PV8weDNlNTU5NlsnbGluZSddLF8weDE2ZDg1Yj1fMHgzZTU1OTZbJ2NvbHVtbiddLF8weDRiNGUxMj1NYXRoW18weDZkNjQoJzB4MTk4JyldKF8weDI5ZWZkMi0oXzB4OGJkMzQxKzB4MSksMHgwKSxfMHgzYzAzYTI9TWF0aFtfMHg2ZDY0KCcweDE5ZicpXShfMHgzYjU4M2FbJ2xlbmd0aCddLF8weDM5MTUxNStfMHgxMDVkOGQpO18weDI5ZWZkMj09PS0weDEmJihfMHg0YjRlMTI9MHgwKSxfMHgzOTE1MTU9PT0tMHgxJiYoXzB4M2MwM2EyPV8weDNiNTgzYVsnbGVuZ3RoJ10pO3ZhciBfMHgyZWEzN2E9XzB4MzkxNTE1LV8weDI5ZWZkMixfMHgxZjc1Y2E9e307aWYoXzB4MmVhMzdhKWZvcih2YXIgXzB4NGUxMGYyPTB4MDtfMHg0ZTEwZjI8PV8weDJlYTM3YTtfMHg0ZTEwZjIrKyl7aWYoXzB4NmQ2NCgnMHhhNzMnKSE9PSdnTW5Jcicpe3JldHVybiB0aGlzW18weDZkNjQoJzB4MWZlJyldO31lbHNle3ZhciBfMHgyMTM2NGY9XzB4NGUxMGYyK18weDI5ZWZkMjtpZihfMHg0NmMzYWQpaWYoMHgwPT09XzB4NGUxMGYyKXtpZihfMHg2ZDY0KCcweGE3NCcpPT09XzB4NmQ2NCgnMHhhNzQnKSl7dmFyIF8weDJmZDI1ND1fMHgzYjU4M2FbXzB4MjEzNjRmLTB4MV1bXzB4NmQ2NCgnMHg4ZScpXTtfMHgxZjc1Y2FbXzB4MjEzNjRmXT1bXzB4NDZjM2FkLF8weDJmZDI1NC1fMHg0NmMzYWRdO31lbHNle3ZhciBfMHgzZDdjZDc9T2JqZWN0WydjcmVhdGUnXShudWxsKTtyZXR1cm4gXzB4NGI0ZTEyW18weDZkNjQoJzB4M2EnKV0odGhpc1tfMHg2ZDY0KCcweDZhYicpXSgpLGZ1bmN0aW9uKF8weDNiZGRlYyl7XzB4NGI0ZTEyW18weDZkNjQoJzB4M2EnKV0oXzB4M2JkZGVjW18weDZkNjQoJzB4NTY1JyldKCksZnVuY3Rpb24oXzB4M2JkZGVjKXtfMHgzZDdjZDdbXzB4M2JkZGVjW18weDZkNjQoJzB4MTJmJyldKCldPV8weDNiZGRlYzt9KTt9KSx0aGlzW18weDZkNjQoJzB4NDgzJyldPU9iamVjdFtfMHg2ZDY0KCcweDNiJyldKG51bGwpLHRoaXNbXzB4NmQ2NCgnMHg0NWQnKV09T2JqZWN0W18weDZkNjQoJzB4M2InKV0obnVsbCksXzB4M2Q3Y2Q3O319ZWxzZSBpZihfMHg0ZTEwZjI9PT1fMHgyZWEzN2EpXzB4MWY3NWNhW1/igIsweDIxMzY0Zl09WzB4MCxfMHgxNmQ4NWJdO2Vsc2V7dmFyIF8weDJmZDI1ND1fMHgzYjU4M2FbXzB4MjEzNjRmLV8weDRlMTBmMl1bXzB4NmQ2NCgnMHg4ZScpXTtfMHgxZjc1Y2FbXzB4MjEzNjRmXT1bMHgwLF8weDJmZDI1NF07fWVsc2UgXzB4MWY3NWNhW18weDIxMzY0Zl09ITB4MDt9fWVsc2UgXzB4NDZjM2FkPT09XzB4MTZkODViP18weDQ2YzNhZD9fMHgxZjc1Y2FbXzB4MjllZmQyXT1bXzB4NDZjM2FkLDB4MF06XzB4MWY3NWNhW18weDI5ZWZkMl09ITB4MDpfMHgxZjc1Y2FbXzB4MjllZmQyXT1bXzB4NDZjM2FkLF8weDE2ZDg1Yi1fMHg0NmMzYWRdO3JldHVybnsnc3RhcnQnOl8weDRiNGUxMiwnZW5kJzpfMHgzYzAzYTIsJ21hcmtlckxpbmVzJzpfMHgxZjc1Y2F9O312YXIgXzB4NTk0NThmPXRoaXNbJ3RleHRMaW5lcyddKF8weDE5YmJjNCksXzB4NGNkMDY5PXsnc3RhcnQnOnsnY29sdW1uJzpfMHgyOGFlOGQsJ2xpbmUnOl8weDNiNTgzYX19LF8weDhiZDM0MT1fMHgzZTU1OTYoXzB4NGNkMDY5LF8weDU5NDU4ZiksXzB4NTcwNmRlPV8weDhiZDM0MVtfMHg2ZDY0KCcweDMxJyldLF8weDEwNWQ4ZD1fMHg4YmQzNDFbXzB4NmQ2NCgnMHgyNTgnKV0sXzB4MjllZmQyPV8weDhiZDM0MVsnbWFya2VyTGluZXMnXSxfMHg0NmMzYWQ9XzB4NGNkMDY5W18weDZkNjQoJzB4MzEnKV0mJl8weDZkNjQoJzB4MjM5Jyk9PXR5cGVvZiBfMHg0Y2QwNjlbXzB4NmQ2NCgnMHgzMScpXVtfMHg2ZDY0KCcweDFjOCcpXSxfMHgzOTE1MTU9U3RyaW5nKF8weDEwNWQ4ZClbXzB4NmQ2NCgnMHg4ZScpXSxfMHgxNmQ4NWI9XzB4NTk0NThmW18weDZkNjQoJzB4MWJmJyldKF8weDU3MDZkZSxfMHgxMDVkOGQpW18weDZkNjQoJzB4YTcnKV0oZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSl7dmFyIF8weDI4YWU4ZD1fMHg1NzA2ZGUrMHgxK18weDNiNTgzYSxfMHhlZjYxN2E9KCdceDIwJytfMHgyOGFlOGQpW18weDZkNjQoJzB4MWJmJyldKC1fMHgzOTE1MTUpLF8weDNlNTU5Nj0nXHgyMCcrXzB4ZWY2MTdhK18weDZkNjQoJzB4YTc1JyksXzB4NTk0NThmPV8weDI5ZWZkMltfMHgyOGFlOGRdLF8weDRjZDA2OT0hXzB4MjllZmQyW18weDI4YWU4ZCsweDFdO2lmKF8weDU5NDU4Zil7dmFyIF8weDhiZDM0MT0nJztpZihBcnJheVsnaXNBcnJheSddKF8weDU5NDU4Zikpe3ZhciBfMHgxMDVkOGQ9XzB4MTliYmM0W18weDZkNjQoJzB4MWJmJyldKDB4MCxNYXRoW18weDZkNjQoJzB4MTk4JyldKF8weDU5NDU4ZlsweDBdLTB4MSwweDApKVtfMHg2ZDY0KCcweDkxJyldKC9bXlx0XS9nLCdceDIwJyksXzB4NDZjM2FkPV8weDU5NDU4ZlsweDFdfHwweDE7XzB4OGJkMzQxPVsnXHgwYVx4MjAnLF8weDNlNTU5NlsncmVwbGFjZSddKC9cZC9nLCdceDIwJyksXzB4MTA1ZDhkLCdeJ1tfMHg2ZDY0KCcweDU2MycpXShfMHg0NmMzYWQpXVtfMHg2ZDY0KCcweDRjJyldKCcnKSxfMHg0Y2QwNjkmJl8weDVjNTFmNiYmKF8weDhiZDM0MSs9J1x4MjAnK18weDVjNTFmNik7fXJldHVyblsnPicsXzB4M2U1NTk2LF8weDE5YmJjNCxfMHg4YmQzNDFdW18weDZkNjQoJzB4NGMnKV0oJycpO31yZXR1cm4nXHgyMCcrXzB4M2U1NTk2K18weDE5YmJjNDt9KVtfMHg2ZDY0KCcweDRjJyldKCdceDBhJyk7cmV0dXJuIF8weDQ2YzNhZHx8KF8weDE2ZDg1Yj0nJysnXHgyMCdbJ3JlcGVhdCddKF8weDM5MTUxNSsweDEpK18weDVjNTFmNisnXHgwYScrXzB4MTZkODViKSxfMHgxNmQ4NWI7fSwnbG9hZEplc3QnOmZ1bmN0aW9uKF8weDNiNTgzYSxfMHgyOGFlOGQsXzB4ZWY2MTdhKXtyZXR1cm4gXzB4NWM1MWY2KHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXt2YXIgXzB4NWM1MWY2LF8weDU5NDU4ZixfMHg4YmQzNDEsXzB4NTcwNmRlLF8weDEwNWQ4ZCxfMHgyOWVmZDIsXzB4NDZjM2FkLF8weDM5MTUxNSxfMHgxNmQ4NWIsXzB4NDg2ZTBiLF8weDNjMDNhMixfMHgyZWEzN2EsXzB4MWY3NWNhLF8weDRlMTBmMj10aGlzO3JldHVybiBfMHgzZTU1OTYodGhpcyxmdW5jdGlvbihfMHgzZTU1OTYpe3N3aXRjaChfMHgzZTU1OTZbJ2xhYmVsJ10pe2Nhc2UgMHgwOnRyeXtfMHg1OTQ1OGY9XzB4MTliYmM0KF8weDRjZDA2OVtfMHg2ZDY0KCcweGYwJyldKF8weDNiNTgzYSwncGFja2FnZS5qc29uJykpLF8weDhiZDM0MT1fMHg1OTQ1OGYmJl8weDU5NDU4ZltfMHg2ZDY0KCcweGE3NicpXSxfMHg1NzA2ZGU9XzB4NTk0NThmJiZfMHg1OTQ1OGZbXzB4NmQ2NCgnMHgzNGEnKV0sKF8weDhiZDM0MSYmXzB4OGJkMzQxW18weDZkNjQoJzB4NDMnKV0mJl8weDhiZDM0MVtfMHg2ZDY0KCcweDQzJyldWydpbmRleE9mJ10oJ3JlYWN0LXNjcmlwdHMnKSE9PS0weDF8fCFfMHg1NzA2ZGV8fCFfMHg1NzA2ZGVbXzB4NmQ2NCgnMHg5MDInKV0pJiYoXzB4NWM1MWY2PXRoaXNbXzB4NmQ2NCgnMHhhNzcnKV0oXzB4M2I1ODNhLF8weDZkNjQoJzB4YTc4JykpKTt9Y2F0Y2goXzB4MzAxYWYxKXtfMHg1YzUxZjY9dm9pZCAweDA7fWlmKF8weDI4YWU4ZD1fMHgyOGFlOGQmJihfMHg0Y2QwNjlbXzB4NmQ2NCgnMHhhNzknKV0oXzB4MjhhZThkKT9fMHgyOGFlOGQ6XzB4NGNkMDY5WydyZXNvbHZlJ10oXzB4NGNkMDY5Wydqb2luJ10oXzB4M2I1ODNhLF8weDI4YWU4ZCkpKSxfMHgxMDVkOGQ9XzB4MjhhZThkP3RoaXNbXzB4NmQ2NCgnMHhhNzcnKV0oXzB4MjhhZThkLF8weDZkNjQoJzB4OTAyJykpOl8weDVjNTFmNj90aGlzWyd0cnlSZXF1aXJlTW9kdWxlV2l0aFBhdGhGcm9tJ10oXzB4NWM1MWY2W18weDZkNjQoJzB4NGUnKV0sJ2plc3QnKTp0aGlzW18weDZkNjQoJzB4YTc3JyldKF8weDNiNTgzYSxfMHg2ZDY0KCcweDkwMicpKSxfMHg0NmMzYWQ9XzB4MTA1ZDhkP18weDEwNWQ4ZFtfMHg2ZDY0KCcweDRlJyldOl8weDNiNTgzYSxfMHgxNmQ4NWI9dGhpc1tfMHg2ZDY0KCcweGE3NycpXShfMHg0NmMzYWQsXzB4NmQ2NCgnMHhhN2EnKSksIV8weDE2ZDg1YilyZXR1cm5bMHgzLDB4NV07aWYoXzB4NDg2ZTBiPV8weDE2ZDg1YltfMHg2ZDY0KCcweDVjZCcpXVtfMHg2ZDY0KCcweDVjZScpXT9mdW5jdGlvbigpe3JldHVybiBfMHgxNmQ4NWJbXzB4NmQ2NCgnMHg1Y2QnKV1bJ2dldFZlcnNpb24nXSgpO306XzB4MTA1ZDhkWydtb2R1bGUnXVtfMHg2ZDY0KCcweDVjZScpXT9mdW5jdGlvbigpe2lmKF8weDZkNjQoJzB4YTdiJykhPT1fMHg2ZDY0KCcweGE3YycpKXtyZXR1cm4gXzB4MTA1ZDhkW18weDZkNjQoJzB4NWNkJyldW18weDZkNjQoJzB4NWNlJyldKCk7fWVsc2V7dGhpc1tfMHg2ZDY0KCcweDRkZicpXT0weDA7fX06dm9pZCAweDAsIV8weDQ4NmUwYil0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdFx4MjBmaW5kXHgyMGNvbXBhdGlibGVceDIwamVzdC1jbGlceDIwbW9kdWxlLicpO18weDNjMDNhMj1fMHg2ZDY0KCcweGE3ZCcpLF8weDJlYTM3YT0weDA7dHJ5e2lmKCdxbWFWayc9PT0ncW1hVmsnKXtfMHgzYzAzYTI9XzB4NDg2ZTBiKCksXzB4MmVhMzdhPXBhcnNlSW50KF8weDNjMDNhMltfMHg2ZDY0KCcweGY1JyldKCcuJylbMHgwXSk7fWVsc2V7dHJ5e18weDIxMzY0ZiYmIV8weDIxMzY0ZltfMHg2ZDY0KCcweGQzJyldJiYoXzB4OGJkMzQxPV8weDRlMTBmMltfMHg2ZDY0KCcweGQwJyldKSYmXzB4OGJkMzQxW18weDZkNjQoJzB4MycpXShfMHg0ZTEwZjIpO31maW5hbGx5e2lmKF8weDRjZDA2OSl0aHJvdyBfMHg0Y2QwNjlbJ2Vycm9yJ107fX19Y2F0Y2goXzB4NTM1NWYzKXt0aHJvdyBuZXcgRXJyb3IoXzB4NmQ2NCgnMHhhN2UnKStfMHg1MzU1ZjNbXzB4NmQ2NCgnMHgyMycpXSsnLicpO31pZihfMHgyZWEzN2E8MHgxOCl0aHJvdyBuZXcgRXJyb3IoXzB4NmQ2NCgnMHhhN2YnKStfMHgzYzAzYTIrXzB4NmQ2NCgnMHhhODAnKStfMHgxNmQ4NWJbXzB4NmQ2NCgnMHg0ZScpXSsnXHgyNy4nKTtpZihfMHgyOWVmZDI9dGhpc1tfMHg2ZDY0KCcweGE3NycpXShfMHgxNmQ4NWJbJ3BhdGgnXSxfMHg2ZDY0KCcweGE4MScpKSwhXzB4MjllZmQyKXJldHVyblsweDMsMHg0XTtfMHgzZTU1OTZbJ2xhYmVsJ109MHgxO2Nhc2UgMHgxOnJldHVybiBfMHgzZTU1OTZbXzB4NmQ2NCgnMHhlMicpXVtfMHg2ZDY0KCcweDFjJyldKFsweDEsMHgzLCwweDRdKSxfMHhlZjYxN2E9XzB4ZWY2MTdhJiYoXzB4NGNkMDY5W18weDZkNjQoJzB4YTc5JyldKF8weGVmNjE3YSk/XzB4ZWY2MTdhOl8weDRjZDA2OVsncmVzb2x2ZSddKF8weDRjZDA2OVtfMHg2ZDY0KCcweDRjJyldKF8weDNiNTgzYSxfMHhlZjYxN2EpKSksWzB4NCxfMHgyOWVmZDJbXzB4NmQ2NCgnMHg1Y2QnKV1bXzB4NmQ2NCgnMHhhODInKV0oXzB4ZWY2MTdhP3snY29uZmlnJzpKU09OWydzdHJpbmdpZnknXShfMHgxOWJiYzQoXzB4ZWY2MTdhKSl9Ol8weDVjNTFmNj97J2NvbmZpZyc6SlNPTltfMHg2ZDY0KCcweDlhJyldKF8weDVjNTFmNltfMHg2ZDY0KCcweDVjZCcpXShmdW5jdGlvbihfMHgxOWJiYzQpe3JldHVybiBfMHg0Y2QwNjlbXzB4NmQ2NCgnMHhmMCcpXShfMHg1YzUxZjZbXzB4NmQ2NCgnMHg0ZScpXSxfMHg2ZDY0KCcweDQ1MycpLF8weDE5YmJjNCk7fSkpfTp7fSxbXzB4M2I1ODNhXSldO2Nhc2UgMHgyOnJldHVybiBfMHgzOTE1MTU9XzB4M2U1NTk2W18weDZkNjQoJzB4MTEzJyldKCksXzB4MzkxNTE1W18weDZkNjQoJzB4YTgzJyldPU9iamVjdFtfMHg2ZDY0KCcweDI1ZScpXSh7fSxfMHgzOTE1MTVbXzB4NmQ2NCgnMHhhODMnKV0pLF8weDM5MTUxNVsnY29uZmlncyddPShfMHgzOTE1MTVbXzB4NmQ2NCgnMHhhODQnKV18fFtdKVtfMHg2ZDY0KCcweDI5YycpXShmdW5jdGlvbihfMHgxOWJiYzQpe2lmKF8weDZkNjQoJzB4YTg1Jyk9PT1fMHg2ZDY0KCcweGE4NicpKXtmb3IodmFyIF8weDFmNjI4Yj1fMHhlZjYxN2EoXzB4NTcwNmRlKSxfMHgzMzNiNDg9XzB4MWY2MjhiW18weDZkNjQoJzB4ZDUnKV0oKTshXzB4MzMzYjQ4W18weDZkNjQoJzB4ZDMnKV07XzB4MzMzYjQ4PV8weDFmNjI4YltfMHg2ZDY0KCcweGQ1JyldKCkpe3ZhciBfMHgxZDQwZjI9XzB4NWM1MWY2KF8weDMzM2I0OFtfMHg2ZDY0KCcweGE5JyldLDB4MiksXzB4NGJlNDQ1PV8weDFkNDBmMlsweDFdO18weDM5MTUxNShfMHg0YmU0NDUpO319ZWxzZXtyZXR1cm4gXzB4NmQ2NCgnMHhhODcnKT09PV8weDE5YmJjNFtfMHg2ZDY0KCcweGYzJyldfHx+XzB4NGUxMGYyW18weDZkNjQoJzB4N2InKV0oXzB4MTliYmM0W18weDZkNjQoJzB4ZjMnKV18fCcnKVtfMHg2ZDY0KCcweDE3YScpXShfMHg2ZDY0KCcweGE4OCcpKTt9fSlbXzB4NmQ2NCgnMHhhNycpXShmdW5jdGlvbihfMHgxOWJiYzQpe3JldHVybiBPYmplY3RbJ2Fzc2lnbiddKHt9LF8weDE5YmJjNCk7fSksWzB4MywweDRdO2Nhc2UgMHgzOnRocm93IF8weDFmNzVjYT1fMHgzZTU1OTZbXzB4NmQ2NCgnMHgxMTMnKV0oKSxuZXcgRXJyb3IoXzB4NmQ2NCgnMHhhODknKStfMHgzYjU4M2ErXzB4NmQ2NCgnMHhhOGEnKSsoXzB4MWY3NWNhW18weDZkNjQoJzB4MjMnKV0/XzB4MWY3NWNhW18weDZkNjQoJzB4MjMnKV06XzB4NmQ2NCgnMHhhOGInKSkpO2Nhc2UgMHg0OnJldHVyblsweDMsMHg2XTtjYXNlIDB4NTp0aHJvdyBuZXcgRXJyb3IoXzB4NmQ2NCgnMHhhOGMnKStfMHgzYjU4M2ErJ1x4MjcuJyk7Y2FzZSAweDY6aWYoIV8weDM5MTUxNSl0aHJvdyBuZXcgRXJyb3IoXzB4NmQ2NCgnMHhhODknKStfMHgzYjU4M2ErJ1x4MjcuJyk7aWYoIV8weDM5MTUxNVtfMHg2ZDY0KCcweGE4NCcpXVsnbGVuZ3RoJ10pdGhyb3cgbmV3IEVycm9yKCdDYW5ceDIwbm90XHgyMGZpbmRceDIwYW55XHgyMEplc3RceDIwcnVubmVyXHgyMGNvbmZpZ3VyYXRpb25zXHgyMGluXHgyMFx4MjcnK18weDNiNTgzYSsnXHgyNy4nKTtyZXR1cm5bMHgyLHsnamVzdENvbmZpZyc6XzB4MzkxNTE1LCdqZXN0Q0xJJzpfMHgxNmQ4NWIsJ2plc3RDb25maWdMb2FkZXInOl8weDI5ZWZkMn1dO319KTt9KTt9LCdzZXJpYWxpemVSZWdFeHAnOmZ1bmN0aW9uKF8weDE5YmJjNCl7aWYoX1tfMHg2ZDY0KCcweGE4ZCcpXShfMHgxOWJiYzQpKXJldHVybidfX1JFR0VYUFx4MjAnK18weDE5YmJjNFtfMHg2ZDY0KCcweDUzJyldKCk7aWYoX1tfMHg2ZDY0KCcweDI3MScpXShfMHgxOWJiYzQpKXJldHVybiBfMHgxOWJiYzQ7dGhyb3cgbmV3IEVycm9yKF8weDZkNjQoJzB4YThlJykpO30sJ2Rlc2VyaWFsaXplUmVnRXhwJzpmdW5jdGlvbihfMHgxOWJiYzQpe2lmKDB4MD09PV8weDE5YmJjNFtfMHg2ZDY0KCcweDE3YScpXShfMHg2ZDY0KCcweGE4ZicpKSl7aWYoXzB4NmQ2NCgnMHhhOTAnKT09PV8weDZkNjQoJzB4YTkxJykpe3RoaXNbJ190ZXN0RmlsZSddPV8weDE5YmJjNDt9ZWxzZXt2YXIgXzB4M2I1ODNhPV8weDE5YmJjNFsnc3BsaXQnXShfMHg2ZDY0KCcweGE4ZicpKVsweDFdWydtYXRjaCddKC9cLyguKilcLyguKik/Lyk7cmV0dXJuIG5ldyBSZWdFeHAoXzB4M2I1ODNhWzB4MV0sXzB4M2I1ODNhWzB4Ml18fCcnKTt9fXJldHVybiBfMHgxOWJiYzQ7fSwnaXNKYXZhU2NyaXB0JzpfMHgyZmQyNTQsJ2lzVHlwZVNjcmlwdCc6XzB4NTQ4OTQ0LCdpc1Z1ZSc6XzB4NDE4Yzk1LCdpc0NvZmZlZVNjcmlwdCc6XzB4MzljN2M3LCdpc0NvdmVyYWJsZSc6ZnVuY3Rpb24oXzB4MTliYmM0LF8weDNiNTgzYSxfMHgyOGFlOGQpe3JldHVybiBfMHgyZmQyNTQoXzB4MTliYmM0LF8weDI4YWU4ZCl8fF8weDU0ODk0NChfMHgxOWJiYzQpfHxfMHg0MThjOTUoXzB4MTliYmM0KXx8XzB4MzljN2M3KF8weDE5YmJjNCxfMHgzYjU4M2EpO30sJ3F1aWNrSGFzaCc6ZnVuY3Rpb24oXzB4MTliYmM0KXtpZihfMHg2ZDY0KCcweGE5MicpPT09XzB4NmQ2NCgnMHhhOTInKSl7dmFyIF8weDNiNTgzYSxfMHgyOGFlOGQsXzB4ZWY2MTdhLF8weDVjNTFmNj0weDA7aWYoXzB4MTliYmM0W18weDZkNjQoJzB4OGUnKV0+MHgwKWZvcihfMHgzYjU4M2E9MHgwLF8weGVmNjE3YT1fMHgxOWJiYzRbJ2xlbmd0aCddO18weDNiNTgzYTxfMHhlZjYxN2E7XzB4M2I1ODNhKyspXzB4MjhhZThkPV8weDE5YmJjNFtfMHg2ZDY0KCcweGE5MycpXShfMHgzYjU4M2EpLF8weDVjNTFmNj0oXzB4NWM1MWY2PDwweDUpLV8weDVjNTFmNitfMHgyOGFlOGQsXzB4NWM1MWY2fD0weDA7cmV0dXJuIF8weDVjNTFmNjt9ZWxzZXt2YXIgXzB4MWUyMmEyPV8weDE5YmJjNFtfMHg2ZDY0KCcweGY1JyldKCdceDIwKGh0dHAnKTtyZXR1cm4gXzB4MWUyMmEyW18weDZkNjQoJzB4OGUnKV0+PTB4Mj8oXzB4MWUyMmEyWzB4MF18fCcnKVtfMHg2ZDY0KCcweGY1JyldKCdhdFx4MjAnKVsweDFdOihfMHgxZTIyYTI9XzB4MTliYmM0W18weDZkNjQoJzB4ZjUnKV0oXzB4NmQ2NCgnMHg5ZTgnKSksXzB4MWUyMmEyWydsZW5ndGgnXT49MHgyP18weDFlMjJhMlsweDBdOnZvaWQgMHgwKTt9fX07fSx7Jy4vY2hyb21lUnVubmVyLmpzJzoweDUsJy4vZWxlY3Ryb25SdW5uZXIuanMnOjB4NiwnLi9ub2RlUnVubmVyLmpzJzoweDFlLCcuL3BoYW50b21SdW5uZXIuanMnOjB4MWYsJy4vcHJvY2Vzc1Bvb2wnOjB4MjAsJ2NvcHktcGFzdGUnOnZvaWQgMHgwLCdmcyc6dm9pZCAweDAsJ2ZzLWV4dHJhJzp2b2lkIDB4MCwnZ3JhY2VmdWwtZnMnOnZvaWQgMHgwLCdtaWNyb21hdGNoJzp2b2lkIDB4MCwnbWluaW1hdGNoJzp2b2lkIDB4MCwnbW9kdWxlJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDAsJ3NvdXJjZS1tYXAnOnZvaWQgMHgwLCd1cmwnOnZvaWQgMHgwfV19LHt9LFsweDddKTs=